name: Vercel Deployment Notification

on:
  push:
    branches: [main, production]
  workflow_dispatch:

jobs:
  notify-deployment-start:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Prepare commit message
        id: commit-msg
        run: |
          # 커밋 메시지를 환경 변수로 안전하게 처리
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          # 줄바꿈을 공백으로 변환하고 특수 문자 이스케이프
          SAFE_MSG=$(printf '%s' "$COMMIT_MSG" | tr '\n' ' ' | sed 's/"/\\"/g' | head -c 500)
          echo "safe_message=$SAFE_MSG" >> $GITHUB_OUTPUT
        
      - name: Send deployment start notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "text": "🚀 Picnic Web 배포 시작!",
              "attachments": [
                {
                  "color": "#ffaa00",
                  "fields": [
                    {
                      "title": "환경",
                      "value": "${{ github.ref_name == 'main' && 'Staging' || 'Production' }}",
                      "short": true
                    },
                    {
                      "title": "브랜치",
                      "value": "${{ github.ref_name }}",
                      "short": true
                    },
                    {
                      "title": "커밋 메시지",
                      "value": "${{ steps.commit-msg.outputs.safe_message }}",
                      "short": false
                    },
                    {
                      "title": "작성자",
                      "value": "${{ github.event.head_commit.author.name }}",
                      "short": true
                    },
                    {
                      "title": "커밋 SHA",
                      "value": "<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>",
                      "short": true
                    }
                  ],
                  "footer": "⏳ Vercel에서 빌드 진행 중..."
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  notify-deployment-success:
    runs-on: ubuntu-latest
    needs: notify-deployment-start
    if: success()
    steps:
      - name: Wait for deployment
        run: sleep 60
        
      - name: Prepare commit message
        id: commit-msg
        run: |
          # 커밋 메시지를 환경 변수로 안전하게 처리
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          # 줄바꿈을 공백으로 변환하고 특수 문자 이스케이프
          SAFE_MSG=$(printf '%s' "$COMMIT_MSG" | tr '\n' ' ' | sed 's/"/\\"/g' | head -c 500)
          echo "safe_message=$SAFE_MSG" >> $GITHUB_OUTPUT
        
      - name: Send deployment success notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "text": "✅ Picnic Web 배포 완료!",
              "attachments": [
                {
                  "color": "#36a64f",
                  "fields": [
                    {
                      "title": "환경",
                      "value": "${{ github.ref_name == 'main' && 'Staging' || 'Production' }}",
                      "short": true
                    },
                    {
                      "title": "배포 URL",
                      "value": "${{ github.ref_name == 'main' && 'https://picnic-web-staging.vercel.app' || 'https://picnic-web-production.vercel.app' }}",
                      "short": true
                    },
                    {
                      "title": "커밋 메시지",
                      "value": "${{ steps.commit-msg.outputs.safe_message }}",
                      "short": false
                    },
                    {
                      "title": "작성자",
                      "value": "${{ github.event.head_commit.author.name }}",
                      "short": true
                    },
                    {
                      "title": "커밋 SHA",
                      "value": "<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>",
                      "short": true
                    }
                  ],
                  "footer": "🎉 배포가 성공적으로 완료되었습니다!"
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  notify-deployment-failure:
    runs-on: ubuntu-latest
    needs: notify-deployment-start
    if: failure()
    steps:
      - name: Prepare commit message
        id: commit-msg
        run: |
          # 커밋 메시지를 환경 변수로 안전하게 처리
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          # 줄바꿈을 공백으로 변환하고 특수 문자 이스케이프
          SAFE_MSG=$(printf '%s' "$COMMIT_MSG" | tr '\n' ' ' | sed 's/"/\\"/g' | head -c 500)
          echo "safe_message=$SAFE_MSG" >> $GITHUB_OUTPUT
        
      - name: Send deployment failure notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "text": "❌ Picnic Web 배포 실패!",
              "attachments": [
                {
                  "color": "#ff0000",
                  "fields": [
                    {
                      "title": "환경",
                      "value": "${{ github.ref_name == 'main' && 'Staging' || 'Production' }}",
                      "short": true
                    },
                    {
                      "title": "브랜치",
                      "value": "${{ github.ref_name }}",
                      "short": true
                    },
                    {
                      "title": "커밋 메시지",
                      "value": "${{ steps.commit-msg.outputs.safe_message }}",
                      "short": false
                    },
                    {
                      "title": "작성자",
                      "value": "${{ github.event.head_commit.author.name }}",
                      "short": true
                    },
                    {
                      "title": "커밋 SHA",
                      "value": "<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>",
                      "short": true
                    }
                  ],
                  "footer": "🔧 배포 로그를 확인하고 문제를 해결해주세요."
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 