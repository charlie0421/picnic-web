{"version":3,"names":["cov_1oybtc4shi","actualCoverage","s","ErrorBar","f","ErrorToast","GlobalErrorDisplay","position","b","maxVisible","showNetworkStatus","activeErrors","hasNetworkErrors","_ErrorContext","useErrorState","dismissError","useError","isOnline","setIsOnline","_react","useState","useEffect","window","navigator","onLine","handleOnline","handleOffline","addEventListener","removeEventListener","visibleErrors","slice","getPositionClasses","getErrorIcon","category","severity","_error","ErrorCategory","NETWORK","_jsxruntime","jsx","_lucidereact","WifiOff","className","ErrorSeverity","HIGH","CRITICAL","AlertCircle","MEDIUM","AlertTriangle","LOW","Info","getErrorStyles","truncateMessage","message","maxLength","length","substring","jsxs","map","errorState","error","process","env","NODE_ENV","context","JSON","stringify","timestamp","toLocaleTimeString","onClick","id","X","hasErrors","clearAllErrors","latestError"],"sources":["/Users/cheolhyun/Repositories/picnic-web/components/common/GlobalErrorDisplay.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useErrorState, useError } from '@/contexts/ErrorContext';\nimport { ErrorCategory, ErrorSeverity } from '@/utils/error';\nimport { X, AlertCircle, AlertTriangle, Info, Wifi, WifiOff } from 'lucide-react';\n\ninterface ErrorDisplayProps {\n  position?: 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left' | 'top-center' | 'bottom-center';\n  maxVisible?: number;\n  showNetworkStatus?: boolean;\n}\n\n/**\n * 글로벌 에러 표시 컴포넌트\n * \n * 애플리케이션 전체의 에러 상태를 사용자에게 표시합니다.\n * 다양한 에러 카테고리와 심각도에 따라 다른 스타일을 적용합니다.\n */\nexport function GlobalErrorDisplay({ \n  position = 'top-right',\n  maxVisible = 5,\n  showNetworkStatus = true\n}: ErrorDisplayProps) {\n  const { activeErrors, hasNetworkErrors } = useErrorState();\n  const { dismissError } = useError();\n  const [isOnline, setIsOnline] = useState(true);\n\n  // 네트워크 상태 모니터링\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      setIsOnline(navigator.onLine);\n\n      const handleOnline = () => setIsOnline(true);\n      const handleOffline = () => setIsOnline(false);\n\n      window.addEventListener('online', handleOnline);\n      window.addEventListener('offline', handleOffline);\n\n      return () => {\n        window.removeEventListener('online', handleOnline);\n        window.removeEventListener('offline', handleOffline);\n      };\n    }\n  }, []);\n\n  // 표시할 에러들 (최대 개수 제한)\n  const visibleErrors = activeErrors.slice(0, maxVisible);\n\n  // 포지션에 따른 CSS 클래스\n  const getPositionClasses = () => {\n    switch (position) {\n      case 'top-left':\n        return 'top-4 left-4';\n      case 'top-center':\n        return 'top-4 left-1/2 transform -translate-x-1/2';\n      case 'top-right':\n        return 'top-4 right-4';\n      case 'bottom-left':\n        return 'bottom-4 left-4';\n      case 'bottom-center':\n        return 'bottom-4 left-1/2 transform -translate-x-1/2';\n      case 'bottom-right':\n        return 'bottom-4 right-4';\n      default:\n        return 'top-4 right-4';\n    }\n  };\n\n  // 에러 카테고리에 따른 아이콘\n  const getErrorIcon = (category: ErrorCategory, severity: ErrorSeverity) => {\n    if (category === ErrorCategory.NETWORK) {\n      return <WifiOff className=\"w-5 h-5\" />;\n    }\n\n    switch (severity) {\n      case ErrorSeverity.HIGH:\n      case ErrorSeverity.CRITICAL:\n        return <AlertCircle className=\"w-5 h-5\" />;\n      case ErrorSeverity.MEDIUM:\n        return <AlertTriangle className=\"w-5 h-5\" />;\n      case ErrorSeverity.LOW:\n        return <Info className=\"w-5 h-5\" />;\n      default:\n        return <AlertTriangle className=\"w-5 h-5\" />;\n    }\n  };\n\n  // 에러 심각도에 따른 스타일\n  const getErrorStyles = (category: ErrorCategory, severity: ErrorSeverity) => {\n    if (category === ErrorCategory.NETWORK) {\n      return 'bg-orange-50 border-orange-200 text-orange-800';\n    }\n\n    switch (severity) {\n      case ErrorSeverity.CRITICAL:\n        return 'bg-red-50 border-red-200 text-red-800';\n      case ErrorSeverity.HIGH:\n        return 'bg-red-50 border-red-200 text-red-700';\n      case ErrorSeverity.MEDIUM:\n        return 'bg-yellow-50 border-yellow-200 text-yellow-800';\n      case ErrorSeverity.LOW:\n        return 'bg-blue-50 border-blue-200 text-blue-800';\n      default:\n        return 'bg-gray-50 border-gray-200 text-gray-800';\n    }\n  };\n\n  // 에러 메시지 단축\n  const truncateMessage = (message: string, maxLength = 100) => {\n    if (message.length <= maxLength) return message;\n    return message.substring(0, maxLength) + '...';\n  };\n\n  if (visibleErrors.length === 0 && (!showNetworkStatus || isOnline)) {\n    return null;\n  }\n\n  return (\n    <div className={`fixed z-50 ${getPositionClasses()} max-w-sm w-full space-y-2`}>\n      {/* 네트워크 상태 표시 */}\n      {showNetworkStatus && !isOnline && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 shadow-lg\">\n          <div className=\"flex items-start\">\n            <WifiOff className=\"w-5 h-5 text-red-600 mt-0.5 mr-3 flex-shrink-0\" />\n            <div className=\"flex-1\">\n              <p className=\"text-sm font-medium text-red-800\">\n                인터넷 연결 끊김\n              </p>\n              <p className=\"text-xs text-red-600 mt-1\">\n                네트워크 연결을 확인해주세요.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 에러 목록 */}\n      {visibleErrors.map((errorState) => (\n        <div\n          key={errorState.id}\n          className={`border rounded-lg p-4 shadow-lg transition-all duration-300 ${getErrorStyles(\n            errorState.error.category,\n            errorState.error.severity\n          )}`}\n        >\n          <div className=\"flex items-start\">\n            <div className=\"flex-shrink-0 mr-3 mt-0.5\">\n              {getErrorIcon(errorState.error.category, errorState.error.severity)}\n            </div>\n            \n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-sm font-medium\">\n                {truncateMessage(errorState.error.message)}\n              </p>\n              \n              {/* 에러 세부 정보 (개발 환경에서만) */}\n              {process.env.NODE_ENV === 'development' && errorState.error.context && (\n                <p className=\"text-xs mt-1 opacity-75\">\n                  {truncateMessage(JSON.stringify(errorState.error.context), 80)}\n                </p>\n              )}\n              \n              {/* 타임스탬프 */}\n              <p className=\"text-xs mt-1 opacity-60\">\n                {errorState.timestamp.toLocaleTimeString()}\n              </p>\n            </div>\n            \n            {/* 닫기 버튼 */}\n            <button\n              onClick={() => dismissError(errorState.id)}\n              className=\"flex-shrink-0 ml-2 p-1 rounded-full hover:bg-black hover:bg-opacity-10 transition-colors\"\n              aria-label=\"에러 메시지 닫기\"\n            >\n              <X className=\"w-4 h-4\" />\n            </button>\n          </div>\n        </div>\n      ))}\n\n      {/* 더 많은 에러가 있을 때 표시 */}\n      {activeErrors.length > maxVisible && (\n        <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-3 text-center\">\n          <p className=\"text-xs text-gray-600\">\n            +{activeErrors.length - maxVisible}개의 추가 에러\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\n/**\n * 간단한 토스트 스타일 에러 표시 컴포넌트\n */\nexport function ErrorToast() {\n  return (\n    <GlobalErrorDisplay \n      position=\"top-right\" \n      maxVisible={3}\n      showNetworkStatus={true}\n    />\n  );\n}\n\n/**\n * 하단 고정 에러 바 컴포넌트\n */\nexport function ErrorBar() {\n  const { activeErrors, hasErrors } = useErrorState();\n  const { dismissError, clearAllErrors } = useError();\n\n  if (!hasErrors) return null;\n\n  const latestError = activeErrors[activeErrors.length - 1];\n\n  return (\n    <div className=\"fixed bottom-0 left-0 right-0 z-40 bg-red-600 text-white p-3 shadow-lg\">\n      <div className=\"max-w-7xl mx-auto flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <AlertCircle className=\"w-5 h-5 flex-shrink-0\" />\n          <div className=\"flex-1 min-w-0\">\n            <p className=\"text-sm font-medium truncate\">\n              {latestError?.error.message}\n            </p>\n            {activeErrors.length > 1 && (\n              <p className=\"text-xs opacity-90\">\n                총 {activeErrors.length}개의 에러\n              </p>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {activeErrors.length > 1 && (\n            <button\n              onClick={clearAllErrors}\n              className=\"text-xs bg-red-700 hover:bg-red-800 px-2 py-1 rounded transition-colors\"\n            >\n              모두 지우기\n            </button>\n          )}\n          <button\n            onClick={() => latestError && dismissError(latestError.id)}\n            className=\"p-1 hover:bg-red-700 rounded transition-colors\"\n            aria-label=\"에러 메시지 닫기\"\n          >\n            <X className=\"w-4 h-4\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n} "],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}