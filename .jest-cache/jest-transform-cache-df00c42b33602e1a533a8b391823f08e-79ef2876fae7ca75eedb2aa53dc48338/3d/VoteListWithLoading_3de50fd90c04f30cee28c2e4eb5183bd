02cf85b0f7f5b0cdf4a8cdaab2600ebe
'use client';
"use strict";

/* istanbul ignore next */
function cov_cwt0k1464() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/components/client/vote/list/VoteListWithLoading.tsx";
  var hash = "13bec6ce4731953a2305759ad5414de1de6683d1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/components/client/vote/list/VoteListWithLoading.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 35
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "6": {
        start: {
          line: 15,
          column: 40
        },
        end: {
          line: 15,
          column: 114
        }
      },
      "7": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 75
        }
      },
      "8": {
        start: {
          line: 17,
          column: 25
        },
        end: {
          line: 17,
          column: 70
        }
      },
      "9": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 58
        }
      },
      "10": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 75
        }
      },
      "11": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 6
        }
      },
      "12": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 51
        }
      },
      "13": {
        start: {
          line: 26,
          column: 39
        },
        end: {
          line: 26,
          column: 51
        }
      },
      "14": {
        start: {
          line: 27,
          column: 28
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "15": {
        start: {
          line: 28,
          column: 27
        },
        end: {
          line: 28,
          column: 40
        }
      },
      "16": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 20
        }
      },
      "17": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 66
        }
      },
      "18": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "19": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 19
        }
      },
      "20": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "21": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "22": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 53
        }
      },
      "23": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "24": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 30
        }
      },
      "25": {
        start: {
          line: 46,
          column: 17
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "26": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 49,
          column: 88
        }
      },
      "27": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "28": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "29": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 52,
          column: 95
        }
      },
      "30": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "31": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 57
        }
      },
      "32": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 39
        }
      },
      "33": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 25
        }
      },
      "34": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "35": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 31
        }
      },
      "36": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 18
        }
      },
      "37": {
        start: {
          line: 67,
          column: 30
        },
        end: {
          line: 67,
          column: 64
        }
      },
      "38": {
        start: {
          line: 68,
          column: 38
        },
        end: {
          line: 68,
          column: 65
        }
      },
      "39": {
        start: {
          line: 69,
          column: 30
        },
        end: {
          line: 69,
          column: 56
        }
      },
      "40": {
        start: {
          line: 71,
          column: 76
        },
        end: {
          line: 71,
          column: 135
        }
      },
      "41": {
        start: {
          line: 73,
          column: 42
        },
        end: {
          line: 76,
          column: 6
        }
      },
      "42": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 106,
          column: 6
        }
      },
      "43": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "44": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 31
        }
      },
      "45": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 27
        }
      },
      "46": {
        start: {
          line: 82,
          column: 29
        },
        end: {
          line: 82,
          column: 71
        }
      },
      "47": {
        start: {
          line: 83,
          column: 26
        },
        end: {
          line: 83,
          column: 88
        }
      },
      "48": {
        start: {
          line: 84,
          column: 58
        },
        end: {
          line: 84,
          column: 69
        }
      },
      "49": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "50": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 63
        }
      },
      "51": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 50
        }
      },
      "52": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 23
        }
      },
      "53": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "54": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 29
        }
      },
      "55": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 23
        }
      },
      "56": {
        start: {
          line: 94,
          column: 35
        },
        end: {
          line: 94,
          column: 83
        }
      },
      "57": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 37
        }
      },
      "58": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 54
        }
      },
      "59": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 46
        }
      },
      "60": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 32
        }
      },
      "61": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 30
        }
      },
      "62": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 127,
          column: 7
        }
      },
      "63": {
        start: {
          line: 109,
          column: 33
        },
        end: {
          line: 109,
          column: 47
        }
      },
      "64": {
        start: {
          line: 111,
          column: 30
        },
        end: {
          line: 111,
          column: 100
        }
      },
      "65": {
        start: {
          line: 112,
          column: 33
        },
        end: {
          line: 112,
          column: 91
        }
      },
      "66": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "67": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 37
        }
      },
      "68": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 118,
          column: 15
        }
      },
      "69": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 138,
          column: 7
        }
      },
      "70": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "71": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 51
        }
      },
      "72": {
        start: {
          line: 140,
          column: 24
        },
        end: {
          line: 140,
          column: 52
        }
      },
      "73": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "74": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 177,
          column: 11
        }
      },
      "75": {
        start: {
          line: 170,
          column: 41
        },
        end: {
          line: 170,
          column: 95
        }
      },
      "76": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 194,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 20
      },
      "2": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 29,
            column: 40
          }
        },
        loc: {
          start: {
            line: 29,
            column: 61
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "4": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 33,
            column: 9
          },
          end: {
            line: 33,
            column: 34
          }
        },
        loc: {
          start: {
            line: 33,
            column: 53
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 33
      },
      "5": {
        name: "VoteListWithLoading",
        decl: {
          start: {
            line: 66,
            column: 9
          },
          end: {
            line: 66,
            column: 28
          }
        },
        loc: {
          start: {
            line: 66,
            column: 185
          },
          end: {
            line: 195,
            column: 1
          }
        },
        line: 66
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 78,
            column: 47
          },
          end: {
            line: 78,
            column: 48
          }
        },
        loc: {
          start: {
            line: 78,
            column: 69
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 78
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 108,
            column: 26
          },
          end: {
            line: 108,
            column: 27
          }
        },
        loc: {
          start: {
            line: 108,
            column: 30
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 108
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 129,
            column: 26
          },
          end: {
            line: 129,
            column: 27
          }
        },
        loc: {
          start: {
            line: 129,
            column: 30
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 129
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 170,
            column: 37
          },
          end: {
            line: 170,
            column: 38
          }
        },
        loc: {
          start: {
            line: 170,
            column: 41
          },
          end: {
            line: 170,
            column: 95
          }
        },
        line: 170
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 35
          },
          end: {
            line: 21,
            column: 38
          }
        }, {
          start: {
            line: 21,
            column: 41
          },
          end: {
            line: 23,
            column: 5
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 14
          }
        }, {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 32
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 30,
            column: 45
          }
        }, {
          start: {
            line: 30,
            column: 48
          },
          end: {
            line: 30,
            column: 65
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 20
          }
        }, {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 27
          }
        }, {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 34,
            column: 45
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "7": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 20
          }
        }, {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 47
          }
        }, {
          start: {
            line: 37,
            column: 51
          },
          end: {
            line: 37,
            column: 76
          }
        }],
        line: 37
      },
      "8": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "9": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 31
          }
        }],
        line: 43
      },
      "10": {
        loc: {
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 53
          }
        }, {
          start: {
            line: 49,
            column: 57
          },
          end: {
            line: 49,
            column: 88
          }
        }],
        line: 49
      },
      "11": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "12": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 29
          }
        }, {
          start: {
            line: 51,
            column: 33
          },
          end: {
            line: 51,
            column: 79
          }
        }],
        line: 51
      },
      "13": {
        loc: {
          start: {
            line: 52,
            column: 23
          },
          end: {
            line: 52,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 47
          },
          end: {
            line: 52,
            column: 88
          }
        }, {
          start: {
            line: 52,
            column: 91
          },
          end: {
            line: 52,
            column: 95
          }
        }],
        line: 52
      },
      "14": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: 55,
            column: 19
          },
          end: {
            line: 57,
            column: 13
          }
        }],
        line: 53
      },
      "15": {
        loc: {
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 20
          }
        }, {
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 53,
            column: 33
          }
        }, {
          start: {
            line: 53,
            column: 37
          },
          end: {
            line: 53,
            column: 45
          }
        }],
        line: 53
      },
      "16": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "17": {
        loc: {
          start: {
            line: 66,
            column: 31
          },
          end: {
            line: 66,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 46
          },
          end: {
            line: 66,
            column: 48
          }
        }],
        line: 66
      },
      "18": {
        loc: {
          start: {
            line: 66,
            column: 50
          },
          end: {
            line: 66,
            column: 102
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 66
          },
          end: {
            line: 66,
            column: 102
          }
        }],
        line: 66
      },
      "19": {
        loc: {
          start: {
            line: 66,
            column: 104
          },
          end: {
            line: 66,
            column: 149
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 118
          },
          end: {
            line: 66,
            column: 149
          }
        }],
        line: 66
      },
      "20": {
        loc: {
          start: {
            line: 66,
            column: 151
          },
          end: {
            line: 66,
            column: 165
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 163
          },
          end: {
            line: 66,
            column: 165
          }
        }],
        line: 66
      },
      "21": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "22": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "23": {
        loc: {
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 90,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 90,
            column: 25
          }
        }, {
          start: {
            line: 90,
            column: 29
          },
          end: {
            line: 90,
            column: 50
          }
        }],
        line: 90
      },
      "24": {
        loc: {
          start: {
            line: 111,
            column: 30
          },
          end: {
            line: 111,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 30
          },
          end: {
            line: 111,
            column: 54
          }
        }, {
          start: {
            line: 111,
            column: 58
          },
          end: {
            line: 111,
            column: 78
          }
        }, {
          start: {
            line: 111,
            column: 82
          },
          end: {
            line: 111,
            column: 100
          }
        }],
        line: 111
      },
      "25": {
        loc: {
          start: {
            line: 112,
            column: 33
          },
          end: {
            line: 112,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 33
          },
          end: {
            line: 112,
            column: 62
          }
        }, {
          start: {
            line: 112,
            column: 66
          },
          end: {
            line: 112,
            column: 91
          }
        }],
        line: 112
      },
      "26": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "27": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 26
          }
        }, {
          start: {
            line: 113,
            column: 30
          },
          end: {
            line: 113,
            column: 46
          }
        }],
        line: 113
      },
      "28": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "29": {
        loc: {
          start: {
            line: 140,
            column: 24
          },
          end: {
            line: 140,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 24
          },
          end: {
            line: 140,
            column: 39
          }
        }, {
          start: {
            line: 140,
            column: 43
          },
          end: {
            line: 140,
            column: 52
          }
        }],
        line: 140
      },
      "30": {
        loc: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "31": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 142,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 142,
            column: 13
          }
        }, {
          start: {
            line: 142,
            column: 17
          },
          end: {
            line: 142,
            column: 29
          }
        }],
        line: 142
      },
      "32": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 192,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 40
          },
          end: {
            line: 189,
            column: 14
          }
        }, {
          start: {
            line: 189,
            column: 31
          },
          end: {
            line: 192,
            column: 14
          }
        }],
        line: 183
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0],
      "19": [0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/components/client/vote/list/VoteListWithLoading.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useEffect, useState, useCallback, useMemo } from 'react';\nimport { useSearchParams } from 'next/navigation';\nimport { VoteListPresenter, VoteFilterSection } from './index';\nimport VoteListSkeleton from '@/components/server/vote/VoteListSkeleton';\nimport { useVoteListLoading } from '@/hooks/useVoteListLoading';\nimport { VOTE_STATUS, VOTE_AREAS, VoteStatus, VoteArea } from '@/stores/voteFilterStore';\nimport { Vote } from '@/types/interfaces';\nimport { createBrowserSupabaseClient } from '@/lib/supabase/client';\nimport { buildVoteQuery, formatVoteData } from '@/utils/vote-data-formatter';\n\ninterface VoteListWithLoadingProps {\n  /** \uCD08\uAE30 \uD22C\uD45C \uB370\uC774\uD130 (\uC11C\uBC84\uC5D0\uC11C \uB80C\uB354\uB9C1\uB41C \uB370\uC774\uD130) */\n  initialVotes?: Vote[];\n  /** \uCD08\uAE30 \uD544\uD130 \uC0C1\uD0DC */\n  initialStatus?: VoteStatus;\n  initialArea?: VoteArea;\n  /** \uCD94\uAC00 CSS \uD074\uB798\uC2A4 */\n  className?: string;\n  /** \uB85C\uB529 \uC2DC\uAC04 \uC635\uC158 */\n  loadingOptions?: {\n    minLoadingTime?: number;\n    maxLoadingTime?: number;\n  };\n}\n\n/**\n * \uD544\uD130 \uBCC0\uD654 \uC2DC \uC2A4\uCF08\uB808\uD1A4\uC744 \uD45C\uC2DC\uD558\uB294 \uD22C\uD45C \uB9AC\uC2A4\uD2B8 \uCEF4\uD3EC\uB10C\uD2B8\n * \n * \uC774 \uCEF4\uD3EC\uB10C\uD2B8\uB294 \uB2E4\uC74C \uAE30\uB2A5\uC744 \uC81C\uACF5\uD569\uB2C8\uB2E4:\n * - \uD544\uD130 \uBCC0\uD654 \uAC10\uC9C0 \uBC0F \uB85C\uB529 \uC0C1\uD0DC \uAD00\uB9AC\n * - \uC2A4\uCF08\uB808\uD1A4 UI \uD45C\uC2DC\n * - \uD074\uB77C\uC774\uC5B8\uD2B8 \uC0AC\uC774\uB4DC \uB370\uC774\uD130 \uD398\uCE6D\n * - \uCD08\uAE30 \uC11C\uBC84 \uB80C\uB354\uB9C1 \uB370\uC774\uD130 \uD65C\uC6A9\n * \n * @example\n * ```tsx\n * <VoteListWithLoading \n *   initialVotes={serverVotes}\n *   initialStatus=\"ongoing\"\n *   initialArea=\"all\"\n * />\n * ```\n */\nexport function VoteListWithLoading({\n  initialVotes = [],\n  initialStatus = VOTE_STATUS.ONGOING,\n  initialArea = VOTE_AREAS.ALL,\n  className = '',\n  loadingOptions,\n}: VoteListWithLoadingProps) {\n  const [votes, setVotes] = useState<Vote[]>(initialVotes);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  // \uD544\uD130 \uB85C\uB529 \uC0C1\uD0DC \uAD00\uB9AC\n  const { \n    isLoading: isFilterLoading, \n    currentFilters, \n    completeLoading \n  } = useVoteListLoading(loadingOptions);\n\n  // \uC774\uC804 \uD544\uD130 \uC0C1\uD0DC \uCD94\uC801\n  const [prevFilters, setPrevFilters] = useState({\n    status: initialStatus,\n    area: initialArea,\n  });\n\n  // \uB370\uC774\uD130 \uD398\uCE6D \uD568\uC218\n  const fetchVotes = useCallback(async (status: VoteStatus, area: VoteArea) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const supabase = createBrowserSupabaseClient();\n      const query = buildVoteQuery(supabase, status, area);\n      const { data: voteData, error: fetchError } = await query;\n\n      if (fetchError) {\n        console.error('Vote fetch error:', fetchError);\n        setError('\uD22C\uD45C \uB370\uC774\uD130\uB97C \uBD88\uB7EC\uC624\uB294\uB370 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.');\n        return;\n      }\n\n      if (!voteData || voteData.length === 0) {\n        setVotes([]);\n        return;\n      }\n\n      const formattedVotes = formatVoteData(voteData);\n      setVotes(formattedVotes);\n      \n    } catch (error) {\n      console.error('fetchVotes error:', error);\n      setError('\uD22C\uD45C \uB370\uC774\uD130\uB97C \uBD88\uB7EC\uC624\uB294\uB370 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.');\n    } finally {\n      setIsLoading(false);\n      // \uD544\uD130 \uB85C\uB529\uB3C4 \uC644\uB8CC \uCC98\uB9AC\n      completeLoading();\n    }\n  }, [completeLoading]);\n\n  // \uD544\uD130 \uBCC0\uD654 \uAC10\uC9C0 \uBC0F \uB370\uC774\uD130 \uD398\uCE6D\n  useEffect(() => {\n    const { status, area } = currentFilters;\n    \n    // \uCD08\uAE30 \uB85C\uB4DC\uAC00 \uC544\uB2C8\uACE0 \uD544\uD130\uAC00 \uC2E4\uC81C\uB85C \uBCC0\uACBD\uB41C \uACBD\uC6B0\uC5D0\uB9CC \uD398\uCE6D\n    const isInitialLoad = status === initialStatus && area === initialArea && votes.length === 0;\n    const hasFilterChanged = status !== prevFilters.status || area !== prevFilters.area;\n    \n    if (!isInitialLoad && hasFilterChanged) {\n      fetchVotes(status, area);\n      setPrevFilters({ status, area });\n    }\n  }, [currentFilters, fetchVotes, initialStatus, initialArea, prevFilters, votes.length]);\n\n  // \uCD08\uAE30 \uB370\uC774\uD130\uAC00 \uC5C6\uB294 \uACBD\uC6B0 \uCD08\uAE30 \uD398\uCE6D\n  useEffect(() => {\n    if (initialVotes.length === 0) {\n      fetchVotes(initialStatus, initialArea);\n    }\n  }, [fetchVotes, initialStatus, initialArea, initialVotes.length]);\n\n  // \uB85C\uB529 \uC0C1\uD0DC \uACB0\uC815 (\uD544\uD130 \uB85C\uB529 \uB610\uB294 \uB370\uC774\uD130 \uB85C\uB529)\n  const showLoading = isFilterLoading || isLoading;\n\n  // \uC5D0\uB7EC \uC0C1\uD0DC \uB80C\uB354\uB9C1\n  if (error && !showLoading) {\n    return (\n      <div className={className}>\n        <VoteFilterSection />\n        <div className=\"flex flex-col items-center justify-center py-16 text-center\">\n          <div className=\"mb-4\">\n            <svg\n              className=\"w-16 h-16 text-red-300 mx-auto\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={1.5}\n                d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\"\n              />\n            </svg>\n          </div>\n          <p className=\"text-red-600 text-lg mb-4\">{error}</p>\n          <button\n            onClick={() => fetchVotes(currentFilters.status, currentFilters.area)}\n            className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\"\n          >\n            \uB2E4\uC2DC \uC2DC\uB3C4\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={className}>\n      <VoteFilterSection />\n      \n      {showLoading ? (\n        <VoteListSkeleton \n          itemCount={6}\n          showFilterSkeleton={false} // \uD544\uD130\uB294 \uC774\uBBF8 \uC704\uC5D0 \uD45C\uC2DC\uB428\n          layout=\"grid\"\n          animated={true}\n          className=\"mt-6\"\n        />\n      ) : (\n        <VoteListPresenter \n          votes={votes}\n          className=\"mt-6\"\n        />\n      )}\n    </div>\n  );\n} "],
      names: ["VoteListWithLoading", "initialVotes", "initialStatus", "VOTE_STATUS", "ONGOING", "initialArea", "VOTE_AREAS", "ALL", "className", "loadingOptions", "votes", "setVotes", "useState", "isLoading", "setIsLoading", "error", "setError", "isFilterLoading", "currentFilters", "completeLoading", "useVoteListLoading", "prevFilters", "setPrevFilters", "status", "area", "fetchVotes", "useCallback", "supabase", "createBrowserSupabaseClient", "query", "buildVoteQuery", "data", "voteData", "fetchError", "console", "length", "formattedVotes", "formatVoteData", "useEffect", "isInitialLoad", "hasFilterChanged", "showLoading", "div", "VoteFilterSection", "svg", "fill", "stroke", "viewBox", "path", "strokeLinecap", "strokeLinejoin", "strokeWidth", "d", "p", "button", "onClick", "VoteListSkeleton", "itemCount", "showFilterSkeleton", "layout", "animated", "VoteListPresenter"],
      mappings: "AAAA;;;;;+BA6CgBA;;;eAAAA;;;;+DA3CiD;uBAEZ;yEACxB;oCACM;iCAC2B;wBAElB;mCACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCxC,SAASA,oBAAoB,EAClCC,eAAe,EAAE,EACjBC,gBAAgBC,4BAAW,CAACC,OAAO,EACnCC,cAAcC,2BAAU,CAACC,GAAG,EAC5BC,YAAY,EAAE,EACdC,cAAc,EACW;IACzB,MAAM,CAACC,OAAOC,SAAS,GAAGC,IAAAA,eAAQ,EAASX;IAC3C,MAAM,CAACY,WAAWC,aAAa,GAAGF,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAgB;IAElD,cAAc;IACd,MAAM,EACJC,WAAWI,eAAe,EAC1BC,cAAc,EACdC,eAAe,EAChB,GAAGC,IAAAA,sCAAkB,EAACX;IAEvB,cAAc;IACd,MAAM,CAACY,aAAaC,eAAe,GAAGV,IAAAA,eAAQ,EAAC;QAC7CW,QAAQrB;QACRsB,MAAMnB;IACR;IAEA,YAAY;IACZ,MAAMoB,aAAaC,IAAAA,kBAAW,EAAC,OAAOH,QAAoBC;QACxD,IAAI;YACFV,aAAa;YACbE,SAAS;YAET,MAAMW,WAAWC,IAAAA,mCAA2B;YAC5C,MAAMC,QAAQC,IAAAA,iCAAc,EAACH,UAAUJ,QAAQC;YAC/C,MAAM,EAAEO,MAAMC,QAAQ,EAAEjB,OAAOkB,UAAU,EAAE,GAAG,MAAMJ;YAEpD,IAAII,YAAY;gBACdC,QAAQnB,KAAK,CAAC,qBAAqBkB;gBACnCjB,SAAS;gBACT;YACF;YAEA,IAAI,CAACgB,YAAYA,SAASG,MAAM,KAAK,GAAG;gBACtCxB,SAAS,EAAE;gBACX;YACF;YAEA,MAAMyB,iBAAiBC,IAAAA,iCAAc,EAACL;YACtCrB,SAASyB;QAEX,EAAE,OAAOrB,OAAO;YACdmB,QAAQnB,KAAK,CAAC,qBAAqBA;YACnCC,SAAS;QACX,SAAU;YACRF,aAAa;YACb,eAAe;YACfK;QACF;IACF,GAAG;QAACA;KAAgB;IAEpB,oBAAoB;IACpBmB,IAAAA,gBAAS,EAAC;QACR,MAAM,EAAEf,MAAM,EAAEC,IAAI,EAAE,GAAGN;QAEzB,iCAAiC;QACjC,MAAMqB,gBAAgBhB,WAAWrB,iBAAiBsB,SAASnB,eAAeK,MAAMyB,MAAM,KAAK;QAC3F,MAAMK,mBAAmBjB,WAAWF,YAAYE,MAAM,IAAIC,SAASH,YAAYG,IAAI;QAEnF,IAAI,CAACe,iBAAiBC,kBAAkB;YACtCf,WAAWF,QAAQC;YACnBF,eAAe;gBAAEC;gBAAQC;YAAK;QAChC;IACF,GAAG;QAACN;QAAgBO;QAAYvB;QAAeG;QAAagB;QAAaX,MAAMyB,MAAM;KAAC;IAEtF,sBAAsB;IACtBG,IAAAA,gBAAS,EAAC;QACR,IAAIrC,aAAakC,MAAM,KAAK,GAAG;YAC7BV,WAAWvB,eAAeG;QAC5B;IACF,GAAG;QAACoB;QAAYvB;QAAeG;QAAaJ,aAAakC,MAAM;KAAC;IAEhE,6BAA6B;IAC7B,MAAMM,cAAcxB,mBAAmBJ;IAEvC,YAAY;IACZ,IAAIE,SAAS,CAAC0B,aAAa;QACzB,qBACE,sBAACC;YAAIlC,WAAWA;;8BACd,qBAACmC,wBAAiB;8BAClB,sBAACD;oBAAIlC,WAAU;;sCACb,qBAACkC;4BAAIlC,WAAU;sCACb,cAAA,qBAACoC;gCACCpC,WAAU;gCACVqC,MAAK;gCACLC,QAAO;gCACPC,SAAQ;0CAER,cAAA,qBAACC;oCACCC,eAAc;oCACdC,gBAAe;oCACfC,aAAa;oCACbC,GAAE;;;;sCAIR,qBAACC;4BAAE7C,WAAU;sCAA6BO;;sCAC1C,qBAACuC;4BACCC,SAAS,IAAM9B,WAAWP,eAAeK,MAAM,EAAEL,eAAeM,IAAI;4BACpEhB,WAAU;sCACX;;;;;;IAMT;IAEA,qBACE,sBAACkC;QAAIlC,WAAWA;;0BACd,qBAACmC,wBAAiB;YAEjBF,4BACC,qBAACe,yBAAgB;gBACfC,WAAW;gBACXC,oBAAoB;gBACpBC,QAAO;gBACPC,UAAU;gBACVpD,WAAU;+BAGZ,qBAACqD,wBAAiB;gBAChBnD,OAAOA;gBACPF,WAAU;;;;AAKpB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "13bec6ce4731953a2305759ad5414de1de6683d1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_cwt0k1464 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_cwt0k1464();
cov_cwt0k1464().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_cwt0k1464().s[1]++;
Object.defineProperty(exports, "VoteListWithLoading", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_cwt0k1464().f[0]++;
    cov_cwt0k1464().s[2]++;
    return VoteListWithLoading;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_cwt0k1464().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_cwt0k1464().s[4]++, _interop_require_wildcard(require("react")));
const _index =
/* istanbul ignore next */
(cov_cwt0k1464().s[5]++, require("./index"));
const _VoteListSkeleton =
/* istanbul ignore next */
(/*#__PURE__*/cov_cwt0k1464().s[6]++, _interop_require_default(require("../../../server/vote/VoteListSkeleton")));
const _useVoteListLoading =
/* istanbul ignore next */
(cov_cwt0k1464().s[7]++, require("../../../../hooks/useVoteListLoading"));
const _voteFilterStore =
/* istanbul ignore next */
(cov_cwt0k1464().s[8]++, require("../../../../stores/voteFilterStore"));
const _client =
/* istanbul ignore next */
(cov_cwt0k1464().s[9]++, require("../../../../lib/supabase/client"));
const _votedataformatter =
/* istanbul ignore next */
(cov_cwt0k1464().s[10]++, require("../../../../utils/vote-data-formatter"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_cwt0k1464().f[1]++;
  cov_cwt0k1464().s[11]++;
  return /* istanbul ignore next */(cov_cwt0k1464().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_cwt0k1464().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_cwt0k1464().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_cwt0k1464().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_cwt0k1464().f[2]++;
  cov_cwt0k1464().s[12]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_cwt0k1464().b[2][0]++;
    cov_cwt0k1464().s[13]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_cwt0k1464().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_cwt0k1464().s[14]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_cwt0k1464().s[15]++, new WeakMap());
  /* istanbul ignore next */
  cov_cwt0k1464().s[16]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_cwt0k1464().f[3]++;
    cov_cwt0k1464().s[17]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_cwt0k1464().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_cwt0k1464().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_cwt0k1464().f[4]++;
  cov_cwt0k1464().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_cwt0k1464().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_cwt0k1464().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_cwt0k1464().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_cwt0k1464().b[4][0]++;
    cov_cwt0k1464().s[19]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_cwt0k1464().b[4][1]++;
  }
  cov_cwt0k1464().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_cwt0k1464().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_cwt0k1464().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_cwt0k1464().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_cwt0k1464().b[6][0]++;
    cov_cwt0k1464().s[21]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_cwt0k1464().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_cwt0k1464().s[22]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_cwt0k1464().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_cwt0k1464().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_cwt0k1464().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_cwt0k1464().b[8][0]++;
    cov_cwt0k1464().s[24]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_cwt0k1464().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_cwt0k1464().s[25]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_cwt0k1464().s[26]++,
  /* istanbul ignore next */
  (cov_cwt0k1464().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_cwt0k1464().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_cwt0k1464().s[27]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_cwt0k1464().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_cwt0k1464().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_cwt0k1464().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_cwt0k1464().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_cwt0k1464().s[29]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_cwt0k1464().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_cwt0k1464().b[13][1]++, null));
      /* istanbul ignore next */
      cov_cwt0k1464().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_cwt0k1464().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_cwt0k1464().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_cwt0k1464().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_cwt0k1464().b[14][0]++;
        cov_cwt0k1464().s[31]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_cwt0k1464().b[14][1]++;
        cov_cwt0k1464().s[32]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_cwt0k1464().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_cwt0k1464().s[33]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_cwt0k1464().s[34]++;
  if (cache) {
    /* istanbul ignore next */
    cov_cwt0k1464().b[16][0]++;
    cov_cwt0k1464().s[35]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_cwt0k1464().b[16][1]++;
  }
  cov_cwt0k1464().s[36]++;
  return newObj;
}
function VoteListWithLoading({
  initialVotes =
  /* istanbul ignore next */
  (cov_cwt0k1464().b[17][0]++, []),
  initialStatus =
  /* istanbul ignore next */
  (cov_cwt0k1464().b[18][0]++, _voteFilterStore.VOTE_STATUS.ONGOING),
  initialArea =
  /* istanbul ignore next */
  (cov_cwt0k1464().b[19][0]++, _voteFilterStore.VOTE_AREAS.ALL),
  className =
  /* istanbul ignore next */
  (cov_cwt0k1464().b[20][0]++, ''),
  loadingOptions
}) {
  /* istanbul ignore next */
  cov_cwt0k1464().f[5]++;
  const [votes, setVotes] =
  /* istanbul ignore next */
  (cov_cwt0k1464().s[37]++, (0, _react.useState)(initialVotes));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_cwt0k1464().s[38]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_cwt0k1464().s[39]++, (0, _react.useState)(null));
  // 필터 로딩 상태 관리
  const {
    isLoading: isFilterLoading,
    currentFilters,
    completeLoading
  } =
  /* istanbul ignore next */
  (cov_cwt0k1464().s[40]++, (0, _useVoteListLoading.useVoteListLoading)(loadingOptions));
  // 이전 필터 상태 추적
  const [prevFilters, setPrevFilters] =
  /* istanbul ignore next */
  (cov_cwt0k1464().s[41]++, (0, _react.useState)({
    status: initialStatus,
    area: initialArea
  }));
  // 데이터 페칭 함수
  const fetchVotes =
  /* istanbul ignore next */
  (cov_cwt0k1464().s[42]++, (0, _react.useCallback)(async (status, area) => {
    /* istanbul ignore next */
    cov_cwt0k1464().f[6]++;
    cov_cwt0k1464().s[43]++;
    try {
      /* istanbul ignore next */
      cov_cwt0k1464().s[44]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_cwt0k1464().s[45]++;
      setError(null);
      const supabase =
      /* istanbul ignore next */
      (cov_cwt0k1464().s[46]++, (0, _client.createBrowserSupabaseClient)());
      const query =
      /* istanbul ignore next */
      (cov_cwt0k1464().s[47]++, (0, _votedataformatter.buildVoteQuery)(supabase, status, area));
      const {
        data: voteData,
        error: fetchError
      } =
      /* istanbul ignore next */
      (cov_cwt0k1464().s[48]++, await query);
      /* istanbul ignore next */
      cov_cwt0k1464().s[49]++;
      if (fetchError) {
        /* istanbul ignore next */
        cov_cwt0k1464().b[21][0]++;
        cov_cwt0k1464().s[50]++;
        console.error('Vote fetch error:', fetchError);
        /* istanbul ignore next */
        cov_cwt0k1464().s[51]++;
        setError('투표 데이터를 불러오는데 실패했습니다.');
        /* istanbul ignore next */
        cov_cwt0k1464().s[52]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_cwt0k1464().b[21][1]++;
      }
      cov_cwt0k1464().s[53]++;
      if (
      /* istanbul ignore next */
      (cov_cwt0k1464().b[23][0]++, !voteData) ||
      /* istanbul ignore next */
      (cov_cwt0k1464().b[23][1]++, voteData.length === 0)) {
        /* istanbul ignore next */
        cov_cwt0k1464().b[22][0]++;
        cov_cwt0k1464().s[54]++;
        setVotes([]);
        /* istanbul ignore next */
        cov_cwt0k1464().s[55]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_cwt0k1464().b[22][1]++;
      }
      const formattedVotes =
      /* istanbul ignore next */
      (cov_cwt0k1464().s[56]++, (0, _votedataformatter.formatVoteData)(voteData));
      /* istanbul ignore next */
      cov_cwt0k1464().s[57]++;
      setVotes(formattedVotes);
    } catch (error) {
      /* istanbul ignore next */
      cov_cwt0k1464().s[58]++;
      console.error('fetchVotes error:', error);
      /* istanbul ignore next */
      cov_cwt0k1464().s[59]++;
      setError('투표 데이터를 불러오는데 실패했습니다.');
    } finally {
      /* istanbul ignore next */
      cov_cwt0k1464().s[60]++;
      setIsLoading(false);
      // 필터 로딩도 완료 처리
      /* istanbul ignore next */
      cov_cwt0k1464().s[61]++;
      completeLoading();
    }
  }, [completeLoading]));
  // 필터 변화 감지 및 데이터 페칭
  /* istanbul ignore next */
  cov_cwt0k1464().s[62]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_cwt0k1464().f[7]++;
    const {
      status,
      area
    } =
    /* istanbul ignore next */
    (cov_cwt0k1464().s[63]++, currentFilters);
    // 초기 로드가 아니고 필터가 실제로 변경된 경우에만 페칭
    const isInitialLoad =
    /* istanbul ignore next */
    (cov_cwt0k1464().s[64]++,
    /* istanbul ignore next */
    (cov_cwt0k1464().b[24][0]++, status === initialStatus) &&
    /* istanbul ignore next */
    (cov_cwt0k1464().b[24][1]++, area === initialArea) &&
    /* istanbul ignore next */
    (cov_cwt0k1464().b[24][2]++, votes.length === 0));
    const hasFilterChanged =
    /* istanbul ignore next */
    (cov_cwt0k1464().s[65]++,
    /* istanbul ignore next */
    (cov_cwt0k1464().b[25][0]++, status !== prevFilters.status) ||
    /* istanbul ignore next */
    (cov_cwt0k1464().b[25][1]++, area !== prevFilters.area));
    /* istanbul ignore next */
    cov_cwt0k1464().s[66]++;
    if (
    /* istanbul ignore next */
    (cov_cwt0k1464().b[27][0]++, !isInitialLoad) &&
    /* istanbul ignore next */
    (cov_cwt0k1464().b[27][1]++, hasFilterChanged)) {
      /* istanbul ignore next */
      cov_cwt0k1464().b[26][0]++;
      cov_cwt0k1464().s[67]++;
      fetchVotes(status, area);
      /* istanbul ignore next */
      cov_cwt0k1464().s[68]++;
      setPrevFilters({
        status,
        area
      });
    } else
    /* istanbul ignore next */
    {
      cov_cwt0k1464().b[26][1]++;
    }
  }, [currentFilters, fetchVotes, initialStatus, initialArea, prevFilters, votes.length]);
  // 초기 데이터가 없는 경우 초기 페칭
  /* istanbul ignore next */
  cov_cwt0k1464().s[69]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_cwt0k1464().f[8]++;
    cov_cwt0k1464().s[70]++;
    if (initialVotes.length === 0) {
      /* istanbul ignore next */
      cov_cwt0k1464().b[28][0]++;
      cov_cwt0k1464().s[71]++;
      fetchVotes(initialStatus, initialArea);
    } else
    /* istanbul ignore next */
    {
      cov_cwt0k1464().b[28][1]++;
    }
  }, [fetchVotes, initialStatus, initialArea, initialVotes.length]);
  // 로딩 상태 결정 (필터 로딩 또는 데이터 로딩)
  const showLoading =
  /* istanbul ignore next */
  (cov_cwt0k1464().s[72]++,
  /* istanbul ignore next */
  (cov_cwt0k1464().b[29][0]++, isFilterLoading) ||
  /* istanbul ignore next */
  (cov_cwt0k1464().b[29][1]++, isLoading));
  // 에러 상태 렌더링
  /* istanbul ignore next */
  cov_cwt0k1464().s[73]++;
  if (
  /* istanbul ignore next */
  (cov_cwt0k1464().b[31][0]++, error) &&
  /* istanbul ignore next */
  (cov_cwt0k1464().b[31][1]++, !showLoading)) {
    /* istanbul ignore next */
    cov_cwt0k1464().b[30][0]++;
    cov_cwt0k1464().s[74]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: className,
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_index.VoteFilterSection, {}), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex flex-col items-center justify-center py-16 text-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "mb-4",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
            className: "w-16 h-16 text-red-300 mx-auto",
            fill: "none",
            stroke: "currentColor",
            viewBox: "0 0 24 24",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
              strokeLinecap: "round",
              strokeLinejoin: "round",
              strokeWidth: 1.5,
              d: "M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z"
            })
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-red-600 text-lg mb-4",
          children: error
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: () => {
            /* istanbul ignore next */
            cov_cwt0k1464().f[9]++;
            cov_cwt0k1464().s[75]++;
            return fetchVotes(currentFilters.status, currentFilters.area);
          },
          className: "px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors",
          children: "다시 시도"
        })]
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_cwt0k1464().b[30][1]++;
  }
  cov_cwt0k1464().s[76]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: className,
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_index.VoteFilterSection, {}), showLoading ?
    /* istanbul ignore next */
    (/*#__PURE__*/cov_cwt0k1464().b[32][0]++, (0, _jsxruntime.jsx)(_VoteListSkeleton.default, {
      itemCount: 6,
      showFilterSkeleton: false,
      layout: "grid",
      animated: true,
      className: "mt-6"
    })) :
    /* istanbul ignore next */
    (/*#__PURE__*/cov_cwt0k1464().b[32][1]++, (0, _jsxruntime.jsx)(_index.VoteListPresenter, {
      votes: votes,
      className: "mt-6"
    }))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,