{"version":3,"names":["AuthCallbackPage","cov_2m11fhkixv","f","s","_jsxruntime","jsxs","Fragment","jsx","dangerouslySetInnerHTML","__html","process","env","NODE_ENV","_react","Suspense","fallback","_AuthCallback","default"],"sources":["/Users/cheolhyun/Repositories/picnic-web/app/auth/callback/page.tsx"],"sourcesContent":["import { Suspense } from 'react';\nimport AuthCallback from '@/components/client/auth/AuthCallback';\n\n/**\n * 범용 OAuth 콜백 페이지\n * \n * Supabase에서 OAuth 처리 후 /auth/callback로 리다이렉트할 때 사용\n * AuthCallback 컴포넌트에서 URL 파라미터나 기타 방법으로 provider를 감지\n */\nexport default function AuthCallbackPage() {\n  return (\n    <>\n      {/* 즉시 로딩바를 표시하는 스크립트 */}\n      <script\n        dangerouslySetInnerHTML={{\n          __html: `\n            // 페이지 로드 즉시 로딩바 생성\n            (function() {\n              // 개발 환경에서만 로그 출력\n              const isDev = ${process.env.NODE_ENV === 'development'};\n              if (isDev) console.log('🔄 [OAuth Callback] 범용 콜백 즉시 로딩바 생성');\n              \n              const loadingDiv = document.createElement('div');\n              loadingDiv.id = 'oauth-loading';\n              loadingDiv.style.cssText = \\`\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100vw;\n                height: 100vh;\n                background: #f9fafb;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                z-index: 9999;\n              \\`;\n              \n              // 로딩바 컨테이너\n              const container = document.createElement('div');\n              container.style.cssText = \\`\n                text-align: center;\n              \\`;\n              \n              // 심플한 로딩바\n              const loadingBar = document.createElement('div');\n              loadingBar.style.cssText = \\`\n                position: relative;\n                width: 80px;\n                height: 80px;\n                margin: 0 auto;\n              \\`;\n              \n              // 외부 원\n              const outerCircle = document.createElement('div');\n              outerCircle.style.cssText = \\`\n                width: 80px;\n                height: 80px;\n                border: 4px solid #e5e7eb;\n                border-radius: 50%;\n              \\`;\n              \n              // 회전하는 로딩바\n              const spinnerCircle = document.createElement('div');\n              spinnerCircle.style.cssText = \\`\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 80px;\n                height: 80px;\n                border: 4px solid #3b82f6;\n                border-top: 4px solid transparent;\n                border-radius: 50%;\n                animation: spin 1s linear infinite;\n              \\`;\n              \n              // 점 애니메이션 컨테이너\n              const dotsContainer = document.createElement('div');\n              dotsContainer.style.cssText = \\`\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                margin-top: 24px;\n                gap: 4px;\n              \\`;\n              \n              // 3개의 점 생성\n              for (let i = 0; i < 3; i++) {\n                const dot = document.createElement('div');\n                dot.style.cssText = \\`\n                  width: 8px;\n                  height: 8px;\n                  background: #3b82f6;\n                  border-radius: 50%;\n                  animation: pulse 1.5s ease-in-out \\${i * 0.2}s infinite;\n                \\`;\n                dotsContainer.appendChild(dot);\n              }\n              \n              // CSS 애니메이션 추가\n              if (!document.getElementById('loading-style')) {\n                const style = document.createElement('style');\n                style.id = 'loading-style';\n                style.textContent = \\`\n                  @keyframes spin {\n                    0% { transform: rotate(0deg); }\n                    100% { transform: rotate(360deg); }\n                  }\n                  @keyframes pulse {\n                    0%, 80%, 100% { \n                      transform: scale(0.8);\n                      opacity: 0.5;\n                    }\n                    40% { \n                      transform: scale(1);\n                      opacity: 1;\n                    }\n                  }\n                \\`;\n                document.head.appendChild(style);\n              }\n              \n              // 요소들 조립\n              loadingBar.appendChild(outerCircle);\n              loadingBar.appendChild(spinnerCircle);\n              container.appendChild(loadingBar);\n              container.appendChild(dotsContainer);\n              loadingDiv.appendChild(container);\n              \n              // body가 준비되면 즉시 추가\n              if (document.body) {\n                document.body.appendChild(loadingDiv);\n              } else {\n                document.addEventListener('DOMContentLoaded', function() {\n                  document.body.appendChild(loadingDiv);\n                });\n              }\n            })();\n          `\n        }}\n      />\n\n      {/* 클라이언트 컴포넌트 */}\n      <Suspense fallback={null}>\n        <AuthCallback />\n      </Suspense>\n    </>\n  );\n} "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;;;AAMA;;;;;;WAAwBA,gBAAA;;;;;;;;kCATC;;;wEACA;;;;;;;;;;;;;;;AAQV,SAASA,iBAAA;EAAA;EAAAC,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EACtB,oBACE,IAAAC,WAAA,CAAAC,IAAA,EAAAD,WAAA,CAAAE,QAAA;4BAEE,IAAAF,WAAA,CAAAG,GAAA,EAAC;MACCC,uBAAA,EAAyB;QACvBC,MAAA,EAAQ;;;;8BAIYC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAuH/C;qBAIF,IAAAR,WAAA,CAAAG,GAAA,EAACM,MAAA,CAAAC,QAAQ;MAACC,QAAA,EAAU;gBAClB,iBAAAX,WAAA,CAAAG,GAAA,EAACS,aAAA,CAAAC,OAAY;;;AAIrB","ignoreList":[]}