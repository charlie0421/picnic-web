04ca6225f8686cff07a54670b75b37f1
"use strict";

/* istanbul ignore next */
function cov_22uvixzpho() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/app/api/user/posts/route.ts";
  var hash = "14a646c6476288953605305ff2f9069d5ed188bd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/app/api/user/posts/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 59
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "6": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 56
        }
      },
      "7": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "8": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 23,
          column: 15
        }
      },
      "9": {
        start: {
          line: 26,
          column: 33
        },
        end: {
          line: 26,
          column: 53
        }
      },
      "10": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 62
        }
      },
      "11": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 65
        }
      },
      "12": {
        start: {
          line: 29,
          column: 23
        },
        end: {
          line: 29,
          column: 41
        }
      },
      "13": {
        start: {
          line: 31,
          column: 25
        },
        end: {
          line: 31,
          column: 73
        }
      },
      "14": {
        start: {
          line: 33,
          column: 57
        },
        end: {
          line: 36,
          column: 56
        }
      },
      "15": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "16": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 54
        }
      },
      "17": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 44,
          column: 15
        }
      },
      "18": {
        start: {
          line: 47,
          column: 51
        },
        end: {
          line: 60,
          column: 44
        }
      },
      "19": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "20": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 52
        }
      },
      "21": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 68,
          column: 15
        }
      },
      "22": {
        start: {
          line: 71,
          column: 24
        },
        end: {
          line: 71,
          column: 56
        }
      },
      "23": {
        start: {
          line: 71,
          column: 40
        },
        end: {
          line: 71,
          column: 49
        }
      },
      "24": {
        start: {
          line: 72,
          column: 28
        },
        end: {
          line: 72,
          column: 30
        }
      },
      "25": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "26": {
        start: {
          line: 74,
          column: 42
        },
        end: {
          line: 74,
          column: 137
        }
      },
      "27": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 78,
          column: 15
        }
      },
      "28": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 91
        }
      },
      "29": {
        start: {
          line: 81,
          column: 31
        },
        end: {
          line: 102,
          column: 16
        }
      },
      "30": {
        start: {
          line: 83,
          column: 28
        },
        end: {
          line: 83,
          column: 32
        }
      },
      "31": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 91,
          column: 13
        }
      },
      "32": {
        start: {
          line: 85,
          column: 37
        },
        end: {
          line: 85,
          column: 53
        }
      },
      "33": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 90,
          column: 17
        }
      },
      "34": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 87,
          column: 86
        }
      },
      "35": {
        start: {
          line: 88,
          column: 23
        },
        end: {
          line: 90,
          column: 17
        }
      },
      "36": {
        start: {
          line: 89,
          column: 20
        },
        end: {
          line: 89,
          column: 45
        }
      },
      "37": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 101,
          column: 14
        }
      },
      "38": {
        start: {
          line: 104,
          column: 27
        },
        end: {
          line: 104,
          column: 63
        }
      },
      "39": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 105,
          column: 41
        }
      },
      "40": {
        start: {
          line: 106,
          column: 28
        },
        end: {
          line: 106,
          column: 36
        }
      },
      "41": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "42": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 46
        }
      },
      "43": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 126,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 18
          }
        },
        loc: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 128,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 71,
            column: 35
          },
          end: {
            line: 71,
            column: 36
          }
        },
        loc: {
          start: {
            line: 71,
            column: 40
          },
          end: {
            line: 71,
            column: 49
          }
        },
        line: 71
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 76,
            column: 33
          },
          end: {
            line: 76,
            column: 34
          }
        },
        loc: {
          start: {
            line: 76,
            column: 44
          },
          end: {
            line: 78,
            column: 13
          }
        },
        line: 76
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 81,
            column: 42
          },
          end: {
            line: 81,
            column: 43
          }
        },
        loc: {
          start: {
            line: 81,
            column: 50
          },
          end: {
            line: 102,
            column: 9
          }
        },
        line: 81
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 30
          },
          end: {
            line: 27,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 30
          },
          end: {
            line: 27,
            column: 54
          }
        }, {
          start: {
            line: 27,
            column: 58
          },
          end: {
            line: 27,
            column: 61
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 31
          },
          end: {
            line: 28,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 31
          },
          end: {
            line: 28,
            column: 56
          }
        }, {
          start: {
            line: 28,
            column: 60
          },
          end: {
            line: 28,
            column: 64
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "5": {
        loc: {
          start: {
            line: 71,
            column: 24
          },
          end: {
            line: 71,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 24
          },
          end: {
            line: 71,
            column: 50
          }
        }, {
          start: {
            line: 71,
            column: 54
          },
          end: {
            line: 71,
            column: 56
          }
        }],
        line: 71
      },
      "6": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "7": {
        loc: {
          start: {
            line: 77,
            column: 50
          },
          end: {
            line: 77,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 50
          },
          end: {
            line: 77,
            column: 80
          }
        }, {
          start: {
            line: 77,
            column: 84
          },
          end: {
            line: 77,
            column: 85
          }
        }],
        line: 77
      },
      "8": {
        loc: {
          start: {
            line: 81,
            column: 31
          },
          end: {
            line: 102,
            column: 16
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 31
          },
          end: {
            line: 102,
            column: 10
          }
        }, {
          start: {
            line: 102,
            column: 14
          },
          end: {
            line: 102,
            column: 16
          }
        }],
        line: 81
      },
      "9": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 91,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 91,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "10": {
        loc: {
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 90,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 90,
            column: 17
          }
        }, {
          start: {
            line: 88,
            column: 23
          },
          end: {
            line: 90,
            column: 17
          }
        }],
        line: 86
      },
      "11": {
        loc: {
          start: {
            line: 87,
            column: 32
          },
          end: {
            line: 87,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 32
          },
          end: {
            line: 87,
            column: 47
          }
        }, {
          start: {
            line: 87,
            column: 51
          },
          end: {
            line: 87,
            column: 66
          }
        }, {
          start: {
            line: 87,
            column: 70
          },
          end: {
            line: 87,
            column: 85
          }
        }],
        line: 87
      },
      "12": {
        loc: {
          start: {
            line: 88,
            column: 23
          },
          end: {
            line: 90,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 23
          },
          end: {
            line: 90,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "13": {
        loc: {
          start: {
            line: 94,
            column: 23
          },
          end: {
            line: 94,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 23
          },
          end: {
            line: 94,
            column: 33
          }
        }, {
          start: {
            line: 94,
            column: 37
          },
          end: {
            line: 94,
            column: 44
          }
        }],
        line: 94
      },
      "14": {
        loc: {
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 95,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 95,
            column: 37
          }
        }, {
          start: {
            line: 95,
            column: 41
          },
          end: {
            line: 95,
            column: 43
          }
        }],
        line: 95
      },
      "15": {
        loc: {
          start: {
            line: 96,
            column: 27
          },
          end: {
            line: 96,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 27
          },
          end: {
            line: 96,
            column: 42
          }
        }, {
          start: {
            line: 96,
            column: 46
          },
          end: {
            line: 96,
            column: 47
          }
        }],
        line: 96
      },
      "16": {
        loc: {
          start: {
            line: 97,
            column: 30
          },
          end: {
            line: 97,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 30
          },
          end: {
            line: 97,
            column: 57
          }
        }, {
          start: {
            line: 97,
            column: 61
          },
          end: {
            line: 97,
            column: 62
          }
        }],
        line: 97
      },
      "17": {
        loc: {
          start: {
            line: 100,
            column: 29
          },
          end: {
            line: 100,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 29
          },
          end: {
            line: 100,
            column: 46
          }
        }, {
          start: {
            line: 100,
            column: 50
          },
          end: {
            line: 100,
            column: 55
          }
        }],
        line: 100
      },
      "18": {
        loc: {
          start: {
            line: 104,
            column: 38
          },
          end: {
            line: 104,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 38
          },
          end: {
            line: 104,
            column: 48
          }
        }, {
          start: {
            line: 104,
            column: 52
          },
          end: {
            line: 104,
            column: 53
          }
        }],
        line: 104
      },
      "19": {
        loc: {
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 113,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 113,
            column: 38
          }
        }, {
          start: {
            line: 113,
            column: 42
          },
          end: {
            line: 113,
            column: 43
          }
        }],
        line: 113
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/app/api/user/posts/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { createServerSupabaseClient, getServerUser } from '@/lib/supabase/server';\n\nexport async function GET(request: NextRequest) {\n  try {\n    // 1. \uC778\uC99D\uB41C \uC0AC\uC6A9\uC790 \uD655\uC778\n    const user = await getServerUser();\n    if (!user) {\n      return NextResponse.json(\n        { success: false, error: '\uB85C\uADF8\uC778\uC774 \uD544\uC694\uD569\uB2C8\uB2E4.' },\n        { status: 401 }\n      );\n    }\n\n    // 2. \uCFFC\uB9AC \uD30C\uB77C\uBBF8\uD130 \uD30C\uC2F1\n    const { searchParams } = new URL(request.url);\n    const page = parseInt(searchParams.get('page') || '1');\n    const limit = parseInt(searchParams.get('limit') || '10');\n    const offset = (page - 1) * limit;\n\n    // 3. Supabase \uD074\uB77C\uC774\uC5B8\uD2B8 \uC0DD\uC131\n    const supabase = await createServerSupabaseClient();\n\n    // 4. \uCD1D \uAC8C\uC2DC\uBB3C \uC218 \uC870\uD68C (\uC0AD\uC81C\uB418\uC9C0 \uC54A\uC740 \uAC83\uB9CC)\n    const { count: totalCount, error: countError } = await supabase\n      .from('posts')\n      .select('*', { count: 'exact', head: true })\n      .eq('user_id', user.id)\n      .is('deleted_at', null);\n\n    if (countError) {\n      console.error('\uAC8C\uC2DC\uBB3C \uC218 \uC870\uD68C \uC5D0\uB7EC:', countError);\n      return NextResponse.json(\n        { success: false, error: '\uAC8C\uC2DC\uBB3C \uC218 \uC870\uD68C\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.' },\n        { status: 500 }\n      );\n    }\n\n    // 5. \uAC8C\uC2DC\uBB3C \uBAA9\uB85D \uC870\uD68C (\uAC8C\uC2DC\uD310 \uC815\uBCF4 \uD3EC\uD568)\n    const { data: posts, error: postsError } = await supabase\n      .from('posts')\n      .select(`\n        post_id,\n        title,\n        content,\n        view_count,\n        created_at,\n        is_anonymous,\n        boards (\n          board_id,\n          name\n        )\n      `)\n      .eq('user_id', user.id)\n      .is('deleted_at', null)\n      .order('created_at', { ascending: false })\n      .range(offset, offset + limit - 1);\n\n    if (postsError) {\n      console.error('\uAC8C\uC2DC\uBB3C \uC870\uD68C \uC5D0\uB7EC:', postsError);\n      return NextResponse.json(\n        { success: false, error: '\uAC8C\uC2DC\uBB3C \uC870\uD68C\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.' },\n        { status: 500 }\n      );\n    }\n\n    // 6. \uAC01 \uAC8C\uC2DC\uBB3C\uC758 \uB313\uAE00 \uC218\uB97C \uBCC4\uB3C4 \uC870\uD68C\n    const postIds = posts?.map(p => p.post_id) || [];\n    let commentCounts: { [key: string]: number } = {};\n    \n    if (postIds.length > 0) {\n      const { data: commentData } = await supabase\n        .from('comments')\n        .select('post_id')\n        .in('post_id', postIds)\n        .is('deleted_at', null);\n      \n      // \uB313\uAE00 \uC218 \uACC4\uC0B0\n      commentData?.forEach(comment => {\n        commentCounts[comment.post_id] = (commentCounts[comment.post_id] || 0) + 1;\n      });\n    }\n\n    // 7. \uB370\uC774\uD130 \uBCC0\uD658\n    const formattedPosts = posts?.map(post => {\n      // \uAC8C\uC2DC\uD310 \uC774\uB984 \uCD94\uCD9C (\uB2E4\uAD6D\uC5B4 \uC9C0\uC6D0)\n      let boardName: string | null = null;\n      if ((post as any).boards?.name) {\n        const boardNameObj = (post as any).boards.name;\n        if (typeof boardNameObj === 'object') {\n          boardName = boardNameObj.ko || boardNameObj.en || 'Unknown Board';\n        } else if (typeof boardNameObj === 'string') {\n          boardName = boardNameObj;\n        }\n      }\n\n      return {\n        id: post.post_id,\n        title: post.title || '\uC81C\uBAA9 \uC5C6\uC74C',\n        content: post.content || '',\n        viewCount: post.view_count || 0,\n        commentCount: commentCounts[post.post_id] || 0,\n        createdAt: post.created_at,\n        boardName,\n        isAnonymous: post.is_anonymous || false\n      };\n    }) || [];\n\n    // 8. \uD398\uC774\uC9C0\uB124\uC774\uC158 \uACC4\uC0B0\n    const totalPages = Math.ceil((totalCount || 0) / limit);\n    const hasNext = page < totalPages;\n    const hasPrevious = page > 1;\n\n    return NextResponse.json({\n      success: true,\n      data: formattedPosts,\n      pagination: {\n        page,\n        limit,\n        totalCount: totalCount || 0,\n        totalPages,\n        hasNext,\n        hasPrevious\n      }\n    });\n\n  } catch (error) {\n    console.error('\uAC8C\uC2DC\uBB3C \uB0B4\uC5ED \uC870\uD68C \uC5D0\uB7EC:', error);\n    return NextResponse.json(\n      { success: false, error: '\uC11C\uBC84 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.' },\n      { status: 500 }\n    );\n  }\n} "],
      names: ["GET", "request", "user", "getServerUser", "NextResponse", "json", "success", "error", "status", "searchParams", "URL", "url", "page", "parseInt", "get", "limit", "offset", "supabase", "createServerSupabaseClient", "count", "totalCount", "countError", "from", "select", "head", "eq", "id", "is", "console", "data", "posts", "postsError", "order", "ascending", "range", "postIds", "map", "p", "post_id", "commentCounts", "length", "commentData", "in", "forEach", "comment", "formattedPosts", "post", "boardName", "boards", "name", "boardNameObj", "ko", "en", "title", "content", "viewCount", "view_count", "commentCount", "createdAt", "created_at", "isAnonymous", "is_anonymous", "totalPages", "Math", "ceil", "hasNext", "hasPrevious", "pagination"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "14a646c6476288953605305ff2f9069d5ed188bd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22uvixzpho = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22uvixzpho();
cov_22uvixzpho().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_22uvixzpho().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_22uvixzpho().f[0]++;
    cov_22uvixzpho().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_22uvixzpho().s[3]++, require("next/server"));
const _server1 =
/* istanbul ignore next */
(cov_22uvixzpho().s[4]++, require("../../../../lib/supabase/server"));
async function GET(request) {
  /* istanbul ignore next */
  cov_22uvixzpho().f[1]++;
  cov_22uvixzpho().s[5]++;
  try {
    // 1. 인증된 사용자 확인
    const user =
    /* istanbul ignore next */
    (cov_22uvixzpho().s[6]++, await (0, _server1.getServerUser)());
    /* istanbul ignore next */
    cov_22uvixzpho().s[7]++;
    if (!user) {
      /* istanbul ignore next */
      cov_22uvixzpho().b[0][0]++;
      cov_22uvixzpho().s[8]++;
      return _server.NextResponse.json({
        success: false,
        error: '로그인이 필요합니다.'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_22uvixzpho().b[0][1]++;
    }
    // 2. 쿼리 파라미터 파싱
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_22uvixzpho().s[9]++, new URL(request.url));
    const page =
    /* istanbul ignore next */
    (cov_22uvixzpho().s[10]++, parseInt(
    /* istanbul ignore next */
    (cov_22uvixzpho().b[1][0]++, searchParams.get('page')) ||
    /* istanbul ignore next */
    (cov_22uvixzpho().b[1][1]++, '1')));
    const limit =
    /* istanbul ignore next */
    (cov_22uvixzpho().s[11]++, parseInt(
    /* istanbul ignore next */
    (cov_22uvixzpho().b[2][0]++, searchParams.get('limit')) ||
    /* istanbul ignore next */
    (cov_22uvixzpho().b[2][1]++, '10')));
    const offset =
    /* istanbul ignore next */
    (cov_22uvixzpho().s[12]++, (page - 1) * limit);
    // 3. Supabase 클라이언트 생성
    const supabase =
    /* istanbul ignore next */
    (cov_22uvixzpho().s[13]++, await (0, _server1.createServerSupabaseClient)());
    // 4. 총 게시물 수 조회 (삭제되지 않은 것만)
    const {
      count: totalCount,
      error: countError
    } =
    /* istanbul ignore next */
    (cov_22uvixzpho().s[14]++, await supabase.from('posts').select('*', {
      count: 'exact',
      head: true
    }).eq('user_id', user.id).is('deleted_at', null));
    /* istanbul ignore next */
    cov_22uvixzpho().s[15]++;
    if (countError) {
      /* istanbul ignore next */
      cov_22uvixzpho().b[3][0]++;
      cov_22uvixzpho().s[16]++;
      console.error('게시물 수 조회 에러:', countError);
      /* istanbul ignore next */
      cov_22uvixzpho().s[17]++;
      return _server.NextResponse.json({
        success: false,
        error: '게시물 수 조회에 실패했습니다.'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_22uvixzpho().b[3][1]++;
    }
    // 5. 게시물 목록 조회 (게시판 정보 포함)
    const {
      data: posts,
      error: postsError
    } =
    /* istanbul ignore next */
    (cov_22uvixzpho().s[18]++, await supabase.from('posts').select(`
        post_id,
        title,
        content,
        view_count,
        created_at,
        is_anonymous,
        boards (
          board_id,
          name
        )
      `).eq('user_id', user.id).is('deleted_at', null).order('created_at', {
      ascending: false
    }).range(offset, offset + limit - 1));
    /* istanbul ignore next */
    cov_22uvixzpho().s[19]++;
    if (postsError) {
      /* istanbul ignore next */
      cov_22uvixzpho().b[4][0]++;
      cov_22uvixzpho().s[20]++;
      console.error('게시물 조회 에러:', postsError);
      /* istanbul ignore next */
      cov_22uvixzpho().s[21]++;
      return _server.NextResponse.json({
        success: false,
        error: '게시물 조회에 실패했습니다.'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_22uvixzpho().b[4][1]++;
    }
    // 6. 각 게시물의 댓글 수를 별도 조회
    const postIds =
    /* istanbul ignore next */
    (cov_22uvixzpho().s[22]++,
    /* istanbul ignore next */
    (cov_22uvixzpho().b[5][0]++, posts?.map(p => {
      /* istanbul ignore next */
      cov_22uvixzpho().f[2]++;
      cov_22uvixzpho().s[23]++;
      return p.post_id;
    })) ||
    /* istanbul ignore next */
    (cov_22uvixzpho().b[5][1]++, []));
    let commentCounts =
    /* istanbul ignore next */
    (cov_22uvixzpho().s[24]++, {});
    /* istanbul ignore next */
    cov_22uvixzpho().s[25]++;
    if (postIds.length > 0) {
      /* istanbul ignore next */
      cov_22uvixzpho().b[6][0]++;
      const {
        data: commentData
      } =
      /* istanbul ignore next */
      (cov_22uvixzpho().s[26]++, await supabase.from('comments').select('post_id').in('post_id', postIds).is('deleted_at', null));
      // 댓글 수 계산
      /* istanbul ignore next */
      cov_22uvixzpho().s[27]++;
      commentData?.forEach(comment => {
        /* istanbul ignore next */
        cov_22uvixzpho().f[3]++;
        cov_22uvixzpho().s[28]++;
        commentCounts[comment.post_id] = (
        /* istanbul ignore next */
        (cov_22uvixzpho().b[7][0]++, commentCounts[comment.post_id]) ||
        /* istanbul ignore next */
        (cov_22uvixzpho().b[7][1]++, 0)) + 1;
      });
    } else
    /* istanbul ignore next */
    {
      cov_22uvixzpho().b[6][1]++;
    }
    // 7. 데이터 변환
    const formattedPosts =
    /* istanbul ignore next */
    (cov_22uvixzpho().s[29]++,
    /* istanbul ignore next */
    (cov_22uvixzpho().b[8][0]++, posts?.map(post => {
      /* istanbul ignore next */
      cov_22uvixzpho().f[4]++;
      // 게시판 이름 추출 (다국어 지원)
      let boardName =
      /* istanbul ignore next */
      (cov_22uvixzpho().s[30]++, null);
      /* istanbul ignore next */
      cov_22uvixzpho().s[31]++;
      if (post.boards?.name) {
        /* istanbul ignore next */
        cov_22uvixzpho().b[9][0]++;
        const boardNameObj =
        /* istanbul ignore next */
        (cov_22uvixzpho().s[32]++, post.boards.name);
        /* istanbul ignore next */
        cov_22uvixzpho().s[33]++;
        if (typeof boardNameObj === 'object') {
          /* istanbul ignore next */
          cov_22uvixzpho().b[10][0]++;
          cov_22uvixzpho().s[34]++;
          boardName =
          /* istanbul ignore next */
          (cov_22uvixzpho().b[11][0]++, boardNameObj.ko) ||
          /* istanbul ignore next */
          (cov_22uvixzpho().b[11][1]++, boardNameObj.en) ||
          /* istanbul ignore next */
          (cov_22uvixzpho().b[11][2]++, 'Unknown Board');
        } else {
          /* istanbul ignore next */
          cov_22uvixzpho().b[10][1]++;
          cov_22uvixzpho().s[35]++;
          if (typeof boardNameObj === 'string') {
            /* istanbul ignore next */
            cov_22uvixzpho().b[12][0]++;
            cov_22uvixzpho().s[36]++;
            boardName = boardNameObj;
          } else
          /* istanbul ignore next */
          {
            cov_22uvixzpho().b[12][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_22uvixzpho().b[9][1]++;
      }
      cov_22uvixzpho().s[37]++;
      return {
        id: post.post_id,
        title:
        /* istanbul ignore next */
        (cov_22uvixzpho().b[13][0]++, post.title) ||
        /* istanbul ignore next */
        (cov_22uvixzpho().b[13][1]++, '제목 없음'),
        content:
        /* istanbul ignore next */
        (cov_22uvixzpho().b[14][0]++, post.content) ||
        /* istanbul ignore next */
        (cov_22uvixzpho().b[14][1]++, ''),
        viewCount:
        /* istanbul ignore next */
        (cov_22uvixzpho().b[15][0]++, post.view_count) ||
        /* istanbul ignore next */
        (cov_22uvixzpho().b[15][1]++, 0),
        commentCount:
        /* istanbul ignore next */
        (cov_22uvixzpho().b[16][0]++, commentCounts[post.post_id]) ||
        /* istanbul ignore next */
        (cov_22uvixzpho().b[16][1]++, 0),
        createdAt: post.created_at,
        boardName,
        isAnonymous:
        /* istanbul ignore next */
        (cov_22uvixzpho().b[17][0]++, post.is_anonymous) ||
        /* istanbul ignore next */
        (cov_22uvixzpho().b[17][1]++, false)
      };
    })) ||
    /* istanbul ignore next */
    (cov_22uvixzpho().b[8][1]++, []));
    // 8. 페이지네이션 계산
    const totalPages =
    /* istanbul ignore next */
    (cov_22uvixzpho().s[38]++, Math.ceil((
    /* istanbul ignore next */
    (cov_22uvixzpho().b[18][0]++, totalCount) ||
    /* istanbul ignore next */
    (cov_22uvixzpho().b[18][1]++, 0)) / limit));
    const hasNext =
    /* istanbul ignore next */
    (cov_22uvixzpho().s[39]++, page < totalPages);
    const hasPrevious =
    /* istanbul ignore next */
    (cov_22uvixzpho().s[40]++, page > 1);
    /* istanbul ignore next */
    cov_22uvixzpho().s[41]++;
    return _server.NextResponse.json({
      success: true,
      data: formattedPosts,
      pagination: {
        page,
        limit,
        totalCount:
        /* istanbul ignore next */
        (cov_22uvixzpho().b[19][0]++, totalCount) ||
        /* istanbul ignore next */
        (cov_22uvixzpho().b[19][1]++, 0),
        totalPages,
        hasNext,
        hasPrevious
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_22uvixzpho().s[42]++;
    console.error('게시물 내역 조회 에러:', error);
    /* istanbul ignore next */
    cov_22uvixzpho().s[43]++;
    return _server.NextResponse.json({
      success: false,
      error: '서버 오류가 발생했습니다.'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,