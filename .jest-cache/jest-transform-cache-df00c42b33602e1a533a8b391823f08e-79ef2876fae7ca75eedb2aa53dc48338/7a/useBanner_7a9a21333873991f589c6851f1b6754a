b44cef73973a8700de028ced7d40f91b
'use client';
"use strict";

/* istanbul ignore next */
function cov_1z7hu2nlfb() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/hooks/useBanner.ts";
  var hash = "78ecfb9a6ba467a4ddeb66ecfbaeebd213f08fa3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/hooks/useBanner.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 25
        }
      },
      "3": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "4": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 48
        }
      },
      "5": {
        start: {
          line: 15,
          column: 34
        },
        end: {
          line: 15,
          column: 58
        }
      },
      "6": {
        start: {
          line: 16,
          column: 38
        },
        end: {
          line: 16,
          column: 65
        }
      },
      "7": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 17,
          column: 56
        }
      },
      "8": {
        start: {
          line: 18,
          column: 25
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "10": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "11": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 27
        }
      },
      "12": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 22,
          column: 57
        }
      },
      "13": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 29
        }
      },
      "14": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 48
        }
      },
      "15": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "16": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 27
        }
      },
      "17": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 32
        }
      },
      "18": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 37,
          column: 7
        }
      },
      "19": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 23
        }
      },
      "20": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 43,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "useBanner",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 18
          }
        },
        loc: {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 49
          },
          end: {
            line: 18,
            column: 50
          }
        },
        loc: {
          start: {
            line: 18,
            column: 59
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 26
          },
          end: {
            line: 33,
            column: 27
          }
        },
        loc: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/hooks/useBanner.ts"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Banner } from '@/types/interfaces';\nimport { getBanners } from '@/utils/api/queries';\n\ninterface UseBannerReturn {\n  banners: Banner[];\n  isLoading: boolean;\n  error: string | null;\n  refetch: () => Promise<void>;\n}\n\n/**\n * \uBC30\uB108 \uB370\uC774\uD130\uB97C \uAD00\uB9AC\uD558\uB294 \uB2E8\uC21C\uD654\uB41C \uD6C5\n */\nexport function useBanner(): UseBannerReturn {\n  const [banners, setBanners] = useState<Banner[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchBanners = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const data = await getBanners();\n      setBanners(data);\n    } catch (err) {\n      console.error('\uBC30\uB108 \uB370\uC774\uD130 \uB85C\uB4DC \uC624\uB958:', err);\n      setError('\uBC30\uB108\uB97C \uBD88\uB7EC\uC624\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.');\n      setBanners([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // \uCD08\uAE30 \uB85C\uB4DC\n  useEffect(() => {\n    fetchBanners();\n  }, [fetchBanners]);\n\n  return {\n    banners,\n    isLoading,\n    error,\n    refetch: fetchBanners,\n  };\n} "],
      names: ["useBanner", "banners", "setBanners", "useState", "isLoading", "setIsLoading", "error", "setError", "fetchBanners", "useCallback", "data", "getBanners", "err", "console", "useEffect", "refetch"],
      mappings: "AAAA;;;;;+BAgBgBA;;;eAAAA;;;uBAdiC;yBAEtB;AAYpB,SAASA;IACd,MAAM,CAACC,SAASC,WAAW,GAAGC,IAAAA,eAAQ,EAAW,EAAE;IACnD,MAAM,CAACC,WAAWC,aAAa,GAAGF,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAgB;IAElD,MAAMK,eAAeC,IAAAA,kBAAW,EAAC;QAC/B,IAAI;YACFJ,aAAa;YACbE,SAAS;YAET,MAAMG,OAAO,MAAMC,IAAAA,mBAAU;YAC7BT,WAAWQ;QACb,EAAE,OAAOE,KAAK;YACZC,QAAQP,KAAK,CAAC,iBAAiBM;YAC/BL,SAAS;YACTL,WAAW,EAAE;QACf,SAAU;YACRG,aAAa;QACf;IACF,GAAG,EAAE;IAEL,QAAQ;IACRS,IAAAA,gBAAS,EAAC;QACRN;IACF,GAAG;QAACA;KAAa;IAEjB,OAAO;QACLP;QACAG;QACAE;QACAS,SAASP;IACX;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "78ecfb9a6ba467a4ddeb66ecfbaeebd213f08fa3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1z7hu2nlfb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1z7hu2nlfb();
cov_1z7hu2nlfb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1z7hu2nlfb().s[1]++;
Object.defineProperty(exports, "useBanner", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1z7hu2nlfb().f[0]++;
    cov_1z7hu2nlfb().s[2]++;
    return useBanner;
  }
});
const _react =
/* istanbul ignore next */
(cov_1z7hu2nlfb().s[3]++, require("react"));
const _queries =
/* istanbul ignore next */
(cov_1z7hu2nlfb().s[4]++, require("../utils/api/queries"));
function useBanner() {
  /* istanbul ignore next */
  cov_1z7hu2nlfb().f[1]++;
  const [banners, setBanners] =
  /* istanbul ignore next */
  (cov_1z7hu2nlfb().s[5]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1z7hu2nlfb().s[6]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1z7hu2nlfb().s[7]++, (0, _react.useState)(null));
  const fetchBanners =
  /* istanbul ignore next */
  (cov_1z7hu2nlfb().s[8]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1z7hu2nlfb().f[2]++;
    cov_1z7hu2nlfb().s[9]++;
    try {
      /* istanbul ignore next */
      cov_1z7hu2nlfb().s[10]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_1z7hu2nlfb().s[11]++;
      setError(null);
      const data =
      /* istanbul ignore next */
      (cov_1z7hu2nlfb().s[12]++, await (0, _queries.getBanners)());
      /* istanbul ignore next */
      cov_1z7hu2nlfb().s[13]++;
      setBanners(data);
    } catch (err) {
      /* istanbul ignore next */
      cov_1z7hu2nlfb().s[14]++;
      console.error('배너 데이터 로드 오류:', err);
      /* istanbul ignore next */
      cov_1z7hu2nlfb().s[15]++;
      setError('배너를 불러오는 중 오류가 발생했습니다.');
      /* istanbul ignore next */
      cov_1z7hu2nlfb().s[16]++;
      setBanners([]);
    } finally {
      /* istanbul ignore next */
      cov_1z7hu2nlfb().s[17]++;
      setIsLoading(false);
    }
  }, []));
  // 초기 로드
  /* istanbul ignore next */
  cov_1z7hu2nlfb().s[18]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1z7hu2nlfb().f[3]++;
    cov_1z7hu2nlfb().s[19]++;
    fetchBanners();
  }, [fetchBanners]);
  /* istanbul ignore next */
  cov_1z7hu2nlfb().s[20]++;
  return {
    banners,
    isLoading,
    error,
    refetch: fetchBanners
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXo3aHUybmxmYiIsImFjdHVhbENvdmVyYWdlIiwicyIsInVzZUJhbm5lciIsImYiLCJiYW5uZXJzIiwic2V0QmFubmVycyIsIl9yZWFjdCIsInVzZVN0YXRlIiwiaXNMb2FkaW5nIiwic2V0SXNMb2FkaW5nIiwiZXJyb3IiLCJzZXRFcnJvciIsImZldGNoQmFubmVycyIsInVzZUNhbGxiYWNrIiwiZGF0YSIsIl9xdWVyaWVzIiwiZ2V0QmFubmVycyIsImVyciIsImNvbnNvbGUiLCJ1c2VFZmZlY3QiLCJyZWZldGNoIl0sInNvdXJjZXMiOlsiL1VzZXJzL2NoZW9saHl1bi9SZXBvc2l0b3JpZXMvcGljbmljLXdlYi9ob29rcy91c2VCYW5uZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEJhbm5lciB9IGZyb20gJ0AvdHlwZXMvaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBnZXRCYW5uZXJzIH0gZnJvbSAnQC91dGlscy9hcGkvcXVlcmllcyc7XG5cbmludGVyZmFjZSBVc2VCYW5uZXJSZXR1cm4ge1xuICBiYW5uZXJzOiBCYW5uZXJbXTtcbiAgaXNMb2FkaW5nOiBib29sZWFuO1xuICBlcnJvcjogc3RyaW5nIHwgbnVsbDtcbiAgcmVmZXRjaDogKCkgPT4gUHJvbWlzZTx2b2lkPjtcbn1cblxuLyoqXG4gKiDrsLDrhIgg642w7J207YSw66W8IOq0gOumrO2VmOuKlCDri6jsiJztmZTrkJwg7ZuFXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VCYW5uZXIoKTogVXNlQmFubmVyUmV0dXJuIHtcbiAgY29uc3QgW2Jhbm5lcnMsIHNldEJhbm5lcnNdID0gdXNlU3RhdGU8QmFubmVyW10+KFtdKTtcbiAgY29uc3QgW2lzTG9hZGluZywgc2V0SXNMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcblxuICBjb25zdCBmZXRjaEJhbm5lcnMgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHNldElzTG9hZGluZyh0cnVlKTtcbiAgICAgIHNldEVycm9yKG51bGwpO1xuXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgZ2V0QmFubmVycygpO1xuICAgICAgc2V0QmFubmVycyhkYXRhKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+uwsOuEiCDrjbDsnbTthLAg66Gc65OcIOyYpOulmDonLCBlcnIpO1xuICAgICAgc2V0RXJyb3IoJ+uwsOuEiOulvCDrtojrn6zsmKTripQg7KSRIOyYpOulmOqwgCDrsJzsg53tlojsirXri4jri6QuJyk7XG4gICAgICBzZXRCYW5uZXJzKFtdKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICB9XG4gIH0sIFtdKTtcblxuICAvLyDstIjquLAg66Gc65OcXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgZmV0Y2hCYW5uZXJzKCk7XG4gIH0sIFtmZXRjaEJhbm5lcnNdKTtcblxuICByZXR1cm4ge1xuICAgIGJhbm5lcnMsXG4gICAgaXNMb2FkaW5nLFxuICAgIGVycm9yLFxuICAgIHJlZmV0Y2g6IGZldGNoQmFubmVycyxcbiAgfTtcbn0gIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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