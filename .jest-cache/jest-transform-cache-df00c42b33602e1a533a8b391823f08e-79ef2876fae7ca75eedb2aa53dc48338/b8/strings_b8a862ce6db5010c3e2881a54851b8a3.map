{"version":3,"names":["getLocalizedJson","cov_1qyzkum5oa","f","s","getLocalizedString","hasValidLocalizedString","hasValidTranslation","value","b","trim","Object","values","some","v","currentLang","toString","window","store","_languageStore","useLanguageStore","getState","currentLanguage","error","console","lang","keys"],"sources":["/Users/cheolhyun/Repositories/picnic-web/utils/api/strings.ts"],"sourcesContent":["import {useLanguageStore} from \"@/stores/languageStore\";\n\n/**\n * 번역 객체에서 유효한 값이 있는지 확인하는 헬퍼 함수\n */\nconst hasValidTranslation = (value: { [key: string]: string } | string | null | any): boolean => {\n  if (!value) return false;\n  if (typeof value === \"string\") return value.trim() !== '';\n  if (typeof value === \"number\") return true;\n  \n  // 객체인 경우, 모든 값이 빈 문자열인지 확인\n  if (typeof value === \"object\") {\n    return Object.values(value).some(v => \n      typeof v === 'string' && v.trim() !== ''\n    );\n  }\n  \n  return false;\n};\n\n/**\n * 번역 객체가 유효한 번역을 가지고 있는지 확인하는 공개 함수\n */\nexport const hasValidLocalizedString = (\n  value: { [key: string]: string } | string | null | any\n): boolean => {\n  return hasValidTranslation(value);\n};\n\nexport const getLocalizedString = (\n    value: { [key: string]: string } | string | null | any,\n    currentLang?: string,\n  ): string => {\n    if (!value) return '';\n    if (typeof value === \"string\") return value.trim();\n    if (typeof value === \"number\") return value.toString();\n\n    // 먼저 유효한 번역이 있는지 확인\n    if (!hasValidTranslation(value)) {\n      return '';\n    }\n\n    // currentLang이 제공되지 않은 경우에만 store에서 가져옴\n    if (!currentLang) {\n      try {\n        // 서버 사이드에서는 기본값 사용\n        if (typeof window === \"undefined\") {\n          currentLang = \"en\";\n        } else {\n          const store = useLanguageStore.getState();\n          currentLang = store.currentLanguage || \"en\";\n        }\n      } catch (error) {\n        console.error('Error getting current language:', error);\n        currentLang = \"en\";\n      }\n    }\n\n    // 현재 언어의 번역이 있고 빈 문자열이 아니면 반환\n    if (value[currentLang] && value[currentLang].trim() !== '') {\n      return value[currentLang].trim();\n    }\n\n    // 현재 언어의 번역이 없거나 빈 문자열이면 영어로 폴백 (빈 문자열이 아닌 경우만)\n    if (value[\"en\"] && value[\"en\"].trim() !== '') {\n      return value[\"en\"].trim();\n    }\n\n    // 영어 번역도 없거나 빈 문자열이면 첫 번째 유효한 번역 찾기\n    for (const lang of Object.keys(value)) {\n      if (value[lang] && value[lang].trim() !== '') {\n        return value[lang].trim();\n      }\n    }\n\n    return '';\n  };\n\nexport const getLocalizedJson = (\n    value: { [key: string]: any } | null | any,\n    currentLang?: string,\n  ): any => {\n    if (!value) return null;\n    if (typeof value === \"string\") return value.trim() !== '' ? value.trim() : null;\n    if (typeof value === \"number\") return value;\n\n    // 먼저 유효한 번역이 있는지 확인\n    if (!hasValidTranslation(value)) {\n      return null;\n    }\n\n    // currentLang이 제공되지 않은 경우에만 store에서 가져옴\n    if (!currentLang) {\n      try {\n        // 서버 사이드에서는 기본값 사용\n        if (typeof window === \"undefined\") {\n          currentLang = \"en\";\n        } else {\n          const store = useLanguageStore.getState();\n          currentLang = store.currentLanguage || \"en\";\n        }\n      } catch (error) {\n        console.error('Error getting current language:', error);\n        currentLang = \"en\";\n      }\n    }\n\n    // 현재 언어의 번역이 있고 빈 문자열이 아니면 반환\n    if (value[currentLang] && value[currentLang].trim() !== '') {\n      return value[currentLang];\n    }\n\n    // 현재 언어의 번역이 없거나 빈 문자열이면 영어로 폴백\n    if (value[\"en\"] && value[\"en\"].trim() !== '') {\n      return value[\"en\"];\n    }\n\n    // 영어 번역도 없거나 빈 문자열이면 첫 번째 유효한 번역 찾기\n    for (const lang of Object.keys(value)) {\n      if (value[lang] && value[lang].trim() !== '') {\n        return value[lang];\n      }\n    }\n\n    return null;\n  };\n"],"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","ignoreList":[]}