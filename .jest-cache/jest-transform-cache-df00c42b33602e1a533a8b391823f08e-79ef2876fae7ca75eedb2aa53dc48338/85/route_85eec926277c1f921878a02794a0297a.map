{"version":3,"names":["cov_bbo7cc4ma","actualCoverage","s","GET","f","console","log","supabase","_server1","createServerSupabaseClient","data","allNotices","error","allError","from","select","hasData","count","b","length","hasError","message","publishedNotices","publishedError","eq","firstNotice","id","title","status","is_pinned","created_at","_server","NextResponse","json","success","debug","allNoticesCount","publishedNoticesCount","errors","Error"],"sources":["/Users/cheolhyun/Repositories/picnic-web/app/api/test-notices/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { createServerSupabaseClient } from '@/lib/supabase/server';\n\nexport async function GET() {\n  try {\n    console.log('üîç [Test Notices API] ÏãúÏûë');\n    \n    const supabase = await createServerSupabaseClient();\n    console.log('üîç [Test Notices API] Supabase ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏÉùÏÑ± ÏôÑÎ£å');\n\n    // 1. Ï†ÑÏ≤¥ notices ÌÖåÏù¥Î∏î Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏\n    const { data: allNotices, error: allError } = await supabase\n      .from('notices')\n      .select('*');\n\n    console.log('üîç [Test Notices API] Ï†ÑÏ≤¥ Í≥µÏßÄÏÇ¨Ìï≠ Ï°∞Ìöå Í≤∞Í≥º:', {\n      hasData: !!allNotices,\n      count: allNotices?.length || 0,\n      hasError: !!allError,\n      error: allError?.message || null\n    });\n\n    // 2. ÏÉÅÌÉúÎ≥Ñ Í≥µÏßÄÏÇ¨Ìï≠ ÌôïÏù∏\n    const { data: publishedNotices, error: publishedError } = await supabase\n      .from('notices')\n      .select('*')\n      .eq('status', 'published');\n\n    console.log('üîç [Test Notices API] Î∞úÌñâÎêú Í≥µÏßÄÏÇ¨Ìï≠ Ï°∞Ìöå Í≤∞Í≥º:', {\n      hasData: !!publishedNotices,\n      count: publishedNotices?.length || 0,\n      hasError: !!publishedError,\n      error: publishedError?.message || null\n    });\n\n    // 3. Ï≤´ Î≤àÏß∏ Í≥µÏßÄÏÇ¨Ìï≠ ÏÉÅÏÑ∏ Ï†ïÎ≥¥ ÌôïÏù∏\n    if (allNotices && allNotices.length > 0) {\n      const firstNotice = allNotices[0];\n      console.log('üîç [Test Notices API] Ï≤´ Î≤àÏß∏ Í≥µÏßÄÏÇ¨Ìï≠ ÏÉÅÏÑ∏:', {\n        id: firstNotice.id,\n        title: firstNotice.title,\n        status: firstNotice.status,\n        is_pinned: firstNotice.is_pinned,\n        created_at: firstNotice.created_at\n      });\n    }\n\n    return NextResponse.json({\n      success: true,\n      debug: {\n        allNoticesCount: allNotices?.length || 0,\n        publishedNoticesCount: publishedNotices?.length || 0,\n        allNotices: allNotices || [],\n        publishedNotices: publishedNotices || [],\n        errors: {\n          allError: allError?.message || null,\n          publishedError: publishedError?.message || null\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('üö® [Test Notices API] ÏóêÎü¨:', error);\n    return NextResponse.json({\n      success: false,\n      error: error instanceof Error ? error.message : 'Ïïå Ïàò ÏóÜÎäî Ïò§Î•ò'\n    }, { status: 500 });\n  }\n} "],"mappingsaAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;+BAJkB;;;;;;WAAAC,GAAA;;;;;iCAHoB;;;iCACC;AAEpC,eAAeA,IAAA;EAAA;EAAAH,aAAA,GAAAI,CAAA;EAAAJ,aAAA,GAAAE,CAAA;EACpB,IAAI;IAAA;IAAAF,aAAA,GAAAE,CAAA;IACFG,OAAA,CAAQC,GAAG,CAAC;IAEZ,MAAMC,QAAA;IAAA;IAAA,CAAAP,aAAA,GAAAE,CAAA,OAAW,MAAM,IAAAM,QAAA,CAAAC,0BAA0B;IAAA;IAAAT,aAAA,GAAAE,CAAA;IACjDG,OAAA,CAAQC,GAAG,CAAC;IAEZ;IACA,MAAM;MAAEI,IAAA,EAAMC,UAAU;MAAEC,KAAA,EAAOC;IAAQ,CAAE;IAAA;IAAA,CAAAb,aAAA,GAAAE,CAAA,OAAG,MAAMK,QAAA,CACjDO,IAAI,CAAC,WACLC,MAAM,CAAC;IAAA;IAAAf,aAAA,GAAAE,CAAA;IAEVG,OAAA,CAAQC,GAAG,CAAC,wCAAwC;MAClDU,OAAA,EAAS,CAAC,CAACL,UAAA;MACXM,KAAA;MAAO;MAAA,CAAAjB,aAAA,GAAAkB,CAAA,UAAAP,UAAA,EAAYQ,MAAA;MAAA;MAAA,CAAAnB,aAAA,GAAAkB,CAAA,UAAU;MAC7BE,QAAA,EAAU,CAAC,CAACP,QAAA;MACZD,KAAA;MAAO;MAAA,CAAAZ,aAAA,GAAAkB,CAAA,UAAAL,QAAA,EAAUQ,OAAA;MAAA;MAAA,CAAArB,aAAA,GAAAkB,CAAA,UAAW;IAC9B;IAEA;IACA,MAAM;MAAER,IAAA,EAAMY,gBAAgB;MAAEV,KAAA,EAAOW;IAAc,CAAE;IAAA;IAAA,CAAAvB,aAAA,GAAAE,CAAA,QAAG,MAAMK,QAAA,CAC7DO,IAAI,CAAC,WACLC,MAAM,CAAC,KACPS,EAAE,CAAC,UAAU;IAAA;IAAAxB,aAAA,GAAAE,CAAA;IAEhBG,OAAA,CAAQC,GAAG,CAAC,yCAAyC;MACnDU,OAAA,EAAS,CAAC,CAACM,gBAAA;MACXL,KAAA;MAAO;MAAA,CAAAjB,aAAA,GAAAkB,CAAA,UAAAI,gBAAA,EAAkBH,MAAA;MAAA;MAAA,CAAAnB,aAAA,GAAAkB,CAAA,UAAU;MACnCE,QAAA,EAAU,CAAC,CAACG,cAAA;MACZX,KAAA;MAAO;MAAA,CAAAZ,aAAA,GAAAkB,CAAA,UAAAK,cAAA,EAAgBF,OAAA;MAAA;MAAA,CAAArB,aAAA,GAAAkB,CAAA,UAAW;IACpC;IAEA;IAAA;IAAAlB,aAAA,GAAAE,CAAA;IACA;IAAI;IAAA,CAAAF,aAAA,GAAAkB,CAAA,UAAAP,UAAA;IAAA;IAAA,CAAAX,aAAA,GAAAkB,CAAA,UAAcP,UAAA,CAAWQ,MAAM,GAAG,IAAG;MAAA;MAAAnB,aAAA,GAAAkB,CAAA;MACvC,MAAMO,WAAA;MAAA;MAAA,CAAAzB,aAAA,GAAAE,CAAA,QAAcS,UAAU,CAAC,EAAE;MAAA;MAAAX,aAAA,GAAAE,CAAA;MACjCG,OAAA,CAAQC,GAAG,CAAC,uCAAuC;QACjDoB,EAAA,EAAID,WAAA,CAAYC,EAAE;QAClBC,KAAA,EAAOF,WAAA,CAAYE,KAAK;QACxBC,MAAA,EAAQH,WAAA,CAAYG,MAAM;QAC1BC,SAAA,EAAWJ,WAAA,CAAYI,SAAS;QAChCC,UAAA,EAAYL,WAAA,CAAYK;MAC1B;IACF;IAAA;IAAA;MAAA9B,aAAA,GAAAkB,CAAA;IAAA;IAAAlB,aAAA,GAAAE,CAAA;IAEA,OAAO6B,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACvBC,OAAA,EAAS;MACTC,KAAA,EAAO;QACLC,eAAA;QAAiB;QAAA,CAAApC,aAAA,GAAAkB,CAAA,UAAAP,UAAA,EAAYQ,MAAA;QAAA;QAAA,CAAAnB,aAAA,GAAAkB,CAAA,UAAU;QACvCmB,qBAAA;QAAuB;QAAA,CAAArC,aAAA,GAAAkB,CAAA,UAAAI,gBAAA,EAAkBH,MAAA;QAAA;QAAA,CAAAnB,aAAA,GAAAkB,CAAA,UAAU;QACnDP,UAAA;QAAY;QAAA,CAAAX,aAAA,GAAAkB,CAAA,UAAAP,UAAA;QAAA;QAAA,CAAAX,aAAA,GAAAkB,CAAA,UAAc,EAAE;QAC5BI,gBAAA;QAAkB;QAAA,CAAAtB,aAAA,GAAAkB,CAAA,UAAAI,gBAAA;QAAA;QAAA,CAAAtB,aAAA,GAAAkB,CAAA,UAAoB,EAAE;QACxCoB,MAAA,EAAQ;UACNzB,QAAA;UAAU;UAAA,CAAAb,aAAA,GAAAkB,CAAA,WAAAL,QAAA,EAAUQ,OAAA;UAAA;UAAA,CAAArB,aAAA,GAAAkB,CAAA,WAAW;UAC/BK,cAAA;UAAgB;UAAA,CAAAvB,aAAA,GAAAkB,CAAA,WAAAK,cAAA,EAAgBF,OAAA;UAAA;UAAA,CAAArB,aAAA,GAAAkB,CAAA,WAAW;QAC7C;MACF;IACF;EAEF,EAAE,OAAON,KAAA,EAAO;IAAA;IAAAZ,aAAA,GAAAE,CAAA;IACdG,OAAA,CAAQO,KAAK,CAAC,6BAA6BA,KAAA;IAAA;IAAAZ,aAAA,GAAAE,CAAA;IAC3C,OAAO6B,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACvBC,OAAA,EAAS;MACTtB,KAAA,EAAOA,KAAA,YAAiB2B,KAAA;MAAA;MAAA,CAAAvC,aAAA,GAAAkB,CAAA,WAAQN,KAAA,CAAMS,OAAO;MAAA;MAAA,CAAArB,aAAA,GAAAkB,CAAA,WAAG;IAClD,GAAG;MAAEU,MAAA,EAAQ;IAAI;EACnB;AACF","ignoreList":[]}