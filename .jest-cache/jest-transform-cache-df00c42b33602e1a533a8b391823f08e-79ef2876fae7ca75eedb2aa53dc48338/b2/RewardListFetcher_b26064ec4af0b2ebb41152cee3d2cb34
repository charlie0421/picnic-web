da959afb07b7fa5e891cfbe49517080b
"use strict";

/* istanbul ignore next */
function cov_1gs68tmjcu() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/components/server/reward/RewardListFetcher.tsx";
  var hash = "5aa8e6ba38935cc8a8578e2413326d235621e15a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/components/server/reward/RewardListFetcher.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 33
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 30
        },
        end: {
          line: 12,
          column: 78
        }
      },
      "5": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 54
        }
      },
      "6": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "7": {
        start: {
          line: 15,
          column: 25
        },
        end: {
          line: 15,
          column: 71
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "9": {
        start: {
          line: 19,
          column: 25
        },
        end: {
          line: 19,
          column: 72
        }
      },
      "10": {
        start: {
          line: 20,
          column: 41
        },
        end: {
          line: 22,
          column: 10
        }
      },
      "11": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "12": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 61
        }
      },
      "13": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 22
        }
      },
      "14": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 29
        }
      },
      "15": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 57
        }
      },
      "16": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 18
        }
      },
      "17": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 40,
          column: 12
        }
      },
      "18": {
        start: {
          line: 35,
          column: 36
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "19": {
        start: {
          line: 43,
          column: 22
        },
        end: {
          line: 43,
          column: 42
        }
      },
      "20": {
        start: {
          line: 44,
          column: 26
        },
        end: {
          line: 44,
          column: 56
        }
      },
      "21": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 51,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "fetchRewards",
        decl: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 27
          }
        },
        loc: {
          start: {
            line: 17,
            column: 30
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "transformRewardData",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 28
          }
        },
        loc: {
          start: {
            line: 34,
            column: 40
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 26
          }
        },
        loc: {
          start: {
            line: 35,
            column: 36
          },
          end: {
            line: 40,
            column: 9
          }
        },
        line: 35
      },
      "4": {
        name: "RewardListFetcher",
        decl: {
          start: {
            line: 42,
            column: 15
          },
          end: {
            line: 42,
            column: 32
          }
        },
        loc: {
          start: {
            line: 42,
            column: 78
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 42
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 22
          }
        }, {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 27,
            column: 28
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 19
          },
          end: {
            line: 37,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 19
          },
          end: {
            line: 37,
            column: 65
          }
        }, {
          start: {
            line: 37,
            column: 69
          },
          end: {
            line: 37,
            column: 74
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 38,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 42
          },
          end: {
            line: 38,
            column: 86
          }
        }, {
          start: {
            line: 38,
            column: 89
          },
          end: {
            line: 38,
            column: 93
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 23
          },
          end: {
            line: 39,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 23
          },
          end: {
            line: 39,
            column: 40
          }
        }, {
          start: {
            line: 39,
            column: 44
          },
          end: {
            line: 39,
            column: 68
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 42,
            column: 74
          },
          end: {
            line: 42,
            column: 76
          }
        }],
        line: 42
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 46
          },
          end: {
            line: 42,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 42,
            column: 64
          },
          end: {
            line: 42,
            column: 69
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/components/server/reward/RewardListFetcher.tsx"],
      sourcesContent: ["import { createClient } from \"@/utils/supabase-server-client\";\nimport { Reward as DBReward } from \"@/types/interfaces\";\nimport { getLocalizedString } from \"@/utils/api/strings\";\nimport { getCdnImageUrl } from \"@/utils/api/image\";\nimport { RewardListPresenter } from \"@/components/client/reward/RewardPresenter\";\n\n// \uD65C\uC131 \uB9AC\uC6CC\uB4DC \uB370\uC774\uD130\uB97C \uC11C\uBC84\uC5D0\uC11C \uD398\uCE6D\nasync function fetchRewards(): Promise<DBReward[]> {\n  try {\n    const supabase = await createClient();\n    const { data: rewards, error } = await supabase\n      .from('reward')\n      .select('*')\n      .order('created_at', { ascending: false });\n\n    if (error) {\n      console.error('Failed to fetch rewards:', error);\n      return [];\n    }\n\n    return rewards || [];\n  } catch (error) {\n    console.error('Failed to fetch rewards:', error);\n    return [];\n  }\n}\n\n// DB Reward \uD0C0\uC785\uC744 Client Reward \uD0C0\uC785\uC73C\uB85C \uBCC0\uD658\nfunction transformRewardData(dbRewards: DBReward[]): DBReward[] {\n  return dbRewards.map(reward => ({\n    ...reward,\n    title: getLocalizedString(reward.title) || '\uB9AC\uC6CC\uB4DC',\n    thumbnail: reward.thumbnail ? getCdnImageUrl(reward.thumbnail) : null,\n    createdAt: reward.created_at || new Date().toISOString()\n  }));\n}\n\nexport interface RewardListFetcherProps {\n  className?: string;\n  showViewAllLink?: boolean;\n}\n\n/**\n * \uC11C\uBC84 \uCEF4\uD3EC\uB10C\uD2B8: \uB9AC\uC6CC\uB4DC \uB370\uC774\uD130\uB97C \uC11C\uBC84\uC5D0\uC11C \uD398\uCE6D\uD558\uC5EC \uD074\uB77C\uC774\uC5B8\uD2B8 \uCEF4\uD3EC\uB10C\uD2B8\uC5D0 \uC804\uB2EC\n * \n * \uC7A5\uC810:\n * - \uCD08\uAE30 \uD398\uC774\uC9C0 \uB85C\uB4DC \uC2DC \uBE60\uB978 \uB80C\uB354\uB9C1 (\uC11C\uBC84\uC5D0\uC11C \uB370\uC774\uD130 \uD3EC\uD568)\n * - SEO \uCD5C\uC801\uD654 (\uD06C\uB864\uB7EC\uAC00 \uB9AC\uC6CC\uB4DC \uB0B4\uC6A9 \uC778\uB371\uC2F1 \uAC00\uB2A5)\n * - \uD074\uB77C\uC774\uC5B8\uD2B8 \uBC88\uB4E4 \uD06C\uAE30 \uAC10\uC18C\n * \n * \uC0AC\uC6A9\uBC95:\n * ```tsx\n * <RewardListFetcher className=\"my-4\" showViewAllLink={true} />\n * ```\n */\nexport async function RewardListFetcher({ \n  className, \n  showViewAllLink = false \n}: RewardListFetcherProps = {}) {\n  const dbRewards = await fetchRewards();\n  const clientRewards = transformRewardData(dbRewards);\n  \n  return (\n    <div className={className}>\n      <RewardListPresenter\n        rewards={clientRewards} \n        showViewAllLink={showViewAllLink}\n      />\n    </div>\n  );\n} "],
      names: ["RewardListFetcher", "fetchRewards", "supabase", "createClient", "data", "rewards", "error", "from", "select", "order", "ascending", "console", "transformRewardData", "dbRewards", "map", "reward", "title", "getLocalizedString", "thumbnail", "getCdnImageUrl", "createdAt", "created_at", "Date", "toISOString", "className", "showViewAllLink", "clientRewards", "div", "RewardListPresenter"],
      mappings: ";;;;+BAuDsBA;;;eAAAA;;;;sCAvDO;yBAEM;uBACJ;iCACK;AAEpC,sBAAsB;AACtB,eAAeC;IACb,IAAI;QACF,MAAMC,WAAW,MAAMC,IAAAA,kCAAY;QACnC,MAAM,EAAEC,MAAMC,OAAO,EAAEC,KAAK,EAAE,GAAG,MAAMJ,SACpCK,IAAI,CAAC,UACLC,MAAM,CAAC,KACPC,KAAK,CAAC,cAAc;YAAEC,WAAW;QAAM;QAE1C,IAAIJ,OAAO;YACTK,QAAQL,KAAK,CAAC,4BAA4BA;YAC1C,OAAO,EAAE;QACX;QAEA,OAAOD,WAAW,EAAE;IACtB,EAAE,OAAOC,OAAO;QACdK,QAAQL,KAAK,CAAC,4BAA4BA;QAC1C,OAAO,EAAE;IACX;AACF;AAEA,sCAAsC;AACtC,SAASM,oBAAoBC,SAAqB;IAChD,OAAOA,UAAUC,GAAG,CAACC,CAAAA,SAAW,CAAA;YAC9B,GAAGA,MAAM;YACTC,OAAOC,IAAAA,2BAAkB,EAACF,OAAOC,KAAK,KAAK;YAC3CE,WAAWH,OAAOG,SAAS,GAAGC,IAAAA,qBAAc,EAACJ,OAAOG,SAAS,IAAI;YACjEE,WAAWL,OAAOM,UAAU,IAAI,IAAIC,OAAOC,WAAW;QACxD,CAAA;AACF;AAoBO,eAAevB,kBAAkB,EACtCwB,SAAS,EACTC,kBAAkB,KAAK,EACA,GAAG,CAAC,CAAC;IAC5B,MAAMZ,YAAY,MAAMZ;IACxB,MAAMyB,gBAAgBd,oBAAoBC;IAE1C,qBACE,qBAACc;QAAIH,WAAWA;kBACd,cAAA,qBAACI,oCAAmB;YAClBvB,SAASqB;YACTD,iBAAiBA;;;AAIzB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5aa8e6ba38935cc8a8578e2413326d235621e15a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1gs68tmjcu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1gs68tmjcu();
cov_1gs68tmjcu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1gs68tmjcu().s[1]++;
Object.defineProperty(exports, "RewardListFetcher", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1gs68tmjcu().f[0]++;
    cov_1gs68tmjcu().s[2]++;
    return RewardListFetcher;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1gs68tmjcu().s[3]++, require("react/jsx-runtime"));
const _supabaseserverclient =
/* istanbul ignore next */
(cov_1gs68tmjcu().s[4]++, require("../../../utils/supabase-server-client"));
const _strings =
/* istanbul ignore next */
(cov_1gs68tmjcu().s[5]++, require("../../../utils/api/strings"));
const _image =
/* istanbul ignore next */
(cov_1gs68tmjcu().s[6]++, require("../../../utils/api/image"));
const _RewardPresenter =
/* istanbul ignore next */
(cov_1gs68tmjcu().s[7]++, require("../../client/reward/RewardPresenter"));
// 활성 리워드 데이터를 서버에서 페칭
async function fetchRewards() {
  /* istanbul ignore next */
  cov_1gs68tmjcu().f[1]++;
  cov_1gs68tmjcu().s[8]++;
  try {
    const supabase =
    /* istanbul ignore next */
    (cov_1gs68tmjcu().s[9]++, await (0, _supabaseserverclient.createClient)());
    const {
      data: rewards,
      error
    } =
    /* istanbul ignore next */
    (cov_1gs68tmjcu().s[10]++, await supabase.from('reward').select('*').order('created_at', {
      ascending: false
    }));
    /* istanbul ignore next */
    cov_1gs68tmjcu().s[11]++;
    if (error) {
      /* istanbul ignore next */
      cov_1gs68tmjcu().b[0][0]++;
      cov_1gs68tmjcu().s[12]++;
      console.error('Failed to fetch rewards:', error);
      /* istanbul ignore next */
      cov_1gs68tmjcu().s[13]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_1gs68tmjcu().b[0][1]++;
    }
    cov_1gs68tmjcu().s[14]++;
    return /* istanbul ignore next */(cov_1gs68tmjcu().b[1][0]++, rewards) ||
    /* istanbul ignore next */
    (cov_1gs68tmjcu().b[1][1]++, []);
  } catch (error) {
    /* istanbul ignore next */
    cov_1gs68tmjcu().s[15]++;
    console.error('Failed to fetch rewards:', error);
    /* istanbul ignore next */
    cov_1gs68tmjcu().s[16]++;
    return [];
  }
}
// DB Reward 타입을 Client Reward 타입으로 변환
function transformRewardData(dbRewards) {
  /* istanbul ignore next */
  cov_1gs68tmjcu().f[2]++;
  cov_1gs68tmjcu().s[17]++;
  return dbRewards.map(reward => {
    /* istanbul ignore next */
    cov_1gs68tmjcu().f[3]++;
    cov_1gs68tmjcu().s[18]++;
    return {
      ...reward,
      title:
      /* istanbul ignore next */
      (cov_1gs68tmjcu().b[2][0]++, (0, _strings.getLocalizedString)(reward.title)) ||
      /* istanbul ignore next */
      (cov_1gs68tmjcu().b[2][1]++, '리워드'),
      thumbnail: reward.thumbnail ?
      /* istanbul ignore next */
      (cov_1gs68tmjcu().b[3][0]++, (0, _image.getCdnImageUrl)(reward.thumbnail)) :
      /* istanbul ignore next */
      (cov_1gs68tmjcu().b[3][1]++, null),
      createdAt:
      /* istanbul ignore next */
      (cov_1gs68tmjcu().b[4][0]++, reward.created_at) ||
      /* istanbul ignore next */
      (cov_1gs68tmjcu().b[4][1]++, new Date().toISOString())
    };
  });
}
async function RewardListFetcher({
  className,
  showViewAllLink =
  /* istanbul ignore next */
  (cov_1gs68tmjcu().b[6][0]++, false)
} =
/* istanbul ignore next */
(cov_1gs68tmjcu().b[5][0]++, {})) {
  /* istanbul ignore next */
  cov_1gs68tmjcu().f[4]++;
  const dbRewards =
  /* istanbul ignore next */
  (cov_1gs68tmjcu().s[19]++, await fetchRewards());
  const clientRewards =
  /* istanbul ignore next */
  (cov_1gs68tmjcu().s[20]++, transformRewardData(dbRewards));
  /* istanbul ignore next */
  cov_1gs68tmjcu().s[21]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: className,
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_RewardPresenter.RewardListPresenter, {
      rewards: clientRewards,
      showViewAllLink: showViewAllLink
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWdzNjh0bWpjdSIsImFjdHVhbENvdmVyYWdlIiwicyIsIlJld2FyZExpc3RGZXRjaGVyIiwiZmV0Y2hSZXdhcmRzIiwiZiIsInN1cGFiYXNlIiwiX3N1cGFiYXNlc2VydmVyY2xpZW50IiwiY3JlYXRlQ2xpZW50IiwiZGF0YSIsInJld2FyZHMiLCJlcnJvciIsImZyb20iLCJzZWxlY3QiLCJvcmRlciIsImFzY2VuZGluZyIsImIiLCJjb25zb2xlIiwidHJhbnNmb3JtUmV3YXJkRGF0YSIsImRiUmV3YXJkcyIsIm1hcCIsInJld2FyZCIsInRpdGxlIiwiX3N0cmluZ3MiLCJnZXRMb2NhbGl6ZWRTdHJpbmciLCJ0aHVtYm5haWwiLCJfaW1hZ2UiLCJnZXRDZG5JbWFnZVVybCIsImNyZWF0ZWRBdCIsImNyZWF0ZWRfYXQiLCJEYXRlIiwidG9JU09TdHJpbmciLCJjbGFzc05hbWUiLCJzaG93Vmlld0FsbExpbmsiLCJjbGllbnRSZXdhcmRzIiwiX2pzeHJ1bnRpbWUiLCJqc3giLCJfUmV3YXJkUHJlc2VudGVyIiwiUmV3YXJkTGlzdFByZXNlbnRlciJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGVvbGh5dW4vUmVwb3NpdG9yaWVzL3BpY25pYy13ZWIvY29tcG9uZW50cy9zZXJ2ZXIvcmV3YXJkL1Jld2FyZExpc3RGZXRjaGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tIFwiQC91dGlscy9zdXBhYmFzZS1zZXJ2ZXItY2xpZW50XCI7XG5pbXBvcnQgeyBSZXdhcmQgYXMgREJSZXdhcmQgfSBmcm9tIFwiQC90eXBlcy9pbnRlcmZhY2VzXCI7XG5pbXBvcnQgeyBnZXRMb2NhbGl6ZWRTdHJpbmcgfSBmcm9tIFwiQC91dGlscy9hcGkvc3RyaW5nc1wiO1xuaW1wb3J0IHsgZ2V0Q2RuSW1hZ2VVcmwgfSBmcm9tIFwiQC91dGlscy9hcGkvaW1hZ2VcIjtcbmltcG9ydCB7IFJld2FyZExpc3RQcmVzZW50ZXIgfSBmcm9tIFwiQC9jb21wb25lbnRzL2NsaWVudC9yZXdhcmQvUmV3YXJkUHJlc2VudGVyXCI7XG5cbi8vIO2ZnOyEsSDrpqzsm4zrk5wg642w7J207YSw66W8IOyEnOuyhOyXkOyEnCDtjpjsua1cbmFzeW5jIGZ1bmN0aW9uIGZldGNoUmV3YXJkcygpOiBQcm9taXNlPERCUmV3YXJkW10+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBzdXBhYmFzZSA9IGF3YWl0IGNyZWF0ZUNsaWVudCgpO1xuICAgIGNvbnN0IHsgZGF0YTogcmV3YXJkcywgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbSgncmV3YXJkJylcbiAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgLm9yZGVyKCdjcmVhdGVkX2F0JywgeyBhc2NlbmRpbmc6IGZhbHNlIH0pO1xuXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggcmV3YXJkczonLCBlcnJvcik7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuXG4gICAgcmV0dXJuIHJld2FyZHMgfHwgW107XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGZldGNoIHJld2FyZHM6JywgZXJyb3IpO1xuICAgIHJldHVybiBbXTtcbiAgfVxufVxuXG4vLyBEQiBSZXdhcmQg7YOA7J6F7J2EIENsaWVudCBSZXdhcmQg7YOA7J6F7Jy866GcIOuzgO2ZmFxuZnVuY3Rpb24gdHJhbnNmb3JtUmV3YXJkRGF0YShkYlJld2FyZHM6IERCUmV3YXJkW10pOiBEQlJld2FyZFtdIHtcbiAgcmV0dXJuIGRiUmV3YXJkcy5tYXAocmV3YXJkID0+ICh7XG4gICAgLi4ucmV3YXJkLFxuICAgIHRpdGxlOiBnZXRMb2NhbGl6ZWRTdHJpbmcocmV3YXJkLnRpdGxlKSB8fCAn66as7JuM65OcJyxcbiAgICB0aHVtYm5haWw6IHJld2FyZC50aHVtYm5haWwgPyBnZXRDZG5JbWFnZVVybChyZXdhcmQudGh1bWJuYWlsKSA6IG51bGwsXG4gICAgY3JlYXRlZEF0OiByZXdhcmQuY3JlYXRlZF9hdCB8fCBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgfSkpO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJld2FyZExpc3RGZXRjaGVyUHJvcHMge1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIHNob3dWaWV3QWxsTGluaz86IGJvb2xlYW47XG59XG5cbi8qKlxuICog7ISc67KEIOy7tO2PrOuEjO2KuDog66as7JuM65OcIOuNsOydtO2EsOulvCDshJzrsoTsl5DshJwg7Y6Y7Lmt7ZWY7JesIO2BtOudvOydtOyWuO2KuCDsu7Ttj6zrhIztirjsl5Ag7KCE64usXG4gKiBcbiAqIOyepeygkDpcbiAqIC0g7LSI6riwIO2OmOydtOyngCDroZzrk5wg7IucIOu5oOuluCDroIzrjZTrp4EgKOyEnOuyhOyXkOyEnCDrjbDsnbTthLAg7Y+s7ZWoKVxuICogLSBTRU8g7LWc7KCB7ZmUICjtgazroaTrn6zqsIAg66as7JuM65OcIOuCtOyaqSDsnbjrjbHsi7Eg6rCA64qlKVxuICogLSDtgbTrnbzsnbTslrjtirgg67KI65OkIO2BrOq4sCDqsJDshoxcbiAqIFxuICog7IKs7Jqp67KVOlxuICogYGBgdHN4XG4gKiA8UmV3YXJkTGlzdEZldGNoZXIgY2xhc3NOYW1lPVwibXktNFwiIHNob3dWaWV3QWxsTGluaz17dHJ1ZX0gLz5cbiAqIGBgYFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUmV3YXJkTGlzdEZldGNoZXIoeyBcbiAgY2xhc3NOYW1lLCBcbiAgc2hvd1ZpZXdBbGxMaW5rID0gZmFsc2UgXG59OiBSZXdhcmRMaXN0RmV0Y2hlclByb3BzID0ge30pIHtcbiAgY29uc3QgZGJSZXdhcmRzID0gYXdhaXQgZmV0Y2hSZXdhcmRzKCk7XG4gIGNvbnN0IGNsaWVudFJld2FyZHMgPSB0cmFuc2Zvcm1SZXdhcmREYXRhKGRiUmV3YXJkcyk7XG4gIFxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgPFJld2FyZExpc3RQcmVzZW50ZXJcbiAgICAgICAgcmV3YXJkcz17Y2xpZW50UmV3YXJkc30gXG4gICAgICAgIHNob3dWaWV3QWxsTGluaz17c2hvd1ZpZXdBbGxMaW5rfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn0gIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBTUE7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBQSxjQUFBLEdBQUFFLENBQUE7Ozs7OzsrQkFpRHNCOzs7Ozs7V0FBQUMsaUJBQUE7Ozs7Ozs7O2tDQXZETzs7O2tDQUVNOzs7a0NBQ0o7OztrQ0FDSztBQUVwQztBQUNBLGVBQWVDLGFBQUE7RUFBQTtFQUFBSixjQUFBLEdBQUFLLENBQUE7RUFBQUwsY0FBQSxHQUFBRSxDQUFBO0VBQ2IsSUFBSTtJQUNGLE1BQU1JLFFBQUE7SUFBQTtJQUFBLENBQUFOLGNBQUEsR0FBQUUsQ0FBQSxPQUFXLE1BQU0sSUFBQUsscUJBQUEsQ0FBQUMsWUFBWTtJQUNuQyxNQUFNO01BQUVDLElBQUEsRUFBTUMsT0FBTztNQUFFQztJQUFLLENBQUU7SUFBQTtJQUFBLENBQUFYLGNBQUEsR0FBQUUsQ0FBQSxRQUFHLE1BQU1JLFFBQUEsQ0FDcENNLElBQUksQ0FBQyxVQUNMQyxNQUFNLENBQUMsS0FDUEMsS0FBSyxDQUFDLGNBQWM7TUFBRUMsU0FBQSxFQUFXO0lBQU07SUFBQTtJQUFBZixjQUFBLEdBQUFFLENBQUE7SUFFMUMsSUFBSVMsS0FBQSxFQUFPO01BQUE7TUFBQVgsY0FBQSxHQUFBZ0IsQ0FBQTtNQUFBaEIsY0FBQSxHQUFBRSxDQUFBO01BQ1RlLE9BQUEsQ0FBUU4sS0FBSyxDQUFDLDRCQUE0QkEsS0FBQTtNQUFBO01BQUFYLGNBQUEsR0FBQUUsQ0FBQTtNQUMxQyxPQUFPLEVBQUU7SUFDWDtJQUFBO0lBQUE7TUFBQUYsY0FBQSxHQUFBZ0IsQ0FBQTtJQUFBO0lBQUFoQixjQUFBLEdBQUFFLENBQUE7SUFFQSxPQUFPLDJCQUFBRixjQUFBLEdBQUFnQixDQUFBLFVBQUFOLE9BQUE7SUFBQTtJQUFBLENBQUFWLGNBQUEsR0FBQWdCLENBQUEsVUFBVyxFQUFFO0VBQ3RCLEVBQUUsT0FBT0wsS0FBQSxFQUFPO0lBQUE7SUFBQVgsY0FBQSxHQUFBRSxDQUFBO0lBQ2RlLE9BQUEsQ0FBUU4sS0FBSyxDQUFDLDRCQUE0QkEsS0FBQTtJQUFBO0lBQUFYLGNBQUEsR0FBQUUsQ0FBQTtJQUMxQyxPQUFPLEVBQUU7RUFDWDtBQUNGO0FBRUE7QUFDQSxTQUFTZ0Isb0JBQW9CQyxTQUFxQjtFQUFBO0VBQUFuQixjQUFBLEdBQUFLLENBQUE7RUFBQUwsY0FBQSxHQUFBRSxDQUFBO0VBQ2hELE9BQU9pQixTQUFBLENBQVVDLEdBQUcsQ0FBQ0MsTUFBQSxJQUFXO0lBQUE7SUFBQXJCLGNBQUEsR0FBQUssQ0FBQTtJQUFBTCxjQUFBLEdBQUFFLENBQUE7SUFBQTtNQUM5QixHQUFHbUIsTUFBTTtNQUNUQyxLQUFBO01BQU87TUFBQSxDQUFBdEIsY0FBQSxHQUFBZ0IsQ0FBQSxjQUFBTyxRQUFBLENBQUFDLGtCQUFrQixFQUFDSCxNQUFBLENBQU9DLEtBQUs7TUFBQTtNQUFBLENBQUF0QixjQUFBLEdBQUFnQixDQUFBLFVBQUs7TUFDM0NTLFNBQUEsRUFBV0osTUFBQSxDQUFPSSxTQUFTO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBZ0IsQ0FBQSxVQUFHLElBQUFVLE1BQUEsQ0FBQUMsY0FBYyxFQUFDTixNQUFBLENBQU9JLFNBQVM7TUFBQTtNQUFBLENBQUF6QixjQUFBLEdBQUFnQixDQUFBLFVBQUk7TUFDakVZLFNBQUE7TUFBVztNQUFBLENBQUE1QixjQUFBLEdBQUFnQixDQUFBLFVBQUFLLE1BQUEsQ0FBT1EsVUFBVTtNQUFBO01BQUEsQ0FBQTdCLGNBQUEsR0FBQWdCLENBQUEsVUFBSSxJQUFJYyxJQUFBLEdBQU9DLFdBQVc7SUFDeEQ7RUFBQTtBQUNGO0FBb0JPLGVBQWU1QixrQkFBa0I7RUFDdEM2QixTQUFTO0VBQ1RDLGVBQUE7RUFBQTtFQUFBLENBQUFqQyxjQUFBLEdBQUFnQixDQUFBLFVBQWtCLEtBQUs7QUFBQSxDQUNBO0FBQUE7QUFBQSxDQUFBaEIsY0FBQSxHQUFBZ0IsQ0FBQSxVQUFHLENBQUMsQ0FBQztFQUFBO0VBQUFoQixjQUFBLEdBQUFLLENBQUE7RUFDNUIsTUFBTWMsU0FBQTtFQUFBO0VBQUEsQ0FBQW5CLGNBQUEsR0FBQUUsQ0FBQSxRQUFZLE1BQU1FLFlBQUE7RUFDeEIsTUFBTThCLGFBQUE7RUFBQTtFQUFBLENBQUFsQyxjQUFBLEdBQUFFLENBQUEsUUFBZ0JnQixtQkFBQSxDQUFvQkMsU0FBQTtFQUFBO0VBQUFuQixjQUFBLEdBQUFFLENBQUE7RUFFMUMsb0JBQ0UsSUFBQWlDLFdBQUEsQ0FBQUMsR0FBQSxFQUFDO0lBQUlKLFNBQUEsRUFBV0EsU0FBQTtjQUNkLGlCQUFBRyxXQUFBLENBQUFDLEdBQUEsRUFBQ0MsZ0JBQUEsQ0FBQUMsbUJBQW1CO01BQ2xCNUIsT0FBQSxFQUFTd0IsYUFBQTtNQUNURCxlQUFBLEVBQWlCQTs7O0FBSXpCIiwiaWdub3JlTGlzdCI6W119