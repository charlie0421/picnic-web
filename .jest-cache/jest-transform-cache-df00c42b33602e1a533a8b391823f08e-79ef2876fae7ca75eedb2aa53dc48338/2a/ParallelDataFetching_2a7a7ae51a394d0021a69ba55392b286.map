{"version":3,"names":["ParallelDataFetching","VoteListSection","cov_1tz1xlzhrw","f","votes","s","_supabaseservice","getListSafe","TABLES","VOTE","orderBy","column","ascending","limit","_jsxruntime","jsxs","className","jsx","length","b","map","vote","title","description","id","MediaSection","media","MEDIA","item","url","RewardSection","rewards","REWARD","reward","_react","Suspense","fallback","_server","LoadingState","message","size"],"sources":["/Users/cheolhyun/Repositories/picnic-web/components/server/ParallelDataFetching.tsx"],"sourcesContent":["import React, { Suspense } from 'react';\nimport { LoadingState } from '@/components/server';\nimport { getListSafe, TABLES } from '@/lib/data-fetching/supabase-service';\n\n/**\n * 병렬 데이터 페칭 패턴\n * \n * 서버 컴포넌트에서 여러 데이터를 병렬로 가져오는 패턴을 보여주는 컴포넌트입니다.\n * React Suspense를 사용하여 각 데이터 로딩 상태를 독립적으로 처리합니다.\n */\n\n// 투표 데이터 타입\ninterface Vote {\n  id: number;\n  title: string;\n  description: string;\n  created_at: string;\n  updated_at: string;\n  [key: string]: any;\n}\n\n// 미디어 데이터 타입\ninterface Media {\n  id: number;\n  title: string;\n  url: string;\n  created_at: string;\n  updated_at: string;\n  [key: string]: any;\n}\n\n// 보상 데이터 타입\ninterface Reward {\n  id: number;\n  title: string;\n  description: string;\n  created_at: string;\n  updated_at: string;\n  [key: string]: any;\n}\n\n/**\n * 투표 데이터를 가져오는 컴포넌트\n */\nasync function VoteListSection() {\n  // 투표 데이터 조회 (느린 네트워크 시뮬레이션)\n  const votes = await getListSafe<Vote>(TABLES.VOTE, {\n    orderBy: { column: 'created_at', ascending: false },\n    limit: 5\n  });\n  \n  return (\n    <div className=\"mb-8 bg-white p-4 rounded-lg shadow\">\n      <h2 className=\"text-xl font-bold mb-4\">최근 투표</h2>\n      {votes.length === 0 ? (\n        <p className=\"text-gray-500\">투표 항목이 없습니다</p>\n      ) : (\n        <ul className=\"space-y-2\">\n          {votes.map(vote => (\n            <li key={vote.id} className=\"border-b pb-2\">\n              <h3 className=\"font-semibold\">{vote.title}</h3>\n              <p className=\"text-sm text-gray-600\">{vote.description}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\n/**\n * 미디어 데이터를 가져오는 컴포넌트\n */\nasync function MediaSection() {\n  // 미디어 데이터 조회\n  const media = await getListSafe<Media>(TABLES.MEDIA, {\n    orderBy: { column: 'created_at', ascending: false },\n    limit: 5\n  });\n  \n  return (\n    <div className=\"mb-8 bg-white p-4 rounded-lg shadow\">\n      <h2 className=\"text-xl font-bold mb-4\">최근 미디어</h2>\n      {media.length === 0 ? (\n        <p className=\"text-gray-500\">표시할 미디어가 없습니다.</p>\n      ) : (\n        <div className=\"grid grid-cols-2 gap-4\">\n          {media.map(item => (\n            <div key={item.id} className=\"bg-gray-100 p-2 rounded\">\n              <h3 className=\"font-semibold\">{item.title}</h3>\n              <p className=\"text-xs text-gray-600 truncate\">{item.url}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\n/**\n * 보상 데이터를 가져오는 컴포넌트\n */\nasync function RewardSection() {\n  // 보상 데이터 조회\n  const rewards = await getListSafe<Reward>(TABLES.REWARD, {\n    orderBy: { column: 'created_at', ascending: false },\n    limit: 5\n  });\n  \n  return (\n    <div className=\"mb-8 bg-white p-4 rounded-lg shadow\">\n      <h2 className=\"text-xl font-bold mb-4\">최근 보상</h2>\n      {rewards.length === 0 ? (\n        <p className=\"text-gray-500\">표시할 보상이 없습니다.</p>\n      ) : (\n        <ul className=\"space-y-2\">\n          {rewards.map(reward => (\n            <li key={reward.id} className=\"border-b pb-2\">\n              <h3 className=\"font-semibold\">{reward.title}</h3>\n              <p className=\"text-sm text-gray-600\">{reward.description}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\n/**\n * 병렬 데이터 페칭 예제 컴포넌트\n * \n * 이 컴포넌트는 여러 독립적인 데이터 소스를 동시에 가져오는 방법을 보여줍니다.\n * 각 섹션은 별도의 Suspense 경계로 감싸져 있어 하나의 데이터 로딩이 지연되더라도\n * 다른 섹션은 정상적으로 표시됩니다.\n */\nexport default function ParallelDataFetching() {\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-6\">대시보드</h1>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {/* 투표 섹션 - 독립적인 Suspense 경계 */}\n        <Suspense fallback={<LoadingState message=\"투표 데이터 로딩 중...\" size=\"small\" />}>\n          <VoteListSection />\n        </Suspense>\n        \n        {/* 미디어 섹션 - 독립적인 Suspense 경계 */}\n        <Suspense fallback={<LoadingState message=\"미디어 데이터 로딩 중...\" size=\"small\" />}>\n          <MediaSection />\n        </Suspense>\n      </div>\n      \n      {/* 보상 섹션 - 독립적인 Suspense 경계 */}\n      <Suspense fallback={<LoadingState message=\"보상 데이터 로딩 중...\" size=\"small\" />}>\n        <RewardSection />\n      </Suspense>\n    </div>\n  );\n} "],"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","ignoreList":[]}