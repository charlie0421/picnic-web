4fca9a34f8dc30318c6227c978d9583a
"use strict";

/* istanbul ignore next */
function cov_j4ow1rrlw() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/lib/supabase/transforms.ts";
  var hash = "40113df4198ff7ea1bb0922e74e2f7d7a544338f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/lib/supabase/transforms.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 34
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "8": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "9": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 27
        }
      },
      "10": {
        start: {
          line: 27,
          column: 15
        },
        end: {
          line: 27,
          column: 27
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "12": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "13": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "14": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 20
        }
      },
      "15": {
        start: {
          line: 39,
          column: 27
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "16": {
        start: {
          line: 47,
          column: 27
        },
        end: {
          line: 54,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 12,
            column: 25
          }
        },
        loc: {
          start: {
            line: 12,
            column: 35
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 15,
            column: 25
          }
        },
        loc: {
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 18,
            column: 20
          }
        },
        loc: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 24
          }
        },
        loc: {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "transformData",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 22
          }
        },
        loc: {
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 26
      },
      "6": {
        name: "transformResponse",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 26
          }
        },
        loc: {
          start: {
            line: 30,
            column: 37
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 30
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/lib/supabase/transforms.ts"],
      sourcesContent: ["import { SupabaseClient } from '@supabase/supabase-js';\nimport { snakeToCamel } from '@/utils/transform';\nimport { Database } from '@/types/supabase';\n\n/**\n * \uC751\uB2F5 \uB370\uC774\uD130\uB97C \uC2A4\uB124\uC774\uD06C \uCF00\uC774\uC2A4\uC5D0\uC11C \uCE74\uBA5C \uCF00\uC774\uC2A4\uB85C \uBCC0\uD658\uD569\uB2C8\uB2E4.\n * \n * @param data \uBCC0\uD658\uD560 \uB370\uC774\uD130\n * @returns \uBCC0\uD658\uB41C \uB370\uC774\uD130\n */\nexport function transformData<T>(data: T): T {\n  if (!data) return data;\n  return snakeToCamel(data) as T;\n}\n\n/**\n * \uC11C\uBC84 Supabase \uD074\uB77C\uC774\uC5B8\uD2B8\uC758 \uC751\uB2F5\uC744 \uCE74\uBA5C \uCF00\uC774\uC2A4\uB85C \uBCC0\uD658\uD558\uB294 \uD5EC\uD37C \uD568\uC218\n * \n * @example\n * // \uC11C\uBC84 \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C\n * const supabase = await createServerSupabaseClient();\n * const { data, error } = await supabase\n *   .from('votes')\n *   .select('*')\n *   .then(transformResponse);\n * \n * @param response Supabase \uC751\uB2F5 \uAC1D\uCCB4\n * @returns \uB370\uC774\uD130\uAC00 \uCE74\uBA5C \uCF00\uC774\uC2A4\uB85C \uBCC0\uD658\uB41C \uC751\uB2F5 \uAC1D\uCCB4\n */\nexport function transformResponse<T = any>(response: { data: T | null; error: any }) {\n  if (response.data) {\n    return {\n      data: transformData(response.data),\n      error: response.error\n    };\n  }\n  return response;\n}\n\n/**\n * \uC11C\uBC84\uC5D0\uC11C \uC0AC\uC6A9\uD560 \uC218 \uC788\uB294 \uBCC0\uD658 \uD5EC\uD37C \uD568\uC218\uB4E4\uC744 \uC81C\uACF5\uD569\uB2C8\uB2E4.\n */\nexport const serverTransformers = {\n  /**\n   * \uB370\uC774\uD130\uB97C \uBCC0\uD658\uD569\uB2C8\uB2E4.\n   */\n  transform: transformData,\n  \n  /**\n   * Supabase \uC751\uB2F5\uC744 \uBCC0\uD658\uD569\uB2C8\uB2E4.\n   */\n  transformResponse,\n};\n\n/**\n * \uD074\uB77C\uC774\uC5B8\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD560 \uC218 \uC788\uB294 \uBCC0\uD658 \uD5EC\uD37C \uD568\uC218\uB4E4\uC744 \uC81C\uACF5\uD569\uB2C8\uB2E4.\n */\nexport const clientTransformers = {\n  /**\n   * \uB370\uC774\uD130\uB97C \uBCC0\uD658\uD569\uB2C8\uB2E4.\n   */\n  transform: transformData,\n  \n  /**\n   * Supabase \uC751\uB2F5\uC744 \uBCC0\uD658\uD569\uB2C8\uB2E4.\n   */\n  transformResponse,\n}; "],
      names: ["clientTransformers", "serverTransformers", "transformData", "transformResponse", "data", "snakeToCamel", "response", "error", "transform"],
      mappings: ";;;;;;;;;;;IAyDaA,kBAAkB;eAAlBA;;IAfAC,kBAAkB;eAAlBA;;IAhCGC,aAAa;eAAbA;;IAmBAC,iBAAiB;eAAjBA;;;2BA5Ba;AAStB,SAASD,cAAiBE,IAAO;IACtC,IAAI,CAACA,MAAM,OAAOA;IAClB,OAAOC,IAAAA,uBAAY,EAACD;AACtB;AAgBO,SAASD,kBAA2BG,QAAwC;IACjF,IAAIA,SAASF,IAAI,EAAE;QACjB,OAAO;YACLA,MAAMF,cAAcI,SAASF,IAAI;YACjCG,OAAOD,SAASC,KAAK;QACvB;IACF;IACA,OAAOD;AACT;AAKO,MAAML,qBAAqB;IAChC;;GAEC,GACDO,WAAWN;IAEX;;GAEC,GACDC;AACF;AAKO,MAAMH,qBAAqB;IAChC;;GAEC,GACDQ,WAAWN;IAEX;;GAEC,GACDC;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "40113df4198ff7ea1bb0922e74e2f7d7a544338f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_j4ow1rrlw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_j4ow1rrlw();
cov_j4ow1rrlw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_j4ow1rrlw().f[0]++;
  cov_j4ow1rrlw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_j4ow1rrlw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_j4ow1rrlw().s[3]++;
_export(exports, {
  clientTransformers: function () {
    /* istanbul ignore next */
    cov_j4ow1rrlw().f[1]++;
    cov_j4ow1rrlw().s[4]++;
    return clientTransformers;
  },
  serverTransformers: function () {
    /* istanbul ignore next */
    cov_j4ow1rrlw().f[2]++;
    cov_j4ow1rrlw().s[5]++;
    return serverTransformers;
  },
  transformData: function () {
    /* istanbul ignore next */
    cov_j4ow1rrlw().f[3]++;
    cov_j4ow1rrlw().s[6]++;
    return transformData;
  },
  transformResponse: function () {
    /* istanbul ignore next */
    cov_j4ow1rrlw().f[4]++;
    cov_j4ow1rrlw().s[7]++;
    return transformResponse;
  }
});
const _transform =
/* istanbul ignore next */
(cov_j4ow1rrlw().s[8]++, require("../../utils/transform"));
function transformData(data) {
  /* istanbul ignore next */
  cov_j4ow1rrlw().f[5]++;
  cov_j4ow1rrlw().s[9]++;
  if (!data) {
    /* istanbul ignore next */
    cov_j4ow1rrlw().b[0][0]++;
    cov_j4ow1rrlw().s[10]++;
    return data;
  } else
  /* istanbul ignore next */
  {
    cov_j4ow1rrlw().b[0][1]++;
  }
  cov_j4ow1rrlw().s[11]++;
  return (0, _transform.snakeToCamel)(data);
}
function transformResponse(response) {
  /* istanbul ignore next */
  cov_j4ow1rrlw().f[6]++;
  cov_j4ow1rrlw().s[12]++;
  if (response.data) {
    /* istanbul ignore next */
    cov_j4ow1rrlw().b[1][0]++;
    cov_j4ow1rrlw().s[13]++;
    return {
      data: transformData(response.data),
      error: response.error
    };
  } else
  /* istanbul ignore next */
  {
    cov_j4ow1rrlw().b[1][1]++;
  }
  cov_j4ow1rrlw().s[14]++;
  return response;
}
const serverTransformers =
/* istanbul ignore next */
(cov_j4ow1rrlw().s[15]++, {
  /**
  * 데이터를 변환합니다.
  */
  transform: transformData,
  /**
  * Supabase 응답을 변환합니다.
  */
  transformResponse
});
const clientTransformers =
/* istanbul ignore next */
(cov_j4ow1rrlw().s[16]++, {
  /**
  * 데이터를 변환합니다.
  */
  transform: transformData,
  /**
  * Supabase 응답을 변환합니다.
  */
  transformResponse
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjbGllbnRUcmFuc2Zvcm1lcnMiLCJjb3ZfajRvdzFycmx3IiwiZiIsInMiLCJzZXJ2ZXJUcmFuc2Zvcm1lcnMiLCJ0cmFuc2Zvcm1EYXRhIiwidHJhbnNmb3JtUmVzcG9uc2UiLCJkYXRhIiwiYiIsIl90cmFuc2Zvcm0iLCJzbmFrZVRvQ2FtZWwiLCJyZXNwb25zZSIsImVycm9yIiwidHJhbnNmb3JtIl0sInNvdXJjZXMiOlsiL1VzZXJzL2NoZW9saHl1bi9SZXBvc2l0b3JpZXMvcGljbmljLXdlYi9saWIvc3VwYWJhc2UvdHJhbnNmb3Jtcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdXBhYmFzZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XG5pbXBvcnQgeyBzbmFrZVRvQ2FtZWwgfSBmcm9tICdAL3V0aWxzL3RyYW5zZm9ybSc7XG5pbXBvcnQgeyBEYXRhYmFzZSB9IGZyb20gJ0AvdHlwZXMvc3VwYWJhc2UnO1xuXG4vKipcbiAqIOydkeuLtSDrjbDsnbTthLDrpbwg7Iqk64Sk7J207YGsIOy8gOydtOyKpOyXkOyEnCDsubTrqZwg7LyA7J207Iqk66GcIOuzgO2ZmO2VqeuLiOuLpC5cbiAqIFxuICogQHBhcmFtIGRhdGEg67OA7ZmY7ZWgIOuNsOydtO2EsFxuICogQHJldHVybnMg67OA7ZmY65CcIOuNsOydtO2EsFxuICovXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtRGF0YTxUPihkYXRhOiBUKTogVCB7XG4gIGlmICghZGF0YSkgcmV0dXJuIGRhdGE7XG4gIHJldHVybiBzbmFrZVRvQ2FtZWwoZGF0YSkgYXMgVDtcbn1cblxuLyoqXG4gKiDshJzrsoQgU3VwYWJhc2Ug7YG065287J207Ja47Yq47J2YIOydkeuLteydhCDsubTrqZwg7LyA7J207Iqk66GcIOuzgO2ZmO2VmOuKlCDtl6ztjbwg7ZWo7IiYXG4gKiBcbiAqIEBleGFtcGxlXG4gKiAvLyDshJzrsoQg7Lu07Y+s64SM7Yq47JeQ7IScXG4gKiBjb25zdCBzdXBhYmFzZSA9IGF3YWl0IGNyZWF0ZVNlcnZlclN1cGFiYXNlQ2xpZW50KCk7XG4gKiBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICogICAuZnJvbSgndm90ZXMnKVxuICogICAuc2VsZWN0KCcqJylcbiAqICAgLnRoZW4odHJhbnNmb3JtUmVzcG9uc2UpO1xuICogXG4gKiBAcGFyYW0gcmVzcG9uc2UgU3VwYWJhc2Ug7J2R64u1IOqwneyytFxuICogQHJldHVybnMg642w7J207YSw6rCAIOy5tOupnCDsvIDsnbTsiqTroZwg67OA7ZmY65CcIOydkeuLtSDqsJ3ssrRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybVJlc3BvbnNlPFQgPSBhbnk+KHJlc3BvbnNlOiB7IGRhdGE6IFQgfCBudWxsOyBlcnJvcjogYW55IH0pIHtcbiAgaWYgKHJlc3BvbnNlLmRhdGEpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZGF0YTogdHJhbnNmb3JtRGF0YShyZXNwb25zZS5kYXRhKSxcbiAgICAgIGVycm9yOiByZXNwb25zZS5lcnJvclxuICAgIH07XG4gIH1cbiAgcmV0dXJuIHJlc3BvbnNlO1xufVxuXG4vKipcbiAqIOyEnOuyhOyXkOyEnCDsgqzsmqntlaAg7IiYIOyeiOuKlCDrs4DtmZgg7Zes7Y28IO2VqOyImOuTpOydhCDsoJzqs7Xtlanri4jri6QuXG4gKi9cbmV4cG9ydCBjb25zdCBzZXJ2ZXJUcmFuc2Zvcm1lcnMgPSB7XG4gIC8qKlxuICAgKiDrjbDsnbTthLDrpbwg67OA7ZmY7ZWp64uI64ukLlxuICAgKi9cbiAgdHJhbnNmb3JtOiB0cmFuc2Zvcm1EYXRhLFxuICBcbiAgLyoqXG4gICAqIFN1cGFiYXNlIOydkeuLteydhCDrs4DtmZjtlanri4jri6QuXG4gICAqL1xuICB0cmFuc2Zvcm1SZXNwb25zZSxcbn07XG5cbi8qKlxuICog7YG065287J207Ja47Yq47JeQ7IScIOyCrOyaqe2VoCDsiJgg7J6I64qUIOuzgO2ZmCDtl6ztjbwg7ZWo7IiY65Ok7J2EIOygnOqzte2VqeuLiOuLpC5cbiAqL1xuZXhwb3J0IGNvbnN0IGNsaWVudFRyYW5zZm9ybWVycyA9IHtcbiAgLyoqXG4gICAqIOuNsOydtO2EsOulvCDrs4DtmZjtlanri4jri6QuXG4gICAqL1xuICB0cmFuc2Zvcm06IHRyYW5zZm9ybURhdGEsXG4gIFxuICAvKipcbiAgICogU3VwYWJhc2Ug7J2R64u17J2EIOuzgO2ZmO2VqeuLiOuLpC5cbiAgICovXG4gIHRyYW5zZm9ybVJlc3BvbnNlLFxufTsgIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBeURhQSxrQkFBa0IsV0FBQUEsQ0FBQTtJQUFBO0lBQUFDLGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFFLENBQUE7V0FBbEJILGtCQUFBOztFQWZBSSxrQkFBa0IsV0FBQUEsQ0FBQTtJQUFBO0lBQUFILGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFFLENBQUE7V0FBbEJDLGtCQUFBOztFQWhDR0MsYUFBYSxXQUFBQSxDQUFBO0lBQUE7SUFBQUosYUFBQSxHQUFBQyxDQUFBO0lBQUFELGFBQUEsR0FBQUUsQ0FBQTtXQUFiRSxhQUFBOztFQW1CQUMsaUJBQWlCLFdBQUFBLENBQUE7SUFBQTtJQUFBTCxhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxDQUFBO1dBQWpCRyxpQkFBQTs7Ozs7aUNBNUJhO0FBU3RCLFNBQVNELGNBQWlCRSxJQUFPO0VBQUE7RUFBQU4sYUFBQSxHQUFBQyxDQUFBO0VBQUFELGFBQUEsR0FBQUUsQ0FBQTtFQUN0QyxJQUFJLENBQUNJLElBQUEsRUFBTTtJQUFBO0lBQUFOLGFBQUEsR0FBQU8sQ0FBQTtJQUFBUCxhQUFBLEdBQUFFLENBQUE7SUFBQSxPQUFPSSxJQUFBO0VBQUE7RUFBQTtFQUFBO0lBQUFOLGFBQUEsR0FBQU8sQ0FBQTtFQUFBO0VBQUFQLGFBQUEsR0FBQUUsQ0FBQTtFQUNsQixPQUFPLElBQUFNLFVBQUEsQ0FBQUMsWUFBWSxFQUFDSCxJQUFBO0FBQ3RCO0FBZ0JPLFNBQVNELGtCQUEyQkssUUFBd0M7RUFBQTtFQUFBVixhQUFBLEdBQUFDLENBQUE7RUFBQUQsYUFBQSxHQUFBRSxDQUFBO0VBQ2pGLElBQUlRLFFBQUEsQ0FBU0osSUFBSSxFQUFFO0lBQUE7SUFBQU4sYUFBQSxHQUFBTyxDQUFBO0lBQUFQLGFBQUEsR0FBQUUsQ0FBQTtJQUNqQixPQUFPO01BQ0xJLElBQUEsRUFBTUYsYUFBQSxDQUFjTSxRQUFBLENBQVNKLElBQUk7TUFDakNLLEtBQUEsRUFBT0QsUUFBQSxDQUFTQztJQUNsQjtFQUNGO0VBQUE7RUFBQTtJQUFBWCxhQUFBLEdBQUFPLENBQUE7RUFBQTtFQUFBUCxhQUFBLEdBQUFFLENBQUE7RUFDQSxPQUFPUSxRQUFBO0FBQ1Q7QUFLTyxNQUFNUCxrQkFBQTtBQUFBO0FBQUEsQ0FBQUgsYUFBQSxHQUFBRSxDQUFBLFFBQXFCO0VBQ2hDOzs7RUFHQVUsU0FBQSxFQUFXUixhQUFBO0VBRVg7OztFQUdBQztBQUNGO0FBS08sTUFBTU4sa0JBQUE7QUFBQTtBQUFBLENBQUFDLGFBQUEsR0FBQUUsQ0FBQSxRQUFxQjtFQUNoQzs7O0VBR0FVLFNBQUEsRUFBV1IsYUFBQTtFQUVYOzs7RUFHQUM7QUFDRiIsImlnbm9yZUxpc3QiOltdfQ==