{"version":3,"names":["cov_1zs0cq2hso","actualCoverage","s","ConnectionStatusDisplay","f","EnhancedConnectionStatusDisplay","SimpleConnectionIndicator","status","connectionInfo","networkStatus","batteryStatus","isPageVisible","b","smartReconnectEnabled","batterySaverEnabled","onManualReconnect","onToggleSmartReconnect","onToggleBatterySaver","className","showDetails","showAdvancedControls","isExpanded","setIsExpanded","_react","useState","getStatusConfig","color","textColor","bgColor","borderColor","title","message","icon","showReconnect","severity","reconnectAttempts","maxReconnectAttempts","isOnline","lastError","config","getConnectionQuality","level","text","isSlowConnection","connectionType","connectionQuality","getBatteryDisplay","percentage","Math","round","isLow","isCritical","isCharging","batteryDisplay","_jsxruntime","jsx","_framermotion","AnimatePresence","jsxs","motion","div","initial","opacity","y","animate","exit","scale","transition","duration","repeat","Infinity","ease","onClick","rotate","height","lastConnected","toLocaleTimeString","nextReconnectAt","type","x","button","whileHover","whileTap","props","getIndicatorConfig","pulse"],"sources":["/Users/cheolhyun/Repositories/picnic-web/components/client/vote/common/ConnectionStatusDisplay.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ConnectionStatus, ConnectionInfo } from '@/lib/supabase/realtime';\n\nexport interface EnhancedConnectionStatusDisplayProps {\n  status: ConnectionStatus;\n  connectionInfo: ConnectionInfo;\n  networkStatus?: {\n    isOnline: boolean;\n    isSlowConnection: boolean;\n    connectionType: string | null;\n  };\n  batteryStatus?: {\n    isCharging: boolean | null;\n    level: number | null;\n    chargingTime: number | null;\n    dischargingTime: number | null;\n  };\n  isPageVisible?: boolean;\n  smartReconnectEnabled?: boolean;\n  batterySaverEnabled?: boolean;\n  onManualReconnect?: () => void;\n  onToggleSmartReconnect?: () => void;\n  onToggleBatterySaver?: () => void;\n  className?: string;\n  showDetails?: boolean;\n  showAdvancedControls?: boolean;\n}\n\nexport function EnhancedConnectionStatusDisplay({\n  status,\n  connectionInfo,\n  networkStatus,\n  batteryStatus,\n  isPageVisible = true,\n  smartReconnectEnabled = true,\n  batterySaverEnabled = true,\n  onManualReconnect,\n  onToggleSmartReconnect,\n  onToggleBatterySaver,\n  className = '',\n  showDetails = false,\n  showAdvancedControls = false\n}: EnhancedConnectionStatusDisplayProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const getStatusConfig = () => {\n    switch (status) {\n      case 'connected':\n        return {\n          color: 'bg-green-500',\n          textColor: 'text-green-700',\n          bgColor: 'bg-green-50',\n          borderColor: 'border-green-200',\n          title: '실시간 연결됨',\n          message: '투표 결과가 실시간으로 업데이트됩니다.',\n          icon: '🟢',\n          showReconnect: false,\n          severity: 'success' as const\n        };\n      case 'connecting':\n        return {\n          color: 'bg-yellow-500',\n          textColor: 'text-yellow-700',\n          bgColor: 'bg-yellow-50',\n          borderColor: 'border-yellow-200',\n          title: '연결 중...',\n          message: '실시간 업데이트를 위해 서버에 연결하고 있습니다.',\n          icon: '🟡',\n          showReconnect: false,\n          severity: 'warning' as const\n        };\n      case 'reconnecting':\n        return {\n          color: 'bg-blue-500',\n          textColor: 'text-blue-700',\n          bgColor: 'bg-blue-50',\n          borderColor: 'border-blue-200',\n          title: '재연결 중...',\n          message: `재연결을 시도하고 있습니다. (${connectionInfo.reconnectAttempts}/${connectionInfo.maxReconnectAttempts})`,\n          icon: '🔄',\n          showReconnect: false,\n          severity: 'info' as const\n        };\n      case 'disconnected':\n        return {\n          color: 'bg-gray-500',\n          textColor: 'text-gray-700',\n          bgColor: 'bg-gray-50',\n          borderColor: 'border-gray-200',\n          title: '연결 끊김',\n          message: '실시간 업데이트가 일시적으로 중단되었습니다.',\n          icon: '⚪',\n          showReconnect: true,\n          severity: 'neutral' as const\n        };\n      case 'network_error':\n        return {\n          color: 'bg-orange-500',\n          textColor: 'text-orange-700',\n          bgColor: 'bg-orange-50',\n          borderColor: 'border-orange-200',\n          title: '네트워크 오류',\n          message: networkStatus?.isOnline ? \n            '네트워크 연결이 불안정합니다.' : \n            '인터넷 연결을 확인해주세요.',\n          icon: '📡',\n          showReconnect: networkStatus?.isOnline ?? true,\n          severity: 'warning' as const\n        };\n      case 'suspended':\n        return {\n          color: 'bg-gray-400',\n          textColor: 'text-gray-600',\n          bgColor: 'bg-gray-50',\n          borderColor: 'border-gray-200',\n          title: '연결 일시 중단',\n          message: '배터리 절약을 위해 백그라운드에서 연결이 일시 중단되었습니다.',\n          icon: '⏸️',\n          showReconnect: false,\n          severity: 'neutral' as const\n        };\n      case 'error':\n        return {\n          color: 'bg-red-500',\n          textColor: 'text-red-700',\n          bgColor: 'bg-red-50',\n          borderColor: 'border-red-200',\n          title: '연결 오류',\n          message: connectionInfo.lastError?.message || '서버 연결에 실패했습니다.',\n          icon: '🔴',\n          showReconnect: true,\n          severity: 'error' as const\n        };\n    }\n  };\n\n  const config = getStatusConfig();\n\n  // 연결 품질 표시\n  const getConnectionQuality = () => {\n    if (!networkStatus) return null;\n\n    if (!networkStatus.isOnline) return { level: 0, text: '오프라인', color: 'text-red-500' };\n    if (networkStatus.isSlowConnection) return { level: 1, text: '느림', color: 'text-orange-500' };\n    \n    switch (networkStatus.connectionType) {\n      case '4g':\n      case 'wifi':\n        return { level: 3, text: '좋음', color: 'text-green-500' };\n      case '3g':\n        return { level: 2, text: '보통', color: 'text-yellow-500' };\n      case '2g':\n      case 'slow-2g':\n        return { level: 1, text: '느림', color: 'text-orange-500' };\n      default:\n        return { level: 2, text: '보통', color: 'text-gray-500' };\n    }\n  };\n\n  const connectionQuality = getConnectionQuality();\n\n  // 배터리 표시\n  const getBatteryDisplay = () => {\n    if (!batteryStatus || batteryStatus.level === null) return null;\n\n    const percentage = Math.round(batteryStatus.level * 100);\n    const isLow = percentage < 15;\n    const isCritical = percentage < 5;\n\n    return {\n      percentage,\n      isCharging: batteryStatus.isCharging,\n      isLow,\n      isCritical,\n      icon: batteryStatus.isCharging ? '🔌' : (isCritical ? '🪫' : (isLow ? '🔋' : '🔋')),\n      color: isCritical ? 'text-red-500' : (isLow ? 'text-orange-500' : 'text-green-500')\n    };\n  };\n\n  const batteryDisplay = getBatteryDisplay();\n\n  // 연결되어 있고 상세정보를 보지 않으면 표시하지 않음\n  if (status === 'connected' && !showDetails && !showAdvancedControls) {\n    return null;\n  }\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: -20 }}\n        className={`rounded-lg border ${config.borderColor} ${config.bgColor} p-4 ${className}`}\n      >\n        {/* 헤더 */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-start space-x-3\">\n            {/* 상태 아이콘 */}\n            <motion.div\n              className={`w-4 h-4 rounded-full ${config.color} mt-0.5`}\n              animate={\n                status === 'connecting' || status === 'reconnecting' || status === 'error' ? {\n                  scale: [1, 1.2, 1],\n                  opacity: [1, 0.7, 1]\n                } : {}\n              }\n              transition={{\n                duration: 1,\n                repeat: Infinity,\n                ease: \"easeInOut\"\n              }}\n            />\n\n            <div className=\"flex-1 min-w-0\">\n              {/* 제목과 품질 표시 */}\n              <div className=\"flex items-center space-x-2\">\n                <h4 className={`text-sm font-medium ${config.textColor}`}>\n                  {config.title}\n                </h4>\n                {connectionQuality && (\n                  <span className={`text-xs px-2 py-0.5 rounded-full bg-white ${connectionQuality.color}`}>\n                    {connectionQuality.text}\n                  </span>\n                )}\n              </div>\n              \n              {/* 메시지 */}\n              <p className=\"text-xs text-gray-600 mt-1\">\n                {config.message}\n              </p>\n            </div>\n          </div>\n\n          {/* 확장/축소 버튼 (고급 기능이 있을 때만) */}\n          {(showDetails || showAdvancedControls) && (\n            <button\n              onClick={() => setIsExpanded(!isExpanded)}\n              className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n            >\n              <motion.div\n                animate={{ rotate: isExpanded ? 180 : 0 }}\n                transition={{ duration: 0.2 }}\n              >\n                ⌄\n              </motion.div>\n            </button>\n          )}\n        </div>\n\n        {/* 상세 정보 영역 */}\n        <AnimatePresence>\n          {isExpanded && (showDetails || showAdvancedControls) && (\n            <motion.div\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: 'auto' }}\n              exit={{ opacity: 0, height: 0 }}\n              className=\"mt-4 space-y-3\"\n            >\n              {/* 시스템 상태 */}\n              {showDetails && (\n                <div className=\"grid grid-cols-2 gap-4 text-xs\">\n                  {/* 네트워크 상태 */}\n                  <div className=\"space-y-1\">\n                    <div className=\"font-medium text-gray-700\">네트워크</div>\n                    <div className=\"space-y-0.5\">\n                      <div className=\"flex justify-between\">\n                        <span>온라인:</span>\n                        <span>{networkStatus?.isOnline ? '✅' : '❌'}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>연결 타입:</span>\n                        <span>{networkStatus?.connectionType || '알 수 없음'}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>느린 연결:</span>\n                        <span>{networkStatus?.isSlowConnection ? '⚠️' : '✅'}</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* 배터리 상태 */}\n                  <div className=\"space-y-1\">\n                    <div className=\"font-medium text-gray-700\">배터리</div>\n                    {batteryDisplay ? (\n                      <div className=\"space-y-0.5\">\n                        <div className=\"flex justify-between items-center\">\n                          <span>잔량:</span>\n                          <span className={`flex items-center space-x-1 ${batteryDisplay.color}`}>\n                            <span>{batteryDisplay.icon}</span>\n                            <span>{batteryDisplay.percentage}%</span>\n                          </span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>충전 중:</span>\n                          <span>{batteryDisplay.isCharging ? '🔌' : '🔋'}</span>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"text-gray-500\">지원 안됨</div>\n                    )}\n                  </div>\n\n                  {/* 페이지 상태 */}\n                  <div className=\"space-y-1\">\n                    <div className=\"font-medium text-gray-700\">페이지</div>\n                    <div className=\"space-y-0.5\">\n                      <div className=\"flex justify-between\">\n                        <span>활성 상태:</span>\n                        <span>{isPageVisible ? '👀' : '🙈'}</span>\n                      </div>\n                      {connectionInfo.lastConnected && (\n                        <div className=\"flex justify-between\">\n                          <span>마지막 연결:</span>\n                          <span>{connectionInfo.lastConnected.toLocaleTimeString()}</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* 연결 통계 */}\n                  <div className=\"space-y-1\">\n                    <div className=\"font-medium text-gray-700\">연결 정보</div>\n                    <div className=\"space-y-0.5\">\n                      <div className=\"flex justify-between\">\n                        <span>재연결 횟수:</span>\n                        <span>{connectionInfo.reconnectAttempts}/{connectionInfo.maxReconnectAttempts}</span>\n                      </div>\n                      {connectionInfo.nextReconnectAt && (\n                        <div className=\"flex justify-between\">\n                          <span>다음 재연결:</span>\n                          <span>{connectionInfo.nextReconnectAt.toLocaleTimeString()}</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* 오류 정보 */}\n              {connectionInfo.lastError && (\n                <div className=\"p-2 bg-red-50 border border-red-200 rounded text-xs\">\n                  <div className=\"font-medium text-red-700\">마지막 오류:</div>\n                  <div className=\"text-red-600 mt-1\">\n                    {connectionInfo.lastError.type}: {connectionInfo.lastError.message}\n                  </div>\n                </div>\n              )}\n\n              {/* 고급 제어 */}\n              {showAdvancedControls && (\n                <div className=\"space-y-3 pt-2 border-t border-gray-200\">\n                  {/* 토글 스위치들 */}\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-xs font-medium\">스마트 재연결</span>\n                      <button\n                        onClick={onToggleSmartReconnect}\n                        className={`w-8 h-4 rounded-full transition-colors ${\n                          smartReconnectEnabled ? 'bg-blue-500' : 'bg-gray-300'\n                        }`}\n                      >\n                        <motion.div\n                          className=\"w-3 h-3 bg-white rounded-full shadow\"\n                          animate={{ x: smartReconnectEnabled ? 18 : 2 }}\n                          transition={{ duration: 0.2 }}\n                        />\n                      </button>\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-xs font-medium\">배터리 절약</span>\n                      <button\n                        onClick={onToggleBatterySaver}\n                        className={`w-8 h-4 rounded-full transition-colors ${\n                          batterySaverEnabled ? 'bg-green-500' : 'bg-gray-300'\n                        }`}\n                      >\n                        <motion.div\n                          className=\"w-3 h-3 bg-white rounded-full shadow\"\n                          animate={{ x: batterySaverEnabled ? 18 : 2 }}\n                          transition={{ duration: 0.2 }}\n                        />\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* 액션 버튼들 */}\n                  <div className=\"flex space-x-2\">\n                    {config.showReconnect && onManualReconnect && (\n                      <motion.button\n                        whileHover={{ scale: 1.05 }}\n                        whileTap={{ scale: 0.95 }}\n                        onClick={onManualReconnect}\n                        className=\"flex-1 px-3 py-2 text-xs bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\n                      >\n                        수동 재연결\n                      </motion.button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* 빠른 액션 (항상 표시) */}\n        {!isExpanded && config.showReconnect && onManualReconnect && (\n          <motion.button\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n            onClick={onManualReconnect}\n            className=\"mt-3 w-full px-3 py-2 text-xs bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\n          >\n            다시 연결\n          </motion.button>\n        )}\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n\n// 기존 ConnectionStatusDisplay (호환성 유지)\nexport interface ConnectionStatusDisplayProps {\n  status: ConnectionStatus;\n  connectionInfo: ConnectionInfo;\n  onManualReconnect?: () => void;\n  className?: string;\n  showDetails?: boolean;\n}\n\nexport function ConnectionStatusDisplay(props: ConnectionStatusDisplayProps) {\n  return <EnhancedConnectionStatusDisplay {...props} />;\n}\n\n// 간단한 상태 인디케이터 (헤더나 푸터용)\nexport interface SimpleConnectionIndicatorProps {\n  status: ConnectionStatus;\n  networkStatus?: {\n    isOnline: boolean;\n    isSlowConnection: boolean;\n    connectionType: string | null;\n  };\n  className?: string;\n}\n\nexport function SimpleConnectionIndicator({\n  status,\n  networkStatus,\n  className = ''\n}: SimpleConnectionIndicatorProps) {\n  if (status === 'connected' && networkStatus?.isOnline) {\n    return null; // 완전히 정상인 상태에서는 표시하지 않음\n  }\n\n  const getIndicatorConfig = () => {\n    // 네트워크 오프라인 상태 우선 처리\n    if (networkStatus && !networkStatus.isOnline) {\n      return { color: 'bg-red-400', text: '오프라인', pulse: true };\n    }\n\n    switch (status) {\n      case 'connecting':\n      case 'reconnecting':\n        return { color: 'bg-yellow-400', text: '연결 중', pulse: true };\n      case 'network_error':\n        return { color: 'bg-orange-400', text: '네트워크 오류', pulse: true };\n      case 'error':\n        return { color: 'bg-red-400', text: '연결 오류', pulse: true };\n      case 'suspended':\n        return { color: 'bg-gray-400', text: '일시 중단', pulse: false };\n      case 'connected':\n        // 연결되어 있지만 느린 연결인 경우\n        if (networkStatus?.isSlowConnection) {\n          return { color: 'bg-orange-400', text: '느린 연결', pulse: false };\n        }\n        return { color: 'bg-green-400', text: '연결됨', pulse: false };\n      default:\n        return { color: 'bg-gray-400', text: '연결 안됨', pulse: false };\n    }\n  };\n\n  const config = getIndicatorConfig();\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0.8 }}\n      animate={{ opacity: 1, scale: 1 }}\n      className={`flex items-center space-x-2 ${className}`}\n    >\n      <motion.div\n        className={`w-2 h-2 rounded-full ${config.color}`}\n        animate={config.pulse ? {\n          scale: [1, 1.3, 1],\n          opacity: [1, 0.6, 1]\n        } : {}}\n        transition={{\n          duration: 1.2,\n          repeat: config.pulse ? Infinity : 0,\n          ease: \"easeInOut\"\n        }}\n      />\n      <span className=\"text-xs text-gray-600\">\n        {config.text}\n      </span>\n    </motion.div>\n  );\n} "],"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","ignoreList":[]}