{"version":3,"names":["cov_1g5r3cc6yc","actualCoverage","s","RealtimeVoteResults","f","default","_default","voteId","enableRealtime","b","showRealtimeIndicator","animateChanges","updateInterval","highlightNewUpdates","highlightDuration","showConnectionStatus","showDetailedConnectionInfo","showAdvancedControls","allowManualReconnect","enableDataSync","maxRetries","enableSmartReconnect","enableBatterySaver","voteResultsProps","voteItems","totalVotes","isLoading","connectionStatus","connectionInfo","realtimeService","lastUpdated","error","networkStatus","batteryStatus","isPageVisible","manualReconnect","refreshData","toggleSmartReconnect","toggleBatterySaver","_useVoteRealtimeEnhanced","useVoteRealtimeEnhanced","enabled","pollingInterval","onConnectionStatusChange","status","info","process","env","NODE_ENV","console","log","onVoteUpdate","event","onError","highlightedItems","setHighlightedItems","_react","useState","Set","useEffect","length","newHighlights","map","item","id","timer","setTimeout","clearTimeout","enhancedVoteItems","useMemo","_realtimeInfo","isHighlighted","has","isNew","isUpdated","rankChange","getConnectionFeedback","isOnline","type","message","action","level","isCharging","isSlowConnection","reconnectAttempts","maxReconnectAttempts","feedback","handleManualReconnect","handleDataRefresh","_jsxruntime","jsxs","className","jsx","_ConnectionStatusDisplay","SimpleConnectionIndicator","_RealtimeAnimations","VoteSkeleton","count","onClick","EnhancedConnectionStatusDisplay","smartReconnectEnabled","batterySaverEnabled","onManualReconnect","onToggleSmartReconnect","onToggleBatterySaver","showDetails","_RealtimeStatus","RealtimeIndicator","RealtimePulse","isActive","AnimatedVoteList","items","renderItem","index","_VoteResults","VoteResults","toLocaleTimeString","connectionType","Math","round","JSON","stringify","lastConnected","toISOString","nextReconnectAt"],"sources":["/Users/cheolhyun/Repositories/picnic-web/components/client/vote/list/RealtimeVoteResults.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { VoteResults, VoteResultsProps } from './VoteResults';\nimport { useVoteRealtimeEnhanced } from '@/hooks/useVoteRealtimeEnhanced';\nimport { RealtimeIndicator } from '../common/RealtimeStatus';\nimport { useVoteStore } from '@/stores/voteStore';\nimport { VoteItem } from '@/types/interfaces';\nimport { \n  AnimatedVoteList, \n  RealtimePulse, \n  ConnectionStatus,\n  VoteSkeleton \n} from '@/components/ui/animations/RealtimeAnimations';\nimport { \n  EnhancedConnectionStatusDisplay, \n  SimpleConnectionIndicator \n} from '../common/ConnectionStatusDisplay';\n\nexport interface RealtimeVoteResultsProps extends Omit<VoteResultsProps, 'voteItems' | 'totalVotes' | 'isLoading'> {\n  voteId: number;\n  // 실시간 업데이트 관련 옵션\n  enableRealtime?: boolean;\n  showRealtimeIndicator?: boolean;\n  animateChanges?: boolean;\n  updateInterval?: number; // 폴백 업데이트 간격 (ms)\n  // 애니메이션 옵션\n  highlightNewUpdates?: boolean;\n  highlightDuration?: number; // ms\n  // 연결 상태 표시 옵션\n  showConnectionStatus?: boolean;\n  showDetailedConnectionInfo?: boolean;\n  showAdvancedControls?: boolean;\n  allowManualReconnect?: boolean;\n  // 데이터 동기화 옵션\n  enableDataSync?: boolean;\n  maxRetries?: number;\n  // 스마트 연결 옵션\n  enableSmartReconnect?: boolean;\n  enableBatterySaver?: boolean;\n}\n\nexport function RealtimeVoteResults({\n  voteId,\n  enableRealtime = true,\n  showRealtimeIndicator = true,\n  animateChanges = true,\n  updateInterval = 30000,\n  highlightNewUpdates = true,\n  highlightDuration = 3000,\n  showConnectionStatus = true,\n  showDetailedConnectionInfo = false,\n  showAdvancedControls = false,\n  allowManualReconnect = true,\n  enableDataSync = true,\n  maxRetries = 10,\n  enableSmartReconnect = true,\n  enableBatterySaver = true,\n  ...voteResultsProps\n}: RealtimeVoteResultsProps) {\n  // 실시간 데이터 상태\n  const { \n    voteItems, \n    totalVotes, \n    isLoading, \n    connectionStatus, \n    connectionInfo,\n    realtimeService,\n    lastUpdated, \n    error,\n    networkStatus,\n    batteryStatus,\n    isPageVisible,\n    manualReconnect,\n    refreshData,\n    toggleSmartReconnect,\n    toggleBatterySaver\n  } = useVoteRealtimeEnhanced({ \n    voteId, \n    enabled: enableRealtime,\n    pollingInterval: updateInterval,\n    enableDataSync,\n    maxRetries,\n    enableSmartReconnect,\n    enableBatterySaver,\n    onConnectionStatusChange: (status, info) => {\n      if (process.env.NODE_ENV === 'development') {\n        console.log('[RealtimeVoteResults] 연결 상태 변경:', status, info);\n      }\n    },\n    onVoteUpdate: (event) => {\n      if (process.env.NODE_ENV === 'development') {\n        console.log('[RealtimeVoteResults] 투표 업데이트:', event);\n      }\n    },\n    onError: (error) => {\n      console.error('[RealtimeVoteResults] 오류:', error);\n    }\n  });\n\n  // 하이라이트된 아이템 추적\n  const [highlightedItems, setHighlightedItems] = useState<Set<number>>(new Set());\n\n  // 실시간 업데이트 감지 및 하이라이트\n  useEffect(() => {\n    if (!highlightNewUpdates || !voteItems?.length) return;\n\n    // 새로 업데이트된 아이템 감지 (여기서는 간단히 모든 아이템을 하이라이트)\n    if (lastUpdated) {\n      const newHighlights = new Set(voteItems.map(item => item.id));\n      setHighlightedItems(newHighlights);\n      \n      // 하이라이트 제거\n      const timer = setTimeout(() => {\n        setHighlightedItems(new Set());\n      }, highlightDuration);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [lastUpdated, voteItems, highlightNewUpdates, highlightDuration]);\n\n  // 실시간 정보가 추가된 투표 아이템들\n  const enhancedVoteItems = useMemo(() => {\n    if (!voteItems || !animateChanges) return voteItems;\n    \n    return voteItems.map(item => ({\n      ...item,\n      _realtimeInfo: {\n        isHighlighted: highlightedItems.has(item.id),\n        isNew: false, // 새 아이템 감지 로직은 별도 구현 필요\n        isUpdated: highlightedItems.has(item.id),\n        rankChange: 'same' as const // 순위 변경 감지 로직은 별도 구현 필요\n      }\n    }));\n  }, [voteItems, animateChanges, highlightedItems]);\n\n  // 연결 상태에 따른 사용자 피드백\n  const getConnectionFeedback = () => {\n    if (!networkStatus.isOnline) {\n      return {\n        type: 'warning' as const,\n        message: '인터넷 연결이 끊어졌습니다. 온라인 상태가 되면 자동으로 다시 연결됩니다.',\n        action: null\n      };\n    }\n\n    if (!isPageVisible && connectionStatus !== 'connected') {\n      return {\n        type: 'info' as const,\n        message: '페이지가 백그라운드에 있어 연결이 일시 중단되었습니다.',\n        action: null\n      };\n    }\n\n    if (batteryStatus.level !== null && batteryStatus.level < 0.15 && !batteryStatus.isCharging) {\n      return {\n        type: 'warning' as const,\n        message: '배터리가 부족하여 실시간 업데이트가 제한됩니다.',\n        action: enableBatterySaver ? '배터리 절약 모드 해제' : null\n      };\n    }\n\n    if (networkStatus.isSlowConnection) {\n      return {\n        type: 'info' as const,\n        message: '느린 네트워크 연결이 감지되어 업데이트 간격이 조정되었습니다.',\n        action: null\n      };\n    }\n\n    if (connectionStatus === 'error' && connectionInfo.reconnectAttempts >= connectionInfo.maxReconnectAttempts) {\n      return {\n        type: 'error' as const,\n        message: '서버 연결에 계속 실패하고 있습니다. 수동으로 다시 시도해보세요.',\n        action: '수동 재연결'\n      };\n    }\n\n    return null;\n  };\n\n  const feedback = getConnectionFeedback();\n\n  // 수동 재연결 핸들러\n  const handleManualReconnect = () => {\n    if (allowManualReconnect) {\n      manualReconnect();\n    }\n  };\n\n  // 데이터 새로고침 핸들러\n  const handleDataRefresh = async () => {\n    try {\n      await refreshData();\n    } catch (error) {\n      console.error('데이터 새로고침 실패:', error);\n    }\n  };\n\n  // 로딩 상태 (스켈레톤 표시)\n  if (isLoading && !voteItems?.length) {\n    return (\n      <div className=\"space-y-4\">\n        {showConnectionStatus && connectionStatus && (\n          <SimpleConnectionIndicator \n            status={connectionStatus}\n            networkStatus={networkStatus}\n            className=\"justify-center\"\n          />\n        )}\n        <VoteSkeleton count={5} />\n      </div>\n    );\n  }\n\n  // 오류 상태\n  if (error && !voteItems?.length) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"text-center py-8\">\n          <div className=\"text-red-500 mb-2\">⚠️</div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n            투표 데이터를 불러올 수 없습니다\n          </h3>\n          <p className=\"text-gray-600 mb-4\">\n            {error.message}\n          </p>\n          <button\n            onClick={handleDataRefresh}\n            className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\n          >\n            다시 시도\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* 사용자 피드백 메시지 */}\n      {feedback && (\n        <div className={`p-3 rounded-lg border ${\n          feedback.type === 'error' ? 'bg-red-50 border-red-200 text-red-700' :\n          feedback.type === 'warning' ? 'bg-orange-50 border-orange-200 text-orange-700' :\n          'bg-blue-50 border-blue-200 text-blue-700'\n        }`}>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm\">{feedback.message}</span>\n            {feedback.action && (\n              <button\n                onClick={feedback.action === '수동 재연결' ? handleManualReconnect : toggleBatterySaver}\n                className=\"text-xs px-3 py-1 bg-white rounded border hover:bg-gray-50 transition-colors\"\n              >\n                {feedback.action}\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* 연결 상태 표시 */}\n      {showConnectionStatus && (\n        <EnhancedConnectionStatusDisplay\n          status={connectionStatus}\n          connectionInfo={connectionInfo}\n          networkStatus={networkStatus}\n          batteryStatus={batteryStatus}\n          isPageVisible={isPageVisible}\n          smartReconnectEnabled={enableSmartReconnect}\n          batterySaverEnabled={enableBatterySaver}\n          onManualReconnect={handleManualReconnect}\n          onToggleSmartReconnect={toggleSmartReconnect}\n          onToggleBatterySaver={toggleBatterySaver}\n          showDetails={showDetailedConnectionInfo}\n          showAdvancedControls={showAdvancedControls}\n          className=\"mb-4\"\n        />\n      )}\n\n      {/* 실시간 인디케이터 */}\n      {showRealtimeIndicator && (\n        <div className=\"flex items-center justify-between mb-4\">\n          <RealtimeIndicator \n            voteId={voteId} \n            className=\"text-sm\"\n          />\n          <SimpleConnectionIndicator \n            status={connectionStatus}\n            networkStatus={networkStatus}\n            className=\"ml-auto\"\n          />\n        </div>\n      )}\n\n      <RealtimePulse \n        isActive={connectionStatus === 'connected' && !!lastUpdated}\n      >\n        {/* 메인 투표 결과 */}\n        {animateChanges && enhancedVoteItems ? (\n          <AnimatedVoteList\n            items={enhancedVoteItems}\n            renderItem={(item, index) => (\n              <VoteResults\n                {...voteResultsProps}\n                voteItems={[item]}\n                totalVotes={totalVotes || 0}\n                isLoading={false}\n              />\n            )}\n            className=\"space-y-3\"\n          />\n        ) : (\n          <VoteResults\n            {...voteResultsProps}\n            voteItems={voteItems || []}\n            totalVotes={totalVotes || 0}\n            isLoading={isLoading}\n          />\n        )}\n      </RealtimePulse>\n\n      {/* 마지막 업데이트 시간과 시스템 정보 */}\n      {(lastUpdated || showAdvancedControls) && showRealtimeIndicator && (\n        <div className=\"mt-4 text-center space-y-2\">\n          {lastUpdated && (\n            <span className=\"text-xs text-gray-500 block\">\n              마지막 업데이트: {lastUpdated.toLocaleTimeString()}\n            </span>\n          )}\n          \n          {showAdvancedControls && (\n            <div className=\"flex items-center justify-center space-x-4 text-xs text-gray-500\">\n              {networkStatus.connectionType && (\n                <span>네트워크: {networkStatus.connectionType}</span>\n              )}\n              {batteryStatus.level !== null && (\n                <span className={\n                  batteryStatus.level < 0.15 ? 'text-red-500' : \n                  batteryStatus.level < 0.3 ? 'text-orange-500' : 'text-green-500'\n                }>\n                  배터리: {Math.round(batteryStatus.level * 100)}%\n                  {batteryStatus.isCharging ? ' (충전 중)' : ''}\n                </span>\n              )}\n              <span>페이지: {isPageVisible ? '활성' : '비활성'}</span>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* 개발 모드에서 연결 통계 표시 */}\n      {process.env.NODE_ENV === 'development' && realtimeService && (\n        <details className=\"mt-4 text-xs text-gray-500\">\n          <summary className=\"cursor-pointer\">연결 통계 (개발 모드)</summary>\n          <pre className=\"mt-2 p-2 bg-gray-100 rounded text-xs overflow-auto\">\n            {JSON.stringify({\n              connectionStatus,\n              networkStatus,\n              batteryStatus: {\n                ...batteryStatus,\n                level: batteryStatus.level ? Math.round(batteryStatus.level * 100) + '%' : null\n              },\n              isPageVisible,\n              connectionInfo: {\n                ...connectionInfo,\n                lastConnected: connectionInfo.lastConnected?.toISOString(),\n                nextReconnectAt: connectionInfo.nextReconnectAt?.toISOString()\n              }\n            }, null, 2)}\n          </pre>\n        </details>\n      )}\n    </div>\n  );\n}\n\nexport default RealtimeVoteResults; "],"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","ignoreList":[]}