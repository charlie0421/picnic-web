{"version":3,"names":["AuthCallbackClient","cov_1z11zxppgz","s","useSafeGlobalLoading","f","context","_react","useContext","_GlobalLoadingContext","GlobalLoadingContext","b","console","warn","isLoading","setIsLoading","loading","log","debugLog","message","data","process","env","NODE_ENV","debugError","error","provider","router","_navigation","useRouter","searchParams","useSearchParams","mounted","setMounted","useState","setError","isProcessing","setIsProcessing","processingStep","setProcessingStep","processedRef","useRef","useEffect","event","CustomEvent","detail","reason","window","dispatchEvent","setTimeout","immediateLoadingBar","document","getElementById","remove","minimumLoadingTime","startTime","Date","now","ensureMinimumLoading","callback","elapsed","remainingTime","Math","max","current","handleOAuthCallback","code","get","oauthError","Error","substring","appleParams","user","idToken","state","id_token","hasUser","hasIdToken","hasState","apiUrl","currentHost","location","hostname","controller","AbortController","timeoutId","abort","response","fetch","method","headers","body","JSON","stringify","signal","clearTimeout","ok","errorData","json","catch","status","success","syncResult","Promise","allSettled","credentials","AbortSignal","timeout","resolve","then","localStorage","setItem","removeItem","returnTo","returnUrl","_authredirect","handlePostLoginRedirect","undefined","handleBeforeUnload","addEventListener","removeEventListener","href","expectedPath","URL","origin","pathname","reload","err","push","_jsxruntime","jsx","className","jsxs","_image","default","src","alt","width","height","priority"],"sources":["/Users/cheolhyun/Repositories/picnic-web/components/client/auth/AuthCallback/AuthCallbackClient.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useRef, useContext } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport Image from 'next/image';\nimport { handlePostLoginRedirect } from '@/utils/auth-redirect';\nimport { GlobalLoadingContext } from '@/contexts/GlobalLoadingContext';\n\ninterface AuthCallbackClientProps {\n  provider?: string;\n}\n\n// GlobalLoadingContext를 안전하게 사용하는 훅\nconst useSafeGlobalLoading = () => {\n  const context = useContext(GlobalLoadingContext);\n  if (context) {\n    return context;\n  }\n\n  // GlobalLoadingProvider가 없는 경우 빈 함수 반환\n  console.warn('GlobalLoadingProvider가 제공되지 않았습니다. 대체 구현을 사용합니다.');\n  return {\n    isLoading: false,\n    setIsLoading: (loading: boolean) => {\n      console.log('GlobalLoading 상태:', loading);\n    },\n  };\n};\n\n// 개발 환경에서만 로그 출력\nconst debugLog = (message: string, data?: any) => {\n  if (process.env.NODE_ENV === 'development') {\n    console.log(message, data || '');\n  }\n};\n\nconst debugError = (message: string, data?: any) => {\n  if (process.env.NODE_ENV === 'development') {\n    console.error(message, data || '');\n  }\n};\n\nexport default function AuthCallbackClient({\n  provider,\n}: AuthCallbackClientProps) {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const { setIsLoading } = useSafeGlobalLoading();\n  const [mounted, setMounted] = useState(false); // 하이드레이션 완료 확인\n  const [error, setError] = useState<string | null>(null);\n  const [isProcessing, setIsProcessing] = useState(true);\n  const [processingStep, setProcessingStep] = useState<string>('인증 정보를 확인하고 있습니다...');\n  \n  // 🔧 중복 처리 방지\n  const processedRef = useRef(false);\n\n  // 🔧 하이드레이션 완료 확인\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  useEffect(() => {\n    // mounted가 false면 아직 하이드레이션이 완료되지 않았으므로 대기\n    if (!mounted) return;\n\n    // 🚀 전역 로딩바 시작 (커스텀 이벤트 + 컨텍스트 이중 보장)\n    setIsLoading(true);\n    \n    // 커스텀 이벤트로도 전역 로딩바 시작 (이중 보장)\n    try {\n      const event = new CustomEvent('startGlobalLoading', { detail: { reason: 'auth-callback-client' } });\n      window.dispatchEvent(event);\n      debugLog('🔄 [AuthCallback] 전역 로딩바 시작 (컨텍스트 + 이벤트)');\n    } catch (error) {\n      debugLog('🔄 [AuthCallback] 전역 로딩바 시작 (컨텍스트만)', error);\n    }\n    \n    // 🗑️ 즉시 로딩바 제거 (전역 로딩바로 대체)\n    setTimeout(() => {\n      const immediateLoadingBar = document.getElementById('oauth-loading');\n      if (immediateLoadingBar) {\n        debugLog('🗑️ [AuthCallback] 즉시 로딩바 제거 (전역 로딩바로 대체)');\n        immediateLoadingBar.remove();\n      }\n    }, 100);\n    \n    // 🔧 최소 로딩 시간 보장 (사용자가 로딩 상태를 인지할 수 있도록)\n    const minimumLoadingTime = 1200; // 800ms → 1200ms로 늘림 (더 확실한 로딩 경험)\n    const startTime = Date.now();\n\n    const ensureMinimumLoading = async (callback: () => void) => {\n      const elapsed = Date.now() - startTime;\n      const remainingTime = Math.max(0, minimumLoadingTime - elapsed);\n      \n      if (remainingTime > 0) {\n        debugLog(`🔄 [AuthCallback] 최소 로딩 시간 보장: ${remainingTime}ms 대기`);\n        setTimeout(callback, remainingTime);\n      } else {\n        callback();\n      }\n    };\n\n    // 🚫 중복 처리 방지\n    if (processedRef.current) {\n      return;\n    }\n    processedRef.current = true;\n    \n    debugLog('🔍 [AuthCallback] OAuth 콜백 처리 시작');\n\n    const handleOAuthCallback = async () => {\n      try {\n        setProcessingStep('OAuth 코드를 확인하고 있습니다...');\n        \n        // OAuth 코드 확인\n        const code = searchParams?.get('code');\n        const oauthError = searchParams?.get('error');\n\n        if (oauthError) {\n          throw new Error(`OAuth 오류: ${oauthError}`);\n        }\n\n        if (!code) {\n          throw new Error('OAuth 코드가 없습니다');\n        }\n\n        debugLog('🔐 [AuthCallback] OAuth 코드 발견:', { code: code.substring(0, 10) + '...' });\n        \n        // Apple 특화 파라미터 수집\n        let appleParams: Record<string, string> = {};\n        if (provider === 'apple') {\n          const user = searchParams?.get('user');\n          const idToken = searchParams?.get('id_token');\n          const state = searchParams?.get('state');\n          \n          if (user) appleParams.user = user;\n          if (idToken) appleParams.id_token = idToken;\n          if (state) appleParams.state = state;\n          \n          debugLog('🍎 [AuthCallback] Apple 특화 파라미터 수집:', {\n            hasUser: !!user,\n            hasIdToken: !!idToken,\n            hasState: !!state\n          });\n        }\n        \n        setProcessingStep('서버에서 인증을 처리하고 있습니다...');\n        debugLog('🔧 [OAuth] 서버 API로 토큰 교환 시도 (클라이언트 무한대기 회피)');\n        \n        // API 라우트를 통한 서버사이드 처리 (모든 환경 동일)\n        const apiUrl = '/api/auth/exchange-code';\n        \n        debugLog('🔗 [AuthCallback] API URL 설정:', { \n          apiUrl,\n          currentHost: window.location.hostname \n        });\n        \n        // 🔧 API 호출에 타임아웃 설정 (15초)\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 15000);\n        \n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            code,\n            provider: provider || 'google',\n            ...appleParams, // Apple 특화 파라미터 포함\n          }),\n          signal: controller.signal,\n        });\n\n        clearTimeout(timeoutId);\n\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({ error: 'Unknown error' }));\n          throw new Error(errorData.error || `Server error: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        if (data.success) {\n          setProcessingStep('인증이 완료되었습니다. 쿠키를 동기화하고 있습니다...');\n          debugLog('✅ [AuthCallback] 서버사이드 OAuth 인증 성공');\n          \n          // 🔧 쿠키 동기화와 성공 처리를 병렬로 실행\n          const [syncResult] = await Promise.allSettled([\n            // 쿠키 동기화 (타임아웃 5초)\n            fetch('/api/auth/verify', {\n              method: 'GET',\n              credentials: 'include',\n              signal: AbortSignal.timeout(5000),\n            }),\n            // 성공 정보 저장 (즉시 완료)\n            Promise.resolve().then(() => {\n              if (typeof window !== 'undefined') {\n                localStorage.setItem('auth_success', 'true');\n                localStorage.setItem('auth_provider', provider || 'google');\n                localStorage.removeItem('code_verifier');\n                \n                // 🎯 최근 로그인 정보는 AuthStore에서 API를 통해 자동으로 처리됩니다\n                // (중복 처리 방지를 위해 여기서는 제거됨)\n                debugLog('ℹ️ [AuthCallback] 최근 로그인 정보는 AuthStore에서 자동 처리됩니다');\n              }\n            })\n          ]);\n          \n          // 동기화 결과 로깅 (실패해도 진행)\n          if (syncResult.status === 'fulfilled') {\n            debugLog('✅ [AuthCallback] 쿠키 동기화 성공');\n          } else {\n            debugLog('⚠️ [AuthCallback] 쿠키 동기화 실패, 하지만 진행:', syncResult.reason);\n          }\n          \n          setProcessingStep('로그인이 완료되었습니다. 페이지로 이동 중...');\n          \n          // 🚀 즉시 로딩바 제거하지 않고 리다이렉션까지 유지\n          debugLog('✅ [AuthCallback] OAuth 처리 완료, 리다이렉션까지 로딩바 유지');\n          \n          // 🎯 OAuth 성공 시 적절한 페이지로 리디렉션\n          localStorage.removeItem('auth_return_url'); // 기존 URL 제거\n          \n          // returnTo 파라미터 확인 및 적절한 리다이렉션 URL 결정\n          const returnTo = searchParams?.get('returnTo');\n          const returnUrl = handlePostLoginRedirect(returnTo || undefined);\n\n          debugLog('🚀 [AuthCallback] OAuth 성공 → 리디렉션:', { returnTo, returnUrl });\n          \n          // 🔧 최소 로딩 시간 보장 후 리디렉션\n          ensureMinimumLoading(() => {\n            debugLog('🔄 [AuthCallback] 확실한 인증 상태 반영을 위해 강제 새로고침 실행');\n            // 성공 시에는 로딩 상태 유지 (리다이렉션 완료까지)\n            // setIsProcessing(false); // 제거: 성공 시에는 로딩바 유지\n            \n            // 리디렉션 지연 시간을 늘려서 사용자가 로딩바를 충분히 볼 수 있도록 함\n            setTimeout(() => {\n              debugLog('🚀 [AuthCallback] 로딩바 유지하면서 리디렉션 실행');\n              // 리디렉션 직전까지 로딩바 유지\n              \n              // 페이지 언로드가 시작될 때까지 로딩 상태 확실히 유지\n              const handleBeforeUnload = () => {\n                debugLog('📤 [AuthCallback] 페이지 언로드 시작 - 로딩바 유지됨');\n              };\n              \n              window.addEventListener('beforeunload', handleBeforeUnload);\n              \n              // 🎯 리다이렉션 직전에 로딩바 상태 확인 (너무 자주 체크하지 않음)\n              debugLog('🚀 [AuthCallback] 리다이렉션 준비 완료, 로딩바 계속 유지');\n              \n              // 실제 리디렉션 실행\n              setTimeout(() => {\n                window.removeEventListener('beforeunload', handleBeforeUnload);\n                debugLog('🚀 [AuthCallback] 로딩바 유지하면서 리다이렉션 실행');\n                window.location.href = returnUrl;\n              }, 200);\n              \n              // 추가 보험: 2초 후에도 리다이렉션 안되면 강제 새로고침\n              setTimeout(() => {\n                const expectedPath = new URL(returnUrl, window.location.origin).pathname;\n                if (window.location.pathname !== expectedPath) {\n                  debugLog('💪 [AuthCallback] 추가 보험: 강제 새로고침');\n                  window.removeEventListener('beforeunload', handleBeforeUnload);\n                  window.location.reload();\n                }\n              }, 2000);\n            }, 500); // 500ms로 줄여서 더 빠른 전환\n          });\n          \n          return;\n        }\n\n        throw new Error(data.error || '서버에서 OAuth 처리 실패');\n\n      } catch (err: any) {\n        debugError('❌ [AuthCallback] OAuth 처리 실패:', err);\n        \n        // 🔧 에러 시에도 전역 로딩바 해제 (컨텍스트 + 이벤트 이중 보장)\n        setIsLoading(false);\n        \n        // 커스텀 이벤트로도 전역 로딩바 해제 (이중 보장)\n        try {\n          const event = new CustomEvent('stopGlobalLoading', { detail: { reason: 'auth-callback-error' } });\n          window.dispatchEvent(event);\n          debugLog('🗑️ [AuthCallback] 에러 발생, 전역 로딩바 해제 (컨텍스트 + 이벤트)');\n        } catch (error) {\n          debugLog('🗑️ [AuthCallback] 에러 발생, 전역 로딩바 해제 (컨텍스트만)', error);\n        }\n        \n        // 즉시 로딩바도 제거 (혹시 남아있다면)\n        const immediateLoadingBar = document.getElementById('oauth-loading');\n        if (immediateLoadingBar) {\n          immediateLoadingBar.remove();\n        }\n        \n        ensureMinimumLoading(() => {\n          setError(`로그인 중 문제가 발생했습니다`);\n          setIsProcessing(false);\n\n          // 2초 후 로그인 페이지로 리디렉션\n          setTimeout(() => {\n            debugLog('🔄 [AuthCallback] 오류 발생, 로그인 페이지로 리디렉션');\n            router.push('/ja/login');\n          }, 2000);\n        });\n      }\n    };\n\n    handleOAuthCallback();\n  }, [mounted]); // mounted 의존성 추가\n\n  // 🔧 하이드레이션 미스매치 방지: 서버와 클라이언트에서 동일한 UI 렌더링\n  if (!mounted) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          {/* 하이드레이션 완료 전에는 서버와 동일한 UI */}\n          <div className=\"relative\">\n            <Image\n              src=\"/images/logo.png\"\n              alt=\"Picnic Loading\"\n              width={80}\n              height={80}\n              priority\n              className=\"w-20 h-20 rounded-full animate-pulse drop-shadow-lg object-cover\"\n            />\n          </div>\n          <div className=\"mt-6 text-gray-600 text-sm font-medium animate-pulse\">\n            인증 정보를 확인하고 있습니다...\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // UI 렌더링\n  if (error) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-50\">\n        <div className=\"bg-white p-8 rounded-lg shadow-md max-w-md w-full text-center\">\n          <div className=\"text-red-500 text-6xl mb-4\">❌</div>\n          <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">로그인 실패</h2>\n          <p className=\"text-gray-600 mb-6\">{error}</p>\n          <p className=\"text-sm text-gray-500\">잠시 후 로그인 페이지로 이동합니다...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen\">\n      <div className=\"text-center\">\n        {/* 로고 아이콘 with 펄스 애니메이션 */}\n        <div className=\"relative\">\n          <Image\n            src=\"/images/logo.png\"\n            alt=\"Picnic Loading\"\n            width={80}\n            height={80}\n            priority\n            className=\"w-20 h-20 rounded-full animate-pulse drop-shadow-lg object-cover\"\n          />\n        </div>\n        \n        {/* 로딩 텍스트 */}\n        <div className=\"mt-6 text-gray-600 text-sm font-medium animate-pulse\">\n          {processingStep}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}