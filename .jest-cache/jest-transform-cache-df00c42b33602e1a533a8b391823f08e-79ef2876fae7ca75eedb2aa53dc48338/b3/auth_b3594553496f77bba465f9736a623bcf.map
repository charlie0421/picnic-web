{"version":3,"names":["getCdnUrl","cov_23hn58ktl7","f","s","getStorageUrl","getUserProfile","handlePendingAuth","isUserLoggedIn","supabase","uploadFile","_client","createBrowserSupabaseClient","data","user","error","auth","getUser","b","userId","from","select","eq","single","bucket","path","storage","getPublicUrl","publicUrl","process","env","NEXT_PUBLIC_CDN_URL","file","upload","console"],"sources":["/Users/cheolhyun/Repositories/picnic-web/utils/api/auth.ts"],"sourcesContent":["import { createBrowserSupabaseClient } from '@/lib/supabase/client';\n\n// Supabase 클라이언트 인스턴스\nconst supabase = createBrowserSupabaseClient();\n\nexport { supabase };\n\n// 로그인 상태 확인 (getUser()는 getSession()보다 빠르고 안정적)\nexport const isUserLoggedIn = async () => {\n  const { data: { user }, error } = await supabase.auth.getUser();\n  return !!user && !error;\n};\n\n// 사용자 정보 가져오기\nexport const getUserProfile = async (userId: string) => {\n  const { data, error } = await supabase\n    .from('user_profiles')\n    .select('*')\n    .eq('id', userId)\n    .single();\n\n  if (error) throw error;\n  return data;\n};\n\n// 스토리지 URL 가져오기\nexport const getStorageUrl = (bucket: string, path: string) => {\n  return supabase.storage.from(bucket).getPublicUrl(path).data.publicUrl;\n};\n\n// CDN URL 가져오기\nexport const getCdnUrl = (path: string) => {\n  return `${process.env.NEXT_PUBLIC_CDN_URL}${path}`;\n};\n\n// 파일 업로드\nexport const uploadFile = async (bucket: string, path: string, file: File) => {\n  const { data, error } = await supabase.storage\n    .from(bucket)\n    .upload(path, file);\n\n  if (error) throw error;\n  return data;\n};\n\n// pending auth 상태 처리를 위한 유틸리티 함수 (더 빠른 getUser() 사용)\nexport const handlePendingAuth = async () => {\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser();\n    if (error) {\n      console.error('Auth 상태 확인 오류:', error);\n      return null;\n    }\n    return user;\n  } catch (error) {\n    console.error('Auth 상태 확인 오류:', error);\n    return null;\n  }\n};\n"],"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","ignoreList":[]}