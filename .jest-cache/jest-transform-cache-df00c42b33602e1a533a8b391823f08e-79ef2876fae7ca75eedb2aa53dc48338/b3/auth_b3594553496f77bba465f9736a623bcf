bf9d6bbd1a35df452c3ce75b74d61081
"use strict";

/* istanbul ignore next */
function cov_23hn58ktl7() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/utils/api/auth.ts";
  var hash = "111990ccb2709d1fc90ca89fda6d506944490ad7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/utils/api/auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 25
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 24
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 26
        }
      },
      "11": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 52
        }
      },
      "12": {
        start: {
          line: 36,
          column: 17
        },
        end: {
          line: 36,
          column: 59
        }
      },
      "13": {
        start: {
          line: 37,
          column: 23
        },
        end: {
          line: 40,
          column: 1
        }
      },
      "14": {
        start: {
          line: 38,
          column: 38
        },
        end: {
          line: 38,
          column: 67
        }
      },
      "15": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 28
        }
      },
      "16": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 45,
          column: 1
        }
      },
      "17": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 42,
          column: 102
        }
      },
      "18": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 27
        }
      },
      "19": {
        start: {
          line: 43,
          column: 15
        },
        end: {
          line: 43,
          column: 27
        }
      },
      "20": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 16
        }
      },
      "21": {
        start: {
          line: 46,
          column: 22
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "22": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 75
        }
      },
      "23": {
        start: {
          line: 49,
          column: 18
        },
        end: {
          line: 51,
          column: 1
        }
      },
      "24": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 55
        }
      },
      "25": {
        start: {
          line: 52,
          column: 19
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "26": {
        start: {
          line: 53,
          column: 28
        },
        end: {
          line: 53,
          column: 82
        }
      },
      "27": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 27
        }
      },
      "28": {
        start: {
          line: 54,
          column: 15
        },
        end: {
          line: 54,
          column: 27
        }
      },
      "29": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 16
        }
      },
      "30": {
        start: {
          line: 57,
          column: 26
        },
        end: {
          line: 69,
          column: 1
        }
      },
      "31": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "32": {
        start: {
          line: 59,
          column: 42
        },
        end: {
          line: 59,
          column: 71
        }
      },
      "33": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "34": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 51
        }
      },
      "35": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 24
        }
      },
      "36": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 20
        }
      },
      "37": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 47
        }
      },
      "38": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 15
          },
          end: {
            line: 12,
            column: 16
          }
        },
        loc: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 15,
            column: 20
          }
        },
        loc: {
          start: {
            line: 15,
            column: 30
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 21
          }
        },
        loc: {
          start: {
            line: 18,
            column: 31
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 24
          }
        },
        loc: {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 24,
            column: 21
          }
        },
        loc: {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 14
          },
          end: {
            line: 27,
            column: 15
          }
        },
        loc: {
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 17
          }
        },
        loc: {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 37,
            column: 23
          },
          end: {
            line: 37,
            column: 24
          }
        },
        loc: {
          start: {
            line: 37,
            column: 33
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 37
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 41,
            column: 23
          },
          end: {
            line: 41,
            column: 24
          }
        },
        loc: {
          start: {
            line: 41,
            column: 39
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 41
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 46,
            column: 22
          },
          end: {
            line: 46,
            column: 23
          }
        },
        loc: {
          start: {
            line: 46,
            column: 38
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 46
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 49,
            column: 18
          },
          end: {
            line: 49,
            column: 19
          }
        },
        loc: {
          start: {
            line: 49,
            column: 26
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 49
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 52,
            column: 20
          }
        },
        loc: {
          start: {
            line: 52,
            column: 47
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 52
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 57,
            column: 26
          },
          end: {
            line: 57,
            column: 27
          }
        },
        loc: {
          start: {
            line: 57,
            column: 36
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 57
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 11
          },
          end: {
            line: 39,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 11
          },
          end: {
            line: 39,
            column: 17
          }
        }, {
          start: {
            line: 39,
            column: 21
          },
          end: {
            line: 39,
            column: 27
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/utils/api/auth.ts"],
      sourcesContent: ["import { createBrowserSupabaseClient } from '@/lib/supabase/client';\n\n// Supabase \uD074\uB77C\uC774\uC5B8\uD2B8 \uC778\uC2A4\uD134\uC2A4\nconst supabase = createBrowserSupabaseClient();\n\nexport { supabase };\n\n// \uB85C\uADF8\uC778 \uC0C1\uD0DC \uD655\uC778 (getUser()\uB294 getSession()\uBCF4\uB2E4 \uBE60\uB974\uACE0 \uC548\uC815\uC801)\nexport const isUserLoggedIn = async () => {\n  const { data: { user }, error } = await supabase.auth.getUser();\n  return !!user && !error;\n};\n\n// \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uAC00\uC838\uC624\uAE30\nexport const getUserProfile = async (userId: string) => {\n  const { data, error } = await supabase\n    .from('user_profiles')\n    .select('*')\n    .eq('id', userId)\n    .single();\n\n  if (error) throw error;\n  return data;\n};\n\n// \uC2A4\uD1A0\uB9AC\uC9C0 URL \uAC00\uC838\uC624\uAE30\nexport const getStorageUrl = (bucket: string, path: string) => {\n  return supabase.storage.from(bucket).getPublicUrl(path).data.publicUrl;\n};\n\n// CDN URL \uAC00\uC838\uC624\uAE30\nexport const getCdnUrl = (path: string) => {\n  return `${process.env.NEXT_PUBLIC_CDN_URL}${path}`;\n};\n\n// \uD30C\uC77C \uC5C5\uB85C\uB4DC\nexport const uploadFile = async (bucket: string, path: string, file: File) => {\n  const { data, error } = await supabase.storage\n    .from(bucket)\n    .upload(path, file);\n\n  if (error) throw error;\n  return data;\n};\n\n// pending auth \uC0C1\uD0DC \uCC98\uB9AC\uB97C \uC704\uD55C \uC720\uD2F8\uB9AC\uD2F0 \uD568\uC218 (\uB354 \uBE60\uB978 getUser() \uC0AC\uC6A9)\nexport const handlePendingAuth = async () => {\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser();\n    if (error) {\n      console.error('Auth \uC0C1\uD0DC \uD655\uC778 \uC624\uB958:', error);\n      return null;\n    }\n    return user;\n  } catch (error) {\n    console.error('Auth \uC0C1\uD0DC \uD655\uC778 \uC624\uB958:', error);\n    return null;\n  }\n};\n"],
      names: ["getCdnUrl", "getStorageUrl", "getUserProfile", "handlePendingAuth", "isUserLoggedIn", "supabase", "uploadFile", "createBrowserSupabaseClient", "data", "user", "error", "auth", "getUser", "userId", "from", "select", "eq", "single", "bucket", "path", "storage", "getPublicUrl", "publicUrl", "process", "env", "NEXT_PUBLIC_CDN_URL", "file", "upload", "console"],
      mappings: ";;;;;;;;;;;IA+BaA,SAAS;eAATA;;IALAC,aAAa;eAAbA;;IAZAC,cAAc;eAAdA;;IAgCAC,iBAAiB;eAAjBA;;IAtCAC,cAAc;eAAdA;;IAHJC,QAAQ;eAARA;;IA+BIC,UAAU;eAAVA;;;wBApC+B;AAE5C,sBAAsB;AACtB,MAAMD,WAAWE,IAAAA,mCAA2B;AAKrC,MAAMH,iBAAiB;IAC5B,MAAM,EAAEI,MAAM,EAAEC,IAAI,EAAE,EAAEC,KAAK,EAAE,GAAG,MAAML,SAASM,IAAI,CAACC,OAAO;IAC7D,OAAO,CAAC,CAACH,QAAQ,CAACC;AACpB;AAGO,MAAMR,iBAAiB,OAAOW;IACnC,MAAM,EAAEL,IAAI,EAAEE,KAAK,EAAE,GAAG,MAAML,SAC3BS,IAAI,CAAC,iBACLC,MAAM,CAAC,KACPC,EAAE,CAAC,MAAMH,QACTI,MAAM;IAET,IAAIP,OAAO,MAAMA;IACjB,OAAOF;AACT;AAGO,MAAMP,gBAAgB,CAACiB,QAAgBC;IAC5C,OAAOd,SAASe,OAAO,CAACN,IAAI,CAACI,QAAQG,YAAY,CAACF,MAAMX,IAAI,CAACc,SAAS;AACxE;AAGO,MAAMtB,YAAY,CAACmB;IACxB,OAAO,GAAGI,QAAQC,GAAG,CAACC,mBAAmB,GAAGN,MAAM;AACpD;AAGO,MAAMb,aAAa,OAAOY,QAAgBC,MAAcO;IAC7D,MAAM,EAAElB,IAAI,EAAEE,KAAK,EAAE,GAAG,MAAML,SAASe,OAAO,CAC3CN,IAAI,CAACI,QACLS,MAAM,CAACR,MAAMO;IAEhB,IAAIhB,OAAO,MAAMA;IACjB,OAAOF;AACT;AAGO,MAAML,oBAAoB;IAC/B,IAAI;QACF,MAAM,EAAEK,MAAM,EAAEC,IAAI,EAAE,EAAEC,KAAK,EAAE,GAAG,MAAML,SAASM,IAAI,CAACC,OAAO;QAC7D,IAAIF,OAAO;YACTkB,QAAQlB,KAAK,CAAC,kBAAkBA;YAChC,OAAO;QACT;QACA,OAAOD;IACT,EAAE,OAAOC,OAAO;QACdkB,QAAQlB,KAAK,CAAC,kBAAkBA;QAChC,OAAO;IACT;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "111990ccb2709d1fc90ca89fda6d506944490ad7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23hn58ktl7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_23hn58ktl7();
cov_23hn58ktl7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_23hn58ktl7().f[0]++;
  cov_23hn58ktl7().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_23hn58ktl7().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_23hn58ktl7().s[3]++;
_export(exports, {
  getCdnUrl: function () {
    /* istanbul ignore next */
    cov_23hn58ktl7().f[1]++;
    cov_23hn58ktl7().s[4]++;
    return getCdnUrl;
  },
  getStorageUrl: function () {
    /* istanbul ignore next */
    cov_23hn58ktl7().f[2]++;
    cov_23hn58ktl7().s[5]++;
    return getStorageUrl;
  },
  getUserProfile: function () {
    /* istanbul ignore next */
    cov_23hn58ktl7().f[3]++;
    cov_23hn58ktl7().s[6]++;
    return getUserProfile;
  },
  handlePendingAuth: function () {
    /* istanbul ignore next */
    cov_23hn58ktl7().f[4]++;
    cov_23hn58ktl7().s[7]++;
    return handlePendingAuth;
  },
  isUserLoggedIn: function () {
    /* istanbul ignore next */
    cov_23hn58ktl7().f[5]++;
    cov_23hn58ktl7().s[8]++;
    return isUserLoggedIn;
  },
  supabase: function () {
    /* istanbul ignore next */
    cov_23hn58ktl7().f[6]++;
    cov_23hn58ktl7().s[9]++;
    return supabase;
  },
  uploadFile: function () {
    /* istanbul ignore next */
    cov_23hn58ktl7().f[7]++;
    cov_23hn58ktl7().s[10]++;
    return uploadFile;
  }
});
const _client =
/* istanbul ignore next */
(cov_23hn58ktl7().s[11]++, require("../../lib/supabase/client"));
// Supabase 클라이언트 인스턴스
const supabase =
/* istanbul ignore next */
(cov_23hn58ktl7().s[12]++, (0, _client.createBrowserSupabaseClient)());
/* istanbul ignore next */
cov_23hn58ktl7().s[13]++;
const isUserLoggedIn = async () => {
  /* istanbul ignore next */
  cov_23hn58ktl7().f[8]++;
  const {
    data: {
      user
    },
    error
  } =
  /* istanbul ignore next */
  (cov_23hn58ktl7().s[14]++, await supabase.auth.getUser());
  /* istanbul ignore next */
  cov_23hn58ktl7().s[15]++;
  return /* istanbul ignore next */(cov_23hn58ktl7().b[0][0]++, !!user) &&
  /* istanbul ignore next */
  (cov_23hn58ktl7().b[0][1]++, !error);
};
/* istanbul ignore next */
cov_23hn58ktl7().s[16]++;
const getUserProfile = async userId => {
  /* istanbul ignore next */
  cov_23hn58ktl7().f[9]++;
  const {
    data,
    error
  } =
  /* istanbul ignore next */
  (cov_23hn58ktl7().s[17]++, await supabase.from('user_profiles').select('*').eq('id', userId).single());
  /* istanbul ignore next */
  cov_23hn58ktl7().s[18]++;
  if (error) {
    /* istanbul ignore next */
    cov_23hn58ktl7().b[1][0]++;
    cov_23hn58ktl7().s[19]++;
    throw error;
  } else
  /* istanbul ignore next */
  {
    cov_23hn58ktl7().b[1][1]++;
  }
  cov_23hn58ktl7().s[20]++;
  return data;
};
/* istanbul ignore next */
cov_23hn58ktl7().s[21]++;
const getStorageUrl = (bucket, path) => {
  /* istanbul ignore next */
  cov_23hn58ktl7().f[10]++;
  cov_23hn58ktl7().s[22]++;
  return supabase.storage.from(bucket).getPublicUrl(path).data.publicUrl;
};
/* istanbul ignore next */
cov_23hn58ktl7().s[23]++;
const getCdnUrl = path => {
  /* istanbul ignore next */
  cov_23hn58ktl7().f[11]++;
  cov_23hn58ktl7().s[24]++;
  return `${process.env.NEXT_PUBLIC_CDN_URL}${path}`;
};
/* istanbul ignore next */
cov_23hn58ktl7().s[25]++;
const uploadFile = async (bucket, path, file) => {
  /* istanbul ignore next */
  cov_23hn58ktl7().f[12]++;
  const {
    data,
    error
  } =
  /* istanbul ignore next */
  (cov_23hn58ktl7().s[26]++, await supabase.storage.from(bucket).upload(path, file));
  /* istanbul ignore next */
  cov_23hn58ktl7().s[27]++;
  if (error) {
    /* istanbul ignore next */
    cov_23hn58ktl7().b[2][0]++;
    cov_23hn58ktl7().s[28]++;
    throw error;
  } else
  /* istanbul ignore next */
  {
    cov_23hn58ktl7().b[2][1]++;
  }
  cov_23hn58ktl7().s[29]++;
  return data;
};
/* istanbul ignore next */
cov_23hn58ktl7().s[30]++;
const handlePendingAuth = async () => {
  /* istanbul ignore next */
  cov_23hn58ktl7().f[13]++;
  cov_23hn58ktl7().s[31]++;
  try {
    const {
      data: {
        user
      },
      error
    } =
    /* istanbul ignore next */
    (cov_23hn58ktl7().s[32]++, await supabase.auth.getUser());
    /* istanbul ignore next */
    cov_23hn58ktl7().s[33]++;
    if (error) {
      /* istanbul ignore next */
      cov_23hn58ktl7().b[3][0]++;
      cov_23hn58ktl7().s[34]++;
      console.error('Auth 상태 확인 오류:', error);
      /* istanbul ignore next */
      cov_23hn58ktl7().s[35]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_23hn58ktl7().b[3][1]++;
    }
    cov_23hn58ktl7().s[36]++;
    return user;
  } catch (error) {
    /* istanbul ignore next */
    cov_23hn58ktl7().s[37]++;
    console.error('Auth 상태 확인 오류:', error);
    /* istanbul ignore next */
    cov_23hn58ktl7().s[38]++;
    return null;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,