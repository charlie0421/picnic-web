{"version":3,"names":["LoginRequiredDialog","isOpen","cov_1ln8twjy3z","b","redirectUrl","onLogin","onCancel","title","description","loginText","cancelText","dialogProps","f","router","s","_navigation","useRouter","t","currentLanguage","isHydrated","_languageStore","useLanguageStore","console","log","hasTitle","hasDescription","getDefaultTitle","translated","trim","startsWith","getDefaultDescription","fallback","defaultTitle","defaultDescription","defaultLoginText","defaultCancelText","handleLogin","_authredirect","saveRedirectUrl","redirectToLogin","handleCancel","_jsxruntime","jsx","_ConfirmDialog","ConfirmDialog","confirmText","confirmVariant","onConfirm"],"sources":["/Users/cheolhyun/Repositories/picnic-web/components/ui/Dialog/LoginRequiredDialog.tsx"],"sourcesContent":["'use client';\n\nimport { useRouter } from 'next/navigation';\nimport { LogIn, X } from 'lucide-react';\nimport { ConfirmDialog } from './ConfirmDialog';\nimport { LoginRequiredDialogProps } from './types';\nimport { saveRedirectUrl, redirectToLogin } from '@/utils/auth-redirect';\nimport { useLanguageStore } from '@/stores/languageStore';\n\nexport function LoginRequiredDialog({\n  isOpen = false,\n  redirectUrl,\n  onLogin,\n  onCancel,\n  title,\n  description,\n  loginText,\n  cancelText,\n  ...dialogProps\n}: LoginRequiredDialogProps) {\n  const router = useRouter();\n  const { t, currentLanguage, isHydrated } = useLanguageStore();\n\n  // 디버깅용 로깅\n  console.log('[LoginRequiredDialog] State:', {\n    currentLanguage,\n    isHydrated,\n    isOpen,\n    hasTitle: !!title,\n    hasDescription: !!description\n  });\n\n  // 더 안전한 다국어 지원 기본값\n  const getDefaultTitle = () => {\n    if (title) return title;\n    const translated = t('dialog_content_login_required');\n    console.log('[LoginRequiredDialog] Title translation:', translated);\n    if (translated && translated.trim() && !translated.startsWith('[')) {\n      return translated;\n    }\n    return 'Login Required';\n  };\n\n  const getDefaultDescription = () => {\n    if (description) return description;\n    const translated = t('dialog_login_required_description');\n    console.log('[LoginRequiredDialog] Description translation:', translated);\n    if (translated && translated.trim() && !translated.startsWith('[')) {\n      return translated;\n    }\n    \n    // fallback to title key\n    const fallback = t('dialog_content_login_required');\n    console.log('[LoginRequiredDialog] Fallback translation:', fallback);\n    if (fallback && fallback.trim() && !fallback.startsWith('[')) {\n      return 'Please log in to continue.';\n    }\n    return 'You need to log in to use this feature.';\n  };\n\n  const defaultTitle = getDefaultTitle();\n  const defaultDescription = getDefaultDescription();\n  const defaultLoginText = loginText || t('dialog_button_ok') || 'OK';\n  const defaultCancelText = cancelText || t('dialog_button_cancel') || 'Cancel';\n\n  // 기본 로그인 핸들러\n  const handleLogin = () => {\n    if (onLogin) {\n      onLogin(redirectUrl);\n    } else {\n      // 기본 로그인 로직: 리다이렉트 유틸리티 사용\n      if (redirectUrl) {\n        saveRedirectUrl(redirectUrl);\n      }\n      redirectToLogin(redirectUrl);\n    }\n  };\n\n  // 취소 핸들러\n  const handleCancel = () => {\n    if (onCancel) {\n      onCancel();\n    }\n  };\n\n  return (\n    <ConfirmDialog\n      {...dialogProps}\n      isOpen={isOpen}\n      title={defaultTitle}\n      description={defaultDescription}\n      confirmText={defaultLoginText}\n      cancelText={defaultCancelText}\n      confirmVariant='primary'\n      onConfirm={handleLogin}\n      onCancel={handleCancel}\n    />\n  );\n}\n"],"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","ignoreList":[]}