{"version":3,"names":["clearAllAuthData","cov_8lo5cey4n","f","s","clearRedirectUrl","getRedirectUrl","handlePostLoginRedirect","handleSessionTimeout","redirectToLogin","saveRedirectUrl","securityUtils","usePostLoginRedirect","REDIRECT_URL_KEY","LOGIN_REDIRECT_KEY","REDIRECT_TIMESTAMP_KEY","REDIRECT_URL_EXPIRY","isValidRedirectUrl","url","b","startsWith","includes","testUrl","URL","allowedPaths","pathname","isAllowedPath","some","path","error","console","warn","isRedirectUrlExpired","timestamp","sessionStorage","getItem","localStorage","savedTime","parseInt","currentTime","Date","now","toString","setItem","sessionUrl","localUrl","removeItem","returnToParam","window","urlParams","URLSearchParams","location","search","returnTo","get","redirectUrl","currentUrl","urlToSave","shouldSaveUrl","href","excludePatterns","pattern","targetUrl","loginUrl","origin","searchParams","set","validateCSRFToken","token","length","validateUserAgent","userAgent","navigator","toLowerCase","suspiciousPatterns","sessionKeysToRemove","i","key","push","forEach","localKeysToRemove","log"],"sources":["/Users/cheolhyun/Repositories/picnic-web/utils/auth-redirect.ts"],"sourcesContent":["/**\n * 인증 관련 리다이렉트 유틸리티\n */\n\n// 리다이렉트 URL 저장 키\nconst REDIRECT_URL_KEY = \"redirectUrl\";\nconst LOGIN_REDIRECT_KEY = \"loginRedirectUrl\";\nconst REDIRECT_TIMESTAMP_KEY = \"redirectTimestamp\";\n\n// 리다이렉트 URL 만료 시간 (30분)\nconst REDIRECT_URL_EXPIRY = 30 * 60 * 1000;\n\n/**\n * URL이 안전한지 검증합니다.\n */\nfunction isValidRedirectUrl(url: string): boolean {\n    try {\n        // 빈 문자열이나 null 체크\n        if (!url || typeof url !== \"string\") {\n            return false;\n        }\n\n        // 상대 경로만 허용 (절대 URL 차단)\n        if (\n            url.startsWith(\"http://\") || url.startsWith(\"https://\") ||\n            url.startsWith(\"//\")\n        ) {\n            return false;\n        }\n\n        // 프로토콜 스키마 차단 (javascript:, data:, etc.)\n        if (url.includes(\":\")) {\n            return false;\n        }\n\n        // 백슬래시 차단 (Windows 경로 방지)\n        if (url.includes(\"\\\\\")) {\n            return false;\n        }\n\n        // 상위 디렉토리 탐색 방지\n        if (url.includes(\"../\") || url.includes(\"..\\\\\")) {\n            return false;\n        }\n\n        // URL 객체로 파싱 시도 (상대 경로)\n        const testUrl = new URL(url, \"https://example.com\");\n\n        // 허용된 경로 패턴 확인\n        const allowedPaths = [\n            \"/vote\",\n            \"/mypage\",\n            \"/rewards\",\n            \"/media\",\n            \"/notice\",\n            \"/faq\",\n            \"/\",\n        ];\n\n        const pathname = testUrl.pathname;\n        const isAllowedPath = allowedPaths.some((path) =>\n            pathname === path || pathname.startsWith(path + \"/\")\n        );\n\n        return isAllowedPath;\n    } catch (error) {\n        console.warn(\"URL 검증 실패:\", error);\n        return false;\n    }\n}\n\n/**\n * 리다이렉트 URL이 만료되었는지 확인합니다.\n */\nfunction isRedirectUrlExpired(): boolean {\n    try {\n        const timestamp = sessionStorage.getItem(REDIRECT_TIMESTAMP_KEY) ||\n            localStorage.getItem(REDIRECT_TIMESTAMP_KEY);\n\n        if (!timestamp) {\n            return true;\n        }\n\n        const savedTime = parseInt(timestamp, 10);\n        const currentTime = Date.now();\n\n        return (currentTime - savedTime) > REDIRECT_URL_EXPIRY;\n    } catch (error) {\n        console.warn(\"리다이렉트 URL 만료 확인 실패:\", error);\n        return true;\n    }\n}\n\n/**\n * 로그인 후 리다이렉트할 URL을 저장합니다.\n */\nexport function saveRedirectUrl(url: string): void {\n    try {\n        // URL 검증\n        if (!isValidRedirectUrl(url)) {\n            console.warn(\"유효하지 않은 리다이렉트 URL:\", url);\n            return;\n        }\n\n        const timestamp = Date.now().toString();\n\n        sessionStorage.setItem(REDIRECT_URL_KEY, url);\n        sessionStorage.setItem(REDIRECT_TIMESTAMP_KEY, timestamp);\n\n        // 백업으로 localStorage에도 저장\n        localStorage.setItem(LOGIN_REDIRECT_KEY, url);\n        localStorage.setItem(REDIRECT_TIMESTAMP_KEY, timestamp);\n    } catch (error) {\n        console.warn(\"리다이렉트 URL 저장 실패:\", error);\n    }\n}\n\n/**\n * 저장된 리다이렉트 URL을 가져옵니다.\n */\nexport function getRedirectUrl(): string | null {\n    try {\n        // 만료 확인\n        if (isRedirectUrlExpired()) {\n            clearRedirectUrl();\n            return null;\n        }\n\n        // sessionStorage 우선 확인\n        const sessionUrl = sessionStorage.getItem(REDIRECT_URL_KEY);\n        if (sessionUrl && isValidRedirectUrl(sessionUrl)) {\n            return sessionUrl;\n        }\n\n        // localStorage 백업 확인\n        const localUrl = localStorage.getItem(LOGIN_REDIRECT_KEY);\n        if (localUrl && isValidRedirectUrl(localUrl)) {\n            return localUrl;\n        }\n\n        return null;\n    } catch (error) {\n        console.warn(\"리다이렉트 URL 조회 실패:\", error);\n        return null;\n    }\n}\n\n/**\n * 저장된 리다이렉트 URL을 제거합니다.\n */\nexport function clearRedirectUrl(): void {\n    try {\n        sessionStorage.removeItem(REDIRECT_URL_KEY);\n        sessionStorage.removeItem(REDIRECT_TIMESTAMP_KEY);\n        localStorage.removeItem(LOGIN_REDIRECT_KEY);\n        localStorage.removeItem(REDIRECT_TIMESTAMP_KEY);\n\n        // 추가로 다른 키 패턴들도 정리\n        sessionStorage.removeItem(\"auth_redirect_url\");\n        sessionStorage.removeItem(\"auth_redirect_timestamp\");\n        localStorage.removeItem(\"auth_redirect_url\");\n        localStorage.removeItem(\"auth_redirect_timestamp\");\n    } catch (error) {\n        console.warn(\"리다이렉트 URL 제거 실패:\", error);\n    }\n}\n\n/**\n * 로그인 후 적절한 페이지로 리다이렉트합니다.\n */\nexport function handlePostLoginRedirect(returnToParam?: string): string {\n    // 1. URL 파라미터에서 returnTo 확인 (우선순위 높음)\n    if (returnToParam && isValidRedirectUrl(returnToParam)) {\n        return returnToParam;\n    }\n\n    // 2. 브라우저 URL에서 returnTo 파라미터 확인\n    if (typeof window !== \"undefined\") {\n        const urlParams = new URLSearchParams(window.location.search);\n        const returnTo = urlParams.get('returnTo');\n        if (returnTo && isValidRedirectUrl(returnTo)) {\n            return returnTo;\n        }\n    }\n\n    // 3. 저장된 리다이렉트 URL 확인\n    const redirectUrl = getRedirectUrl();\n\n    // 저장된 URL 제거\n    clearRedirectUrl();\n\n    // 리다이렉트 URL이 있고 유효하면 해당 URL로, 없으면 홈으로\n    if (redirectUrl && isValidRedirectUrl(redirectUrl)) {\n        return redirectUrl;\n    }\n\n    return \"/\";\n}\n\n/**\n * 현재 URL을 저장하고 로그인 페이지로 이동합니다.\n */\nexport function redirectToLogin(currentUrl?: string): void {\n    if (typeof window === \"undefined\") return;\n\n    const urlToSave = currentUrl ||\n        window.location.pathname + window.location.search;\n\n    // 로그인 페이지나 인증 관련 페이지는 저장하지 않음\n    if (!shouldSaveUrl(urlToSave)) {\n        clearRedirectUrl();\n    } else {\n        saveRedirectUrl(urlToSave);\n    }\n\n    // 로그인 페이지로 이동\n    window.location.href = \"/login\";\n}\n\n/**\n * URL이 저장할 가치가 있는지 확인합니다.\n */\nfunction shouldSaveUrl(url: string): boolean {\n    const excludePatterns = [\n        \"/login\",\n        \"/auth/\",\n        \"/callback\",\n        \"/logout\",\n        \"/signup\",\n        \"/reset-password\",\n        \"/error\",\n        \"/404\",\n        \"/500\",\n    ];\n\n    return !excludePatterns.some((pattern) => url.includes(pattern)) &&\n        isValidRedirectUrl(url);\n}\n\n/**\n * 로그인 성공 후 자동 리다이렉트를 처리합니다.\n */\nexport function usePostLoginRedirect() {\n    if (typeof window === \"undefined\") return;\n\n    const targetUrl = handlePostLoginRedirect();\n\n    // 현재 페이지가 로그인 페이지가 아닌 경우에만 리다이렉트\n    if (window.location.pathname !== targetUrl) {\n        window.location.href = targetUrl;\n    }\n}\n\n/**\n * 세션 타임아웃 처리\n */\nexport function handleSessionTimeout(): void {\n    // 리다이렉트 URL 정리\n    clearRedirectUrl();\n\n    // 현재 페이지를 저장하고 로그인으로 이동\n    const currentUrl = window.location.pathname + window.location.search;\n    if (shouldSaveUrl(currentUrl)) {\n        saveRedirectUrl(currentUrl);\n    }\n\n    // 세션 만료 메시지와 함께 로그인 페이지로 이동\n    const loginUrl = new URL(\"/login\", window.location.origin);\n    loginUrl.searchParams.set(\"reason\", \"session_expired\");\n    window.location.href = loginUrl.toString();\n}\n\n/**\n * 보안 검증을 위한 유틸리티 함수들\n */\nexport const securityUtils = {\n    isValidRedirectUrl,\n    isRedirectUrlExpired,\n    handleSessionTimeout,\n\n    /**\n     * CSRF 토큰 검증 (필요시 사용)\n     */\n    validateCSRFToken: (token: string): boolean => {\n        // 실제 구현에서는 서버와 토큰을 검증\n        return typeof token === \"string\" && token.length > 0;\n    },\n\n    /**\n     * 사용자 에이전트 검증 (봇 차단 등)\n     */\n    validateUserAgent: (): boolean => {\n        if (typeof window === \"undefined\") return true;\n\n        const userAgent = navigator.userAgent.toLowerCase();\n        const suspiciousPatterns = [\"bot\", \"crawler\", \"spider\", \"scraper\"];\n\n        return !suspiciousPatterns.some((pattern) =>\n            userAgent.includes(pattern)\n        );\n    },\n};\n\n/**\n * 로그아웃 시 모든 인증 관련 데이터를 완전히 정리합니다.\n */\nexport function clearAllAuthData(): void {\n    try {\n        // 리다이렉트 URL 정리\n        clearRedirectUrl();\n\n        // sessionStorage에서 인증 관련 모든 데이터 제거\n        const sessionKeysToRemove: string[] = [];\n        for (let i = 0; i < sessionStorage.length; i++) {\n            const key = sessionStorage.key(i);\n            if (\n                key && (\n                    key.includes(\"auth\") ||\n                    key.includes(\"redirect\") ||\n                    key.includes(\"supabase\") ||\n                    key.includes(\"login\")\n                )\n            ) {\n                sessionKeysToRemove.push(key);\n            }\n        }\n        sessionKeysToRemove.forEach((key) => sessionStorage.removeItem(key));\n\n        // localStorage에서 인증 관련 모든 데이터 제거\n        const localKeysToRemove: string[] = [];\n        for (let i = 0; i < localStorage.length; i++) {\n            const key = localStorage.key(i);\n            if (\n                key && (\n                    key.includes(\"auth\") ||\n                    key.includes(\"redirect\") ||\n                    key.includes(\"supabase\") ||\n                    key.includes(\"login\")\n                )\n            ) {\n                localKeysToRemove.push(key);\n            }\n        }\n        localKeysToRemove.forEach((key) => localStorage.removeItem(key));\n\n        console.log(\"모든 인증 관련 데이터가 정리되었습니다.\");\n    } catch (error) {\n        console.warn(\"인증 데이터 정리 실패:\", error);\n    }\n}\n"],"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","ignoreList":[]}