ae6fee41550b48521a1f8404192d17d3
"use strict";

/* istanbul ignore next */
function cov_1jy1qxcqzs() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/app/[lang]/sitemap.ts";
  var hash = "c200e74e719482a79d0ad9ae4d517fec9e38411f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/app/[lang]/sitemap.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 17,
          column: 3
        }
      },
      "2": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 23
        }
      },
      "3": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 56
        }
      },
      "4": {
        start: {
          line: 19,
          column: 26
        },
        end: {
          line: 19,
          column: 65
        }
      },
      "5": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 20,
          column: 69
        }
      },
      "6": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 68
        }
      },
      "7": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "8": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "9": {
        start: {
          line: 30,
          column: 19
        },
        end: {
          line: 30,
          column: 59
        }
      },
      "10": {
        start: {
          line: 31,
          column: 26
        },
        end: {
          line: 31,
          column: 28
        }
      },
      "11": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 36,
          column: 10
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "13": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "14": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 25
        }
      },
      "15": {
        start: {
          line: 42,
          column: 30
        },
        end: {
          line: 42,
          column: 65
        }
      },
      "16": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "17": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 50,
          column: 17
        }
      },
      "18": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 49
        }
      },
      "19": {
        start: {
          line: 48,
          column: 40
        },
        end: {
          line: 48,
          column: 91
        }
      },
      "20": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 52
        }
      },
      "21": {
        start: {
          line: 51,
          column: 19
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "22": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 55,
          column: 17
        }
      },
      "23": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 54,
          column: 49
        }
      },
      "24": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "25": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 24
        }
      },
      "26": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 29
        }
      },
      "27": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 45
        }
      },
      "28": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 18
        }
      },
      "29": {
        start: {
          line: 69,
          column: 22
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "30": {
        start: {
          line: 74,
          column: 28
        },
        end: {
          line: 79,
          column: 16
        }
      },
      "31": {
        start: {
          line: 74,
          column: 54
        },
        end: {
          line: 79,
          column: 15
        }
      },
      "32": {
        start: {
          line: 74,
          column: 93
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "33": {
        start: {
          line: 81,
          column: 20
        },
        end: {
          line: 81,
          column: 22
        }
      },
      "34": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "35": {
        start: {
          line: 83,
          column: 22
        },
        end: {
          line: 83,
          column: 61
        }
      },
      "36": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 89,
          column: 21
        }
      },
      "37": {
        start: {
          line: 84,
          column: 46
        },
        end: {
          line: 89,
          column: 19
        }
      },
      "38": {
        start: {
          line: 84,
          column: 65
        },
        end: {
          line: 89,
          column: 17
        }
      },
      "39": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 58
        }
      },
      "40": {
        start: {
          line: 94,
          column: 22
        },
        end: {
          line: 94,
          column: 24
        }
      },
      "41": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "42": {
        start: {
          line: 96,
          column: 24
        },
        end: {
          line: 96,
          column: 56
        }
      },
      "43": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 102,
          column: 21
        }
      },
      "44": {
        start: {
          line: 97,
          column: 48
        },
        end: {
          line: 102,
          column: 19
        }
      },
      "45": {
        start: {
          line: 97,
          column: 71
        },
        end: {
          line: 102,
          column: 17
        }
      },
      "46": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 59
        }
      },
      "47": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 111,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 10
          }
        },
        loc: {
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 23
      },
      "2": {
        name: "detectAppPages",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 23
          }
        },
        loc: {
          start: {
            line: 29,
            column: 26
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 29
      },
      "3": {
        name: "scanDir",
        decl: {
          start: {
            line: 33,
            column: 13
          },
          end: {
            line: 33,
            column: 20
          }
        },
        loc: {
          start: {
            line: 33,
            column: 41
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 33
      },
      "4": {
        name: "sitemap",
        decl: {
          start: {
            line: 67,
            column: 15
          },
          end: {
            line: 67,
            column: 22
          }
        },
        loc: {
          start: {
            line: 67,
            column: 25
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 67
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 74,
            column: 46
          },
          end: {
            line: 74,
            column: 47
          }
        },
        loc: {
          start: {
            line: 74,
            column: 54
          },
          end: {
            line: 79,
            column: 15
          }
        },
        line: 74
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 74,
            column: 84
          },
          end: {
            line: 74,
            column: 85
          }
        },
        loc: {
          start: {
            line: 74,
            column: 93
          },
          end: {
            line: 79,
            column: 13
          }
        },
        line: 74
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 84,
            column: 38
          },
          end: {
            line: 84,
            column: 39
          }
        },
        loc: {
          start: {
            line: 84,
            column: 46
          },
          end: {
            line: 89,
            column: 19
          }
        },
        line: 84
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 84,
            column: 56
          },
          end: {
            line: 84,
            column: 57
          }
        },
        loc: {
          start: {
            line: 84,
            column: 65
          },
          end: {
            line: 89,
            column: 17
          }
        },
        line: 84
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 97,
            column: 40
          },
          end: {
            line: 97,
            column: 41
          }
        },
        loc: {
          start: {
            line: 97,
            column: 48
          },
          end: {
            line: 102,
            column: 19
          }
        },
        line: 97
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 97,
            column: 60
          },
          end: {
            line: 97,
            column: 61
          }
        },
        loc: {
          start: {
            line: 97,
            column: 71
          },
          end: {
            line: 102,
            column: 17
          }
        },
        line: 97
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 35
          },
          end: {
            line: 24,
            column: 38
          }
        }, {
          start: {
            line: 24,
            column: 41
          },
          end: {
            line: 26,
            column: 5
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 14
          }
        }, {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 32
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 26
          },
          end: {
            line: 33,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 37
          },
          end: {
            line: 33,
            column: 39
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 39,
            column: 262
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 39,
            column: 42
          }
        }, {
          start: {
            line: 39,
            column: 46
          },
          end: {
            line: 39,
            column: 72
          }
        }, {
          start: {
            line: 39,
            column: 76
          },
          end: {
            line: 39,
            column: 96
          }
        }, {
          start: {
            line: 39,
            column: 100
          },
          end: {
            line: 39,
            column: 127
          }
        }, {
          start: {
            line: 39,
            column: 131
          },
          end: {
            line: 39,
            column: 153
          }
        }, {
          start: {
            line: 39,
            column: 157
          },
          end: {
            line: 39,
            column: 179
          }
        }, {
          start: {
            line: 39,
            column: 183
          },
          end: {
            line: 39,
            column: 209
          }
        }, {
          start: {
            line: 39,
            column: 213
          },
          end: {
            line: 39,
            column: 235
          }
        }, {
          start: {
            line: 39,
            column: 239
          },
          end: {
            line: 39,
            column: 262
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: 51,
            column: 19
          },
          end: {
            line: 56,
            column: 13
          }
        }],
        line: 43
      },
      "6": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        }, {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 50,
            column: 17
          }
        }],
        line: 45
      },
      "7": {
        loc: {
          start: {
            line: 45,
            column: 20
          },
          end: {
            line: 45,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 20
          },
          end: {
            line: 45,
            column: 46
          }
        }, {
          start: {
            line: 45,
            column: 50
          },
          end: {
            line: 45,
            column: 74
          }
        }],
        line: 45
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 40
          },
          end: {
            line: 48,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 51
          },
          end: {
            line: 48,
            column: 78
          }
        }, {
          start: {
            line: 48,
            column: 81
          },
          end: {
            line: 48,
            column: 91
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 51,
            column: 19
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 19
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "10": {
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 37
          }
        }, {
          start: {
            line: 51,
            column: 42
          },
          end: {
            line: 51,
            column: 67
          }
        }, {
          start: {
            line: 51,
            column: 71
          },
          end: {
            line: 51,
            column: 96
          }
        }],
        line: 51
      },
      "11": {
        loc: {
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 55,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 55,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "12": {
        loc: {
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 53,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 53,
            column: 28
          }
        }, {
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 65
          }
        }],
        line: 53
      },
      "13": {
        loc: {
          start: {
            line: 75,
            column: 56
          },
          end: {
            line: 75,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 75,
            column: 71
          },
          end: {
            line: 75,
            column: 73
          }
        }, {
          start: {
            line: 75,
            column: 76
          },
          end: {
            line: 75,
            column: 80
          }
        }],
        line: 75
      },
      "14": {
        loc: {
          start: {
            line: 78,
            column: 26
          },
          end: {
            line: 78,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 41
          },
          end: {
            line: 78,
            column: 44
          }
        }, {
          start: {
            line: 78,
            column: 47
          },
          end: {
            line: 78,
            column: 50
          }
        }],
        line: 78
      },
      "15": {
        loc: {
          start: {
            line: 86,
            column: 43
          },
          end: {
            line: 86,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 43
          },
          end: {
            line: 86,
            column: 58
          }
        }, {
          start: {
            line: 86,
            column: 62
          },
          end: {
            line: 86,
            column: 77
          }
        }],
        line: 86
      },
      "16": {
        loc: {
          start: {
            line: 99,
            column: 43
          },
          end: {
            line: 99,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 43
          },
          end: {
            line: 99,
            column: 60
          }
        }, {
          start: {
            line: 99,
            column: 64
          },
          end: {
            line: 99,
            column: 81
          }
        }],
        line: 99
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0, 0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/app/[lang]/sitemap.ts"],
      sourcesContent: ["import {MetadataRoute} from \"next\";\nimport {createClient} from \"@/utils/supabase-server-client\";\nimport {SITE_URL, STATIC_PAGES} from \"./constants/static-pages\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { getVotes } from '@/lib/data-fetching/vote-service';\nimport { getRewards } from '@/utils/api/queries';\n\ninterface Vote {\n    id: number;\n    title: any;\n    created_at: string;\n    updated_at: string;\n    status?: string; // \uD22C\uD45C \uC0C1\uD0DC (\uD65C\uC131/\uC608\uC815/\uC885\uB8CC)\n}\n\n// \uD30C\uC77C \uC2DC\uC2A4\uD15C\uC5D0\uC11C app \uB514\uB809\uD1A0\uB9AC\uC758 \uD398\uC774\uC9C0\uB97C \uC790\uB3D9\uC73C\uB85C \uD0D0\uC9C0\uD558\uB294 \uD568\uC218\nfunction detectAppPages(): string[] {\n    const appDir = path.join(process.cwd(), \"app\");\n    const detectedPaths: string[] = [];\n\n    // \uC7AC\uADC0\uC801\uC73C\uB85C \uB514\uB809\uD1A0\uB9AC \uD0D0\uC0C9\n    function scanDir(dir: string, basePath: string = \"\") {\n        const entries = fs.readdirSync(dir, { withFileTypes: true });\n\n        for (const entry of entries) {\n            // \uD2B9\uC218 \uB514\uB809\uD1A0\uB9AC \uC2A4\uD0B5\n            if (\n                entry.name.startsWith(\"_\") || entry.name.startsWith(\".\") ||\n                entry.name === \"api\" || entry.name === \"components\" ||\n                entry.name === \"hooks\" || entry.name === \"utils\" ||\n                entry.name === \"constants\" || entry.name === \"types\" ||\n                entry.name === \"styles\"\n            ) {\n                continue;\n            }\n\n            const entryPath = path.join(dir, entry.name);\n\n            if (entry.isDirectory()) {\n                // \uB77C\uC6B0\uD2B8 \uADF8\uB8F9 \uCC98\uB9AC ((main), (auth) \uB4F1)\n                if (entry.name.startsWith(\"(\") && entry.name.endsWith(\")\")) {\n                    scanDir(entryPath, basePath);\n                } else {\n                    const newBasePath = basePath\n                        ? `${basePath}/${entry.name}`\n                        : entry.name;\n                    scanDir(entryPath, newBasePath);\n                }\n            } else if (\n                entry.isFile() &&\n                (entry.name === \"page.tsx\" || entry.name === \"page.jsx\")\n            ) {\n                // page.tsx \uB610\uB294 page.jsx \uD30C\uC77C\uC774 \uC788\uC73C\uBA74 \uD574\uB2F9 \uACBD\uB85C\uB294 \uD398\uC774\uC9C0\n                if (basePath && !detectedPaths.includes(basePath)) {\n                    detectedPaths.push(basePath);\n                }\n            }\n        }\n    }\n\n    try {\n        scanDir(appDir);\n        return detectedPaths;\n    } catch (error) {\n        console.error(\"\uD398\uC774\uC9C0 \uD0D0\uC9C0 \uC911 \uC624\uB958:\", error);\n        return [];\n    }\n}\n\n/**\n * \uC0AC\uC774\uD2B8\uB9F5 \uC0DD\uC131 \uD568\uC218\n * \n * Next.js\uC758 \uBA54\uD0C0\uB370\uC774\uD130 API\uB97C \uD65C\uC6A9\uD558\uC5EC \uB3D9\uC801\uC73C\uB85C \uC0AC\uC774\uD2B8\uB9F5\uC744 \uC0DD\uC131\uD569\uB2C8\uB2E4.\n * \uC815\uC801 \uD398\uC774\uC9C0\uC640 \uB3D9\uC801 \uCEE8\uD150\uCE20(\uD22C\uD45C, \uB9AC\uC6CC\uB4DC \uB4F1)\uB97C \uBAA8\uB450 \uD3EC\uD568\uD569\uB2C8\uB2E4.\n * \n * @return {Promise<MetadataRoute.Sitemap>} \uC0AC\uC774\uD2B8\uB9F5 \uAC1D\uCCB4 \uBC30\uC5F4\n */\nexport default async function sitemap(): Promise<MetadataRoute.Sitemap> {\n    // \uB2E4\uAD6D\uC5B4 \uC9C0\uC6D0\uC744 \uC704\uD55C \uC5B8\uC5B4 \uBAA9\uB85D\n    const languages = ['ko', 'en'];\n\n    // 1. \uC815\uC801 \uD398\uC774\uC9C0 \uC0AC\uC774\uD2B8\uB9F5 \uD56D\uBAA9 \uC0DD\uC131\n    const staticPagesMaps = languages.flatMap(lang => \n        STATIC_PAGES.map(page => ({\n            url: `${SITE_URL}/${lang}${page === '/' ? '' : page}`,\n            lastModified: new Date(),\n            changeFrequency: 'weekly' as const,\n            priority: page === '/' ? 1.0 : 0.8,\n        }))\n    );\n\n    // 2. \uD22C\uD45C \uD398\uC774\uC9C0 \uC0AC\uC774\uD2B8\uB9F5 \uD56D\uBAA9 \uC0DD\uC131\n    let votesMaps: MetadataRoute.Sitemap = [];\n    try {\n        const votes = await getVotes('all');\n        \n        votesMaps = languages.flatMap(lang => \n            votes.map(vote => ({\n                url: `${SITE_URL}/${lang}/vote/${vote.id}`,\n                lastModified: new Date(vote.updated_at || vote.created_at),\n                changeFrequency: 'daily' as const,\n                priority: 0.9,\n            }))\n        );\n    } catch (error) {\n        console.error('\uC0AC\uC774\uD2B8\uB9F5 \uC0DD\uC131 \uC911 \uD22C\uD45C \uB370\uC774\uD130 \uAC00\uC838\uC624\uAE30 \uC2E4\uD328:', error);\n    }\n\n    // 3. \uB9AC\uC6CC\uB4DC \uD398\uC774\uC9C0 \uC0AC\uC774\uD2B8\uB9F5 \uD56D\uBAA9 \uC0DD\uC131\n    let rewardsMaps: MetadataRoute.Sitemap = [];\n    try {\n        const rewards = await getRewards();\n        \n        rewardsMaps = languages.flatMap(lang => \n            rewards.map(reward => ({\n                url: `${SITE_URL}/${lang}/rewards/${reward.id}`,\n                lastModified: new Date(reward.updated_at || reward.created_at),\n                changeFrequency: 'weekly' as const,\n                priority: 0.8,\n            }))\n        );\n    } catch (error) {\n        console.error('\uC0AC\uC774\uD2B8\uB9F5 \uC0DD\uC131 \uC911 \uB9AC\uC6CC\uB4DC \uB370\uC774\uD130 \uAC00\uC838\uC624\uAE30 \uC2E4\uD328:', error);\n    }\n\n    // 4. \uC0AC\uC774\uD2B8\uB9F5 \uBCD1\uD569 \uBC0F \uBC18\uD658\n    return [\n        ...staticPagesMaps,\n        ...votesMaps,\n        ...rewardsMaps,\n    ];\n}\n"],
      names: ["sitemap", "detectAppPages", "appDir", "path", "join", "process", "cwd", "detectedPaths", "scanDir", "dir", "basePath", "entries", "fs", "readdirSync", "withFileTypes", "entry", "name", "startsWith", "entryPath", "isDirectory", "endsWith", "newBasePath", "isFile", "includes", "push", "error", "console", "languages", "staticPagesMaps", "flatMap", "lang", "STATIC_PAGES", "map", "page", "url", "SITE_URL", "lastModified", "Date", "changeFrequency", "priority", "votesMaps", "votes", "getVotes", "vote", "id", "updated_at", "created_at", "rewardsMaps", "rewards", "getRewards", "reward"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c200e74e719482a79d0ad9ae4d517fec9e38411f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jy1qxcqzs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jy1qxcqzs();
cov_1jy1qxcqzs().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1jy1qxcqzs().s[1]++;
Object.defineProperty(exports,
/**
* 사이트맵 생성 함수
* 
* Next.js의 메타데이터 API를 활용하여 동적으로 사이트맵을 생성합니다.
* 정적 페이지와 동적 컨텐츠(투표, 리워드 등)를 모두 포함합니다.
* 
* @return {Promise<MetadataRoute.Sitemap>} 사이트맵 객체 배열
*/
"default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1jy1qxcqzs().f[0]++;
    cov_1jy1qxcqzs().s[2]++;
    return sitemap;
  }
});
const _staticpages =
/* istanbul ignore next */
(cov_1jy1qxcqzs().s[3]++, require("./constants/static-pages"));
const _fs =
/* istanbul ignore next */
(/*#__PURE__*/cov_1jy1qxcqzs().s[4]++, _interop_require_default(require("fs")));
const _path =
/* istanbul ignore next */
(/*#__PURE__*/cov_1jy1qxcqzs().s[5]++, _interop_require_default(require("path")));
const _voteservice =
/* istanbul ignore next */
(cov_1jy1qxcqzs().s[6]++, require("../../lib/data-fetching/vote-service"));
const _queries =
/* istanbul ignore next */
(cov_1jy1qxcqzs().s[7]++, require("../../utils/api/queries"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1jy1qxcqzs().f[1]++;
  cov_1jy1qxcqzs().s[8]++;
  return /* istanbul ignore next */(cov_1jy1qxcqzs().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1jy1qxcqzs().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1jy1qxcqzs().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1jy1qxcqzs().b[0][1]++, {
    default: obj
  });
}
// 파일 시스템에서 app 디렉토리의 페이지를 자동으로 탐지하는 함수
function detectAppPages() {
  /* istanbul ignore next */
  cov_1jy1qxcqzs().f[2]++;
  const appDir =
  /* istanbul ignore next */
  (cov_1jy1qxcqzs().s[9]++, _path.default.join(process.cwd(), "app"));
  const detectedPaths =
  /* istanbul ignore next */
  (cov_1jy1qxcqzs().s[10]++, []);
  // 재귀적으로 디렉토리 탐색
  function scanDir(dir, basePath =
  /* istanbul ignore next */
  (cov_1jy1qxcqzs().b[2][0]++, "")) {
    /* istanbul ignore next */
    cov_1jy1qxcqzs().f[3]++;
    const entries =
    /* istanbul ignore next */
    (cov_1jy1qxcqzs().s[11]++, _fs.default.readdirSync(dir, {
      withFileTypes: true
    }));
    /* istanbul ignore next */
    cov_1jy1qxcqzs().s[12]++;
    for (const entry of entries) {
      /* istanbul ignore next */
      cov_1jy1qxcqzs().s[13]++;
      // 특수 디렉토리 스킵
      if (
      /* istanbul ignore next */
      (cov_1jy1qxcqzs().b[4][0]++, entry.name.startsWith("_")) ||
      /* istanbul ignore next */
      (cov_1jy1qxcqzs().b[4][1]++, entry.name.startsWith(".")) ||
      /* istanbul ignore next */
      (cov_1jy1qxcqzs().b[4][2]++, entry.name === "api") ||
      /* istanbul ignore next */
      (cov_1jy1qxcqzs().b[4][3]++, entry.name === "components") ||
      /* istanbul ignore next */
      (cov_1jy1qxcqzs().b[4][4]++, entry.name === "hooks") ||
      /* istanbul ignore next */
      (cov_1jy1qxcqzs().b[4][5]++, entry.name === "utils") ||
      /* istanbul ignore next */
      (cov_1jy1qxcqzs().b[4][6]++, entry.name === "constants") ||
      /* istanbul ignore next */
      (cov_1jy1qxcqzs().b[4][7]++, entry.name === "types") ||
      /* istanbul ignore next */
      (cov_1jy1qxcqzs().b[4][8]++, entry.name === "styles")) {
        /* istanbul ignore next */
        cov_1jy1qxcqzs().b[3][0]++;
        cov_1jy1qxcqzs().s[14]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1jy1qxcqzs().b[3][1]++;
      }
      const entryPath =
      /* istanbul ignore next */
      (cov_1jy1qxcqzs().s[15]++, _path.default.join(dir, entry.name));
      /* istanbul ignore next */
      cov_1jy1qxcqzs().s[16]++;
      if (entry.isDirectory()) {
        /* istanbul ignore next */
        cov_1jy1qxcqzs().b[5][0]++;
        cov_1jy1qxcqzs().s[17]++;
        // 라우트 그룹 처리 ((main), (auth) 등)
        if (
        /* istanbul ignore next */
        (cov_1jy1qxcqzs().b[7][0]++, entry.name.startsWith("(")) &&
        /* istanbul ignore next */
        (cov_1jy1qxcqzs().b[7][1]++, entry.name.endsWith(")"))) {
          /* istanbul ignore next */
          cov_1jy1qxcqzs().b[6][0]++;
          cov_1jy1qxcqzs().s[18]++;
          scanDir(entryPath, basePath);
        } else {
          /* istanbul ignore next */
          cov_1jy1qxcqzs().b[6][1]++;
          const newBasePath =
          /* istanbul ignore next */
          (cov_1jy1qxcqzs().s[19]++, basePath ?
          /* istanbul ignore next */
          (cov_1jy1qxcqzs().b[8][0]++, `${basePath}/${entry.name}`) :
          /* istanbul ignore next */
          (cov_1jy1qxcqzs().b[8][1]++, entry.name));
          /* istanbul ignore next */
          cov_1jy1qxcqzs().s[20]++;
          scanDir(entryPath, newBasePath);
        }
      } else {
        /* istanbul ignore next */
        cov_1jy1qxcqzs().b[5][1]++;
        cov_1jy1qxcqzs().s[21]++;
        if (
        /* istanbul ignore next */
        (cov_1jy1qxcqzs().b[10][0]++, entry.isFile()) && (
        /* istanbul ignore next */
        (cov_1jy1qxcqzs().b[10][1]++, entry.name === "page.tsx") ||
        /* istanbul ignore next */
        (cov_1jy1qxcqzs().b[10][2]++, entry.name === "page.jsx"))) {
          /* istanbul ignore next */
          cov_1jy1qxcqzs().b[9][0]++;
          cov_1jy1qxcqzs().s[22]++;
          // page.tsx 또는 page.jsx 파일이 있으면 해당 경로는 페이지
          if (
          /* istanbul ignore next */
          (cov_1jy1qxcqzs().b[12][0]++, basePath) &&
          /* istanbul ignore next */
          (cov_1jy1qxcqzs().b[12][1]++, !detectedPaths.includes(basePath))) {
            /* istanbul ignore next */
            cov_1jy1qxcqzs().b[11][0]++;
            cov_1jy1qxcqzs().s[23]++;
            detectedPaths.push(basePath);
          } else
          /* istanbul ignore next */
          {
            cov_1jy1qxcqzs().b[11][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1jy1qxcqzs().b[9][1]++;
        }
      }
    }
  }
  /* istanbul ignore next */
  cov_1jy1qxcqzs().s[24]++;
  try {
    /* istanbul ignore next */
    cov_1jy1qxcqzs().s[25]++;
    scanDir(appDir);
    /* istanbul ignore next */
    cov_1jy1qxcqzs().s[26]++;
    return detectedPaths;
  } catch (error) {
    /* istanbul ignore next */
    cov_1jy1qxcqzs().s[27]++;
    console.error("페이지 탐지 중 오류:", error);
    /* istanbul ignore next */
    cov_1jy1qxcqzs().s[28]++;
    return [];
  }
}
async function sitemap() {
  /* istanbul ignore next */
  cov_1jy1qxcqzs().f[4]++;
  // 다국어 지원을 위한 언어 목록
  const languages =
  /* istanbul ignore next */
  (cov_1jy1qxcqzs().s[29]++, ['ko', 'en']);
  // 1. 정적 페이지 사이트맵 항목 생성
  const staticPagesMaps =
  /* istanbul ignore next */
  (cov_1jy1qxcqzs().s[30]++, languages.flatMap(lang => {
    /* istanbul ignore next */
    cov_1jy1qxcqzs().f[5]++;
    cov_1jy1qxcqzs().s[31]++;
    return _staticpages.STATIC_PAGES.map(page => {
      /* istanbul ignore next */
      cov_1jy1qxcqzs().f[6]++;
      cov_1jy1qxcqzs().s[32]++;
      return {
        url: `${_staticpages.SITE_URL}/${lang}${page === '/' ?
        /* istanbul ignore next */
        (cov_1jy1qxcqzs().b[13][0]++, '') :
        /* istanbul ignore next */
        (cov_1jy1qxcqzs().b[13][1]++, page)}`,
        lastModified: new Date(),
        changeFrequency: 'weekly',
        priority: page === '/' ?
        /* istanbul ignore next */
        (cov_1jy1qxcqzs().b[14][0]++, 1.0) :
        /* istanbul ignore next */
        (cov_1jy1qxcqzs().b[14][1]++, 0.8)
      };
    });
  }));
  // 2. 투표 페이지 사이트맵 항목 생성
  let votesMaps =
  /* istanbul ignore next */
  (cov_1jy1qxcqzs().s[33]++, []);
  /* istanbul ignore next */
  cov_1jy1qxcqzs().s[34]++;
  try {
    const votes =
    /* istanbul ignore next */
    (cov_1jy1qxcqzs().s[35]++, await (0, _voteservice.getVotes)('all'));
    /* istanbul ignore next */
    cov_1jy1qxcqzs().s[36]++;
    votesMaps = languages.flatMap(lang => {
      /* istanbul ignore next */
      cov_1jy1qxcqzs().f[7]++;
      cov_1jy1qxcqzs().s[37]++;
      return votes.map(vote => {
        /* istanbul ignore next */
        cov_1jy1qxcqzs().f[8]++;
        cov_1jy1qxcqzs().s[38]++;
        return {
          url: `${_staticpages.SITE_URL}/${lang}/vote/${vote.id}`,
          lastModified: new Date(
          /* istanbul ignore next */
          (cov_1jy1qxcqzs().b[15][0]++, vote.updated_at) ||
          /* istanbul ignore next */
          (cov_1jy1qxcqzs().b[15][1]++, vote.created_at)),
          changeFrequency: 'daily',
          priority: 0.9
        };
      });
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1jy1qxcqzs().s[39]++;
    console.error('사이트맵 생성 중 투표 데이터 가져오기 실패:', error);
  }
  // 3. 리워드 페이지 사이트맵 항목 생성
  let rewardsMaps =
  /* istanbul ignore next */
  (cov_1jy1qxcqzs().s[40]++, []);
  /* istanbul ignore next */
  cov_1jy1qxcqzs().s[41]++;
  try {
    const rewards =
    /* istanbul ignore next */
    (cov_1jy1qxcqzs().s[42]++, await (0, _queries.getRewards)());
    /* istanbul ignore next */
    cov_1jy1qxcqzs().s[43]++;
    rewardsMaps = languages.flatMap(lang => {
      /* istanbul ignore next */
      cov_1jy1qxcqzs().f[9]++;
      cov_1jy1qxcqzs().s[44]++;
      return rewards.map(reward => {
        /* istanbul ignore next */
        cov_1jy1qxcqzs().f[10]++;
        cov_1jy1qxcqzs().s[45]++;
        return {
          url: `${_staticpages.SITE_URL}/${lang}/rewards/${reward.id}`,
          lastModified: new Date(
          /* istanbul ignore next */
          (cov_1jy1qxcqzs().b[16][0]++, reward.updated_at) ||
          /* istanbul ignore next */
          (cov_1jy1qxcqzs().b[16][1]++, reward.created_at)),
          changeFrequency: 'weekly',
          priority: 0.8
        };
      });
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1jy1qxcqzs().s[46]++;
    console.error('사이트맵 생성 중 리워드 데이터 가져오기 실패:', error);
  }
  // 4. 사이트맵 병합 및 반환
  /* istanbul ignore next */
  cov_1jy1qxcqzs().s[47]++;
  return [...staticPagesMaps, ...votesMaps, ...rewardsMaps];
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,