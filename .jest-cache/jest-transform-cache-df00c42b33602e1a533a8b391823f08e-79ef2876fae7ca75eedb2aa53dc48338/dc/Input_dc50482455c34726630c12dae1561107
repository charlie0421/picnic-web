196318d233d0f1883419127722f7d226
"use strict";

/* istanbul ignore next */
function cov_ex3udvk2j() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/components/common/atoms/Input.tsx";
  var hash = "bd85871b12cd61de0cc13da182b3ee9845add688";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/components/common/atoms/Input.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 21
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "5": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "6": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 42,
          column: 2
        }
      },
      "7": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 76
        }
      },
      "8": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 128
        }
      },
      "9": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 129
        }
      },
      "10": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 41,
          column: 7
        }
      },
      "11": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 43,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 51
          },
          end: {
            line: 14,
            column: 52
          }
        },
        loc: {
          start: {
            line: 14,
            column: 132
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 91
          },
          end: {
            line: 14,
            column: 108
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 103
          },
          end: {
            line: 14,
            column: 108
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 15,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 15,
            column: 22
          }
        }, {
          start: {
            line: 15,
            column: 26
          },
          end: {
            line: 15,
            column: 76
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 32
          },
          end: {
            line: 17,
            column: 67
          }
        }, {
          start: {
            line: 17,
            column: 70
          },
          end: {
            line: 17,
            column: 129
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 40
          }
        }, {
          start: {
            line: 19,
            column: 44
          },
          end: {
            line: 19,
            column: 52
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 25,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 17
          }
        }, {
          start: {
            line: 21,
            column: 35
          },
          end: {
            line: 25,
            column: 14
          }
        }],
        line: 21
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 64
          },
          end: {
            line: 29,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 64
          },
          end: {
            line: 29,
            column: 73
          }
        }, {
          start: {
            line: 29,
            column: 77
          },
          end: {
            line: 29,
            column: 85
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 35,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 17
          }
        }, {
          start: {
            line: 32,
            column: 35
          },
          end: {
            line: 35,
            column: 14
          }
        }],
        line: 32
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 39,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 22
          }
        }, {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 32
          }
        }, {
          start: {
            line: 36,
            column: 50
          },
          end: {
            line: 39,
            column: 14
          }
        }],
        line: 36
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/components/common/atoms/Input.tsx"],
      sourcesContent: ["import { forwardRef } from 'react';\nimport { cn } from '@/components/utils/cn';\n\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  error?: string;\n  helperText?: string;\n  fullWidth?: boolean;\n}\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n  ({ \n    className,\n    label,\n    error,\n    helperText,\n    fullWidth = false,\n    id,\n    ...props \n  }, ref) => {\n    const inputId = id || `input-${Math.random().toString(36).substr(2, 9)}`;\n    \n    const baseStyles = 'block px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors';\n    const errorStyles = error \n      ? 'border-red-500 focus:ring-red-500' \n      : 'border-gray-300 focus:ring-blue-500 focus:border-blue-500';\n    \n    return (\n      <div className={cn(fullWidth && 'w-full')}>\n        {label && (\n          <label \n            htmlFor={inputId}\n            className=\"block text-sm font-medium text-gray-700 mb-1\"\n          >\n            {label}\n          </label>\n        )}\n        <input\n          ref={ref}\n          id={inputId}\n          className={cn(\n            baseStyles,\n            errorStyles,\n            fullWidth && 'w-full',\n            className\n          )}\n          {...props}\n        />\n        {error && (\n          <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n        )}\n        {helperText && !error && (\n          <p className=\"mt-1 text-sm text-gray-500\">{helperText}</p>\n        )}\n      </div>\n    );\n  }\n);\n\nInput.displayName = 'Input'; "],
      names: ["Input", "forwardRef", "className", "label", "error", "helperText", "fullWidth", "id", "props", "ref", "inputId", "Math", "random", "toString", "substr", "baseStyles", "errorStyles", "div", "cn", "htmlFor", "input", "p", "displayName"],
      mappings: ";;;;+BAUaA;;;eAAAA;;;;uBAVc;oBACR;AASZ,MAAMA,sBAAQC,IAAAA,iBAAU,EAC7B,CAAC,EACCC,SAAS,EACTC,KAAK,EACLC,KAAK,EACLC,UAAU,EACVC,YAAY,KAAK,EACjBC,EAAE,EACF,GAAGC,OACJ,EAAEC;IACD,MAAMC,UAAUH,MAAM,CAAC,MAAM,EAAEI,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,MAAM,CAAC,GAAG,IAAI;IAExE,MAAMC,aAAa;IACnB,MAAMC,cAAcZ,QAChB,sCACA;IAEJ,qBACE,sBAACa;QAAIf,WAAWgB,IAAAA,MAAE,EAACZ,aAAa;;YAC7BH,uBACC,qBAACA;gBACCgB,SAAST;gBACTR,WAAU;0BAETC;;0BAGL,qBAACiB;gBACCX,KAAKA;gBACLF,IAAIG;gBACJR,WAAWgB,IAAAA,MAAE,EACXH,YACAC,aACAV,aAAa,UACbJ;gBAED,GAAGM,KAAK;;YAEVJ,uBACC,qBAACiB;gBAAEnB,WAAU;0BAA6BE;;YAE3CC,cAAc,CAACD,uBACd,qBAACiB;gBAAEnB,WAAU;0BAA8BG;;;;AAInD;AAGFL,MAAMsB,WAAW,GAAG"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bd85871b12cd61de0cc13da182b3ee9845add688"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ex3udvk2j = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ex3udvk2j();
cov_ex3udvk2j().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ex3udvk2j().s[1]++;
Object.defineProperty(exports, "Input", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_ex3udvk2j().f[0]++;
    cov_ex3udvk2j().s[2]++;
    return Input;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_ex3udvk2j().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_ex3udvk2j().s[4]++, require("react"));
const _cn =
/* istanbul ignore next */
(cov_ex3udvk2j().s[5]++, require("../../utils/cn"));
const Input =
/* istanbul ignore next */
(/*#__PURE__*/cov_ex3udvk2j().s[6]++, (0, _react.forwardRef)(({
  className,
  label,
  error,
  helperText,
  fullWidth =
  /* istanbul ignore next */
  (cov_ex3udvk2j().b[0][0]++, false),
  id,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_ex3udvk2j().f[1]++;
  const inputId =
  /* istanbul ignore next */
  (cov_ex3udvk2j().s[7]++,
  /* istanbul ignore next */
  (cov_ex3udvk2j().b[1][0]++, id) ||
  /* istanbul ignore next */
  (cov_ex3udvk2j().b[1][1]++, `input-${Math.random().toString(36).substr(2, 9)}`));
  const baseStyles =
  /* istanbul ignore next */
  (cov_ex3udvk2j().s[8]++, 'block px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors');
  const errorStyles =
  /* istanbul ignore next */
  (cov_ex3udvk2j().s[9]++, error ?
  /* istanbul ignore next */
  (cov_ex3udvk2j().b[2][0]++, 'border-red-500 focus:ring-red-500') :
  /* istanbul ignore next */
  (cov_ex3udvk2j().b[2][1]++, 'border-gray-300 focus:ring-blue-500 focus:border-blue-500'));
  /* istanbul ignore next */
  cov_ex3udvk2j().s[10]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: (0, _cn.cn)(
    /* istanbul ignore next */
    (cov_ex3udvk2j().b[3][0]++, fullWidth) &&
    /* istanbul ignore next */
    (cov_ex3udvk2j().b[3][1]++, 'w-full')),
    children: [
    /* istanbul ignore next */
    (cov_ex3udvk2j().b[4][0]++, label) &&
    /* istanbul ignore next */
    (cov_ex3udvk2j().b[4][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("label", {
      htmlFor: inputId,
      className: "block text-sm font-medium text-gray-700 mb-1",
      children: label
    })), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
      ref: ref,
      id: inputId,
      className: (0, _cn.cn)(baseStyles, errorStyles,
      /* istanbul ignore next */
      (cov_ex3udvk2j().b[5][0]++, fullWidth) &&
      /* istanbul ignore next */
      (cov_ex3udvk2j().b[5][1]++, 'w-full'), className),
      ...props
    }),
    /* istanbul ignore next */
    (cov_ex3udvk2j().b[6][0]++, error) &&
    /* istanbul ignore next */
    (cov_ex3udvk2j().b[6][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
      className: "mt-1 text-sm text-red-600",
      children: error
    })),
    /* istanbul ignore next */
    (cov_ex3udvk2j().b[7][0]++, helperText) &&
    /* istanbul ignore next */
    (cov_ex3udvk2j().b[7][1]++, !error) &&
    /* istanbul ignore next */
    (cov_ex3udvk2j().b[7][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
      className: "mt-1 text-sm text-gray-500",
      children: helperText
    }))]
  });
}));
/* istanbul ignore next */
cov_ex3udvk2j().s[11]++;
Input.displayName = 'Input';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZXgzdWR2azJqIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiSW5wdXQiLCJfcmVhY3QiLCJmb3J3YXJkUmVmIiwiY2xhc3NOYW1lIiwibGFiZWwiLCJlcnJvciIsImhlbHBlclRleHQiLCJmdWxsV2lkdGgiLCJiIiwiaWQiLCJwcm9wcyIsInJlZiIsImYiLCJpbnB1dElkIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwiYmFzZVN0eWxlcyIsImVycm9yU3R5bGVzIiwiX2pzeHJ1bnRpbWUiLCJqc3hzIiwiX2NuIiwiY24iLCJqc3giLCJodG1sRm9yIiwiZGlzcGxheU5hbWUiXSwic291cmNlcyI6WyIvVXNlcnMvY2hlb2xoeXVuL1JlcG9zaXRvcmllcy9waWNuaWMtd2ViL2NvbXBvbmVudHMvY29tbW9uL2F0b21zL0lucHV0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY24gfSBmcm9tICdAL2NvbXBvbmVudHMvdXRpbHMvY24nO1xuXG5leHBvcnQgaW50ZXJmYWNlIElucHV0UHJvcHMgZXh0ZW5kcyBSZWFjdC5JbnB1dEhUTUxBdHRyaWJ1dGVzPEhUTUxJbnB1dEVsZW1lbnQ+IHtcbiAgbGFiZWw/OiBzdHJpbmc7XG4gIGVycm9yPzogc3RyaW5nO1xuICBoZWxwZXJUZXh0Pzogc3RyaW5nO1xuICBmdWxsV2lkdGg/OiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgSW5wdXQgPSBmb3J3YXJkUmVmPEhUTUxJbnB1dEVsZW1lbnQsIElucHV0UHJvcHM+KFxuICAoeyBcbiAgICBjbGFzc05hbWUsXG4gICAgbGFiZWwsXG4gICAgZXJyb3IsXG4gICAgaGVscGVyVGV4dCxcbiAgICBmdWxsV2lkdGggPSBmYWxzZSxcbiAgICBpZCxcbiAgICAuLi5wcm9wcyBcbiAgfSwgcmVmKSA9PiB7XG4gICAgY29uc3QgaW5wdXRJZCA9IGlkIHx8IGBpbnB1dC0ke01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KX1gO1xuICAgIFxuICAgIGNvbnN0IGJhc2VTdHlsZXMgPSAnYmxvY2sgcHgtMyBweS0yIGJvcmRlciByb3VuZGVkLWxnIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1vZmZzZXQtMiB0cmFuc2l0aW9uLWNvbG9ycyc7XG4gICAgY29uc3QgZXJyb3JTdHlsZXMgPSBlcnJvciBcbiAgICAgID8gJ2JvcmRlci1yZWQtNTAwIGZvY3VzOnJpbmctcmVkLTUwMCcgXG4gICAgICA6ICdib3JkZXItZ3JheS0zMDAgZm9jdXM6cmluZy1ibHVlLTUwMCBmb2N1czpib3JkZXItYmx1ZS01MDAnO1xuICAgIFxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y24oZnVsbFdpZHRoICYmICd3LWZ1bGwnKX0+XG4gICAgICAgIHtsYWJlbCAmJiAoXG4gICAgICAgICAgPGxhYmVsIFxuICAgICAgICAgICAgaHRtbEZvcj17aW5wdXRJZH1cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImJsb2NrIHRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMCBtYi0xXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICB7bGFiZWx9XG4gICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgKX1cbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgICAgaWQ9e2lucHV0SWR9XG4gICAgICAgICAgY2xhc3NOYW1lPXtjbihcbiAgICAgICAgICAgIGJhc2VTdHlsZXMsXG4gICAgICAgICAgICBlcnJvclN0eWxlcyxcbiAgICAgICAgICAgIGZ1bGxXaWR0aCAmJiAndy1mdWxsJyxcbiAgICAgICAgICAgIGNsYXNzTmFtZVxuICAgICAgICAgICl9XG4gICAgICAgICAgey4uLnByb3BzfVxuICAgICAgICAvPlxuICAgICAgICB7ZXJyb3IgJiYgKFxuICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm10LTEgdGV4dC1zbSB0ZXh0LXJlZC02MDBcIj57ZXJyb3J9PC9wPlxuICAgICAgICApfVxuICAgICAgICB7aGVscGVyVGV4dCAmJiAhZXJyb3IgJiYgKFxuICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm10LTEgdGV4dC1zbSB0ZXh0LWdyYXktNTAwXCI+e2hlbHBlclRleHR9PC9wPlxuICAgICAgICApfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuKTtcblxuSW5wdXQuZGlzcGxheU5hbWUgPSAnSW5wdXQnOyAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQXNCVTtJQUFBQSxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxhQUFBO0FBQUFBLGFBQUEsR0FBQUUsQ0FBQTs7Ozs7OytCQVpHOzs7Ozs7V0FBQUMsS0FBQTs7Ozs7Ozs7aUNBVmM7OztpQ0FDUjtBQVNa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