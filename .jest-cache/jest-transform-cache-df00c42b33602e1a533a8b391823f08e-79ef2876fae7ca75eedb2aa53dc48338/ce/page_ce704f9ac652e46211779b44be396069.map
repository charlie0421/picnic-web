{"version":3,"names":["cov_5ms3rrjiv","actualCoverage","s","default","f","RewardDetailPage","dynamic","generateMetadata","params","id","rewardId","reward","_rewardservice","getRewardById","b","_metadatautils","createPageMetadata","title","ko","en","imageUrl","thumbnail","url","_staticpages","SITE_URL","metadata","createImageMetadata","openGraph","images","alt","type","twitter","card","alternates","canonical","error","console","log","_navigation","notFound","_jsxruntime","jsx","className","_react","Suspense","fallback","_RewardDetailClient","message","Error","stack","undefined","timestamp","Date","toISOString","process","env","NODE_ENV"],"sources":["/Users/cheolhyun/Repositories/picnic-web/app/[lang]/(main)/rewards/[id]/page.tsx"],"sourcesContent":["import React, { Suspense } from 'react';\nimport type { Metadata } from 'next';\nimport { notFound } from 'next/navigation';\nimport { getRewardById } from '@/lib/data-fetching/reward-service';\nimport {\n  createPageMetadata,\n  createImageMetadata,\n} from '@/app/[lang]/utils/metadata-utils';\nimport { createProductSchema } from '@/app/[lang]/utils/seo-utils';\nimport { SITE_URL } from '@/app/[lang]/constants/static-pages';\nimport RewardDetailClient from '@/components/client/reward/RewardDetailClient';\n\n// 동적 렌더링 강제 - DYNAMIC_SERVER_USAGE 에러 방지\nexport const dynamic = 'force-dynamic';\n\n// 메타데이터 동적 생성\nexport async function generateMetadata({\n  params,\n}: {\n  params: Promise<{ id: string; lang: string }>;\n}): Promise<Metadata> {\n  const { id: rewardId } = await params;\n\n  try {\n    const reward = await getRewardById(rewardId);\n\n    if (!reward) {\n      return createPageMetadata(\n        '리워드를 찾을 수 없습니다',\n        '요청하신 리워드가 존재하지 않습니다.',\n      );\n    }\n\n    // reward.title, reward.description이 Json 타입이므로 문자열로 변환\n    const title =\n      typeof reward.title === 'string'\n        ? reward.title\n        : reward.title && typeof reward.title === 'object'\n        ? (reward.title as any)?.ko || (reward.title as any)?.en || '리워드'\n        : '리워드';\n\n    const imageUrl = reward.thumbnail || '';\n    const url = `${SITE_URL}/rewards/${rewardId}`;\n\n    const metadata: Metadata = {\n      ...createPageMetadata(`${title}`, '리워드 상세 페이지'),\n      ...createImageMetadata(imageUrl, title, 1200, 630),\n      openGraph: {\n        title: `${title} | Picnic 리워드`,\n        url,\n        images: [{ url: imageUrl, alt: title }],\n        type: 'website',\n      },\n      twitter: {\n        card: 'summary_large_image',\n        title: `${title} | Picnic 리워드`,\n        images: [{ url: imageUrl, alt: title }],\n      },\n      alternates: {\n        canonical: url,\n      },\n    };\n\n    // 스키마 데이터는 별도로 처리 (Metadata 타입에 없음)\n    return metadata;\n  } catch (error) {\n    return createPageMetadata(\n      '리워드 정보 로딩 중 오류',\n      '리워드 정보를 불러오는 중 오류가 발생했습니다.',\n    );\n  }\n}\n\n// PageProps 타입 생략, 직접 함수 파라미터에 타입을 인라인으로 정의\nexport default async function RewardDetailPage({\n  params,\n}: {\n  params: Promise<{ id: string; lang: string }>;\n}) {\n  const { id: rewardId } = await params;\n\n  try {\n    console.log(`[RewardDetailPage] 리워드 ID ${rewardId} 요청 시작`);\n    \n    const reward = await getRewardById(rewardId);\n    \n    console.log(`[RewardDetailPage] 리워드 ID ${rewardId} 조회 결과:`, reward ? '성공' : '없음');\n\n    if (!reward) {\n      console.log(`[RewardDetailPage] 리워드 ID ${rewardId} 찾을 수 없음 - 404로 리디렉션`);\n      notFound(); // 404 페이지로 리디렉션\n    }\n\n    return (\n      <main className='flex flex-col min-h-screen bg-gray-50'>\n        <Suspense fallback={<div className=\"p-8 text-center\">로딩 중...</div>}>\n          <RewardDetailClient reward={reward} />\n        </Suspense>\n      </main>\n    );\n  } catch (error) {\n    // 상세한 에러 로깅\n    console.error(`[RewardDetailPage] 리워드 ID ${rewardId} 처리 중 에러:`, {\n      error,\n      message: error instanceof Error ? error.message : 'Unknown error',\n      stack: error instanceof Error ? error.stack : undefined,\n      timestamp: new Date().toISOString(),\n      rewardId,\n    });\n\n    // 프로덕션에서는 사용자에게 친화적인 에러 페이지 표시\n    if (process.env.NODE_ENV === 'production') {\n      // 404로 처리하여 500 에러 방지\n      notFound();\n    } else {\n      // 개발 환경에서는 에러를 그대로 throw하여 디버깅 가능\n      throw error;\n    }\n  }\n}\n"],"mappingsaoB;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;;;;;;;;;;;;;;;EA4DpB;EACAC,OA6CC,WAAAA,CAAA;IAAA;IAAAH,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WA7C6BG,gBAAA;;EA7DjBC,OAAO,WAAAA,CAAA;IAAA;IAAAN,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAPI,OAAA;;EAGSC,gBAAgB,WAAAA,CAAA;IAAA;IAAAP,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAhBK,gBAAA;;;;;;;;wEAhBU;;;iCAEP;;;kCACK;;;kCAIvB;;;kCAEkB;;;wEACM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGxB,MAAMD,OAAA;AAAA;AAAA,CAAAN,aAAA,GAAAE,CAAA,QAAU;AAGhB,eAAeK,iBAAiB;EACrCC;AAAM,CAGP;EAAA;EAAAR,aAAA,GAAAI,CAAA;EACC,MAAM;IAAEK,EAAA,EAAIC;EAAQ,CAAE;EAAA;EAAA,CAAAV,aAAA,GAAAE,CAAA,QAAG,MAAMM,MAAA;EAAA;EAAAR,aAAA,GAAAE,CAAA;EAE/B,IAAI;IACF,MAAMS,MAAA;IAAA;IAAA,CAAAX,aAAA,GAAAE,CAAA,QAAS,MAAM,IAAAU,cAAA,CAAAC,aAAa,EAACH,QAAA;IAAA;IAAAV,aAAA,GAAAE,CAAA;IAEnC,IAAI,CAACS,MAAA,EAAQ;MAAA;MAAAX,aAAA,GAAAc,CAAA;MAAAd,aAAA,GAAAE,CAAA;MACX,OAAO,IAAAa,cAAA,CAAAC,kBAAkB,EACvB,kBACA;IAEJ;IAAA;IAAA;MAAAhB,aAAA,GAAAc,CAAA;IAAA;IAEA;IACA,MAAMG,KAAA;IAAA;IAAA,CAAAjB,aAAA,GAAAE,CAAA,QACJ,OAAOS,MAAA,CAAOM,KAAK,KAAK;IAAA;IAAA,CAAAjB,aAAA,GAAAc,CAAA,WACpBH,MAAA,CAAOM,KAAK;IAAA;IAAA,CAAAjB,aAAA,GAAAc,CAAA;IACZ;IAAA,CAAAd,aAAA,GAAAc,CAAA,WAAAH,MAAA,CAAOM,KAAK;IAAA;IAAA,CAAAjB,aAAA,GAAAc,CAAA,WAAI,OAAOH,MAAA,CAAOM,KAAK,KAAK;IAAA;IAAA,CAAAjB,aAAA,GAAAc,CAAA;IACxC;IAAA,CAAAd,aAAA,GAAAc,CAAA,WAAAH,MAAC,CAAOM,KAAK,EAAUC,EAAA;IAAA;IAAA,CAAAlB,aAAA,GAAAc,CAAA,WAAOH,MAAA,CAAOM,KAAK,EAAUE,EAAA;IAAA;IAAA,CAAAnB,aAAA,GAAAc,CAAA,WAAM;IAAA;IAAA,CAAAd,aAAA,GAAAc,CAAA,WAC1D;IAEN,MAAMM,QAAA;IAAA;IAAA,CAAApB,aAAA,GAAAE,CAAA;IAAW;IAAA,CAAAF,aAAA,GAAAc,CAAA,WAAAH,MAAA,CAAOU,SAAS;IAAA;IAAA,CAAArB,aAAA,GAAAc,CAAA,WAAI;IACrC,MAAMQ,GAAA;IAAA;IAAA,CAAAtB,aAAA,GAAAE,CAAA,QAAM,GAAGqB,YAAA,CAAAC,QAAQ,YAAYd,QAAA,EAAU;IAE7C,MAAMe,QAAA;IAAA;IAAA,CAAAzB,aAAA,GAAAE,CAAA,QAAqB;MACzB,GAAG,IAAAa,cAAA,CAAAC,kBAAkB,EAAC,GAAGC,KAAA,EAAO,EAAE,aAAa;MAC/C,GAAG,IAAAF,cAAA,CAAAW,mBAAmB,EAACN,QAAA,EAAUH,KAAA,EAAO,MAAM,IAAI;MAClDU,SAAA,EAAW;QACTV,KAAA,EAAO,GAAGA,KAAA,eAAoB;QAC9BK,GAAA;QACAM,MAAA,EAAQ,CAAC;UAAEN,GAAA,EAAKF,QAAA;UAAUS,GAAA,EAAKZ;QAAM,EAAE;QACvCa,IAAA,EAAM;MACR;MACAC,OAAA,EAAS;QACPC,IAAA,EAAM;QACNf,KAAA,EAAO,GAAGA,KAAA,eAAoB;QAC9BW,MAAA,EAAQ,CAAC;UAAEN,GAAA,EAAKF,QAAA;UAAUS,GAAA,EAAKZ;QAAM;MACvC;MACAgB,UAAA,EAAY;QACVC,SAAA,EAAWZ;MACb;IACF;IAEA;IAAA;IAAAtB,aAAA,GAAAE,CAAA;IACA,OAAOuB,QAAA;EACT,EAAE,OAAOU,KAAA,EAAO;IAAA;IAAAnC,aAAA,GAAAE,CAAA;IACd,OAAO,IAAAa,cAAA,CAAAC,kBAAkB,EACvB,kBACA;EAEJ;AACF;AAGe,eAAeX,iBAAiB;EAC7CG;AAAM,CAGP;EAAA;EAAAR,aAAA,GAAAI,CAAA;EACC,MAAM;IAAEK,EAAA,EAAIC;EAAQ,CAAE;EAAA;EAAA,CAAAV,aAAA,GAAAE,CAAA,QAAG,MAAMM,MAAA;EAAA;EAAAR,aAAA,GAAAE,CAAA;EAE/B,IAAI;IAAA;IAAAF,aAAA,GAAAE,CAAA;IACFkC,OAAA,CAAQC,GAAG,CAAC,6BAA6B3B,QAAA,QAAgB;IAEzD,MAAMC,MAAA;IAAA;IAAA,CAAAX,aAAA,GAAAE,CAAA,QAAS,MAAM,IAAAU,cAAA,CAAAC,aAAa,EAACH,QAAA;IAAA;IAAAV,aAAA,GAAAE,CAAA;IAEnCkC,OAAA,CAAQC,GAAG,CAAC,6BAA6B3B,QAAA,SAAiB,EAAEC,MAAA;IAAA;IAAA,CAAAX,aAAA,GAAAc,CAAA,WAAS;IAAA;IAAA,CAAAd,aAAA,GAAAc,CAAA,WAAO;IAAA;IAAAd,aAAA,GAAAE,CAAA;IAE5E,IAAI,CAACS,MAAA,EAAQ;MAAA;MAAAX,aAAA,GAAAc,CAAA;MAAAd,aAAA,GAAAE,CAAA;MACXkC,OAAA,CAAQC,GAAG,CAAC,6BAA6B3B,QAAA,sBAA8B;MAAA;MAAAV,aAAA,GAAAE,CAAA;MACvE,IAAAoC,WAAA,CAAAC,QAAQ,KAAI;IACd;IAAA;IAAA;MAAAvC,aAAA,GAAAc,CAAA;IAAA;IAAAd,aAAA,GAAAE,CAAA;IAEA,oBACE,IAAAsC,WAAA,CAAAC,GAAA,EAAC;MAAKC,SAAA,EAAU;gBACd,iBAAAF,WAAA,CAAAC,GAAA,EAACE,MAAA,CAAAC,QAAQ;QAACC,QAAA,eAAU,IAAAL,WAAA,CAAAC,GAAA,EAAC;UAAIC,SAAA,EAAU;oBAAkB;;kBACnD,iBAAAF,WAAA,CAAAC,GAAA,EAACK,mBAAA,CAAA3C,OAAkB;UAACQ,MAAA,EAAQA;;;;EAIpC,EAAE,OAAOwB,KAAA,EAAO;IAAA;IAAAnC,aAAA,GAAAE,CAAA;IACd;IACAkC,OAAA,CAAQD,KAAK,CAAC,6BAA6BzB,QAAA,WAAmB,EAAE;MAC9DyB,KAAA;MACAY,OAAA,EAASZ,KAAA,YAAiBa,KAAA;MAAA;MAAA,CAAAhD,aAAA,GAAAc,CAAA,WAAQqB,KAAA,CAAMY,OAAO;MAAA;MAAA,CAAA/C,aAAA,GAAAc,CAAA,WAAG;MAClDmC,KAAA,EAAOd,KAAA,YAAiBa,KAAA;MAAA;MAAA,CAAAhD,aAAA,GAAAc,CAAA,WAAQqB,KAAA,CAAMc,KAAK;MAAA;MAAA,CAAAjD,aAAA,GAAAc,CAAA,WAAGoC,SAAA;MAC9CC,SAAA,EAAW,IAAIC,IAAA,GAAOC,WAAW;MACjC3C;IACF;IAEA;IAAA;IAAAV,aAAA,GAAAE,CAAA;IACA,IAAIoD,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;MAAA;MAAAxD,aAAA,GAAAc,CAAA;MAAAd,aAAA,GAAAE,CAAA;MACzC;MACA,IAAAoC,WAAA,CAAAC,QAAQ;IACV,OAAO;MAAA;MAAAvC,aAAA,GAAAc,CAAA;MAAAd,aAAA,GAAAE,CAAA;MACL;MACA,MAAMiC,KAAA;IACR;EACF;AACF","ignoreList":[]}