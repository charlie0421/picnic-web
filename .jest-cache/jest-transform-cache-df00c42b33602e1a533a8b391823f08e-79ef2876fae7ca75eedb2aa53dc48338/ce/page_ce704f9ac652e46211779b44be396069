b12208f919088c5e5d87cc8341c939cf
"use strict";

/* istanbul ignore next */
function cov_5ms3rrjiv() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/app/[lang]/(main)/rewards/[id]/page.tsx";
  var hash = "e5a6ec528078705ae8e9d1a58f89801ba45b3114";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/app/[lang]/(main)/rewards/[id]/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 32
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 32
        }
      },
      "7": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "8": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 72
        }
      },
      "9": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 46
        }
      },
      "10": {
        start: {
          line: 26,
          column: 23
        },
        end: {
          line: 26,
          column: 81
        }
      },
      "11": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 27,
          column: 63
        }
      },
      "12": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 63
        }
      },
      "13": {
        start: {
          line: 29,
          column: 42
        },
        end: {
          line: 29,
          column: 137
        }
      },
      "14": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "15": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "16": {
        start: {
          line: 36,
          column: 39
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "17": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 41
        }
      },
      "18": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 38,
          column: 40
        }
      },
      "19": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 20
        }
      },
      "20": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 66
        }
      },
      "21": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "22": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 19
        }
      },
      "23": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "24": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "25": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 53
        }
      },
      "26": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "27": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 30
        }
      },
      "28": {
        start: {
          line: 56,
          column: 17
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "29": {
        start: {
          line: 59,
          column: 32
        },
        end: {
          line: 59,
          column: 88
        }
      },
      "30": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "31": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "32": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 62,
          column: 95
        }
      },
      "33": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "34": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 57
        }
      },
      "35": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 39
        }
      },
      "36": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 25
        }
      },
      "37": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "38": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 31
        }
      },
      "39": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 18
        }
      },
      "40": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 31
        }
      },
      "41": {
        start: {
          line: 78,
          column: 29
        },
        end: {
          line: 78,
          column: 41
        }
      },
      "42": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "43": {
        start: {
          line: 80,
          column: 23
        },
        end: {
          line: 80,
          column: 72
        }
      },
      "44": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "45": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 100
        }
      },
      "46": {
        start: {
          line: 85,
          column: 22
        },
        end: {
          line: 85,
          column: 176
        }
      },
      "47": {
        start: {
          line: 86,
          column: 25
        },
        end: {
          line: 86,
          column: 47
        }
      },
      "48": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 87,
          column: 66
        }
      },
      "49": {
        start: {
          line: 88,
          column: 25
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "50": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 24
        }
      },
      "51": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 102
        }
      },
      "52": {
        start: {
          line: 123,
          column: 29
        },
        end: {
          line: 123,
          column: 41
        }
      },
      "53": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "54": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 67
        }
      },
      "55": {
        start: {
          line: 126,
          column: 23
        },
        end: {
          line: 126,
          column: 72
        }
      },
      "56": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 90
        }
      },
      "57": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "58": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 85
        }
      },
      "59": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 40
        }
      },
      "60": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      },
      "61": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 152,
          column: 11
        }
      },
      "62": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "63": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 40
        }
      },
      "64": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 13
          },
          end: {
            line: 13,
            column: 14
          }
        },
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 23
          }
        },
        loc: {
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 33
          }
        },
        loc: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 30
      },
      "5": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 33
          }
        },
        loc: {
          start: {
            line: 35,
            column: 47
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 35
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 39,
            column: 39
          },
          end: {
            line: 39,
            column: 40
          }
        },
        loc: {
          start: {
            line: 39,
            column: 61
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "7": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 34
          }
        },
        loc: {
          start: {
            line: 43,
            column: 53
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 43
      },
      "8": {
        name: "generateMetadata",
        decl: {
          start: {
            line: 77,
            column: 15
          },
          end: {
            line: 77,
            column: 31
          }
        },
        loc: {
          start: {
            line: 77,
            column: 44
          },
          end: {
            line: 121,
            column: 1
          }
        },
        line: 77
      },
      "9": {
        name: "RewardDetailPage",
        decl: {
          start: {
            line: 122,
            column: 15
          },
          end: {
            line: 122,
            column: 31
          }
        },
        loc: {
          start: {
            line: 122,
            column: 44
          },
          end: {
            line: 162,
            column: 1
          }
        },
        line: 122
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 35
          },
          end: {
            line: 31,
            column: 38
          }
        }, {
          start: {
            line: 31,
            column: 41
          },
          end: {
            line: 33,
            column: 5
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 31,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 31,
            column: 14
          }
        }, {
          start: {
            line: 31,
            column: 18
          },
          end: {
            line: 31,
            column: 32
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 15
          },
          end: {
            line: 40,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 40,
            column: 45
          }
        }, {
          start: {
            line: 40,
            column: 48
          },
          end: {
            line: 40,
            column: 65
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 24
          },
          end: {
            line: 44,
            column: 27
          }
        }, {
          start: {
            line: 44,
            column: 31
          },
          end: {
            line: 44,
            column: 45
          }
        }],
        line: 44
      },
      "6": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "7": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 20
          }
        }, {
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 47,
            column: 47
          }
        }, {
          start: {
            line: 47,
            column: 51
          },
          end: {
            line: 47,
            column: 76
          }
        }],
        line: 47
      },
      "8": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "9": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 17
          },
          end: {
            line: 53,
            column: 31
          }
        }],
        line: 53
      },
      "10": {
        loc: {
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 53
          }
        }, {
          start: {
            line: 59,
            column: 57
          },
          end: {
            line: 59,
            column: 88
          }
        }],
        line: 59
      },
      "11": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "12": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 29
          }
        }, {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 61,
            column: 79
          }
        }],
        line: 61
      },
      "13": {
        loc: {
          start: {
            line: 62,
            column: 23
          },
          end: {
            line: 62,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 47
          },
          end: {
            line: 62,
            column: 88
          }
        }, {
          start: {
            line: 62,
            column: 91
          },
          end: {
            line: 62,
            column: 95
          }
        }],
        line: 62
      },
      "14": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: 65,
            column: 19
          },
          end: {
            line: 67,
            column: 13
          }
        }],
        line: 63
      },
      "15": {
        loc: {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 20
          }
        }, {
          start: {
            line: 63,
            column: 25
          },
          end: {
            line: 63,
            column: 33
          }
        }, {
          start: {
            line: 63,
            column: 37
          },
          end: {
            line: 63,
            column: 45
          }
        }],
        line: 63
      },
      "16": {
        loc: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "17": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "18": {
        loc: {
          start: {
            line: 85,
            column: 22
          },
          end: {
            line: 85,
            column: 176
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 57
          },
          end: {
            line: 85,
            column: 69
          }
        }, {
          start: {
            line: 85,
            column: 72
          },
          end: {
            line: 85,
            column: 176
          }
        }],
        line: 85
      },
      "19": {
        loc: {
          start: {
            line: 85,
            column: 72
          },
          end: {
            line: 85,
            column: 176
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 123
          },
          end: {
            line: 85,
            column: 168
          }
        }, {
          start: {
            line: 85,
            column: 171
          },
          end: {
            line: 85,
            column: 176
          }
        }],
        line: 85
      },
      "20": {
        loc: {
          start: {
            line: 85,
            column: 72
          },
          end: {
            line: 85,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 72
          },
          end: {
            line: 85,
            column: 84
          }
        }, {
          start: {
            line: 85,
            column: 88
          },
          end: {
            line: 85,
            column: 120
          }
        }],
        line: 85
      },
      "21": {
        loc: {
          start: {
            line: 85,
            column: 123
          },
          end: {
            line: 85,
            column: 168
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 123
          },
          end: {
            line: 85,
            column: 139
          }
        }, {
          start: {
            line: 85,
            column: 143
          },
          end: {
            line: 85,
            column: 159
          }
        }, {
          start: {
            line: 85,
            column: 163
          },
          end: {
            line: 85,
            column: 168
          }
        }],
        line: 85
      },
      "22": {
        loc: {
          start: {
            line: 86,
            column: 25
          },
          end: {
            line: 86,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 25
          },
          end: {
            line: 86,
            column: 41
          }
        }, {
          start: {
            line: 86,
            column: 45
          },
          end: {
            line: 86,
            column: 47
          }
        }],
        line: 86
      },
      "23": {
        loc: {
          start: {
            line: 127,
            column: 68
          },
          end: {
            line: 127,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 77
          },
          end: {
            line: 127,
            column: 81
          }
        }, {
          start: {
            line: 127,
            column: 84
          },
          end: {
            line: 127,
            column: 88
          }
        }],
        line: 127
      },
      "24": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "25": {
        loc: {
          start: {
            line: 148,
            column: 21
          },
          end: {
            line: 148,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 46
          },
          end: {
            line: 148,
            column: 59
          }
        }, {
          start: {
            line: 148,
            column: 62
          },
          end: {
            line: 148,
            column: 77
          }
        }],
        line: 148
      },
      "26": {
        loc: {
          start: {
            line: 149,
            column: 19
          },
          end: {
            line: 149,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 149,
            column: 44
          },
          end: {
            line: 149,
            column: 55
          }
        }, {
          start: {
            line: 149,
            column: 58
          },
          end: {
            line: 149,
            column: 67
          }
        }],
        line: 149
      },
      "27": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: 157,
            column: 15
          },
          end: {
            line: 160,
            column: 9
          }
        }],
        line: 154
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/app/[lang]/(main)/rewards/[id]/page.tsx"],
      sourcesContent: ["import React, { Suspense } from 'react';\nimport type { Metadata } from 'next';\nimport { notFound } from 'next/navigation';\nimport { getRewardById } from '@/lib/data-fetching/reward-service';\nimport {\n  createPageMetadata,\n  createImageMetadata,\n} from '@/app/[lang]/utils/metadata-utils';\nimport { createProductSchema } from '@/app/[lang]/utils/seo-utils';\nimport { SITE_URL } from '@/app/[lang]/constants/static-pages';\nimport RewardDetailClient from '@/components/client/reward/RewardDetailClient';\n\n// \uB3D9\uC801 \uB80C\uB354\uB9C1 \uAC15\uC81C - DYNAMIC_SERVER_USAGE \uC5D0\uB7EC \uBC29\uC9C0\nexport const dynamic = 'force-dynamic';\n\n// \uBA54\uD0C0\uB370\uC774\uD130 \uB3D9\uC801 \uC0DD\uC131\nexport async function generateMetadata({\n  params,\n}: {\n  params: Promise<{ id: string; lang: string }>;\n}): Promise<Metadata> {\n  const { id: rewardId } = await params;\n\n  try {\n    const reward = await getRewardById(rewardId);\n\n    if (!reward) {\n      return createPageMetadata(\n        '\uB9AC\uC6CC\uB4DC\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4',\n        '\uC694\uCCAD\uD558\uC2E0 \uB9AC\uC6CC\uB4DC\uAC00 \uC874\uC7AC\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.',\n      );\n    }\n\n    // reward.title, reward.description\uC774 Json \uD0C0\uC785\uC774\uBBC0\uB85C \uBB38\uC790\uC5F4\uB85C \uBCC0\uD658\n    const title =\n      typeof reward.title === 'string'\n        ? reward.title\n        : reward.title && typeof reward.title === 'object'\n        ? (reward.title as any)?.ko || (reward.title as any)?.en || '\uB9AC\uC6CC\uB4DC'\n        : '\uB9AC\uC6CC\uB4DC';\n\n    const imageUrl = reward.thumbnail || '';\n    const url = `${SITE_URL}/rewards/${rewardId}`;\n\n    const metadata: Metadata = {\n      ...createPageMetadata(`${title}`, '\uB9AC\uC6CC\uB4DC \uC0C1\uC138 \uD398\uC774\uC9C0'),\n      ...createImageMetadata(imageUrl, title, 1200, 630),\n      openGraph: {\n        title: `${title} | Picnic \uB9AC\uC6CC\uB4DC`,\n        url,\n        images: [{ url: imageUrl, alt: title }],\n        type: 'website',\n      },\n      twitter: {\n        card: 'summary_large_image',\n        title: `${title} | Picnic \uB9AC\uC6CC\uB4DC`,\n        images: [{ url: imageUrl, alt: title }],\n      },\n      alternates: {\n        canonical: url,\n      },\n    };\n\n    // \uC2A4\uD0A4\uB9C8 \uB370\uC774\uD130\uB294 \uBCC4\uB3C4\uB85C \uCC98\uB9AC (Metadata \uD0C0\uC785\uC5D0 \uC5C6\uC74C)\n    return metadata;\n  } catch (error) {\n    return createPageMetadata(\n      '\uB9AC\uC6CC\uB4DC \uC815\uBCF4 \uB85C\uB529 \uC911 \uC624\uB958',\n      '\uB9AC\uC6CC\uB4DC \uC815\uBCF4\uB97C \uBD88\uB7EC\uC624\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.',\n    );\n  }\n}\n\n// PageProps \uD0C0\uC785 \uC0DD\uB7B5, \uC9C1\uC811 \uD568\uC218 \uD30C\uB77C\uBBF8\uD130\uC5D0 \uD0C0\uC785\uC744 \uC778\uB77C\uC778\uC73C\uB85C \uC815\uC758\nexport default async function RewardDetailPage({\n  params,\n}: {\n  params: Promise<{ id: string; lang: string }>;\n}) {\n  const { id: rewardId } = await params;\n\n  try {\n    console.log(`[RewardDetailPage] \uB9AC\uC6CC\uB4DC ID ${rewardId} \uC694\uCCAD \uC2DC\uC791`);\n    \n    const reward = await getRewardById(rewardId);\n    \n    console.log(`[RewardDetailPage] \uB9AC\uC6CC\uB4DC ID ${rewardId} \uC870\uD68C \uACB0\uACFC:`, reward ? '\uC131\uACF5' : '\uC5C6\uC74C');\n\n    if (!reward) {\n      console.log(`[RewardDetailPage] \uB9AC\uC6CC\uB4DC ID ${rewardId} \uCC3E\uC744 \uC218 \uC5C6\uC74C - 404\uB85C \uB9AC\uB514\uB809\uC158`);\n      notFound(); // 404 \uD398\uC774\uC9C0\uB85C \uB9AC\uB514\uB809\uC158\n    }\n\n    return (\n      <main className='flex flex-col min-h-screen bg-gray-50'>\n        <Suspense fallback={<div className=\"p-8 text-center\">\uB85C\uB529 \uC911...</div>}>\n          <RewardDetailClient reward={reward} />\n        </Suspense>\n      </main>\n    );\n  } catch (error) {\n    // \uC0C1\uC138\uD55C \uC5D0\uB7EC \uB85C\uAE45\n    console.error(`[RewardDetailPage] \uB9AC\uC6CC\uB4DC ID ${rewardId} \uCC98\uB9AC \uC911 \uC5D0\uB7EC:`, {\n      error,\n      message: error instanceof Error ? error.message : 'Unknown error',\n      stack: error instanceof Error ? error.stack : undefined,\n      timestamp: new Date().toISOString(),\n      rewardId,\n    });\n\n    // \uD504\uB85C\uB355\uC158\uC5D0\uC11C\uB294 \uC0AC\uC6A9\uC790\uC5D0\uAC8C \uCE5C\uD654\uC801\uC778 \uC5D0\uB7EC \uD398\uC774\uC9C0 \uD45C\uC2DC\n    if (process.env.NODE_ENV === 'production') {\n      // 404\uB85C \uCC98\uB9AC\uD558\uC5EC 500 \uC5D0\uB7EC \uBC29\uC9C0\n      notFound();\n    } else {\n      // \uAC1C\uBC1C \uD658\uACBD\uC5D0\uC11C\uB294 \uC5D0\uB7EC\uB97C \uADF8\uB300\uB85C throw\uD558\uC5EC \uB514\uBC84\uAE45 \uAC00\uB2A5\n      throw error;\n    }\n  }\n}\n"],
      names: ["RewardDetailPage", "dynamic", "generateMetadata", "params", "id", "rewardId", "reward", "getRewardById", "createPageMetadata", "title", "ko", "en", "imageUrl", "thumbnail", "url", "SITE_URL", "metadata", "createImageMetadata", "openGraph", "images", "alt", "type", "twitter", "card", "alternates", "canonical", "error", "console", "log", "notFound", "main", "className", "Suspense", "fallback", "div", "RewardDetailClient", "message", "Error", "stack", "undefined", "timestamp", "Date", "toISOString", "process", "env", "NODE_ENV"],
      mappings: ";;;;;;;;;;;IAyEA,4CAA4C;IAC5C,OA6CC;eA7C6BA;;IA7DjBC,OAAO;eAAPA;;IAGSC,gBAAgB;eAAhBA;;;;+DAhBU;4BAEP;+BACK;+BAIvB;6BAEkB;2EACM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGxB,MAAMD,UAAU;AAGhB,eAAeC,iBAAiB,EACrCC,MAAM,EAGP;IACC,MAAM,EAAEC,IAAIC,QAAQ,EAAE,GAAG,MAAMF;IAE/B,IAAI;QACF,MAAMG,SAAS,MAAMC,IAAAA,4BAAa,EAACF;QAEnC,IAAI,CAACC,QAAQ;YACX,OAAOE,IAAAA,iCAAkB,EACvB,kBACA;QAEJ;QAEA,uDAAuD;QACvD,MAAMC,QACJ,OAAOH,OAAOG,KAAK,KAAK,WACpBH,OAAOG,KAAK,GACZH,OAAOG,KAAK,IAAI,OAAOH,OAAOG,KAAK,KAAK,WACxC,AAACH,OAAOG,KAAK,EAAUC,MAAOJ,OAAOG,KAAK,EAAUE,MAAM,QAC1D;QAEN,MAAMC,WAAWN,OAAOO,SAAS,IAAI;QACrC,MAAMC,MAAM,GAAGC,qBAAQ,CAAC,SAAS,EAAEV,UAAU;QAE7C,MAAMW,WAAqB;YACzB,GAAGR,IAAAA,iCAAkB,EAAC,GAAGC,OAAO,EAAE,aAAa;YAC/C,GAAGQ,IAAAA,kCAAmB,EAACL,UAAUH,OAAO,MAAM,IAAI;YAClDS,WAAW;gBACTT,OAAO,GAAGA,MAAM,aAAa,CAAC;gBAC9BK;gBACAK,QAAQ;oBAAC;wBAAEL,KAAKF;wBAAUQ,KAAKX;oBAAM;iBAAE;gBACvCY,MAAM;YACR;YACAC,SAAS;gBACPC,MAAM;gBACNd,OAAO,GAAGA,MAAM,aAAa,CAAC;gBAC9BU,QAAQ;oBAAC;wBAAEL,KAAKF;wBAAUQ,KAAKX;oBAAM;iBAAE;YACzC;YACAe,YAAY;gBACVC,WAAWX;YACb;QACF;QAEA,oCAAoC;QACpC,OAAOE;IACT,EAAE,OAAOU,OAAO;QACd,OAAOlB,IAAAA,iCAAkB,EACvB,kBACA;IAEJ;AACF;AAGe,eAAeR,iBAAiB,EAC7CG,MAAM,EAGP;IACC,MAAM,EAAEC,IAAIC,QAAQ,EAAE,GAAG,MAAMF;IAE/B,IAAI;QACFwB,QAAQC,GAAG,CAAC,CAAC,0BAA0B,EAAEvB,SAAS,MAAM,CAAC;QAEzD,MAAMC,SAAS,MAAMC,IAAAA,4BAAa,EAACF;QAEnCsB,QAAQC,GAAG,CAAC,CAAC,0BAA0B,EAAEvB,SAAS,OAAO,CAAC,EAAEC,SAAS,OAAO;QAE5E,IAAI,CAACA,QAAQ;YACXqB,QAAQC,GAAG,CAAC,CAAC,0BAA0B,EAAEvB,SAAS,oBAAoB,CAAC;YACvEwB,IAAAA,oBAAQ,KAAI,gBAAgB;QAC9B;QAEA,qBACE,qBAACC;YAAKC,WAAU;sBACd,cAAA,qBAACC,eAAQ;gBAACC,wBAAU,qBAACC;oBAAIH,WAAU;8BAAkB;;0BACnD,cAAA,qBAACI,2BAAkB;oBAAC7B,QAAQA;;;;IAIpC,EAAE,OAAOoB,OAAO;QACd,YAAY;QACZC,QAAQD,KAAK,CAAC,CAAC,0BAA0B,EAAErB,SAAS,SAAS,CAAC,EAAE;YAC9DqB;YACAU,SAASV,iBAAiBW,QAAQX,MAAMU,OAAO,GAAG;YAClDE,OAAOZ,iBAAiBW,QAAQX,MAAMY,KAAK,GAAGC;YAC9CC,WAAW,IAAIC,OAAOC,WAAW;YACjCrC;QACF;QAEA,+BAA+B;QAC/B,IAAIsC,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;YACzC,sBAAsB;YACtBhB,IAAAA,oBAAQ;QACV,OAAO;YACL,kCAAkC;YAClC,MAAMH;QACR;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e5a6ec528078705ae8e9d1a58f89801ba45b3114"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_5ms3rrjiv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_5ms3rrjiv();
cov_5ms3rrjiv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_5ms3rrjiv().f[0]++;
  cov_5ms3rrjiv().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_5ms3rrjiv().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_5ms3rrjiv().s[3]++;
_export(exports, {
  // PageProps 타입 생략, 직접 함수 파라미터에 타입을 인라인으로 정의
  default: function () {
    /* istanbul ignore next */
    cov_5ms3rrjiv().f[1]++;
    cov_5ms3rrjiv().s[4]++;
    return RewardDetailPage;
  },
  dynamic: function () {
    /* istanbul ignore next */
    cov_5ms3rrjiv().f[2]++;
    cov_5ms3rrjiv().s[5]++;
    return dynamic;
  },
  generateMetadata: function () {
    /* istanbul ignore next */
    cov_5ms3rrjiv().f[3]++;
    cov_5ms3rrjiv().s[6]++;
    return generateMetadata;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_5ms3rrjiv().s[7]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_5ms3rrjiv().s[8]++, _interop_require_wildcard(require("react")));
const _navigation =
/* istanbul ignore next */
(cov_5ms3rrjiv().s[9]++, require("next/navigation"));
const _rewardservice =
/* istanbul ignore next */
(cov_5ms3rrjiv().s[10]++, require("../../../../../lib/data-fetching/reward-service"));
const _metadatautils =
/* istanbul ignore next */
(cov_5ms3rrjiv().s[11]++, require("../../../utils/metadata-utils"));
const _staticpages =
/* istanbul ignore next */
(cov_5ms3rrjiv().s[12]++, require("../../../constants/static-pages"));
const _RewardDetailClient =
/* istanbul ignore next */
(/*#__PURE__*/cov_5ms3rrjiv().s[13]++, _interop_require_default(require("../../../../../components/client/reward/RewardDetailClient")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_5ms3rrjiv().f[4]++;
  cov_5ms3rrjiv().s[14]++;
  return /* istanbul ignore next */(cov_5ms3rrjiv().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_5ms3rrjiv().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_5ms3rrjiv().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_5ms3rrjiv().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_5ms3rrjiv().f[5]++;
  cov_5ms3rrjiv().s[15]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_5ms3rrjiv().b[2][0]++;
    cov_5ms3rrjiv().s[16]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_5ms3rrjiv().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_5ms3rrjiv().s[17]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_5ms3rrjiv().s[18]++, new WeakMap());
  /* istanbul ignore next */
  cov_5ms3rrjiv().s[19]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_5ms3rrjiv().f[6]++;
    cov_5ms3rrjiv().s[20]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_5ms3rrjiv().f[7]++;
  cov_5ms3rrjiv().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_5ms3rrjiv().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_5ms3rrjiv().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_5ms3rrjiv().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_5ms3rrjiv().b[4][0]++;
    cov_5ms3rrjiv().s[22]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_5ms3rrjiv().b[4][1]++;
  }
  cov_5ms3rrjiv().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_5ms3rrjiv().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_5ms3rrjiv().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_5ms3rrjiv().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_5ms3rrjiv().b[6][0]++;
    cov_5ms3rrjiv().s[24]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_5ms3rrjiv().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_5ms3rrjiv().s[25]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_5ms3rrjiv().s[26]++;
  if (
  /* istanbul ignore next */
  (cov_5ms3rrjiv().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_5ms3rrjiv().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_5ms3rrjiv().b[8][0]++;
    cov_5ms3rrjiv().s[27]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_5ms3rrjiv().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_5ms3rrjiv().s[28]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_5ms3rrjiv().s[29]++,
  /* istanbul ignore next */
  (cov_5ms3rrjiv().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_5ms3rrjiv().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_5ms3rrjiv().s[30]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_5ms3rrjiv().s[31]++;
    if (
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_5ms3rrjiv().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_5ms3rrjiv().s[32]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_5ms3rrjiv().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_5ms3rrjiv().b[13][1]++, null));
      /* istanbul ignore next */
      cov_5ms3rrjiv().s[33]++;
      if (
      /* istanbul ignore next */
      (cov_5ms3rrjiv().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_5ms3rrjiv().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_5ms3rrjiv().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_5ms3rrjiv().b[14][0]++;
        cov_5ms3rrjiv().s[34]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_5ms3rrjiv().b[14][1]++;
        cov_5ms3rrjiv().s[35]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_5ms3rrjiv().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_5ms3rrjiv().s[36]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_5ms3rrjiv().s[37]++;
  if (cache) {
    /* istanbul ignore next */
    cov_5ms3rrjiv().b[16][0]++;
    cov_5ms3rrjiv().s[38]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_5ms3rrjiv().b[16][1]++;
  }
  cov_5ms3rrjiv().s[39]++;
  return newObj;
}
const dynamic =
/* istanbul ignore next */
(cov_5ms3rrjiv().s[40]++, 'force-dynamic');
async function generateMetadata({
  params
}) {
  /* istanbul ignore next */
  cov_5ms3rrjiv().f[8]++;
  const {
    id: rewardId
  } =
  /* istanbul ignore next */
  (cov_5ms3rrjiv().s[41]++, await params);
  /* istanbul ignore next */
  cov_5ms3rrjiv().s[42]++;
  try {
    const reward =
    /* istanbul ignore next */
    (cov_5ms3rrjiv().s[43]++, await (0, _rewardservice.getRewardById)(rewardId));
    /* istanbul ignore next */
    cov_5ms3rrjiv().s[44]++;
    if (!reward) {
      /* istanbul ignore next */
      cov_5ms3rrjiv().b[17][0]++;
      cov_5ms3rrjiv().s[45]++;
      return (0, _metadatautils.createPageMetadata)('리워드를 찾을 수 없습니다', '요청하신 리워드가 존재하지 않습니다.');
    } else
    /* istanbul ignore next */
    {
      cov_5ms3rrjiv().b[17][1]++;
    }
    // reward.title, reward.description이 Json 타입이므로 문자열로 변환
    const title =
    /* istanbul ignore next */
    (cov_5ms3rrjiv().s[46]++, typeof reward.title === 'string' ?
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[18][0]++, reward.title) :
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[18][1]++,
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[20][0]++, reward.title) &&
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[20][1]++, typeof reward.title === 'object') ?
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[19][0]++,
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[21][0]++, reward.title?.ko) ||
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[21][1]++, reward.title?.en) ||
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[21][2]++, '리워드')) :
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[19][1]++, '리워드')));
    const imageUrl =
    /* istanbul ignore next */
    (cov_5ms3rrjiv().s[47]++,
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[22][0]++, reward.thumbnail) ||
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[22][1]++, ''));
    const url =
    /* istanbul ignore next */
    (cov_5ms3rrjiv().s[48]++, `${_staticpages.SITE_URL}/rewards/${rewardId}`);
    const metadata =
    /* istanbul ignore next */
    (cov_5ms3rrjiv().s[49]++, {
      ...(0, _metadatautils.createPageMetadata)(`${title}`, '리워드 상세 페이지'),
      ...(0, _metadatautils.createImageMetadata)(imageUrl, title, 1200, 630),
      openGraph: {
        title: `${title} | Picnic 리워드`,
        url,
        images: [{
          url: imageUrl,
          alt: title
        }],
        type: 'website'
      },
      twitter: {
        card: 'summary_large_image',
        title: `${title} | Picnic 리워드`,
        images: [{
          url: imageUrl,
          alt: title
        }]
      },
      alternates: {
        canonical: url
      }
    });
    // 스키마 데이터는 별도로 처리 (Metadata 타입에 없음)
    /* istanbul ignore next */
    cov_5ms3rrjiv().s[50]++;
    return metadata;
  } catch (error) {
    /* istanbul ignore next */
    cov_5ms3rrjiv().s[51]++;
    return (0, _metadatautils.createPageMetadata)('리워드 정보 로딩 중 오류', '리워드 정보를 불러오는 중 오류가 발생했습니다.');
  }
}
async function RewardDetailPage({
  params
}) {
  /* istanbul ignore next */
  cov_5ms3rrjiv().f[9]++;
  const {
    id: rewardId
  } =
  /* istanbul ignore next */
  (cov_5ms3rrjiv().s[52]++, await params);
  /* istanbul ignore next */
  cov_5ms3rrjiv().s[53]++;
  try {
    /* istanbul ignore next */
    cov_5ms3rrjiv().s[54]++;
    console.log(`[RewardDetailPage] 리워드 ID ${rewardId} 요청 시작`);
    const reward =
    /* istanbul ignore next */
    (cov_5ms3rrjiv().s[55]++, await (0, _rewardservice.getRewardById)(rewardId));
    /* istanbul ignore next */
    cov_5ms3rrjiv().s[56]++;
    console.log(`[RewardDetailPage] 리워드 ID ${rewardId} 조회 결과:`, reward ?
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[23][0]++, '성공') :
    /* istanbul ignore next */
    (cov_5ms3rrjiv().b[23][1]++, '없음'));
    /* istanbul ignore next */
    cov_5ms3rrjiv().s[57]++;
    if (!reward) {
      /* istanbul ignore next */
      cov_5ms3rrjiv().b[24][0]++;
      cov_5ms3rrjiv().s[58]++;
      console.log(`[RewardDetailPage] 리워드 ID ${rewardId} 찾을 수 없음 - 404로 리디렉션`);
      /* istanbul ignore next */
      cov_5ms3rrjiv().s[59]++;
      (0, _navigation.notFound)(); // 404 페이지로 리디렉션
    } else
    /* istanbul ignore next */
    {
      cov_5ms3rrjiv().b[24][1]++;
    }
    cov_5ms3rrjiv().s[60]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("main", {
      className: "flex flex-col min-h-screen bg-gray-50",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
        fallback: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "p-8 text-center",
          children: "로딩 중..."
        }),
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_RewardDetailClient.default, {
          reward: reward
        })
      })
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_5ms3rrjiv().s[61]++;
    // 상세한 에러 로깅
    console.error(`[RewardDetailPage] 리워드 ID ${rewardId} 처리 중 에러:`, {
      error,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_5ms3rrjiv().b[25][0]++, error.message) :
      /* istanbul ignore next */
      (cov_5ms3rrjiv().b[25][1]++, 'Unknown error'),
      stack: error instanceof Error ?
      /* istanbul ignore next */
      (cov_5ms3rrjiv().b[26][0]++, error.stack) :
      /* istanbul ignore next */
      (cov_5ms3rrjiv().b[26][1]++, undefined),
      timestamp: new Date().toISOString(),
      rewardId
    });
    // 프로덕션에서는 사용자에게 친화적인 에러 페이지 표시
    /* istanbul ignore next */
    cov_5ms3rrjiv().s[62]++;
    if (process.env.NODE_ENV === 'production') {
      /* istanbul ignore next */
      cov_5ms3rrjiv().b[27][0]++;
      cov_5ms3rrjiv().s[63]++;
      // 404로 처리하여 500 에러 방지
      (0, _navigation.notFound)();
    } else {
      /* istanbul ignore next */
      cov_5ms3rrjiv().b[27][1]++;
      cov_5ms3rrjiv().s[64]++;
      // 개발 환경에서는 에러를 그대로 throw하여 디버깅 가능
      throw error;
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,