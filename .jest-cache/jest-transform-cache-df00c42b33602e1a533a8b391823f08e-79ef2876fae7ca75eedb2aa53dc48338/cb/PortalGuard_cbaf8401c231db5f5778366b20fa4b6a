ca4d49ff4671eaec09d8184cbac61c3f
'use client';
"use strict";

/* istanbul ignore next */
function cov_2imbffohvk() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/components/PortalGuard.tsx";
  var hash = "676291f2961c72a3837c047e7c580f0d681d7d1b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/components/PortalGuard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 27
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 40
        }
      },
      "7": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 49
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "9": {
        start: {
          line: 18,
          column: 39
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "10": {
        start: {
          line: 19,
          column: 28
        },
        end: {
          line: 19,
          column: 41
        }
      },
      "11": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 20,
          column: 40
        }
      },
      "12": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 20
        }
      },
      "13": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 66
        }
      },
      "14": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "15": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 19
        }
      },
      "16": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "17": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "18": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 53
        }
      },
      "19": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "20": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 30
        }
      },
      "21": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "22": {
        start: {
          line: 41,
          column: 32
        },
        end: {
          line: 41,
          column: 88
        }
      },
      "23": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "24": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "25": {
        start: {
          line: 44,
          column: 23
        },
        end: {
          line: 44,
          column: 95
        }
      },
      "26": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "27": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 57
        }
      },
      "28": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 39
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 25
        }
      },
      "30": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "31": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 31
        }
      },
      "32": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 18
        }
      },
      "33": {
        start: {
          line: 59,
          column: 19
        },
        end: {
          line: 59,
          column: 47
        }
      },
      "34": {
        start: {
          line: 60,
          column: 21
        },
        end: {
          line: 60,
          column: 51
        }
      },
      "35": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 76,
          column: 7
        }
      },
      "36": {
        start: {
          line: 62,
          column: 26
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "37": {
        start: {
          line: 63,
          column: 46
        },
        end: {
          line: 63,
          column: 109
        }
      },
      "38": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "39": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 33
        }
      },
      "40": {
        start: {
          line: 67,
          column: 19
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "41": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 38
        }
      },
      "42": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 20
        }
      },
      "43": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 79,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 33
          }
        },
        loc: {
          start: {
            line: 17,
            column: 47
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 39
          },
          end: {
            line: 21,
            column: 40
          }
        },
        loc: {
          start: {
            line: 21,
            column: 61
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 34
          }
        },
        loc: {
          start: {
            line: 25,
            column: 53
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "PortalGuard",
        decl: {
          start: {
            line: 58,
            column: 9
          },
          end: {
            line: 58,
            column: 20
          }
        },
        loc: {
          start: {
            line: 58,
            column: 68
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 61,
            column: 26
          },
          end: {
            line: 61,
            column: 27
          }
        },
        loc: {
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 61
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 62,
            column: 26
          },
          end: {
            line: 62,
            column: 27
          }
        },
        loc: {
          start: {
            line: 62,
            column: 36
          },
          end: {
            line: 70,
            column: 9
          }
        },
        line: 62
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 45
          }
        }, {
          start: {
            line: 22,
            column: 48
          },
          end: {
            line: 22,
            column: 65
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 20
          }
        }, {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 26,
            column: 27
          }
        }, {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 26,
            column: 45
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 20
          }
        }, {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 47
          }
        }, {
          start: {
            line: 29,
            column: 51
          },
          end: {
            line: 29,
            column: 76
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 13
          }
        }, {
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 31
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 53
          }
        }, {
          start: {
            line: 41,
            column: 57
          },
          end: {
            line: 41,
            column: 88
          }
        }],
        line: 41
      },
      "9": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "10": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 29
          }
        }, {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 43,
            column: 79
          }
        }],
        line: 43
      },
      "11": {
        loc: {
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 44,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 47
          },
          end: {
            line: 44,
            column: 88
          }
        }, {
          start: {
            line: 44,
            column: 91
          },
          end: {
            line: 44,
            column: 95
          }
        }],
        line: 44
      },
      "12": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 49,
            column: 13
          }
        }],
        line: 45
      },
      "13": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 20
          }
        }, {
          start: {
            line: 45,
            column: 25
          },
          end: {
            line: 45,
            column: 33
          }
        }, {
          start: {
            line: 45,
            column: 37
          },
          end: {
            line: 45,
            column: 45
          }
        }],
        line: 45
      },
      "14": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "15": {
        loc: {
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 58,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 58,
            column: 30
          },
          end: {
            line: 58,
            column: 54
          }
        }],
        line: 58
      },
      "16": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 69,
            column: 13
          }
        }],
        line: 65
      },
      "17": {
        loc: {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 47
          }
        }, {
          start: {
            line: 65,
            column: 51
          },
          end: {
            line: 65,
            column: 55
          }
        }, {
          start: {
            line: 65,
            column: 59
          },
          end: {
            line: 65,
            column: 65
          }
        }],
        line: 65
      },
      "18": {
        loc: {
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "19": {
        loc: {
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 54
          }
        }, {
          start: {
            line: 67,
            column: 59
          },
          end: {
            line: 67,
            column: 64
          }
        }, {
          start: {
            line: 67,
            column: 68
          },
          end: {
            line: 67,
            column: 73
          }
        }],
        line: 67
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/components/PortalGuard.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { usePathname, useRouter } from 'next/navigation';\nimport { PortalType } from '@/utils/enums';\nimport { createBrowserSupabaseClient } from '@/lib/supabase/client';\nimport LoadingSpinner from '@/components/ui/LoadingSpinner';\n\ninterface PortalProps {\n  type?: PortalType;\n  children: React.ReactNode;\n}\n\nexport default function PortalGuard({ type = PortalType.PUBLIC, children }: PortalProps) {\n  const router = useRouter();\n  const pathname = usePathname();\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const { data: { user }, error } = await createBrowserSupabaseClient().auth.getUser();\n\n      // \uC778\uC99D \uC0C1\uD0DC\uC5D0 \uB530\uB978 \uB9AC\uB2E4\uC774\uB809\uC158 (getUser\uB294 getSession\uBCF4\uB2E4 \uBE60\uB974\uACE0 \uC548\uC815\uC801)\n      if (type === PortalType.AUTH && user && !error) {\n        router.push('/');\n      } else if (type === PortalType.AUTH && (!user || error)) {\n        router.push('/login');\n      }\n    };\n\n    checkAuth();\n  }, [type, router, pathname]);\n\n  return <>{children}</>;\n}\n"],
      names: ["PortalGuard", "type", "PortalType", "PUBLIC", "children", "router", "useRouter", "pathname", "usePathname", "useEffect", "checkAuth", "data", "user", "error", "createBrowserSupabaseClient", "auth", "getUser", "AUTH", "push"],
      mappings: "AAAA;;;;;+BAaA;;;eAAwBA;;;;+DAXmB;4BACJ;uBACZ;wBACiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ7B,SAASA,YAAY,EAAEC,OAAOC,iBAAU,CAACC,MAAM,EAAEC,QAAQ,EAAe;IACrF,MAAMC,SAASC,IAAAA,qBAAS;IACxB,MAAMC,WAAWC,IAAAA,uBAAW;IAE5BC,IAAAA,gBAAS,EAAC;QACR,MAAMC,YAAY;YAChB,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAE,EAAEC,KAAK,EAAE,GAAG,MAAMC,IAAAA,mCAA2B,IAAGC,IAAI,CAACC,OAAO;YAElF,kDAAkD;YAClD,IAAIf,SAASC,iBAAU,CAACe,IAAI,IAAIL,QAAQ,CAACC,OAAO;gBAC9CR,OAAOa,IAAI,CAAC;YACd,OAAO,IAAIjB,SAASC,iBAAU,CAACe,IAAI,IAAK,CAAA,CAACL,QAAQC,KAAI,GAAI;gBACvDR,OAAOa,IAAI,CAAC;YACd;QACF;QAEAR;IACF,GAAG;QAACT;QAAMI;QAAQE;KAAS;IAE3B,qBAAO;kBAAGH;;AACZ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "676291f2961c72a3837c047e7c580f0d681d7d1b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2imbffohvk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2imbffohvk();
cov_2imbffohvk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2imbffohvk().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2imbffohvk().f[0]++;
    cov_2imbffohvk().s[2]++;
    return PortalGuard;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2imbffohvk().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2imbffohvk().s[4]++, _interop_require_wildcard(require("react")));
const _navigation =
/* istanbul ignore next */
(cov_2imbffohvk().s[5]++, require("next/navigation"));
const _enums =
/* istanbul ignore next */
(cov_2imbffohvk().s[6]++, require("../utils/enums"));
const _client =
/* istanbul ignore next */
(cov_2imbffohvk().s[7]++, require("../lib/supabase/client"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2imbffohvk().f[1]++;
  cov_2imbffohvk().s[8]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2imbffohvk().b[0][0]++;
    cov_2imbffohvk().s[9]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2imbffohvk().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2imbffohvk().s[10]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2imbffohvk().s[11]++, new WeakMap());
  /* istanbul ignore next */
  cov_2imbffohvk().s[12]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2imbffohvk().f[2]++;
    cov_2imbffohvk().s[13]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2imbffohvk().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2imbffohvk().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2imbffohvk().f[3]++;
  cov_2imbffohvk().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_2imbffohvk().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2imbffohvk().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2imbffohvk().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2imbffohvk().b[2][0]++;
    cov_2imbffohvk().s[15]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2imbffohvk().b[2][1]++;
  }
  cov_2imbffohvk().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_2imbffohvk().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2imbffohvk().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2imbffohvk().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2imbffohvk().b[4][0]++;
    cov_2imbffohvk().s[17]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2imbffohvk().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2imbffohvk().s[18]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2imbffohvk().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_2imbffohvk().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2imbffohvk().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2imbffohvk().b[6][0]++;
    cov_2imbffohvk().s[20]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2imbffohvk().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2imbffohvk().s[21]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2imbffohvk().s[22]++,
  /* istanbul ignore next */
  (cov_2imbffohvk().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2imbffohvk().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2imbffohvk().s[23]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2imbffohvk().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2imbffohvk().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2imbffohvk().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2imbffohvk().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2imbffohvk().s[25]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2imbffohvk().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2imbffohvk().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2imbffohvk().s[26]++;
      if (
      /* istanbul ignore next */
      (cov_2imbffohvk().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2imbffohvk().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2imbffohvk().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2imbffohvk().b[12][0]++;
        cov_2imbffohvk().s[27]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2imbffohvk().b[12][1]++;
        cov_2imbffohvk().s[28]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2imbffohvk().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2imbffohvk().s[29]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2imbffohvk().s[30]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2imbffohvk().b[14][0]++;
    cov_2imbffohvk().s[31]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2imbffohvk().b[14][1]++;
  }
  cov_2imbffohvk().s[32]++;
  return newObj;
}
function PortalGuard({
  type =
  /* istanbul ignore next */
  (cov_2imbffohvk().b[15][0]++, _enums.PortalType.PUBLIC),
  children
}) {
  /* istanbul ignore next */
  cov_2imbffohvk().f[4]++;
  const router =
  /* istanbul ignore next */
  (cov_2imbffohvk().s[33]++, (0, _navigation.useRouter)());
  const pathname =
  /* istanbul ignore next */
  (cov_2imbffohvk().s[34]++, (0, _navigation.usePathname)());
  /* istanbul ignore next */
  cov_2imbffohvk().s[35]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2imbffohvk().f[5]++;
    cov_2imbffohvk().s[36]++;
    const checkAuth = async () => {
      /* istanbul ignore next */
      cov_2imbffohvk().f[6]++;
      const {
        data: {
          user
        },
        error
      } =
      /* istanbul ignore next */
      (cov_2imbffohvk().s[37]++, await (0, _client.createBrowserSupabaseClient)().auth.getUser());
      // 인증 상태에 따른 리다이렉션 (getUser는 getSession보다 빠르고 안정적)
      /* istanbul ignore next */
      cov_2imbffohvk().s[38]++;
      if (
      /* istanbul ignore next */
      (cov_2imbffohvk().b[17][0]++, type === _enums.PortalType.AUTH) &&
      /* istanbul ignore next */
      (cov_2imbffohvk().b[17][1]++, user) &&
      /* istanbul ignore next */
      (cov_2imbffohvk().b[17][2]++, !error)) {
        /* istanbul ignore next */
        cov_2imbffohvk().b[16][0]++;
        cov_2imbffohvk().s[39]++;
        router.push('/');
      } else {
        /* istanbul ignore next */
        cov_2imbffohvk().b[16][1]++;
        cov_2imbffohvk().s[40]++;
        if (
        /* istanbul ignore next */
        (cov_2imbffohvk().b[19][0]++, type === _enums.PortalType.AUTH) && (
        /* istanbul ignore next */
        (cov_2imbffohvk().b[19][1]++, !user) ||
        /* istanbul ignore next */
        (cov_2imbffohvk().b[19][2]++, error))) {
          /* istanbul ignore next */
          cov_2imbffohvk().b[18][0]++;
          cov_2imbffohvk().s[41]++;
          router.push('/login');
        } else
        /* istanbul ignore next */
        {
          cov_2imbffohvk().b[18][1]++;
        }
      }
    };
    /* istanbul ignore next */
    cov_2imbffohvk().s[42]++;
    checkAuth();
  }, [type, router, pathname]);
  /* istanbul ignore next */
  cov_2imbffohvk().s[43]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
    children: children
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQb3J0YWxHdWFyZCIsInR5cGUiLCJjb3ZfMmltYmZmb2h2ayIsImIiLCJfZW51bXMiLCJQb3J0YWxUeXBlIiwiUFVCTElDIiwiY2hpbGRyZW4iLCJmIiwicm91dGVyIiwicyIsIl9uYXZpZ2F0aW9uIiwidXNlUm91dGVyIiwicGF0aG5hbWUiLCJ1c2VQYXRobmFtZSIsIl9yZWFjdCIsInVzZUVmZmVjdCIsImNoZWNrQXV0aCIsImRhdGEiLCJ1c2VyIiwiZXJyb3IiLCJfY2xpZW50IiwiY3JlYXRlQnJvd3NlclN1cGFiYXNlQ2xpZW50IiwiYXV0aCIsImdldFVzZXIiLCJBVVRIIiwicHVzaCIsIl9qc3hydW50aW1lIiwianN4IiwiRnJhZ21lbnQiXSwic291cmNlcyI6WyIvVXNlcnMvY2hlb2xoeXVuL1JlcG9zaXRvcmllcy9waWNuaWMtd2ViL2NvbXBvbmVudHMvUG9ydGFsR3VhcmQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VQYXRobmFtZSwgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9uYXZpZ2F0aW9uJztcbmltcG9ydCB7IFBvcnRhbFR5cGUgfSBmcm9tICdAL3V0aWxzL2VudW1zJztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJTdXBhYmFzZUNsaWVudCB9IGZyb20gJ0AvbGliL3N1cGFiYXNlL2NsaWVudCc7XG5pbXBvcnQgTG9hZGluZ1NwaW5uZXIgZnJvbSAnQC9jb21wb25lbnRzL3VpL0xvYWRpbmdTcGlubmVyJztcblxuaW50ZXJmYWNlIFBvcnRhbFByb3BzIHtcbiAgdHlwZT86IFBvcnRhbFR5cGU7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBvcnRhbEd1YXJkKHsgdHlwZSA9IFBvcnRhbFR5cGUuUFVCTElDLCBjaGlsZHJlbiB9OiBQb3J0YWxQcm9wcykge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgY29uc3QgcGF0aG5hbWUgPSB1c2VQYXRobmFtZSgpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgY2hlY2tBdXRoID0gYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgeyBkYXRhOiB7IHVzZXIgfSwgZXJyb3IgfSA9IGF3YWl0IGNyZWF0ZUJyb3dzZXJTdXBhYmFzZUNsaWVudCgpLmF1dGguZ2V0VXNlcigpO1xuXG4gICAgICAvLyDsnbjspp0g7IOB7YOc7JeQIOuUsOuluCDrpqzri6TsnbTroInshZggKGdldFVzZXLripQgZ2V0U2Vzc2lvbuuztOuLpCDruaDrpbTqs6Ag7JWI7KCV7KCBKVxuICAgICAgaWYgKHR5cGUgPT09IFBvcnRhbFR5cGUuQVVUSCAmJiB1c2VyICYmICFlcnJvcikge1xuICAgICAgICByb3V0ZXIucHVzaCgnLycpO1xuICAgICAgfSBlbHNlIGlmICh0eXBlID09PSBQb3J0YWxUeXBlLkFVVEggJiYgKCF1c2VyIHx8IGVycm9yKSkge1xuICAgICAgICByb3V0ZXIucHVzaCgnL2xvZ2luJyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGNoZWNrQXV0aCgpO1xuICB9LCBbdHlwZSwgcm91dGVyLCBwYXRobmFtZV0pO1xuXG4gIHJldHVybiA8PntjaGlsZHJlbn08Lz47XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBYUE7Ozs7OztXQUF3QkEsV0FBQTs7Ozs7Ozs7eUVBWG1COzs7a0NBQ0o7OztrQ0FDWjs7O2tDQUNpQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVE3QixTQUFTQSxZQUFZO0VBQUVDLElBQUE7RUFBQTtFQUFBLENBQUFDLGNBQUEsR0FBQUMsQ0FBQSxXQUFPQyxNQUFBLENBQUFDLFVBQVUsQ0FBQ0MsTUFBTTtFQUFFQztBQUFRLENBQWU7RUFBQTtFQUFBTCxjQUFBLEdBQUFNLENBQUE7RUFDckYsTUFBTUMsTUFBQTtFQUFBO0VBQUEsQ0FBQVAsY0FBQSxHQUFBUSxDQUFBLFFBQVMsSUFBQUMsV0FBQSxDQUFBQyxTQUFTO0VBQ3hCLE1BQU1DLFFBQUE7RUFBQTtFQUFBLENBQUFYLGNBQUEsR0FBQVEsQ0FBQSxRQUFXLElBQUFDLFdBQUEsQ0FBQUcsV0FBVztFQUFBO0VBQUFaLGNBQUEsR0FBQVEsQ0FBQTtFQUU1QixJQUFBSyxNQUFBLENBQUFDLFNBQVMsRUFBQztJQUFBO0lBQUFkLGNBQUEsR0FBQU0sQ0FBQTtJQUFBTixjQUFBLEdBQUFRLENBQUE7SUFDUixNQUFNTyxTQUFBLEdBQVksTUFBQUEsQ0FBQTtNQUFBO01BQUFmLGNBQUEsR0FBQU0sQ0FBQTtNQUNoQixNQUFNO1FBQUVVLElBQUEsRUFBTTtVQUFFQztRQUFJLENBQUU7UUFBRUM7TUFBSyxDQUFFO01BQUE7TUFBQSxDQUFBbEIsY0FBQSxHQUFBUSxDQUFBLFFBQUcsTUFBTSxJQUFBVyxPQUFBLENBQUFDLDJCQUEyQixJQUFHQyxJQUFJLENBQUNDLE9BQU87TUFFbEY7TUFBQTtNQUFBdEIsY0FBQSxHQUFBUSxDQUFBO01BQ0E7TUFBSTtNQUFBLENBQUFSLGNBQUEsR0FBQUMsQ0FBQSxXQUFBRixJQUFBLEtBQVNHLE1BQUEsQ0FBQUMsVUFBVSxDQUFDb0IsSUFBSTtNQUFBO01BQUEsQ0FBQXZCLGNBQUEsR0FBQUMsQ0FBQSxXQUFJZ0IsSUFBQTtNQUFBO01BQUEsQ0FBQWpCLGNBQUEsR0FBQUMsQ0FBQSxXQUFRLENBQUNpQixLQUFBLEdBQU87UUFBQTtRQUFBbEIsY0FBQSxHQUFBQyxDQUFBO1FBQUFELGNBQUEsR0FBQVEsQ0FBQTtRQUM5Q0QsTUFBQSxDQUFPaUIsSUFBSSxDQUFDO01BQ2QsT0FBTztRQUFBO1FBQUF4QixjQUFBLEdBQUFDLENBQUE7UUFBQUQsY0FBQSxHQUFBUSxDQUFBO1FBQUE7UUFBSTtRQUFBLENBQUFSLGNBQUEsR0FBQUMsQ0FBQSxXQUFBRixJQUFBLEtBQVNHLE1BQUEsQ0FBQUMsVUFBVSxDQUFDb0IsSUFBSTtRQUFLO1FBQUEsQ0FBQXZCLGNBQUEsR0FBQUMsQ0FBQSxZQUFDZ0IsSUFBQTtRQUFBO1FBQUEsQ0FBQWpCLGNBQUEsR0FBQUMsQ0FBQSxXQUFRaUIsS0FBSSxJQUFJO1VBQUE7VUFBQWxCLGNBQUEsR0FBQUMsQ0FBQTtVQUFBRCxjQUFBLEdBQUFRLENBQUE7VUFDdkRELE1BQUEsQ0FBT2lCLElBQUksQ0FBQztRQUNkO1FBQUE7UUFBQTtVQUFBeEIsY0FBQSxHQUFBQyxDQUFBO1FBQUE7TUFBQTtJQUNGO0lBQUE7SUFBQUQsY0FBQSxHQUFBUSxDQUFBO0lBRUFPLFNBQUE7RUFDRixHQUFHLENBQUNoQixJQUFBLEVBQU1RLE1BQUEsRUFBUUksUUFBQSxDQUFTO0VBQUE7RUFBQVgsY0FBQSxHQUFBUSxDQUFBO0VBRTNCLG9CQUFPLElBQUFpQixXQUFBLENBQUFDLEdBQUEsRUFBQUQsV0FBQSxDQUFBRSxRQUFBO2NBQUd0Qjs7QUFDWiIsImlnbm9yZUxpc3QiOltdfQ==