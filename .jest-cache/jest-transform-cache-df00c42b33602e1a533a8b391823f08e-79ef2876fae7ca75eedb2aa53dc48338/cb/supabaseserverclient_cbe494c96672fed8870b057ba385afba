ca3f1d77cfe4f580ef776acbf0b51b34
"use strict";

/* istanbul ignore next */
function cov_qa4wkjqni() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/utils/supabase-server-client.ts";
  var hash = "73d27e2e32207ce3fd82c75f73e195a15bc1ea3b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/utils/supabase-server-client.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 43
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "8": {
        start: {
          line: 25,
          column: 13
        },
        end: {
          line: 25,
          column: 37
        }
      },
      "9": {
        start: {
          line: 26,
          column: 15
        },
        end: {
          line: 26,
          column: 31
        }
      },
      "10": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "11": {
        start: {
          line: 28,
          column: 39
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "12": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 41
        }
      },
      "13": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "14": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 20
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "16": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "17": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 19
        }
      },
      "18": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "20": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 53
        }
      },
      "21": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "22": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 30
        }
      },
      "23": {
        start: {
          line: 48,
          column: 17
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "24": {
        start: {
          line: 51,
          column: 32
        },
        end: {
          line: 51,
          column: 88
        }
      },
      "25": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "26": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "27": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 54,
          column: 95
        }
      },
      "28": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "29": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 57
        }
      },
      "30": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 39
        }
      },
      "31": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "32": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "33": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 31
        }
      },
      "34": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 18
        }
      },
      "35": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "36": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 105
        }
      },
      "37": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "38": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 63
        }
      },
      "39": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "40": {
        start: {
          line: 83,
          column: 28
        },
        end: {
          line: 83,
          column: 126
        }
      },
      "41": {
        start: {
          line: 83,
          column: 75
        },
        end: {
          line: 83,
          column: 125
        }
      },
      "42": {
        start: {
          line: 85,
          column: 28
        },
        end: {
          line: 85,
          column: 43
        }
      },
      "43": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "44": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 94,
          column: 17
        }
      },
      "45": {
        start: {
          line: 89,
          column: 35
        },
        end: {
          line: 89,
          column: 56
        }
      },
      "46": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 90,
          column: 41
        }
      },
      "47": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 93,
          column: 37
        }
      },
      "48": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 101,
          column: 17
        }
      },
      "49": {
        start: {
          line: 98,
          column: 20
        },
        end: {
          line: 98,
          column: 58
        }
      },
      "50": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 108,
          column: 17
        }
      },
      "51": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 45
        }
      },
      "52": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 117,
          column: 10
        }
      },
      "53": {
        start: {
          line: 114,
          column: 21
        },
        end: {
          line: 114,
          column: 30
        }
      },
      "54": {
        start: {
          line: 120,
          column: 21
        },
        end: {
          line: 136,
          column: 2
        }
      },
      "55": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 30
        }
      },
      "56": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 53
        }
      },
      "57": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 135,
          column: 7
        }
      },
      "58": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 45
        }
      },
      "59": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 54
        }
      },
      "60": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 50
        }
      },
      "61": {
        start: {
          line: 137,
          column: 17
        },
        end: {
          line: 137,
          column: 29
        }
      },
      "62": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 30
        }
      },
      "63": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "64": {
        start: {
          line: 141,
          column: 28
        },
        end: {
          line: 141,
          column: 126
        }
      },
      "65": {
        start: {
          line: 141,
          column: 75
        },
        end: {
          line: 141,
          column: 125
        }
      },
      "66": {
        start: {
          line: 142,
          column: 28
        },
        end: {
          line: 142,
          column: 43
        }
      },
      "67": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "68": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 146,
          column: 56
        }
      },
      "69": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 149,
          column: 58
        }
      },
      "70": {
        start: {
          line: 152,
          column: 20
        },
        end: {
          line: 152,
          column: 45
        }
      },
      "71": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "72": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 64
        }
      },
      "73": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 166,
          column: 11
        }
      },
      "74": {
        start: {
          line: 162,
          column: 25
        },
        end: {
          line: 162,
          column: 34
        }
      },
      "75": {
        start: {
          line: 169,
          column: 36
        },
        end: {
          line: 169,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 12,
            column: 19
          }
        },
        loc: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 30
          },
          end: {
            line: 15,
            column: 31
          }
        },
        loc: {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 18,
            column: 34
          }
        },
        loc: {
          start: {
            line: 18,
            column: 44
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 21,
            column: 14
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 47
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 31,
            column: 39
          },
          end: {
            line: 31,
            column: 40
          }
        },
        loc: {
          start: {
            line: 31,
            column: 61
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "7": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 34
          }
        },
        loc: {
          start: {
            line: 35,
            column: 53
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 35
      },
      "8": {
        name: "assertServerEnvironment",
        decl: {
          start: {
            line: 70,
            column: 13
          },
          end: {
            line: 70,
            column: 36
          }
        },
        loc: {
          start: {
            line: 70,
            column: 39
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 70
      },
      "9": {
        name: "createSafeCookieStore",
        decl: {
          start: {
            line: 80,
            column: 19
          },
          end: {
            line: 80,
            column: 40
          }
        },
        loc: {
          start: {
            line: 80,
            column: 43
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 80
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 83,
            column: 57
          },
          end: {
            line: 83,
            column: 58
          }
        },
        loc: {
          start: {
            line: 83,
            column: 75
          },
          end: {
            line: 83,
            column: 125
          }
        },
        line: 83
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 87,
            column: 17
          },
          end: {
            line: 87,
            column: 18
          }
        },
        loc: {
          start: {
            line: 87,
            column: 25
          },
          end: {
            line: 95,
            column: 13
          }
        },
        line: 87
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 96,
            column: 17
          },
          end: {
            line: 96,
            column: 18
          }
        },
        loc: {
          start: {
            line: 96,
            column: 41
          },
          end: {
            line: 102,
            column: 13
          }
        },
        line: 96
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 103,
            column: 20
          },
          end: {
            line: 103,
            column: 21
          }
        },
        loc: {
          start: {
            line: 103,
            column: 37
          },
          end: {
            line: 109,
            column: 13
          }
        },
        line: 103
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 114,
            column: 17
          },
          end: {
            line: 114,
            column: 18
          }
        },
        loc: {
          start: {
            line: 114,
            column: 21
          },
          end: {
            line: 114,
            column: 30
          }
        },
        line: 114
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 115,
            column: 17
          },
          end: {
            line: 115,
            column: 18
          }
        },
        loc: {
          start: {
            line: 115,
            column: 21
          },
          end: {
            line: 115,
            column: 23
          }
        },
        line: 115
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 21
          }
        },
        loc: {
          start: {
            line: 116,
            column: 24
          },
          end: {
            line: 116,
            column: 26
          }
        },
        line: 116
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 120,
            column: 39
          },
          end: {
            line: 120,
            column: 40
          }
        },
        loc: {
          start: {
            line: 120,
            column: 49
          },
          end: {
            line: 136,
            column: 1
          }
        },
        line: 120
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        },
        loc: {
          start: {
            line: 125,
            column: 23
          },
          end: {
            line: 127,
            column: 13
          }
        },
        line: 125
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        },
        loc: {
          start: {
            line: 128,
            column: 39
          },
          end: {
            line: 130,
            column: 13
          }
        },
        line: 128
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        },
        loc: {
          start: {
            line: 131,
            column: 35
          },
          end: {
            line: 133,
            column: 13
          }
        },
        line: 131
      },
      "21": {
        name: "createServerActionClient",
        decl: {
          start: {
            line: 138,
            column: 15
          },
          end: {
            line: 138,
            column: 39
          }
        },
        loc: {
          start: {
            line: 138,
            column: 42
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 138
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 141,
            column: 57
          },
          end: {
            line: 141,
            column: 58
          }
        },
        loc: {
          start: {
            line: 141,
            column: 75
          },
          end: {
            line: 141,
            column: 125
          }
        },
        line: 141
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 145,
            column: 17
          }
        },
        loc: {
          start: {
            line: 145,
            column: 27
          },
          end: {
            line: 147,
            column: 17
          }
        },
        line: 145
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        },
        loc: {
          start: {
            line: 148,
            column: 43
          },
          end: {
            line: 150,
            column: 17
          }
        },
        line: 148
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        },
        loc: {
          start: {
            line: 151,
            column: 39
          },
          end: {
            line: 153,
            column: 17
          }
        },
        line: 151
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 162,
            column: 21
          },
          end: {
            line: 162,
            column: 22
          }
        },
        loc: {
          start: {
            line: 162,
            column: 25
          },
          end: {
            line: 162,
            column: 34
          }
        },
        line: 162
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 163,
            column: 21
          },
          end: {
            line: 163,
            column: 22
          }
        },
        loc: {
          start: {
            line: 163,
            column: 25
          },
          end: {
            line: 163,
            column: 27
          }
        },
        line: 163
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 164,
            column: 24
          },
          end: {
            line: 164,
            column: 25
          }
        },
        loc: {
          start: {
            line: 164,
            column: 28
          },
          end: {
            line: 164,
            column: 30
          }
        },
        line: 164
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 32,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 45
          }
        }, {
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 65
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 27
          }
        }, {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 36,
            column: 45
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 20
          }
        }, {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 47
          }
        }, {
          start: {
            line: 39,
            column: 51
          },
          end: {
            line: 39,
            column: 76
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "7": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 17
          },
          end: {
            line: 45,
            column: 31
          }
        }],
        line: 45
      },
      "8": {
        loc: {
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 53
          }
        }, {
          start: {
            line: 51,
            column: 57
          },
          end: {
            line: 51,
            column: 88
          }
        }],
        line: 51
      },
      "9": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "10": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 29
          }
        }, {
          start: {
            line: 53,
            column: 33
          },
          end: {
            line: 53,
            column: 79
          }
        }],
        line: 53
      },
      "11": {
        loc: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 47
          },
          end: {
            line: 54,
            column: 88
          }
        }, {
          start: {
            line: 54,
            column: 91
          },
          end: {
            line: 54,
            column: 95
          }
        }],
        line: 54
      },
      "12": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: 57,
            column: 19
          },
          end: {
            line: 59,
            column: 13
          }
        }],
        line: 55
      },
      "13": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 20
          }
        }, {
          start: {
            line: 55,
            column: 25
          },
          end: {
            line: 55,
            column: 33
          }
        }, {
          start: {
            line: 55,
            column: 37
          },
          end: {
            line: 55,
            column: 45
          }
        }],
        line: 55
      },
      "14": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "15": {
        loc: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "16": {
        loc: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "17": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/utils/supabase-server-client.ts"],
      sourcesContent: ["import { createServerClient } from \"@supabase/ssr\";\nimport { cache } from \"react\";\nimport type { CookieOptions } from \"@supabase/ssr\";\n\n/**\n * \uC11C\uBC84 \uD658\uACBD \uCCB4\uD06C - \uC5C4\uACA9\uD55C \uAC80\uC99D\n */\nfunction assertServerEnvironment() {\n  if (typeof window !== \"undefined\") {\n    throw new Error(\n      \"createClient\uB294 \uC11C\uBC84 \uD658\uACBD\uC5D0\uC11C\uB9CC \uD638\uCD9C\uD574\uC57C \uD569\uB2C8\uB2E4. \uD074\uB77C\uC774\uC5B8\uD2B8\uC5D0\uC11C\uB294 createClientComponentClient\uB97C \uC0AC\uC6A9\uD558\uC138\uC694.\",\n    );\n  }\n  \n  if (typeof process === \"undefined\") {\n    throw new Error(\"\uC11C\uBC84 \uD658\uACBD\uC774 \uC544\uB2D9\uB2C8\uB2E4. process \uAC1D\uCCB4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.\");\n  }\n}\n\n/**\n * \uC548\uC804\uD55C \uCFE0\uD0A4 \uC2A4\uD1A0\uC5B4 \uC0DD\uC131 \uD568\uC218\n */\nasync function createSafeCookieStore() {\n  try {\n    // Dynamic import\uB85C\uB9CC next/headers \uB85C\uB4DC\n    const { cookies } = await import(\"next/headers\");\n    \n    // Next.js 15\uC5D0\uC11C\uB294 \uBC18\uB4DC\uC2DC async \uD568\uC218 \uB0B4\uC5D0\uC11C \uD638\uCD9C\n    const cookieStore = await cookies();\n    \n    return {\n      get: (name: string) => {\n        try {\n          const cookie = cookieStore.get(name);\n          return cookie?.value;\n        } catch (error) {\n          // Request scope \uBC16\uC5D0\uC11C \uD638\uCD9C\uB41C \uACBD\uC6B0 undefined \uBC18\uD658\n          return undefined;\n        }\n      },\n      set: (name: string, value: string, options?: CookieOptions) => {\n        try {\n          cookieStore.set(name, value, options);\n        } catch (error) {\n          // Request scope \uBC16\uC5D0\uC11C\uB294 \uBB34\uC2DC\n        }\n      },\n      remove: (name: string, options?: CookieOptions) => {\n        try {\n          cookieStore.delete(name);\n        } catch (error) {\n          // Request scope \uBC16\uC5D0\uC11C\uB294 \uBB34\uC2DC\n        }\n      },\n    };\n  } catch (error) {\n    // next/headers\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uB294 \uD658\uACBD\uC5D0\uC11C\uB294 \uBE48 \uAD6C\uD604 \uBC18\uD658\n    return {\n      get: () => undefined,\n      set: () => {},\n      remove: () => {},\n    };\n  }\n}\n\n/**\n * \uC11C\uBC84 \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C\uB9CC \uC0AC\uC6A9\uD560 \uC218 \uC788\uB294 Supabase \uD074\uB77C\uC774\uC5B8\uD2B8 \uC0DD\uC131\n * Next.js 15 App Router \uD658\uACBD\uC5D0\uC11C \uC548\uC804\uD558\uAC8C cookies \uC0AC\uC6A9\n */\nexport const createClient = cache(async () => {\n  assertServerEnvironment();\n\n  const cookieStore = await createSafeCookieStore();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name);\n        },\n        set(name: string, value: string, options: CookieOptions) {\n          cookieStore.set(name, value, options);\n        },\n        remove(name: string, options: CookieOptions) {\n          cookieStore.remove(name, options);\n        },\n      },\n    },\n  );\n});\n\nexport default createClient;\n\n/**\n * \uC11C\uBC84 \uC561\uC158\uC5D0\uC11C \uC0AC\uC6A9\uD560 \uC218 \uC788\uB294 Supabase \uD074\uB77C\uC774\uC5B8\uD2B8\n */\nexport async function createServerActionClient() {\n  assertServerEnvironment();\n  \n  try {\n    const { cookies } = await import(\"next/headers\");\n    const cookieStore = await cookies();\n\n    return createServerClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n      {\n        cookies: {\n          get(name: string) {\n            return cookieStore.get(name)?.value;\n          },\n          set(name: string, value: string, options: CookieOptions) {\n            cookieStore.set(name, value, options);\n          },\n          remove(name: string, options: CookieOptions) {\n            cookieStore.delete(name);\n          },\n        },\n      },\n    );\n  } catch (error) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(\"\uC11C\uBC84 \uC561\uC158\uC5D0\uC11C next/headers \uC0AC\uC6A9 \uBD88\uAC00\uB2A5:\", error);\n    }\n    \n    return createServerClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n      {\n        cookies: {\n          get: () => undefined,\n          set: () => {},\n          remove: () => {},\n        },\n      },\n    );\n  }\n}\n\n// \uD638\uD658\uC131\uC744 \uC704\uD55C deprecated \uBCC4\uCE6D\nexport const createServerComponentClient = createClient; "],
      names: ["createClient", "createServerActionClient", "createServerComponentClient", "assertServerEnvironment", "window", "Error", "process", "createSafeCookieStore", "cookies", "cookieStore", "get", "name", "cookie", "value", "error", "undefined", "set", "options", "remove", "delete", "cache", "createServerClient", "env", "NEXT_PUBLIC_SUPABASE_URL", "NEXT_PUBLIC_SUPABASE_ANON_KEY", "NODE_ENV", "console", "warn"],
      mappings: ";;;;;;;;;;;IAqEaA,YAAY;eAAZA;;IA6BSC,wBAAwB;eAAxBA;;IA4CTC,2BAA2B;eAA3BA;;IAjDb,OAA4B;eAA5B;;;qBA7FmC;uBACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGtB;;CAEC,GACD,SAASC;IACP,IAAI,OAAOC,WAAW,aAAa;QACjC,MAAM,IAAIC,MACR;IAEJ;IAEA,IAAI,OAAOC,YAAY,aAAa;QAClC,MAAM,IAAID,MAAM;IAClB;AACF;AAEA;;CAEC,GACD,eAAeE;IACb,IAAI;QACF,mCAAmC;QACnC,MAAM,EAAEC,OAAO,EAAE,GAAG,MAAM,mEAAA,QAAO;QAEjC,oCAAoC;QACpC,MAAMC,cAAc,MAAMD;QAE1B,OAAO;YACLE,KAAK,CAACC;gBACJ,IAAI;oBACF,MAAMC,SAASH,YAAYC,GAAG,CAACC;oBAC/B,OAAOC,QAAQC;gBACjB,EAAE,OAAOC,OAAO;oBACd,wCAAwC;oBACxC,OAAOC;gBACT;YACF;YACAC,KAAK,CAACL,MAAcE,OAAeI;gBACjC,IAAI;oBACFR,YAAYO,GAAG,CAACL,MAAME,OAAOI;gBAC/B,EAAE,OAAOH,OAAO;gBACd,wBAAwB;gBAC1B;YACF;YACAI,QAAQ,CAACP,MAAcM;gBACrB,IAAI;oBACFR,YAAYU,MAAM,CAACR;gBACrB,EAAE,OAAOG,OAAO;gBACd,wBAAwB;gBAC1B;YACF;QACF;IACF,EAAE,OAAOA,OAAO;QACd,uCAAuC;QACvC,OAAO;YACLJ,KAAK,IAAMK;YACXC,KAAK,KAAO;YACZE,QAAQ,KAAO;QACjB;IACF;AACF;AAMO,MAAMlB,eAAeoB,IAAAA,YAAK,EAAC;IAChCjB;IAEA,MAAMM,cAAc,MAAMF;IAE1B,OAAOc,IAAAA,uBAAkB,EACvBf,QAAQgB,GAAG,CAACC,wBAAwB,EACpCjB,QAAQgB,GAAG,CAACE,6BAA6B,EACzC;QACEhB,SAAS;YACPE,KAAIC,IAAY;gBACd,OAAOF,YAAYC,GAAG,CAACC;YACzB;YACAK,KAAIL,IAAY,EAAEE,KAAa,EAAEI,OAAsB;gBACrDR,YAAYO,GAAG,CAACL,MAAME,OAAOI;YAC/B;YACAC,QAAOP,IAAY,EAAEM,OAAsB;gBACzCR,YAAYS,MAAM,CAACP,MAAMM;YAC3B;QACF;IACF;AAEJ;MAEA,WAAejB;AAKR,eAAeC;IACpBE;IAEA,IAAI;QACF,MAAM,EAAEK,OAAO,EAAE,GAAG,MAAM,mEAAA,QAAO;QACjC,MAAMC,cAAc,MAAMD;QAE1B,OAAOa,IAAAA,uBAAkB,EACvBf,QAAQgB,GAAG,CAACC,wBAAwB,EACpCjB,QAAQgB,GAAG,CAACE,6BAA6B,EACzC;YACEhB,SAAS;gBACPE,KAAIC,IAAY;oBACd,OAAOF,YAAYC,GAAG,CAACC,OAAOE;gBAChC;gBACAG,KAAIL,IAAY,EAAEE,KAAa,EAAEI,OAAsB;oBACrDR,YAAYO,GAAG,CAACL,MAAME,OAAOI;gBAC/B;gBACAC,QAAOP,IAAY,EAAEM,OAAsB;oBACzCR,YAAYU,MAAM,CAACR;gBACrB;YACF;QACF;IAEJ,EAAE,OAAOG,OAAO;QACd,IAAIR,QAAQgB,GAAG,CAACG,QAAQ,KAAK,eAAe;YAC1CC,QAAQC,IAAI,CAAC,gCAAgCb;QAC/C;QAEA,OAAOO,IAAAA,uBAAkB,EACvBf,QAAQgB,GAAG,CAACC,wBAAwB,EACpCjB,QAAQgB,GAAG,CAACE,6BAA6B,EACzC;YACEhB,SAAS;gBACPE,KAAK,IAAMK;gBACXC,KAAK,KAAO;gBACZE,QAAQ,KAAO;YACjB;QACF;IAEJ;AACF;AAGO,MAAMhB,8BAA8BF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "73d27e2e32207ce3fd82c75f73e195a15bc1ea3b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_qa4wkjqni = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qa4wkjqni();
cov_qa4wkjqni().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_qa4wkjqni().f[0]++;
  cov_qa4wkjqni().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_qa4wkjqni().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_qa4wkjqni().s[3]++;
_export(exports, {
  createClient: function () {
    /* istanbul ignore next */
    cov_qa4wkjqni().f[1]++;
    cov_qa4wkjqni().s[4]++;
    return createClient;
  },
  createServerActionClient: function () {
    /* istanbul ignore next */
    cov_qa4wkjqni().f[2]++;
    cov_qa4wkjqni().s[5]++;
    return createServerActionClient;
  },
  createServerComponentClient: function () {
    /* istanbul ignore next */
    cov_qa4wkjqni().f[3]++;
    cov_qa4wkjqni().s[6]++;
    return createServerComponentClient;
  },
  default: function () {
    /* istanbul ignore next */
    cov_qa4wkjqni().f[4]++;
    cov_qa4wkjqni().s[7]++;
    return _default;
  }
});
const _ssr =
/* istanbul ignore next */
(cov_qa4wkjqni().s[8]++, require("@supabase/ssr"));
const _react =
/* istanbul ignore next */
(cov_qa4wkjqni().s[9]++, require("react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_qa4wkjqni().f[5]++;
  cov_qa4wkjqni().s[10]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_qa4wkjqni().b[0][0]++;
    cov_qa4wkjqni().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_qa4wkjqni().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_qa4wkjqni().s[12]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_qa4wkjqni().s[13]++, new WeakMap());
  /* istanbul ignore next */
  cov_qa4wkjqni().s[14]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_qa4wkjqni().f[6]++;
    cov_qa4wkjqni().s[15]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_qa4wkjqni().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_qa4wkjqni().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_qa4wkjqni().f[7]++;
  cov_qa4wkjqni().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_qa4wkjqni().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_qa4wkjqni().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_qa4wkjqni().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_qa4wkjqni().b[2][0]++;
    cov_qa4wkjqni().s[17]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_qa4wkjqni().b[2][1]++;
  }
  cov_qa4wkjqni().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_qa4wkjqni().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_qa4wkjqni().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_qa4wkjqni().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_qa4wkjqni().b[4][0]++;
    cov_qa4wkjqni().s[19]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_qa4wkjqni().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_qa4wkjqni().s[20]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_qa4wkjqni().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_qa4wkjqni().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_qa4wkjqni().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_qa4wkjqni().b[6][0]++;
    cov_qa4wkjqni().s[22]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_qa4wkjqni().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_qa4wkjqni().s[23]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_qa4wkjqni().s[24]++,
  /* istanbul ignore next */
  (cov_qa4wkjqni().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_qa4wkjqni().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_qa4wkjqni().s[25]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_qa4wkjqni().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_qa4wkjqni().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_qa4wkjqni().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_qa4wkjqni().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_qa4wkjqni().s[27]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_qa4wkjqni().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_qa4wkjqni().b[11][1]++, null));
      /* istanbul ignore next */
      cov_qa4wkjqni().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_qa4wkjqni().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_qa4wkjqni().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_qa4wkjqni().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_qa4wkjqni().b[12][0]++;
        cov_qa4wkjqni().s[29]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_qa4wkjqni().b[12][1]++;
        cov_qa4wkjqni().s[30]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_qa4wkjqni().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_qa4wkjqni().s[31]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_qa4wkjqni().s[32]++;
  if (cache) {
    /* istanbul ignore next */
    cov_qa4wkjqni().b[14][0]++;
    cov_qa4wkjqni().s[33]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_qa4wkjqni().b[14][1]++;
  }
  cov_qa4wkjqni().s[34]++;
  return newObj;
}
/**
 * 서버 환경 체크 - 엄격한 검증
 */
function assertServerEnvironment() {
  /* istanbul ignore next */
  cov_qa4wkjqni().f[8]++;
  cov_qa4wkjqni().s[35]++;
  if (typeof window !== "undefined") {
    /* istanbul ignore next */
    cov_qa4wkjqni().b[15][0]++;
    cov_qa4wkjqni().s[36]++;
    throw new Error("createClient는 서버 환경에서만 호출해야 합니다. 클라이언트에서는 createClientComponentClient를 사용하세요.");
  } else
  /* istanbul ignore next */
  {
    cov_qa4wkjqni().b[15][1]++;
  }
  cov_qa4wkjqni().s[37]++;
  if (typeof process === "undefined") {
    /* istanbul ignore next */
    cov_qa4wkjqni().b[16][0]++;
    cov_qa4wkjqni().s[38]++;
    throw new Error("서버 환경이 아닙니다. process 객체를 찾을 수 없습니다.");
  } else
  /* istanbul ignore next */
  {
    cov_qa4wkjqni().b[16][1]++;
  }
}
/**
 * 안전한 쿠키 스토어 생성 함수
 */
async function createSafeCookieStore() {
  /* istanbul ignore next */
  cov_qa4wkjqni().f[9]++;
  cov_qa4wkjqni().s[39]++;
  try {
    // Dynamic import로만 next/headers 로드
    const {
      cookies
    } =
    /* istanbul ignore next */
    (cov_qa4wkjqni().s[40]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_qa4wkjqni().f[10]++;
      cov_qa4wkjqni().s[41]++;
      return /*#__PURE__*/_interop_require_wildcard(require("next/headers"));
    }));
    // Next.js 15에서는 반드시 async 함수 내에서 호출
    const cookieStore =
    /* istanbul ignore next */
    (cov_qa4wkjqni().s[42]++, await cookies());
    /* istanbul ignore next */
    cov_qa4wkjqni().s[43]++;
    return {
      get: name => {
        /* istanbul ignore next */
        cov_qa4wkjqni().f[11]++;
        cov_qa4wkjqni().s[44]++;
        try {
          const cookie =
          /* istanbul ignore next */
          (cov_qa4wkjqni().s[45]++, cookieStore.get(name));
          /* istanbul ignore next */
          cov_qa4wkjqni().s[46]++;
          return cookie?.value;
        } catch (error) {
          /* istanbul ignore next */
          cov_qa4wkjqni().s[47]++;
          // Request scope 밖에서 호출된 경우 undefined 반환
          return undefined;
        }
      },
      set: (name, value, options) => {
        /* istanbul ignore next */
        cov_qa4wkjqni().f[12]++;
        cov_qa4wkjqni().s[48]++;
        try {
          /* istanbul ignore next */
          cov_qa4wkjqni().s[49]++;
          cookieStore.set(name, value, options);
        } catch (error) {
          // Request scope 밖에서는 무시
        }
      },
      remove: (name, options) => {
        /* istanbul ignore next */
        cov_qa4wkjqni().f[13]++;
        cov_qa4wkjqni().s[50]++;
        try {
          /* istanbul ignore next */
          cov_qa4wkjqni().s[51]++;
          cookieStore.delete(name);
        } catch (error) {
          // Request scope 밖에서는 무시
        }
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_qa4wkjqni().s[52]++;
    // next/headers를 사용할 수 없는 환경에서는 빈 구현 반환
    return {
      get: () => {
        /* istanbul ignore next */
        cov_qa4wkjqni().f[14]++;
        cov_qa4wkjqni().s[53]++;
        return undefined;
      },
      set: () => {
        /* istanbul ignore next */
        cov_qa4wkjqni().f[15]++;
      },
      remove: () => {
        /* istanbul ignore next */
        cov_qa4wkjqni().f[16]++;
      }
    };
  }
}
const createClient =
/* istanbul ignore next */
(cov_qa4wkjqni().s[54]++, (0, _react.cache)(async () => {
  /* istanbul ignore next */
  cov_qa4wkjqni().f[17]++;
  cov_qa4wkjqni().s[55]++;
  assertServerEnvironment();
  const cookieStore =
  /* istanbul ignore next */
  (cov_qa4wkjqni().s[56]++, await createSafeCookieStore());
  /* istanbul ignore next */
  cov_qa4wkjqni().s[57]++;
  return (0, _ssr.createServerClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY, {
    cookies: {
      get(name) {
        /* istanbul ignore next */
        cov_qa4wkjqni().f[18]++;
        cov_qa4wkjqni().s[58]++;
        return cookieStore.get(name);
      },
      set(name, value, options) {
        /* istanbul ignore next */
        cov_qa4wkjqni().f[19]++;
        cov_qa4wkjqni().s[59]++;
        cookieStore.set(name, value, options);
      },
      remove(name, options) {
        /* istanbul ignore next */
        cov_qa4wkjqni().f[20]++;
        cov_qa4wkjqni().s[60]++;
        cookieStore.remove(name, options);
      }
    }
  });
}));
const _default =
/* istanbul ignore next */
(cov_qa4wkjqni().s[61]++, createClient);
async function createServerActionClient() {
  /* istanbul ignore next */
  cov_qa4wkjqni().f[21]++;
  cov_qa4wkjqni().s[62]++;
  assertServerEnvironment();
  /* istanbul ignore next */
  cov_qa4wkjqni().s[63]++;
  try {
    const {
      cookies
    } =
    /* istanbul ignore next */
    (cov_qa4wkjqni().s[64]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_qa4wkjqni().f[22]++;
      cov_qa4wkjqni().s[65]++;
      return /*#__PURE__*/_interop_require_wildcard(require("next/headers"));
    }));
    const cookieStore =
    /* istanbul ignore next */
    (cov_qa4wkjqni().s[66]++, await cookies());
    /* istanbul ignore next */
    cov_qa4wkjqni().s[67]++;
    return (0, _ssr.createServerClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY, {
      cookies: {
        get(name) {
          /* istanbul ignore next */
          cov_qa4wkjqni().f[23]++;
          cov_qa4wkjqni().s[68]++;
          return cookieStore.get(name)?.value;
        },
        set(name, value, options) {
          /* istanbul ignore next */
          cov_qa4wkjqni().f[24]++;
          cov_qa4wkjqni().s[69]++;
          cookieStore.set(name, value, options);
        },
        remove(name, options) {
          /* istanbul ignore next */
          cov_qa4wkjqni().f[25]++;
          cov_qa4wkjqni().s[70]++;
          cookieStore.delete(name);
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_qa4wkjqni().s[71]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_qa4wkjqni().b[17][0]++;
      cov_qa4wkjqni().s[72]++;
      console.warn("서버 액션에서 next/headers 사용 불가능:", error);
    } else
    /* istanbul ignore next */
    {
      cov_qa4wkjqni().b[17][1]++;
    }
    cov_qa4wkjqni().s[73]++;
    return (0, _ssr.createServerClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY, {
      cookies: {
        get: () => {
          /* istanbul ignore next */
          cov_qa4wkjqni().f[26]++;
          cov_qa4wkjqni().s[74]++;
          return undefined;
        },
        set: () => {
          /* istanbul ignore next */
          cov_qa4wkjqni().f[27]++;
        },
        remove: () => {
          /* istanbul ignore next */
          cov_qa4wkjqni().f[28]++;
        }
      }
    });
  }
}
const createServerComponentClient =
/* istanbul ignore next */
(cov_qa4wkjqni().s[75]++, createClient);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,