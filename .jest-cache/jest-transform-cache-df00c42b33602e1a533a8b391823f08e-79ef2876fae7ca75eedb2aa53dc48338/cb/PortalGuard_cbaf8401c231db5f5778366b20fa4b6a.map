{"version":3,"names":["PortalGuard","type","cov_2imbffohvk","b","_enums","PortalType","PUBLIC","children","f","router","s","_navigation","useRouter","pathname","usePathname","_react","useEffect","checkAuth","data","user","error","_client","createBrowserSupabaseClient","auth","getUser","AUTH","push","_jsxruntime","jsx","Fragment"],"sources":["/Users/cheolhyun/Repositories/picnic-web/components/PortalGuard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { usePathname, useRouter } from 'next/navigation';\nimport { PortalType } from '@/utils/enums';\nimport { createBrowserSupabaseClient } from '@/lib/supabase/client';\nimport LoadingSpinner from '@/components/ui/LoadingSpinner';\n\ninterface PortalProps {\n  type?: PortalType;\n  children: React.ReactNode;\n}\n\nexport default function PortalGuard({ type = PortalType.PUBLIC, children }: PortalProps) {\n  const router = useRouter();\n  const pathname = usePathname();\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const { data: { user }, error } = await createBrowserSupabaseClient().auth.getUser();\n\n      // 인증 상태에 따른 리다이렉션 (getUser는 getSession보다 빠르고 안정적)\n      if (type === PortalType.AUTH && user && !error) {\n        router.push('/');\n      } else if (type === PortalType.AUTH && (!user || error)) {\n        router.push('/login');\n      }\n    };\n\n    checkAuth();\n  }, [type, router, pathname]);\n\n  return <>{children}</>;\n}\n"],"mappingsaA;;;;;;WAAwBA,WAAA;;;;;;;;yEAXmB;;;kCACJ;;;kCACZ;;;kCACiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ7B,SAASA,YAAY;EAAEC,IAAA;EAAA;EAAA,CAAAC,cAAA,GAAAC,CAAA,WAAOC,MAAA,CAAAC,UAAU,CAACC,MAAM;EAAEC;AAAQ,CAAe;EAAA;EAAAL,cAAA,GAAAM,CAAA;EACrF,MAAMC,MAAA;EAAA;EAAA,CAAAP,cAAA,GAAAQ,CAAA,QAAS,IAAAC,WAAA,CAAAC,SAAS;EACxB,MAAMC,QAAA;EAAA;EAAA,CAAAX,cAAA,GAAAQ,CAAA,QAAW,IAAAC,WAAA,CAAAG,WAAW;EAAA;EAAAZ,cAAA,GAAAQ,CAAA;EAE5B,IAAAK,MAAA,CAAAC,SAAS,EAAC;IAAA;IAAAd,cAAA,GAAAM,CAAA;IAAAN,cAAA,GAAAQ,CAAA;IACR,MAAMO,SAAA,GAAY,MAAAA,CAAA;MAAA;MAAAf,cAAA,GAAAM,CAAA;MAChB,MAAM;QAAEU,IAAA,EAAM;UAAEC;QAAI,CAAE;QAAEC;MAAK,CAAE;MAAA;MAAA,CAAAlB,cAAA,GAAAQ,CAAA,QAAG,MAAM,IAAAW,OAAA,CAAAC,2BAA2B,IAAGC,IAAI,CAACC,OAAO;MAElF;MAAA;MAAAtB,cAAA,GAAAQ,CAAA;MACA;MAAI;MAAA,CAAAR,cAAA,GAAAC,CAAA,WAAAF,IAAA,KAASG,MAAA,CAAAC,UAAU,CAACoB,IAAI;MAAA;MAAA,CAAAvB,cAAA,GAAAC,CAAA,WAAIgB,IAAA;MAAA;MAAA,CAAAjB,cAAA,GAAAC,CAAA,WAAQ,CAACiB,KAAA,GAAO;QAAA;QAAAlB,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAQ,CAAA;QAC9CD,MAAA,CAAOiB,IAAI,CAAC;MACd,OAAO;QAAA;QAAAxB,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAQ,CAAA;QAAA;QAAI;QAAA,CAAAR,cAAA,GAAAC,CAAA,WAAAF,IAAA,KAASG,MAAA,CAAAC,UAAU,CAACoB,IAAI;QAAK;QAAA,CAAAvB,cAAA,GAAAC,CAAA,YAACgB,IAAA;QAAA;QAAA,CAAAjB,cAAA,GAAAC,CAAA,WAAQiB,KAAI,IAAI;UAAA;UAAAlB,cAAA,GAAAC,CAAA;UAAAD,cAAA,GAAAQ,CAAA;UACvDD,MAAA,CAAOiB,IAAI,CAAC;QACd;QAAA;QAAA;UAAAxB,cAAA,GAAAC,CAAA;QAAA;MAAA;IACF;IAAA;IAAAD,cAAA,GAAAQ,CAAA;IAEAO,SAAA;EACF,GAAG,CAAChB,IAAA,EAAMQ,MAAA,EAAQI,QAAA,CAAS;EAAA;EAAAX,cAAA,GAAAQ,CAAA;EAE3B,oBAAO,IAAAiB,WAAA,CAAAC,GAAA,EAAAD,WAAA,CAAAE,QAAA;cAAGtB;;AACZ","ignoreList":[]}