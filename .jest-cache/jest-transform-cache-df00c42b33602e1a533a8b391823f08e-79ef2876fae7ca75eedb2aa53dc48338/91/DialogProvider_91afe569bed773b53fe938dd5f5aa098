9b540e4ced9d7d8a9214e73ea04ce5a5
'use client';
"use strict";

/* istanbul ignore next */
function cov_1uh1gwnhkc() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/components/ui/Dialog/DialogProvider.tsx";
  var hash = "800fdc916f4e237078c408c2e56c74c7b0249469";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/components/ui/Dialog/DialogProvider.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 26
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 25
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 32
        }
      },
      "9": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 48
        }
      },
      "10": {
        start: {
          line: 30,
          column: 29
        },
        end: {
          line: 30,
          column: 72
        }
      },
      "11": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 35
        }
      },
      "12": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 32,
          column: 47
        }
      },
      "13": {
        start: {
          line: 33,
          column: 23
        },
        end: {
          line: 33,
          column: 49
        }
      },
      "14": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 34,
          column: 45
        }
      },
      "15": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 35,
          column: 61
        }
      },
      "16": {
        start: {
          line: 36,
          column: 23
        },
        end: {
          line: 36,
          column: 63
        }
      },
      "17": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "18": {
        start: {
          line: 38,
          column: 39
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "19": {
        start: {
          line: 39,
          column: 28
        },
        end: {
          line: 39,
          column: 41
        }
      },
      "20": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 40,
          column: 40
        }
      },
      "21": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 20
        }
      },
      "22": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 66
        }
      },
      "23": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "24": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 19
        }
      },
      "25": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "26": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "27": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 53
        }
      },
      "28": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "29": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 30
        }
      },
      "30": {
        start: {
          line: 58,
          column: 17
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "31": {
        start: {
          line: 61,
          column: 32
        },
        end: {
          line: 61,
          column: 88
        }
      },
      "32": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "33": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "34": {
        start: {
          line: 64,
          column: 23
        },
        end: {
          line: 64,
          column: 95
        }
      },
      "35": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "36": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 57
        }
      },
      "37": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 39
        }
      },
      "38": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 25
        }
      },
      "39": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "40": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 31
        }
      },
      "41": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 18
        }
      },
      "42": {
        start: {
          line: 79,
          column: 36
        },
        end: {
          line: 79,
          column: 67
        }
      },
      "43": {
        start: {
          line: 81,
          column: 22
        },
        end: {
          line: 81,
          column: 23
        }
      },
      "44": {
        start: {
          line: 82,
          column: 25
        },
        end: {
          line: 82,
          column: 58
        }
      },
      "45": {
        start: {
          line: 82,
          column: 29
        },
        end: {
          line: 82,
          column: 58
        }
      },
      "46": {
        start: {
          line: 84,
          column: 42
        },
        end: {
          line: 88,
          column: 6
        }
      },
      "47": {
        start: {
          line: 89,
          column: 18
        },
        end: {
          line: 89,
          column: 56
        }
      },
      "48": {
        start: {
          line: 90,
          column: 24
        },
        end: {
          line: 103,
          column: 10
        }
      },
      "49": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 94,
          column: 16
        }
      },
      "50": {
        start: {
          line: 91,
          column: 32
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "51": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 102,
          column: 16
        }
      },
      "52": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 101,
          column: 15
        }
      },
      "53": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 116,
          column: 6
        }
      },
      "54": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 113,
          column: 11
        }
      },
      "55": {
        start: {
          line: 117,
          column: 29
        },
        end: {
          line: 153,
          column: 6
        }
      },
      "56": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "57": {
        start: {
          line: 119,
          column: 34
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "58": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 129,
          column: 17
        }
      },
      "59": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 123,
          column: 21
        }
      },
      "60": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 48
        }
      },
      "61": {
        start: {
          line: 124,
          column: 20
        },
        end: {
          line: 124,
          column: 34
        }
      },
      "62": {
        start: {
          line: 125,
          column: 20
        },
        end: {
          line: 125,
          column: 34
        }
      },
      "63": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 127,
          column: 74
        }
      },
      "64": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 128,
          column: 35
        }
      },
      "65": {
        start: {
          line: 131,
          column: 33
        },
        end: {
          line: 137,
          column: 13
        }
      },
      "66": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 134,
          column: 17
        }
      },
      "67": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 37
        }
      },
      "68": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 30
        }
      },
      "69": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 31
        }
      },
      "70": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 149,
          column: 15
        }
      },
      "71": {
        start: {
          line: 154,
          column: 30
        },
        end: {
          line: 188,
          column: 6
        }
      },
      "72": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 185,
          column: 11
        }
      },
      "73": {
        start: {
          line: 156,
          column: 34
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "74": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 164,
          column: 17
        }
      },
      "75": {
        start: {
          line: 158,
          column: 20
        },
        end: {
          line: 158,
          column: 44
        }
      },
      "76": {
        start: {
          line: 159,
          column: 20
        },
        end: {
          line: 159,
          column: 34
        }
      },
      "77": {
        start: {
          line: 160,
          column: 20
        },
        end: {
          line: 160,
          column: 34
        }
      },
      "78": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 162,
          column: 67
        }
      },
      "79": {
        start: {
          line: 163,
          column: 20
        },
        end: {
          line: 163,
          column: 35
        }
      },
      "80": {
        start: {
          line: 166,
          column: 33
        },
        end: {
          line: 172,
          column: 13
        }
      },
      "81": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 169,
          column: 17
        }
      },
      "82": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 168,
          column: 37
        }
      },
      "83": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 30
        }
      },
      "84": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 31
        }
      },
      "85": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 184,
          column: 15
        }
      },
      "86": {
        start: {
          line: 189,
          column: 28
        },
        end: {
          line: 212,
          column: 6
        }
      },
      "87": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 209,
          column: 11
        }
      },
      "88": {
        start: {
          line: 191,
          column: 34
        },
        end: {
          line: 197,
          column: 13
        }
      },
      "89": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 194,
          column: 17
        }
      },
      "90": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 193,
          column: 38
        }
      },
      "91": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 30
        }
      },
      "92": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 26
        }
      },
      "93": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 208,
          column: 15
        }
      },
      "94": {
        start: {
          line: 213,
          column: 30
        },
        end: {
          line: 280,
          column: 6
        }
      },
      "95": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 220,
          column: 11
        }
      },
      "96": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 276,
          column: 11
        }
      },
      "97": {
        start: {
          line: 222,
          column: 32
        },
        end: {
          line: 229,
          column: 13
        }
      },
      "98": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 78
        }
      },
      "99": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 226,
          column: 17
        }
      },
      "100": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 225,
          column: 47
        }
      },
      "101": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 30
        }
      },
      "102": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 228,
          column: 30
        }
      },
      "103": {
        start: {
          line: 230,
          column: 33
        },
        end: {
          line: 237,
          column: 13
        }
      },
      "104": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 65
        }
      },
      "105": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 234,
          column: 17
        }
      },
      "106": {
        start: {
          line: 233,
          column: 20
        },
        end: {
          line: 233,
          column: 37
        }
      },
      "107": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 235,
          column: 30
        }
      },
      "108": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 31
        }
      },
      "109": {
        start: {
          line: 239,
          column: 29
        },
        end: {
          line: 244,
          column: 13
        }
      },
      "110": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 52
        }
      },
      "111": {
        start: {
          line: 240,
          column: 33
        },
        end: {
          line: 240,
          column: 52
        }
      },
      "112": {
        start: {
          line: 241,
          column: 35
        },
        end: {
          line: 241,
          column: 69
        }
      },
      "113": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 76
        }
      },
      "114": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 243,
          column: 54
        }
      },
      "115": {
        start: {
          line: 245,
          column: 35
        },
        end: {
          line: 253,
          column: 13
        }
      },
      "116": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 64
        }
      },
      "117": {
        start: {
          line: 246,
          column: 39
        },
        end: {
          line: 246,
          column: 64
        }
      },
      "118": {
        start: {
          line: 247,
          column: 35
        },
        end: {
          line: 247,
          column: 73
        }
      },
      "119": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 82
        }
      },
      "120": {
        start: {
          line: 249,
          column: 16
        },
        end: {
          line: 249,
          column: 50
        }
      },
      "121": {
        start: {
          line: 249,
          column: 32
        },
        end: {
          line: 249,
          column: 50
        }
      },
      "122": {
        start: {
          line: 250,
          column: 33
        },
        end: {
          line: 250,
          column: 67
        }
      },
      "123": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 251,
          column: 86
        }
      },
      "124": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 77
        }
      },
      "125": {
        start: {
          line: 254,
          column: 31
        },
        end: {
          line: 254,
          column: 41
        }
      },
      "126": {
        start: {
          line: 255,
          column: 37
        },
        end: {
          line: 255,
          column: 53
        }
      },
      "127": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 260,
          column: 15
        }
      },
      "128": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 274,
          column: 15
        }
      },
      "129": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 62
        }
      },
      "130": {
        start: {
          line: 281,
          column: 25
        },
        end: {
          line: 288,
          column: 5
        }
      },
      "131": {
        start: {
          line: 289,
          column: 25
        },
        end: {
          line: 313,
          column: 5
        }
      },
      "132": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 45
        }
      },
      "133": {
        start: {
          line: 290,
          column: 33
        },
        end: {
          line: 290,
          column: 45
        }
      },
      "134": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 312,
          column: 9
        }
      },
      "135": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 295,
          column: 19
        }
      },
      "136": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 299,
          column: 19
        }
      },
      "137": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 303,
          column: 19
        }
      },
      "138": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 307,
          column: 19
        }
      },
      "139": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 311,
          column: 19
        }
      },
      "140": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 320,
          column: 7
        }
      },
      "141": {
        start: {
          line: 323,
          column: 20
        },
        end: {
          line: 323,
          column: 57
        }
      },
      "142": {
        start: {
          line: 324,
          column: 4
        },
        end: {
          line: 326,
          column: 5
        }
      },
      "143": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 325,
          column: 74
        }
      },
      "144": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 327,
          column: 19
        }
      },
      "145": {
        start: {
          line: 330,
          column: 34
        },
        end: {
          line: 330,
          column: 45
        }
      },
      "146": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 331,
          column: 29
        }
      },
      "147": {
        start: {
          line: 334,
          column: 32
        },
        end: {
          line: 334,
          column: 43
        }
      },
      "148": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 335,
          column: 27
        }
      },
      "149": {
        start: {
          line: 338,
          column: 34
        },
        end: {
          line: 338,
          column: 45
        }
      },
      "150": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 339,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 13,
            column: 21
          }
        },
        loc: {
          start: {
            line: 13,
            column: 31
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 14
          },
          end: {
            line: 16,
            column: 15
          }
        },
        loc: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 17
          }
        },
        loc: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 16
          }
        },
        loc: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 23
          }
        },
        loc: {
          start: {
            line: 25,
            column: 33
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 33
          }
        },
        loc: {
          start: {
            line: 37,
            column: 47
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 37
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 41,
            column: 39
          },
          end: {
            line: 41,
            column: 40
          }
        },
        loc: {
          start: {
            line: 41,
            column: 61
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "8": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 45,
            column: 9
          },
          end: {
            line: 45,
            column: 34
          }
        },
        loc: {
          start: {
            line: 45,
            column: 53
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 45
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 82,
            column: 25
          },
          end: {
            line: 82,
            column: 26
          }
        },
        loc: {
          start: {
            line: 82,
            column: 29
          },
          end: {
            line: 82,
            column: 58
          }
        },
        line: 82
      },
      "10": {
        name: "DialogProvider",
        decl: {
          start: {
            line: 83,
            column: 9
          },
          end: {
            line: 83,
            column: 23
          }
        },
        loc: {
          start: {
            line: 83,
            column: 38
          },
          end: {
            line: 321,
            column: 1
          }
        },
        line: 83
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 90,
            column: 48
          },
          end: {
            line: 90,
            column: 49
          }
        },
        loc: {
          start: {
            line: 90,
            column: 52
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 90
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 91,
            column: 23
          },
          end: {
            line: 91,
            column: 24
          }
        },
        loc: {
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 94,
            column: 13
          }
        },
        line: 91
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 96,
            column: 19
          },
          end: {
            line: 96,
            column: 20
          }
        },
        loc: {
          start: {
            line: 96,
            column: 23
          },
          end: {
            line: 102,
            column: 9
          }
        },
        line: 96
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 104,
            column: 47
          },
          end: {
            line: 104,
            column: 48
          }
        },
        loc: {
          start: {
            line: 104,
            column: 56
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 104
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 117,
            column: 53
          },
          end: {
            line: 117,
            column: 54
          }
        },
        loc: {
          start: {
            line: 117,
            column: 62
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 117
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 118,
            column: 27
          },
          end: {
            line: 118,
            column: 28
          }
        },
        loc: {
          start: {
            line: 118,
            column: 38
          },
          end: {
            line: 150,
            column: 9
          }
        },
        line: 118
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 119,
            column: 34
          },
          end: {
            line: 119,
            column: 35
          }
        },
        loc: {
          start: {
            line: 119,
            column: 44
          },
          end: {
            line: 130,
            column: 13
          }
        },
        line: 119
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 131,
            column: 33
          },
          end: {
            line: 131,
            column: 34
          }
        },
        loc: {
          start: {
            line: 131,
            column: 37
          },
          end: {
            line: 137,
            column: 13
          }
        },
        line: 131
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 154,
            column: 54
          },
          end: {
            line: 154,
            column: 55
          }
        },
        loc: {
          start: {
            line: 154,
            column: 63
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 154
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 155,
            column: 27
          },
          end: {
            line: 155,
            column: 28
          }
        },
        loc: {
          start: {
            line: 155,
            column: 38
          },
          end: {
            line: 185,
            column: 9
          }
        },
        line: 155
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 156,
            column: 34
          },
          end: {
            line: 156,
            column: 35
          }
        },
        loc: {
          start: {
            line: 156,
            column: 44
          },
          end: {
            line: 165,
            column: 13
          }
        },
        line: 156
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 166,
            column: 33
          },
          end: {
            line: 166,
            column: 34
          }
        },
        loc: {
          start: {
            line: 166,
            column: 37
          },
          end: {
            line: 172,
            column: 13
          }
        },
        line: 166
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 189,
            column: 52
          },
          end: {
            line: 189,
            column: 53
          }
        },
        loc: {
          start: {
            line: 189,
            column: 61
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 189
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 190,
            column: 27
          },
          end: {
            line: 190,
            column: 28
          }
        },
        loc: {
          start: {
            line: 190,
            column: 38
          },
          end: {
            line: 209,
            column: 9
          }
        },
        line: 190
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 191,
            column: 34
          },
          end: {
            line: 191,
            column: 35
          }
        },
        loc: {
          start: {
            line: 191,
            column: 38
          },
          end: {
            line: 197,
            column: 13
          }
        },
        line: 191
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 213,
            column: 54
          },
          end: {
            line: 213,
            column: 55
          }
        },
        loc: {
          start: {
            line: 213,
            column: 63
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 213
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 221,
            column: 27
          },
          end: {
            line: 221,
            column: 28
          }
        },
        loc: {
          start: {
            line: 221,
            column: 38
          },
          end: {
            line: 276,
            column: 9
          }
        },
        line: 221
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 222,
            column: 32
          },
          end: {
            line: 222,
            column: 33
          }
        },
        loc: {
          start: {
            line: 222,
            column: 47
          },
          end: {
            line: 229,
            column: 13
          }
        },
        line: 222
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 230,
            column: 33
          },
          end: {
            line: 230,
            column: 34
          }
        },
        loc: {
          start: {
            line: 230,
            column: 37
          },
          end: {
            line: 237,
            column: 13
          }
        },
        line: 230
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 239,
            column: 29
          },
          end: {
            line: 239,
            column: 30
          }
        },
        loc: {
          start: {
            line: 239,
            column: 33
          },
          end: {
            line: 244,
            column: 13
          }
        },
        line: 239
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 245,
            column: 35
          },
          end: {
            line: 245,
            column: 36
          }
        },
        loc: {
          start: {
            line: 245,
            column: 39
          },
          end: {
            line: 253,
            column: 13
          }
        },
        line: 245
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 289,
            column: 25
          },
          end: {
            line: 289,
            column: 26
          }
        },
        loc: {
          start: {
            line: 289,
            column: 29
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 289
      },
      "33": {
        name: "useDialog",
        decl: {
          start: {
            line: 322,
            column: 9
          },
          end: {
            line: 322,
            column: 18
          }
        },
        loc: {
          start: {
            line: 322,
            column: 21
          },
          end: {
            line: 328,
            column: 1
          }
        },
        line: 322
      },
      "34": {
        name: "useConfirm",
        decl: {
          start: {
            line: 329,
            column: 9
          },
          end: {
            line: 329,
            column: 19
          }
        },
        loc: {
          start: {
            line: 329,
            column: 22
          },
          end: {
            line: 332,
            column: 1
          }
        },
        line: 329
      },
      "35": {
        name: "useAlert",
        decl: {
          start: {
            line: 333,
            column: 9
          },
          end: {
            line: 333,
            column: 17
          }
        },
        loc: {
          start: {
            line: 333,
            column: 20
          },
          end: {
            line: 336,
            column: 1
          }
        },
        line: 333
      },
      "36": {
        name: "useLoginRequired",
        decl: {
          start: {
            line: 337,
            column: 9
          },
          end: {
            line: 337,
            column: 25
          }
        },
        loc: {
          start: {
            line: 337,
            column: 28
          },
          end: {
            line: 340,
            column: 1
          }
        },
        line: 337
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 15
          },
          end: {
            line: 42,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 29
          },
          end: {
            line: 42,
            column: 45
          }
        }, {
          start: {
            line: 42,
            column: 48
          },
          end: {
            line: 42,
            column: 65
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 20
          }
        }, {
          start: {
            line: 46,
            column: 24
          },
          end: {
            line: 46,
            column: 27
          }
        }, {
          start: {
            line: 46,
            column: 31
          },
          end: {
            line: 46,
            column: 45
          }
        }],
        line: 46
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 20
          }
        }, {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 47
          }
        }, {
          start: {
            line: 49,
            column: 51
          },
          end: {
            line: 49,
            column: 76
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: 55,
            column: 17
          },
          end: {
            line: 55,
            column: 31
          }
        }],
        line: 55
      },
      "8": {
        loc: {
          start: {
            line: 61,
            column: 32
          },
          end: {
            line: 61,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 32
          },
          end: {
            line: 61,
            column: 53
          }
        }, {
          start: {
            line: 61,
            column: 57
          },
          end: {
            line: 61,
            column: 88
          }
        }],
        line: 61
      },
      "9": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "10": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 29
          }
        }, {
          start: {
            line: 63,
            column: 33
          },
          end: {
            line: 63,
            column: 79
          }
        }],
        line: 63
      },
      "11": {
        loc: {
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 64,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 47
          },
          end: {
            line: 64,
            column: 88
          }
        }, {
          start: {
            line: 64,
            column: 91
          },
          end: {
            line: 64,
            column: 95
          }
        }],
        line: 64
      },
      "12": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 69,
            column: 13
          }
        }],
        line: 65
      },
      "13": {
        loc: {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 20
          }
        }, {
          start: {
            line: 65,
            column: 25
          },
          end: {
            line: 65,
            column: 33
          }
        }, {
          start: {
            line: 65,
            column: 37
          },
          end: {
            line: 65,
            column: 45
          }
        }],
        line: 65
      },
      "14": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "15": {
        loc: {
          start: {
            line: 121,
            column: 20
          },
          end: {
            line: 123,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 20
          },
          end: {
            line: 123,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "16": {
        loc: {
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 134,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 134,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "17": {
        loc: {
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 169,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 169,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "18": {
        loc: {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 194,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 194,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "19": {
        loc: {
          start: {
            line: 224,
            column: 16
          },
          end: {
            line: 226,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 16
          },
          end: {
            line: 226,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "20": {
        loc: {
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 234,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 234,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "21": {
        loc: {
          start: {
            line: 240,
            column: 16
          },
          end: {
            line: 240,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 16
          },
          end: {
            line: 240,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "22": {
        loc: {
          start: {
            line: 243,
            column: 23
          },
          end: {
            line: 243,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 23
          },
          end: {
            line: 243,
            column: 33
          }
        }, {
          start: {
            line: 243,
            column: 37
          },
          end: {
            line: 243,
            column: 53
          }
        }],
        line: 243
      },
      "23": {
        loc: {
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 246,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 246,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "24": {
        loc: {
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 249,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 249,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "25": {
        loc: {
          start: {
            line: 252,
            column: 23
          },
          end: {
            line: 252,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 23
          },
          end: {
            line: 252,
            column: 31
          }
        }, {
          start: {
            line: 252,
            column: 35
          },
          end: {
            line: 252,
            column: 76
          }
        }],
        line: 252
      },
      "26": {
        loc: {
          start: {
            line: 259,
            column: 35
          },
          end: {
            line: 259,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 35
          },
          end: {
            line: 259,
            column: 50
          }
        }, {
          start: {
            line: 259,
            column: 54
          },
          end: {
            line: 259,
            column: 70
          }
        }],
        line: 259
      },
      "27": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 290,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 290,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "28": {
        loc: {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 312,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 295,
            column: 19
          }
        }, {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 299,
            column: 19
          }
        }, {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 303,
            column: 19
          }
        }, {
          start: {
            line: 304,
            column: 12
          },
          end: {
            line: 307,
            column: 19
          }
        }, {
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 311,
            column: 19
          }
        }],
        line: 291
      },
      "29": {
        loc: {
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0, 0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/components/ui/Dialog/DialogProvider.tsx"],
      sourcesContent: ["'use client';\n\nimport React, {\n  createContext,\n  useContext,\n  useState,\n  useCallback,\n  ReactNode,\n} from 'react';\nimport {\n  DialogContextType,\n  DialogState,\n  DialogProps,\n  ActionDialogProps,\n  ConfirmDialogProps,\n  AlertDialogProps,\n  LoginRequiredDialogProps,\n} from './types';\nimport { Dialog } from './Dialog';\nimport { ActionDialog } from './ActionDialog';\nimport { ConfirmDialog } from './ConfirmDialog';\nimport { AlertDialog } from './AlertDialog';\nimport { LoginRequiredDialog } from './LoginRequiredDialog';\nimport { useLanguageStore } from '@/stores/languageStore';\n\n// \uB2E4\uC774\uC5BC\uB85C\uADF8 \uCEE8\uD14D\uC2A4\uD2B8 \uC0DD\uC131\nconst DialogContext = createContext<DialogContextType | null>(null);\n\n// \uACE0\uC720 ID \uC0DD\uC131 \uD568\uC218\nlet dialogIdCounter = 0;\nconst generateDialogId = () => `dialog-${++dialogIdCounter}`;\n\ninterface DialogProviderProps {\n  children: ReactNode;\n}\n\nexport function DialogProvider({ children }: DialogProviderProps) {\n  const [dialogState, setDialogState] = useState<DialogState>({\n    isOpen: false,\n    type: 'dialog',\n    props: {},\n  });\n  const { t } = useLanguageStore();\n\n  const closeDialog = useCallback(() => {\n    setDialogState((prev) => ({ ...prev, isOpen: false }));\n    // \uC57D\uAC04\uC758 \uC9C0\uC5F0 \uD6C4 \uC0C1\uD0DC \uCD08\uAE30\uD654 (\uC560\uB2C8\uBA54\uC774\uC158\uC744 \uC704\uD574)\n    setTimeout(() => {\n      setDialogState({\n        isOpen: false,\n        type: 'dialog',\n        props: {},\n      });\n    }, 200);\n  }, []);\n\n  const showDialog = useCallback(\n    (props: DialogProps) => {\n      setDialogState({\n        isOpen: true,\n        type: 'dialog',\n        props: { ...props, isOpen: true, onClose: closeDialog },\n      });\n    },\n    [closeDialog],\n  );\n\n  const showActionDialog = useCallback(\n    (props: ActionDialogProps): Promise<boolean> => {\n      return new Promise((resolve) => {\n        const handleConfirm = async () => {\n          try {\n            if (props.onConfirm) {\n              await props.onConfirm();\n            }\n            closeDialog();\n            resolve(true);\n          } catch (error) {\n            console.error('Action dialog confirm failed:', error);\n            resolve(false);\n          }\n        };\n\n        const handleCancel = () => {\n          if (props.onCancel) {\n            props.onCancel();\n          }\n          closeDialog();\n          resolve(false);\n        };\n\n        setDialogState({\n          isOpen: true,\n          type: 'action',\n          props: {\n            ...props,\n            isOpen: true,\n            onClose: closeDialog,\n            onConfirm: handleConfirm,\n            onCancel: handleCancel,\n          },\n          resolve,\n        });\n      });\n    },\n    [closeDialog],\n  );\n\n  const showConfirmDialog = useCallback(\n    (props: ConfirmDialogProps): Promise<boolean> => {\n      return new Promise((resolve) => {\n        const handleConfirm = async () => {\n          try {\n            await props.onConfirm();\n            closeDialog();\n            resolve(true);\n          } catch (error) {\n            console.error('Confirm dialog failed:', error);\n            resolve(false);\n          }\n        };\n\n        const handleCancel = () => {\n          if (props.onCancel) {\n            props.onCancel();\n          }\n          closeDialog();\n          resolve(false);\n        };\n\n        setDialogState({\n          isOpen: true,\n          type: 'confirm',\n          props: {\n            ...props,\n            isOpen: true,\n            onClose: closeDialog,\n            onConfirm: handleConfirm,\n            onCancel: handleCancel,\n          },\n          resolve,\n        });\n      });\n    },\n    [closeDialog],\n  );\n\n  const showAlertDialog = useCallback(\n    (props: AlertDialogProps): Promise<void> => {\n      return new Promise((resolve) => {\n        const handleConfirm = () => {\n          if (props.onConfirm) {\n            props.onConfirm();\n          }\n          closeDialog();\n          resolve();\n        };\n\n        setDialogState({\n          isOpen: true,\n          type: 'alert',\n          props: {\n            ...props,\n            isOpen: true,\n            onClose: closeDialog,\n            onConfirm: handleConfirm,\n          },\n          resolve,\n        });\n      });\n    },\n    [closeDialog],\n  );\n\n  const showLoginRequired = useCallback(\n    (\n      props: Omit<LoginRequiredDialogProps, 'isOpen' | 'onClose'>,\n    ): Promise<boolean> => {\n      console.log('\uD83D\uDD04 [DialogProvider] showLoginRequired \uD638\uCD9C\uB428:', {\n        hasProps: !!props,\n        redirectUrl: props.redirectUrl,\n        hasTitle: !!props.title,\n        hasDescription: !!props.description,\n        timestamp: new Date().toISOString()\n      });\n\n      return new Promise((resolve) => {\n        const handleLogin = (redirectUrl?: string) => {\n          console.log('\uD83D\uDD04 [DialogProvider] Login \uBC84\uD2BC \uD074\uB9AD\uB428:', redirectUrl);\n          if (props.onLogin) {\n            props.onLogin(redirectUrl);\n          }\n          closeDialog();\n          resolve(true);\n        };\n\n        const handleCancel = () => {\n          console.log('\uD83D\uDD04 [DialogProvider] Cancel \uBC84\uD2BC \uD074\uB9AD\uB428');\n          if (props.onCancel) {\n            props.onCancel();\n          }\n          closeDialog();\n          resolve(false);\n        };\n\n        // \uB354 \uC548\uC804\uD55C \uBC88\uC5ED \uB85C\uC9C1\n        const getTitle = () => {\n          if (props.title) return props.title;\n          const translated = t('dialog_content_login_required');\n          console.log('\uD83D\uDD04 [DialogProvider] Title \uBC88\uC5ED \uACB0\uACFC:', translated);\n          return translated || 'Login Required'; // \uC601\uC5B4 fallback\n        };\n\n        const getDescription = () => {\n          if (props.description) return props.description;\n          const translated = t('dialog_login_required_description');\n          console.log('\uD83D\uDD04 [DialogProvider] Description \uBC88\uC5ED \uACB0\uACFC:', translated);\n          if (translated) return translated;\n          const fallback = t('dialog_content_login_required');\n          console.log('\uD83D\uDD04 [DialogProvider] Description fallback \uACB0\uACFC:', fallback);\n          return fallback || 'You need to log in to use this feature.'; // \uC601\uC5B4 fallback\n        };\n\n        const finalTitle = getTitle();\n        const finalDescription = getDescription();\n\n        console.log('\uD83D\uDD04 [DialogProvider] \uCD5C\uC885 \uB2E4\uC774\uC5BC\uB85C\uADF8 \uC124\uC815:', {\n          title: finalTitle,\n          description: finalDescription,\n          hasCustomHandlers: !!props.onLogin || !!props.onCancel\n        });\n\n        setDialogState({\n          isOpen: true,\n          type: 'loginRequired',\n          props: {\n            ...props,\n            isOpen: true,\n            onClose: closeDialog,\n            onLogin: handleLogin,\n            onCancel: handleCancel,\n            title: finalTitle,\n            description: finalDescription,\n          },\n          resolve,\n        });\n\n        console.log('\uD83D\uDD04 [DialogProvider] \uB2E4\uC774\uC5BC\uB85C\uADF8 \uC0C1\uD0DC \uC124\uC815 \uC644\uB8CC');\n      });\n    },\n    [closeDialog, t],\n  );\n\n  const contextValue: DialogContextType = {\n    showDialog,\n    showActionDialog,\n    showConfirmDialog,\n    showAlertDialog,\n    showLoginRequired,\n    closeDialog,\n  };\n\n  const renderDialog = () => {\n    if (!dialogState.isOpen) return null;\n\n    switch (dialogState.type) {\n      case 'action':\n        return <ActionDialog {...dialogState.props} />;\n      case 'confirm':\n        return <ConfirmDialog {...dialogState.props} />;\n      case 'alert':\n        return <AlertDialog {...dialogState.props} />;\n      case 'loginRequired':\n        return <LoginRequiredDialog {...dialogState.props} />;\n      default:\n        return <Dialog {...dialogState.props} />;\n    }\n  };\n\n  return (\n    <DialogContext.Provider value={contextValue}>\n      {children}\n      {renderDialog()}\n    </DialogContext.Provider>\n  );\n}\n\n// \uB2E4\uC774\uC5BC\uB85C\uADF8 \uCEE8\uD14D\uC2A4\uD2B8 \uC0AC\uC6A9 \uD6C5\nexport function useDialog() {\n  const context = useContext(DialogContext);\n\n  if (!context) {\n    throw new Error('useDialog must be used within a DialogProvider');\n  }\n\n  return context;\n}\n\n// \uD3B8\uC758 \uD6C5\uB4E4\nexport function useConfirm() {\n  const { showConfirmDialog } = useDialog();\n  return showConfirmDialog;\n}\n\nexport function useAlert() {\n  const { showAlertDialog } = useDialog();\n  return showAlertDialog;\n}\n\n// \uB85C\uADF8\uC778 \uD544\uC694 \uB2E4\uC774\uC5BC\uB85C\uADF8 \uD3B8\uC758 \uD6C5\nexport function useLoginRequired() {\n  const { showLoginRequired } = useDialog();\n  return showLoginRequired;\n}\n"],
      names: ["DialogProvider", "useAlert", "useConfirm", "useDialog", "useLoginRequired", "DialogContext", "createContext", "dialogIdCounter", "generateDialogId", "children", "dialogState", "setDialogState", "useState", "isOpen", "type", "props", "t", "useLanguageStore", "closeDialog", "useCallback", "prev", "setTimeout", "showDialog", "onClose", "showActionDialog", "Promise", "resolve", "handleConfirm", "onConfirm", "error", "console", "handleCancel", "onCancel", "showConfirmDialog", "showAlertDialog", "showLoginRequired", "log", "hasProps", "redirectUrl", "hasTitle", "title", "hasDescription", "description", "timestamp", "Date", "toISOString", "handleLogin", "onLogin", "getTitle", "translated", "getDescription", "fallback", "finalTitle", "finalDescription", "hasCustomHandlers", "contextValue", "renderDialog", "ActionDialog", "ConfirmDialog", "AlertDialog", "LoginRequiredDialog", "Dialog", "Provider", "value", "context", "useContext", "Error"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "800fdc916f4e237078c408c2e56c74c7b0249469"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1uh1gwnhkc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1uh1gwnhkc();
cov_1uh1gwnhkc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1uh1gwnhkc().f[0]++;
  cov_1uh1gwnhkc().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1uh1gwnhkc().s[3]++;
_export(exports, {
  DialogProvider: function () {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().f[1]++;
    cov_1uh1gwnhkc().s[4]++;
    return DialogProvider;
  },
  useAlert: function () {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().f[2]++;
    cov_1uh1gwnhkc().s[5]++;
    return useAlert;
  },
  useConfirm: function () {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().f[3]++;
    cov_1uh1gwnhkc().s[6]++;
    return useConfirm;
  },
  useDialog: function () {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().f[4]++;
    cov_1uh1gwnhkc().s[7]++;
    return useDialog;
  },
  useLoginRequired: function () {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().f[5]++;
    cov_1uh1gwnhkc().s[8]++;
    return useLoginRequired;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1uh1gwnhkc().s[9]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1uh1gwnhkc().s[10]++, _interop_require_wildcard(require("react")));
const _Dialog =
/* istanbul ignore next */
(cov_1uh1gwnhkc().s[11]++, require("./Dialog"));
const _ActionDialog =
/* istanbul ignore next */
(cov_1uh1gwnhkc().s[12]++, require("./ActionDialog"));
const _ConfirmDialog =
/* istanbul ignore next */
(cov_1uh1gwnhkc().s[13]++, require("./ConfirmDialog"));
const _AlertDialog =
/* istanbul ignore next */
(cov_1uh1gwnhkc().s[14]++, require("./AlertDialog"));
const _LoginRequiredDialog =
/* istanbul ignore next */
(cov_1uh1gwnhkc().s[15]++, require("./LoginRequiredDialog"));
const _languageStore =
/* istanbul ignore next */
(cov_1uh1gwnhkc().s[16]++, require("../../../stores/languageStore"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1uh1gwnhkc().f[6]++;
  cov_1uh1gwnhkc().s[17]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().b[0][0]++;
    cov_1uh1gwnhkc().s[18]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1uh1gwnhkc().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[19]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[20]++, new WeakMap());
  /* istanbul ignore next */
  cov_1uh1gwnhkc().s[21]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().f[7]++;
    cov_1uh1gwnhkc().s[22]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1uh1gwnhkc().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1uh1gwnhkc().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1uh1gwnhkc().f[8]++;
  cov_1uh1gwnhkc().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().b[2][0]++;
    cov_1uh1gwnhkc().s[24]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1uh1gwnhkc().b[2][1]++;
  }
  cov_1uh1gwnhkc().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().b[4][0]++;
    cov_1uh1gwnhkc().s[26]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1uh1gwnhkc().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[27]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1uh1gwnhkc().s[28]++;
  if (
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().b[6][0]++;
    cov_1uh1gwnhkc().s[29]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1uh1gwnhkc().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[30]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[31]++,
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1uh1gwnhkc().s[32]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().s[33]++;
    if (
    /* istanbul ignore next */
    (cov_1uh1gwnhkc().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1uh1gwnhkc().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1uh1gwnhkc().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1uh1gwnhkc().s[34]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1uh1gwnhkc().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1uh1gwnhkc().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1uh1gwnhkc().s[35]++;
      if (
      /* istanbul ignore next */
      (cov_1uh1gwnhkc().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1uh1gwnhkc().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1uh1gwnhkc().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1uh1gwnhkc().b[12][0]++;
        cov_1uh1gwnhkc().s[36]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1uh1gwnhkc().b[12][1]++;
        cov_1uh1gwnhkc().s[37]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1uh1gwnhkc().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1uh1gwnhkc().s[38]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1uh1gwnhkc().s[39]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().b[14][0]++;
    cov_1uh1gwnhkc().s[40]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1uh1gwnhkc().b[14][1]++;
  }
  cov_1uh1gwnhkc().s[41]++;
  return newObj;
}
// 다이얼로그 컨텍스트 생성
const DialogContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_1uh1gwnhkc().s[42]++, (0, _react.createContext)(null));
// 고유 ID 생성 함수
let dialogIdCounter =
/* istanbul ignore next */
(cov_1uh1gwnhkc().s[43]++, 0);
/* istanbul ignore next */
cov_1uh1gwnhkc().s[44]++;
const generateDialogId = () => {
  /* istanbul ignore next */
  cov_1uh1gwnhkc().f[9]++;
  cov_1uh1gwnhkc().s[45]++;
  return `dialog-${++dialogIdCounter}`;
};
function DialogProvider({
  children
}) {
  /* istanbul ignore next */
  cov_1uh1gwnhkc().f[10]++;
  const [dialogState, setDialogState] =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[46]++, (0, _react.useState)({
    isOpen: false,
    type: 'dialog',
    props: {}
  }));
  const {
    t
  } =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[47]++, (0, _languageStore.useLanguageStore)());
  const closeDialog =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[48]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().f[11]++;
    cov_1uh1gwnhkc().s[49]++;
    setDialogState(prev => {
      /* istanbul ignore next */
      cov_1uh1gwnhkc().f[12]++;
      cov_1uh1gwnhkc().s[50]++;
      return {
        ...prev,
        isOpen: false
      };
    });
    // 약간의 지연 후 상태 초기화 (애니메이션을 위해)
    /* istanbul ignore next */
    cov_1uh1gwnhkc().s[51]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_1uh1gwnhkc().f[13]++;
      cov_1uh1gwnhkc().s[52]++;
      setDialogState({
        isOpen: false,
        type: 'dialog',
        props: {}
      });
    }, 200);
  }, []));
  const showDialog =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[53]++, (0, _react.useCallback)(props => {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().f[14]++;
    cov_1uh1gwnhkc().s[54]++;
    setDialogState({
      isOpen: true,
      type: 'dialog',
      props: {
        ...props,
        isOpen: true,
        onClose: closeDialog
      }
    });
  }, [closeDialog]));
  const showActionDialog =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[55]++, (0, _react.useCallback)(props => {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().f[15]++;
    cov_1uh1gwnhkc().s[56]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_1uh1gwnhkc().f[16]++;
      cov_1uh1gwnhkc().s[57]++;
      const handleConfirm = async () => {
        /* istanbul ignore next */
        cov_1uh1gwnhkc().f[17]++;
        cov_1uh1gwnhkc().s[58]++;
        try {
          /* istanbul ignore next */
          cov_1uh1gwnhkc().s[59]++;
          if (props.onConfirm) {
            /* istanbul ignore next */
            cov_1uh1gwnhkc().b[15][0]++;
            cov_1uh1gwnhkc().s[60]++;
            await props.onConfirm();
          } else
          /* istanbul ignore next */
          {
            cov_1uh1gwnhkc().b[15][1]++;
          }
          cov_1uh1gwnhkc().s[61]++;
          closeDialog();
          /* istanbul ignore next */
          cov_1uh1gwnhkc().s[62]++;
          resolve(true);
        } catch (error) {
          /* istanbul ignore next */
          cov_1uh1gwnhkc().s[63]++;
          console.error('Action dialog confirm failed:', error);
          /* istanbul ignore next */
          cov_1uh1gwnhkc().s[64]++;
          resolve(false);
        }
      };
      /* istanbul ignore next */
      cov_1uh1gwnhkc().s[65]++;
      const handleCancel = () => {
        /* istanbul ignore next */
        cov_1uh1gwnhkc().f[18]++;
        cov_1uh1gwnhkc().s[66]++;
        if (props.onCancel) {
          /* istanbul ignore next */
          cov_1uh1gwnhkc().b[16][0]++;
          cov_1uh1gwnhkc().s[67]++;
          props.onCancel();
        } else
        /* istanbul ignore next */
        {
          cov_1uh1gwnhkc().b[16][1]++;
        }
        cov_1uh1gwnhkc().s[68]++;
        closeDialog();
        /* istanbul ignore next */
        cov_1uh1gwnhkc().s[69]++;
        resolve(false);
      };
      /* istanbul ignore next */
      cov_1uh1gwnhkc().s[70]++;
      setDialogState({
        isOpen: true,
        type: 'action',
        props: {
          ...props,
          isOpen: true,
          onClose: closeDialog,
          onConfirm: handleConfirm,
          onCancel: handleCancel
        },
        resolve
      });
    });
  }, [closeDialog]));
  const showConfirmDialog =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[71]++, (0, _react.useCallback)(props => {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().f[19]++;
    cov_1uh1gwnhkc().s[72]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_1uh1gwnhkc().f[20]++;
      cov_1uh1gwnhkc().s[73]++;
      const handleConfirm = async () => {
        /* istanbul ignore next */
        cov_1uh1gwnhkc().f[21]++;
        cov_1uh1gwnhkc().s[74]++;
        try {
          /* istanbul ignore next */
          cov_1uh1gwnhkc().s[75]++;
          await props.onConfirm();
          /* istanbul ignore next */
          cov_1uh1gwnhkc().s[76]++;
          closeDialog();
          /* istanbul ignore next */
          cov_1uh1gwnhkc().s[77]++;
          resolve(true);
        } catch (error) {
          /* istanbul ignore next */
          cov_1uh1gwnhkc().s[78]++;
          console.error('Confirm dialog failed:', error);
          /* istanbul ignore next */
          cov_1uh1gwnhkc().s[79]++;
          resolve(false);
        }
      };
      /* istanbul ignore next */
      cov_1uh1gwnhkc().s[80]++;
      const handleCancel = () => {
        /* istanbul ignore next */
        cov_1uh1gwnhkc().f[22]++;
        cov_1uh1gwnhkc().s[81]++;
        if (props.onCancel) {
          /* istanbul ignore next */
          cov_1uh1gwnhkc().b[17][0]++;
          cov_1uh1gwnhkc().s[82]++;
          props.onCancel();
        } else
        /* istanbul ignore next */
        {
          cov_1uh1gwnhkc().b[17][1]++;
        }
        cov_1uh1gwnhkc().s[83]++;
        closeDialog();
        /* istanbul ignore next */
        cov_1uh1gwnhkc().s[84]++;
        resolve(false);
      };
      /* istanbul ignore next */
      cov_1uh1gwnhkc().s[85]++;
      setDialogState({
        isOpen: true,
        type: 'confirm',
        props: {
          ...props,
          isOpen: true,
          onClose: closeDialog,
          onConfirm: handleConfirm,
          onCancel: handleCancel
        },
        resolve
      });
    });
  }, [closeDialog]));
  const showAlertDialog =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[86]++, (0, _react.useCallback)(props => {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().f[23]++;
    cov_1uh1gwnhkc().s[87]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_1uh1gwnhkc().f[24]++;
      cov_1uh1gwnhkc().s[88]++;
      const handleConfirm = () => {
        /* istanbul ignore next */
        cov_1uh1gwnhkc().f[25]++;
        cov_1uh1gwnhkc().s[89]++;
        if (props.onConfirm) {
          /* istanbul ignore next */
          cov_1uh1gwnhkc().b[18][0]++;
          cov_1uh1gwnhkc().s[90]++;
          props.onConfirm();
        } else
        /* istanbul ignore next */
        {
          cov_1uh1gwnhkc().b[18][1]++;
        }
        cov_1uh1gwnhkc().s[91]++;
        closeDialog();
        /* istanbul ignore next */
        cov_1uh1gwnhkc().s[92]++;
        resolve();
      };
      /* istanbul ignore next */
      cov_1uh1gwnhkc().s[93]++;
      setDialogState({
        isOpen: true,
        type: 'alert',
        props: {
          ...props,
          isOpen: true,
          onClose: closeDialog,
          onConfirm: handleConfirm
        },
        resolve
      });
    });
  }, [closeDialog]));
  const showLoginRequired =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[94]++, (0, _react.useCallback)(props => {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().f[26]++;
    cov_1uh1gwnhkc().s[95]++;
    console.log('🔄 [DialogProvider] showLoginRequired 호출됨:', {
      hasProps: !!props,
      redirectUrl: props.redirectUrl,
      hasTitle: !!props.title,
      hasDescription: !!props.description,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_1uh1gwnhkc().s[96]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_1uh1gwnhkc().f[27]++;
      cov_1uh1gwnhkc().s[97]++;
      const handleLogin = redirectUrl => {
        /* istanbul ignore next */
        cov_1uh1gwnhkc().f[28]++;
        cov_1uh1gwnhkc().s[98]++;
        console.log('🔄 [DialogProvider] Login 버튼 클릭됨:', redirectUrl);
        /* istanbul ignore next */
        cov_1uh1gwnhkc().s[99]++;
        if (props.onLogin) {
          /* istanbul ignore next */
          cov_1uh1gwnhkc().b[19][0]++;
          cov_1uh1gwnhkc().s[100]++;
          props.onLogin(redirectUrl);
        } else
        /* istanbul ignore next */
        {
          cov_1uh1gwnhkc().b[19][1]++;
        }
        cov_1uh1gwnhkc().s[101]++;
        closeDialog();
        /* istanbul ignore next */
        cov_1uh1gwnhkc().s[102]++;
        resolve(true);
      };
      /* istanbul ignore next */
      cov_1uh1gwnhkc().s[103]++;
      const handleCancel = () => {
        /* istanbul ignore next */
        cov_1uh1gwnhkc().f[29]++;
        cov_1uh1gwnhkc().s[104]++;
        console.log('🔄 [DialogProvider] Cancel 버튼 클릭됨');
        /* istanbul ignore next */
        cov_1uh1gwnhkc().s[105]++;
        if (props.onCancel) {
          /* istanbul ignore next */
          cov_1uh1gwnhkc().b[20][0]++;
          cov_1uh1gwnhkc().s[106]++;
          props.onCancel();
        } else
        /* istanbul ignore next */
        {
          cov_1uh1gwnhkc().b[20][1]++;
        }
        cov_1uh1gwnhkc().s[107]++;
        closeDialog();
        /* istanbul ignore next */
        cov_1uh1gwnhkc().s[108]++;
        resolve(false);
      };
      // 더 안전한 번역 로직
      /* istanbul ignore next */
      cov_1uh1gwnhkc().s[109]++;
      const getTitle = () => {
        /* istanbul ignore next */
        cov_1uh1gwnhkc().f[30]++;
        cov_1uh1gwnhkc().s[110]++;
        if (props.title) {
          /* istanbul ignore next */
          cov_1uh1gwnhkc().b[21][0]++;
          cov_1uh1gwnhkc().s[111]++;
          return props.title;
        } else
        /* istanbul ignore next */
        {
          cov_1uh1gwnhkc().b[21][1]++;
        }
        const translated =
        /* istanbul ignore next */
        (cov_1uh1gwnhkc().s[112]++, t('dialog_content_login_required'));
        /* istanbul ignore next */
        cov_1uh1gwnhkc().s[113]++;
        console.log('🔄 [DialogProvider] Title 번역 결과:', translated);
        /* istanbul ignore next */
        cov_1uh1gwnhkc().s[114]++;
        return /* istanbul ignore next */(cov_1uh1gwnhkc().b[22][0]++, translated) ||
        /* istanbul ignore next */
        (cov_1uh1gwnhkc().b[22][1]++, 'Login Required'); // 영어 fallback
      };
      /* istanbul ignore next */
      cov_1uh1gwnhkc().s[115]++;
      const getDescription = () => {
        /* istanbul ignore next */
        cov_1uh1gwnhkc().f[31]++;
        cov_1uh1gwnhkc().s[116]++;
        if (props.description) {
          /* istanbul ignore next */
          cov_1uh1gwnhkc().b[23][0]++;
          cov_1uh1gwnhkc().s[117]++;
          return props.description;
        } else
        /* istanbul ignore next */
        {
          cov_1uh1gwnhkc().b[23][1]++;
        }
        const translated =
        /* istanbul ignore next */
        (cov_1uh1gwnhkc().s[118]++, t('dialog_login_required_description'));
        /* istanbul ignore next */
        cov_1uh1gwnhkc().s[119]++;
        console.log('🔄 [DialogProvider] Description 번역 결과:', translated);
        /* istanbul ignore next */
        cov_1uh1gwnhkc().s[120]++;
        if (translated) {
          /* istanbul ignore next */
          cov_1uh1gwnhkc().b[24][0]++;
          cov_1uh1gwnhkc().s[121]++;
          return translated;
        } else
        /* istanbul ignore next */
        {
          cov_1uh1gwnhkc().b[24][1]++;
        }
        const fallback =
        /* istanbul ignore next */
        (cov_1uh1gwnhkc().s[122]++, t('dialog_content_login_required'));
        /* istanbul ignore next */
        cov_1uh1gwnhkc().s[123]++;
        console.log('🔄 [DialogProvider] Description fallback 결과:', fallback);
        /* istanbul ignore next */
        cov_1uh1gwnhkc().s[124]++;
        return /* istanbul ignore next */(cov_1uh1gwnhkc().b[25][0]++, fallback) ||
        /* istanbul ignore next */
        (cov_1uh1gwnhkc().b[25][1]++, 'You need to log in to use this feature.'); // 영어 fallback
      };
      const finalTitle =
      /* istanbul ignore next */
      (cov_1uh1gwnhkc().s[125]++, getTitle());
      const finalDescription =
      /* istanbul ignore next */
      (cov_1uh1gwnhkc().s[126]++, getDescription());
      /* istanbul ignore next */
      cov_1uh1gwnhkc().s[127]++;
      console.log('🔄 [DialogProvider] 최종 다이얼로그 설정:', {
        title: finalTitle,
        description: finalDescription,
        hasCustomHandlers:
        /* istanbul ignore next */
        (cov_1uh1gwnhkc().b[26][0]++, !!props.onLogin) ||
        /* istanbul ignore next */
        (cov_1uh1gwnhkc().b[26][1]++, !!props.onCancel)
      });
      /* istanbul ignore next */
      cov_1uh1gwnhkc().s[128]++;
      setDialogState({
        isOpen: true,
        type: 'loginRequired',
        props: {
          ...props,
          isOpen: true,
          onClose: closeDialog,
          onLogin: handleLogin,
          onCancel: handleCancel,
          title: finalTitle,
          description: finalDescription
        },
        resolve
      });
      /* istanbul ignore next */
      cov_1uh1gwnhkc().s[129]++;
      console.log('🔄 [DialogProvider] 다이얼로그 상태 설정 완료');
    });
  }, [closeDialog, t]));
  const contextValue =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[130]++, {
    showDialog,
    showActionDialog,
    showConfirmDialog,
    showAlertDialog,
    showLoginRequired,
    closeDialog
  });
  /* istanbul ignore next */
  cov_1uh1gwnhkc().s[131]++;
  const renderDialog = () => {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().f[32]++;
    cov_1uh1gwnhkc().s[132]++;
    if (!dialogState.isOpen) {
      /* istanbul ignore next */
      cov_1uh1gwnhkc().b[27][0]++;
      cov_1uh1gwnhkc().s[133]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1uh1gwnhkc().b[27][1]++;
    }
    cov_1uh1gwnhkc().s[134]++;
    switch (dialogState.type) {
      case 'action':
        /* istanbul ignore next */
        cov_1uh1gwnhkc().b[28][0]++;
        cov_1uh1gwnhkc().s[135]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_ActionDialog.ActionDialog, {
          ...dialogState.props
        });
      case 'confirm':
        /* istanbul ignore next */
        cov_1uh1gwnhkc().b[28][1]++;
        cov_1uh1gwnhkc().s[136]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_ConfirmDialog.ConfirmDialog, {
          ...dialogState.props
        });
      case 'alert':
        /* istanbul ignore next */
        cov_1uh1gwnhkc().b[28][2]++;
        cov_1uh1gwnhkc().s[137]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_AlertDialog.AlertDialog, {
          ...dialogState.props
        });
      case 'loginRequired':
        /* istanbul ignore next */
        cov_1uh1gwnhkc().b[28][3]++;
        cov_1uh1gwnhkc().s[138]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_LoginRequiredDialog.LoginRequiredDialog, {
          ...dialogState.props
        });
      default:
        /* istanbul ignore next */
        cov_1uh1gwnhkc().b[28][4]++;
        cov_1uh1gwnhkc().s[139]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_Dialog.Dialog, {
          ...dialogState.props
        });
    }
  };
  /* istanbul ignore next */
  cov_1uh1gwnhkc().s[140]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(DialogContext.Provider, {
    value: contextValue,
    children: [children, renderDialog()]
  });
}
function useDialog() {
  /* istanbul ignore next */
  cov_1uh1gwnhkc().f[33]++;
  const context =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[141]++, (0, _react.useContext)(DialogContext));
  /* istanbul ignore next */
  cov_1uh1gwnhkc().s[142]++;
  if (!context) {
    /* istanbul ignore next */
    cov_1uh1gwnhkc().b[29][0]++;
    cov_1uh1gwnhkc().s[143]++;
    throw new Error('useDialog must be used within a DialogProvider');
  } else
  /* istanbul ignore next */
  {
    cov_1uh1gwnhkc().b[29][1]++;
  }
  cov_1uh1gwnhkc().s[144]++;
  return context;
}
function useConfirm() {
  /* istanbul ignore next */
  cov_1uh1gwnhkc().f[34]++;
  const {
    showConfirmDialog
  } =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[145]++, useDialog());
  /* istanbul ignore next */
  cov_1uh1gwnhkc().s[146]++;
  return showConfirmDialog;
}
function useAlert() {
  /* istanbul ignore next */
  cov_1uh1gwnhkc().f[35]++;
  const {
    showAlertDialog
  } =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[147]++, useDialog());
  /* istanbul ignore next */
  cov_1uh1gwnhkc().s[148]++;
  return showAlertDialog;
}
function useLoginRequired() {
  /* istanbul ignore next */
  cov_1uh1gwnhkc().f[36]++;
  const {
    showLoginRequired
  } =
  /* istanbul ignore next */
  (cov_1uh1gwnhkc().s[149]++, useDialog());
  /* istanbul ignore next */
  cov_1uh1gwnhkc().s[150]++;
  return showLoginRequired;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,