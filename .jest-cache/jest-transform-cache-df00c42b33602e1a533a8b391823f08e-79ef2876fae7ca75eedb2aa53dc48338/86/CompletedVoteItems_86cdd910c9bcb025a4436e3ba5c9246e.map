{"version":3,"names":["CompletedVoteItems","vote","cov_pxe5l7y03","f","t","s","_languageStore","useLanguageStore","voteItems","setVoteItems","_react","useState","useEffect","effectiveItems","b","voteItem","length","enhancedItems","map","item","vote_total","artist","id","topItems","useMemo","sortedItems","artist_group","artistGroup","sort","a","slice","error","console","_jsxruntime","jsx","className","_RankingView","RankingView","items","disabled","showVoteChange","keyPrefix"],"sources":["/Users/cheolhyun/Repositories/picnic-web/components/client/vote/list/CompletedVoteItems.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Vote, VoteItem } from '@/types/interfaces';\nimport { useLanguageStore } from '@/stores/languageStore';\nimport { RankingView } from '../common/RankingView';\n\n// 확장된 VoteItem 타입 정의\ninterface EnhancedVoteItem extends VoteItem {\n  artist?: any;\n}\n\ninterface CompletedVoteItemsProps {\n  vote: Vote & {\n    voteItem?: Array<VoteItem & { artist?: any }>;\n    voteItems?: Array<VoteItem & { artist?: any }>; // 이전 속성 호환성 유지\n  };\n}\n\nexport const CompletedVoteItems: React.FC<CompletedVoteItemsProps> = ({ vote }) => {\n  const { t } = useLanguageStore();\n  const [voteItems, setVoteItems] = useState<EnhancedVoteItem[]>([]);\n\n  // vote 객체가 변경될 때마다 voteItems 상태 업데이트\n  useEffect(() => {\n    // voteItem 또는 voteItems 중 사용 가능한 데이터 선택 (voteItem 우선)\n    const effectiveItems = vote.voteItem || vote.voteItems || [];\n\n    if (effectiveItems.length > 0) {\n      // 투표 항목 데이터를 EnhancedVoteItem 형태로 변환\n      const enhancedItems: EnhancedVoteItem[] = effectiveItems.map((item) => ({\n        ...item,\n        vote_total: item.vote_total || 0,\n        artist: item.artist || null,\n      }));\n\n      setVoteItems(enhancedItems);\n    } else {\n      setVoteItems([]);\n    }\n  }, [vote.id, vote.voteItem, vote.voteItems]);\n\n  // 표시할 상위 항목\n  const topItems = useMemo(() => {\n    // 항목이 없는 경우 빈 배열 반환\n    if (voteItems.length === 0) {\n      return [];\n    }\n\n    // 정렬을 위해 깊은 복사 후 voteTotal이 null/undefined인 경우 0으로 처리\n    try {\n      const sortedItems = [...voteItems]\n        .map((item) => {\n          // artist 객체가 있는 경우 artist_group과 artistGroup 모두 처리\n          const artist = item.artist\n            ? {\n              ...item.artist,\n              // 둘 중 하나만 있는 경우 다른 하나로 복사\n              artist_group:\n                item.artist.artist_group || item.artist.artistGroup,\n              artistGroup:\n                item.artist.artistGroup || item.artist.artist_group,\n            }\n            : null;\n\n          return {\n            ...item,\n            vote_total: item.vote_total ?? 0,\n            artist,\n          };\n        })\n        .sort((a, b) => (b.vote_total || 0) - (a.vote_total || 0))\n        .slice(0, 3);\n\n      return sortedItems;\n    } catch (error) {\n      console.error('[CompletedVoteItems] 항목 정렬 중 오류:', error);\n      return [];\n    }\n  }, [voteItems]);\n\n  // 표시할 투표 항목이 없는 경우 메시지 표시\n  if (voteItems.length === 0) {\n    return (\n      <div className='w-full'>\n        <div className='py-6 bg-gray-50 rounded text-center opacity-60'>\n          <p className='text-gray-500'>\n            {t('text_vote_no_items') || '투표 항목이 없습니다'}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  // 표시할 상위 항목 계산(topItems)이 비어있는 경우 메시지 표시\n  if (topItems.length === 0) {\n    return (\n      <div className='w-full'>\n        <div className='py-6 bg-gray-50 rounded text-center opacity-60'>\n          <p className='text-gray-500'>\n            {t('text_vote_processing') || '투표 집계 중입니다'}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='w-full'>\n      <div className='flex flex-col items-center'>\n        <RankingView\n          items={topItems}\n          disabled={true}\n          showVoteChange={false}\n          keyPrefix=\"completed\"\n        />\n      </div>\n    </div>\n  );\n};\n"],"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","ignoreList":[]}