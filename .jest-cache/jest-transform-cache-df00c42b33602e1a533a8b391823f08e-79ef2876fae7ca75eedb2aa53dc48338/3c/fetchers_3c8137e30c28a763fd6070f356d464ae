ea1d93ebccefdb6861ae0a93d7bc7aec
/**
 * 서버 사이드 데이터 페칭 유틸리티
 *
 * Next.js의 서버 컴포넌트에서 사용할 데이터 페칭 유틸리티 함수 모음입니다.
 * 이 파일의 함수들은 서버 컴포넌트에서만 사용해야 합니다.
 */"use strict";

/* istanbul ignore next */
function cov_fvnq42iso() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/lib/data-fetching/fetchers.ts";
  var hash = "2d3b5a861ebbad8315b5a3b9028ed0918e1d965e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/lib/data-fetching/fetchers.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "2": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 24
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 25
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 25
        }
      },
      "8": {
        start: {
          line: 30,
          column: 30
        },
        end: {
          line: 30,
          column: 75
        }
      },
      "9": {
        start: {
          line: 31,
          column: 15
        },
        end: {
          line: 31,
          column: 31
        }
      },
      "10": {
        start: {
          line: 32,
          column: 15
        },
        end: {
          line: 32,
          column: 43
        }
      },
      "11": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 45
        }
      },
      "12": {
        start: {
          line: 34,
          column: 30
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "13": {
        start: {
          line: 38,
          column: 26
        },
        end: {
          line: 64,
          column: 2
        }
      },
      "14": {
        start: {
          line: 39,
          column: 19
        },
        end: {
          line: 58,
          column: 27
        }
      },
      "15": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 72
        }
      },
      "16": {
        start: {
          line: 41,
          column: 32
        },
        end: {
          line: 41,
          column: 60
        }
      },
      "17": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "18": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 15
        }
      },
      "19": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 69
        }
      },
      "20": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "21": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 22
        }
      },
      "22": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 20
        }
      },
      "23": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "24": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 27
        }
      },
      "25": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 27
        }
      },
      "26": {
        start: {
          line: 65,
          column: 18
        },
        end: {
          line: 69,
          column: 2
        }
      },
      "27": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 68,
          column: 16
        }
      },
      "28": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 74
        }
      },
      "29": {
        start: {
          line: 70,
          column: 18
        },
        end: {
          line: 84,
          column: 2
        }
      },
      "30": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 83,
          column: 16
        }
      },
      "31": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 72,
          column: 56
        }
      },
      "32": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "33": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 79,
          column: 15
        }
      },
      "34": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 78,
          column: 17
        }
      },
      "35": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 77,
          column: 49
        }
      },
      "36": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 21
        }
      },
      "37": {
        start: {
          line: 85,
          column: 17
        },
        end: {
          line: 111,
          column: 2
        }
      },
      "38": {
        start: {
          line: 86,
          column: 19
        },
        end: {
          line: 105,
          column: 25
        }
      },
      "39": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 94,
          column: 10
        }
      },
      "40": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "41": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 101,
          column: 15
        }
      },
      "42": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 56
        }
      },
      "43": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 26
        }
      },
      "44": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "45": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 27
        }
      },
      "46": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 16
          }
        },
        loc: {
          start: {
            line: 10,
            column: 30
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 14
          },
          end: {
            line: 17,
            column: 15
          }
        },
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 16
          }
        },
        loc: {
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 23,
            column: 24
          }
        },
        loc: {
          start: {
            line: 23,
            column: 34
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 16
          }
        },
        loc: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 38,
            column: 44
          },
          end: {
            line: 38,
            column: 45
          }
        },
        loc: {
          start: {
            line: 38,
            column: 99
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 38
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 39,
            column: 55
          },
          end: {
            line: 39,
            column: 56
          }
        },
        loc: {
          start: {
            line: 39,
            column: 65
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 39
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 65,
            column: 36
          },
          end: {
            line: 65,
            column: 37
          }
        },
        loc: {
          start: {
            line: 65,
            column: 103
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 65
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 66,
            column: 29
          },
          end: {
            line: 66,
            column: 30
          }
        },
        loc: {
          start: {
            line: 66,
            column: 47
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 66
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 70,
            column: 36
          },
          end: {
            line: 70,
            column: 37
          }
        },
        loc: {
          start: {
            line: 70,
            column: 108
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 70
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 71,
            column: 29
          },
          end: {
            line: 71,
            column: 30
          }
        },
        loc: {
          start: {
            line: 71,
            column: 47
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 71
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 75,
            column: 44
          },
          end: {
            line: 75,
            column: 45
          }
        },
        loc: {
          start: {
            line: 75,
            column: 60
          },
          end: {
            line: 79,
            column: 13
          }
        },
        line: 75
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 85,
            column: 35
          },
          end: {
            line: 85,
            column: 36
          }
        },
        loc: {
          start: {
            line: 85,
            column: 100
          },
          end: {
            line: 111,
            column: 1
          }
        },
        line: 85
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 86,
            column: 54
          },
          end: {
            line: 86,
            column: 55
          }
        },
        loc: {
          start: {
            line: 86,
            column: 64
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 86
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 65
          },
          end: {
            line: 38,
            column: 96
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 75
          },
          end: {
            line: 38,
            column: 96
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 48,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 48,
            column: 41
          }
        }, {
          start: {
            line: 48,
            column: 45
          },
          end: {
            line: 48,
            column: 67
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: 61,
            column: 11
          },
          end: {
            line: 63,
            column: 5
          }
        }],
        line: 59
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 54
          },
          end: {
            line: 65,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 64
          },
          end: {
            line: 65,
            column: 67
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 69
          },
          end: {
            line: 65,
            column: 100
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 79
          },
          end: {
            line: 65,
            column: 100
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 50
          },
          end: {
            line: 70,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 70,
            column: 60
          },
          end: {
            line: 70,
            column: 63
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 70,
            column: 74
          },
          end: {
            line: 70,
            column: 105
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 70,
            column: 84
          },
          end: {
            line: 70,
            column: 105
          }
        }],
        line: 70
      },
      "9": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "10": {
        loc: {
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 78,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 78,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "11": {
        loc: {
          start: {
            line: 85,
            column: 47
          },
          end: {
            line: 85,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 85,
            column: 57
          },
          end: {
            line: 85,
            column: 59
          }
        }],
        line: 85
      },
      "12": {
        loc: {
          start: {
            line: 85,
            column: 61
          },
          end: {
            line: 85,
            column: 97
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 85,
            column: 76
          },
          end: {
            line: 85,
            column: 97
          }
        }],
        line: 85
      },
      "13": {
        loc: {
          start: {
            line: 89,
            column: 19
          },
          end: {
            line: 89,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 19
          },
          end: {
            line: 89,
            column: 37
          }
        }, {
          start: {
            line: 89,
            column: 41
          },
          end: {
            line: 89,
            column: 54
          }
        }],
        line: 89
      },
      "14": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "15": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        }, {
          start: {
            line: 108,
            column: 11
          },
          end: {
            line: 110,
            column: 5
          }
        }],
        line: 106
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/lib/data-fetching/fetchers.ts"],
      sourcesContent: ["/**\n * \uC11C\uBC84 \uC0AC\uC774\uB4DC \uB370\uC774\uD130 \uD398\uCE6D \uC720\uD2F8\uB9AC\uD2F0\n *\n * Next.js\uC758 \uC11C\uBC84 \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD560 \uB370\uC774\uD130 \uD398\uCE6D \uC720\uD2F8\uB9AC\uD2F0 \uD568\uC218 \uBAA8\uC74C\uC785\uB2C8\uB2E4.\n * \uC774 \uD30C\uC77C\uC758 \uD568\uC218\uB4E4\uC740 \uC11C\uBC84 \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C\uB9CC \uC0AC\uC6A9\uD574\uC57C \uD569\uB2C8\uB2E4.\n */\n\nimport { createClient } from \"@/utils/supabase-server-client\";\nimport { notFound } from \"next/navigation\";\nimport { cache } from \"react\";\nimport { \n  withDatabaseRetry, \n  withNetworkRetry, \n  ExtendedRetryUtility,\n  DATABASE_RETRY_CONFIG,\n  NETWORK_RETRY_CONFIG \n} from \"@/utils/retry\";\nimport { logger } from \"@/utils/logger\";\n\n// \uAE30\uBCF8 \uCE90\uC2F1 \uC635\uC158\nexport type CacheOptions = {\n  revalidate?: number | false; // \uB370\uC774\uD130 \uC7AC\uAC80\uC99D \uC2DC\uAC04 (\uCD08)\n  tags?: string[]; // \uCE90\uC2DC \uD0DC\uADF8\n  cache?: \"force-cache\" | \"no-store\" | \"default\"; // \uCE90\uC2DC \uC804\uB7B5\n};\n\nconst DEFAULT_CACHE_OPTIONS: CacheOptions = {\n  revalidate: 60, // \uAE30\uBCF8 1\uBD84 \uCE90\uC2F1\n  cache: \"force-cache\", // Next.js 15.3.1\uBD80\uD130 no-store\uAC00 \uAE30\uBCF8\uAC12\uC774\uBBC0\uB85C \uBA85\uC2DC\uC801\uC73C\uB85C force-cache \uC124\uC815\n};\n\n/**\n * Supabase \uCFFC\uB9AC\uB97C \uC704\uD55C \uAE30\uBCF8 \uD398\uCC98 \uD568\uC218 (\uC7AC\uC2DC\uB3C4 \uB85C\uC9C1 \uD3EC\uD568)\n * \uC11C\uBC84 \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uCE90\uC2F1\uACFC \uD568\uAED8 Supabase \uCFFC\uB9AC\uB97C \uC2E4\uD589\n */\nexport const fetchFromSupabase = cache(async <T>(\n  queryBuilder: (\n    supabase: Awaited<ReturnType<typeof createClient>>,\n  ) => Promise<{ data: T | null; error: any }>,\n  options: CacheOptions = DEFAULT_CACHE_OPTIONS,\n): Promise<T> => {\n  const result = await withDatabaseRetry(async () => {\n    const supabase = await createClient();\n    const { data, error } = await queryBuilder(supabase);\n\n    if (error) {\n      await logger.error(\"Supabase query error\", error, {\n        operation: 'fetchFromSupabase',\n        errorCode: error.code,\n        errorMessage: error.message,\n      });\n      throw new Error(error.message || \"\uB370\uC774\uD130 \uC870\uD68C \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.\");\n    }\n\n    if (!data) {\n      // null \uB370\uC774\uD130 \uCC98\uB9AC\uB97C \uBCF4\uB2E4\n      // \uC548\uC804\uD558\uAC8C \uBC30\uC5F4 \uD0C0\uC785\uC5D0 \uB300\uD574\uC11C\uB294 \uBE48 \uBC30\uC5F4, \uADF8 \uC678\uC5D0\uB294 null \uBC18\uD658\n      // \uD0C0\uC785\uC2A4\uD06C\uB9BD\uD2B8\uB294 \uCEF4\uD30C\uC77C \uD0C0\uC784\uC5D0\uB9CC \uC874\uC7AC\uD558\uBBC0\uB85C \uC2E4\uD589 \uC2DC\uC810\uC5D0\uB294 \uD310\uB2E8 \uBD88\uAC00\n      // \uD0C0\uC785 \uB9E4\uAC1C\uBCC0\uC218\uC5D0\uC11C \uBA85\uC2DC\uC801\uC73C\uB85C \uBC30\uC5F4 \uD0C0\uC785\uC778 \uACBD\uC6B0\uC5D0\uB9CC \uBE48 \uBC30\uC5F4 \uBC18\uD658\n      return ([] as any) as T; // \uAE30\uBCF8\uC801\uC73C\uB85C \uBE48 \uBC30\uC5F4 \uBC18\uD658\n    }\n\n    return data;\n  }, 'fetchFromSupabase');\n\n  if (result.success) {\n    return result.data!;\n  } else {\n    throw result.error;\n  }\n});\n\n/**\n * ID\uB85C \uB2E8\uC77C \uB370\uC774\uD130 \uC870\uD68C\n */\nexport const fetchById = cache(async <T>(\n  table: string,\n  id: string,\n  columns: string = \"*\",\n  options: CacheOptions = DEFAULT_CACHE_OPTIONS,\n): Promise<T> => {\n  return fetchFromSupabase(async (supabase) => {\n    return supabase\n      .from(table)\n      .select(columns)\n      .eq(\"id\", id)\n      .single();\n  }, options);\n});\n\n/**\n * \uD2B9\uC815 \uC870\uAC74\uC73C\uB85C \uB370\uC774\uD130 \uBAA9\uB85D \uC870\uD68C\n */\nexport const fetchList = cache(async <T = any>(\n  table: string,\n  columns: string = \"*\",\n  filters?: Record<string, any>,\n  options: CacheOptions = DEFAULT_CACHE_OPTIONS,\n): Promise<T[]> => {\n  return fetchFromSupabase<T[]>(async (supabase) => {\n    let query = supabase.from(table).select(columns);\n\n    // \uD544\uD130 \uC801\uC6A9\n    if (filters) {\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value !== undefined) {\n          query = query.eq(key, value);\n        }\n      });\n    }\n\n    // \uD0C0\uC785 \uC548\uC804\uD55C \uBC29\uC2DD\uC73C\uB85C \uCFFC\uB9AC \uACB0\uACFC \uBC18\uD658\n    return query as unknown as Promise<{ data: T[]; error: any }>;\n  }, options);\n});\n\n/**\n * \uC678\uBD80 API\uB97C \uD638\uCD9C\uD558\uB294 \uD398\uCC98 \uD568\uC218 (\uC7AC\uC2DC\uB3C4 \uB85C\uC9C1 \uD3EC\uD568)\n */\nexport const fetchApi = cache(async <T>(\n  url: string,\n  options: RequestInit = {},\n  cacheOptions: CacheOptions = DEFAULT_CACHE_OPTIONS,\n): Promise<T> => {\n  const result = await withNetworkRetry(async () => {\n    const res = await fetch(url, {\n      ...options,\n      cache: cacheOptions.cache || \"force-cache\", // Next.js 15.3.1\uBD80\uD130 no-store\uAC00 \uAE30\uBCF8\uAC12\uC774\uBBC0\uB85C \uBA85\uC2DC\uC801\uC73C\uB85C \uC124\uC815\n      next: {\n        revalidate: cacheOptions.revalidate,\n        tags: cacheOptions.tags,\n      },\n    });\n\n    if (!res.ok) {\n      await logger.error(`API \uC694\uCCAD \uC2E4\uD328: ${url}`, new Error(`HTTP ${res.status}`), {\n        operation: 'fetchApi',\n        url,\n        status: res.status,\n        statusText: res.statusText,\n      });\n      throw new Error(`API \uC694\uCCAD \uC2E4\uD328: ${res.status}`);\n    }\n\n    return res.json();\n  }, `fetchApi-${url}`);\n\n  if (result.success) {\n    return result.data!;\n  } else {\n    throw result.error;\n  }\n});\n"],
      names: ["fetchApi", "fetchById", "fetchFromSupabase", "fetchList", "DEFAULT_CACHE_OPTIONS", "revalidate", "cache", "queryBuilder", "options", "result", "withDatabaseRetry", "supabase", "createClient", "data", "error", "logger", "operation", "errorCode", "code", "errorMessage", "message", "Error", "success", "table", "id", "columns", "from", "select", "eq", "single", "filters", "query", "Object", "entries", "forEach", "key", "value", "undefined", "url", "cacheOptions", "withNetworkRetry", "res", "fetch", "next", "tags", "ok", "status", "statusText", "json"],
      mappings: "AAAA;;;;;CAKC;;;;;;;;;;;IAkHYA,QAAQ;eAARA;;IA5CAC,SAAS;eAATA;;IAxCAC,iBAAiB;eAAjBA;;IA0DAC,SAAS;eAATA;;;sCAtFgB;uBAEP;uBAOf;wBACgB;AASvB,MAAMC,wBAAsC;IAC1CC,YAAY;IACZC,OAAO;AACT;AAMO,MAAMJ,oBAAoBI,IAAAA,YAAK,EAAC,OACrCC,cAGAC,UAAwBJ,qBAAqB;IAE7C,MAAMK,SAAS,MAAMC,IAAAA,wBAAiB,EAAC;QACrC,MAAMC,WAAW,MAAMC,IAAAA,kCAAY;QACnC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAE,GAAG,MAAMP,aAAaI;QAE3C,IAAIG,OAAO;YACT,MAAMC,cAAM,CAACD,KAAK,CAAC,wBAAwBA,OAAO;gBAChDE,WAAW;gBACXC,WAAWH,MAAMI,IAAI;gBACrBC,cAAcL,MAAMM,OAAO;YAC7B;YACA,MAAM,IAAIC,MAAMP,MAAMM,OAAO,IAAI;QACnC;QAEA,IAAI,CAACP,MAAM;YACT,kBAAkB;YAClB,uCAAuC;YACvC,uCAAuC;YACvC,sCAAsC;YACtC,OAAQ,EAAE,EAAe,gBAAgB;QAC3C;QAEA,OAAOA;IACT,GAAG;IAEH,IAAIJ,OAAOa,OAAO,EAAE;QAClB,OAAOb,OAAOI,IAAI;IACpB,OAAO;QACL,MAAMJ,OAAOK,KAAK;IACpB;AACF;AAKO,MAAMb,YAAYK,IAAAA,YAAK,EAAC,OAC7BiB,OACAC,IACAC,UAAkB,GAAG,EACrBjB,UAAwBJ,qBAAqB;IAE7C,OAAOF,kBAAkB,OAAOS;QAC9B,OAAOA,SACJe,IAAI,CAACH,OACLI,MAAM,CAACF,SACPG,EAAE,CAAC,MAAMJ,IACTK,MAAM;IACX,GAAGrB;AACL;AAKO,MAAML,YAAYG,IAAAA,YAAK,EAAC,OAC7BiB,OACAE,UAAkB,GAAG,EACrBK,SACAtB,UAAwBJ,qBAAqB;IAE7C,OAAOF,kBAAuB,OAAOS;QACnC,IAAIoB,QAAQpB,SAASe,IAAI,CAACH,OAAOI,MAAM,CAACF;QAExC,QAAQ;QACR,IAAIK,SAAS;YACXE,OAAOC,OAAO,CAACH,SAASI,OAAO,CAAC,CAAC,CAACC,KAAKC,MAAM;gBAC3C,IAAIA,UAAUC,WAAW;oBACvBN,QAAQA,MAAMH,EAAE,CAACO,KAAKC;gBACxB;YACF;QACF;QAEA,uBAAuB;QACvB,OAAOL;IACT,GAAGvB;AACL;AAKO,MAAMR,WAAWM,IAAAA,YAAK,EAAC,OAC5BgC,KACA9B,UAAuB,CAAC,CAAC,EACzB+B,eAA6BnC,qBAAqB;IAElD,MAAMK,SAAS,MAAM+B,IAAAA,uBAAgB,EAAC;QACpC,MAAMC,MAAM,MAAMC,MAAMJ,KAAK;YAC3B,GAAG9B,OAAO;YACVF,OAAOiC,aAAajC,KAAK,IAAI;YAC7BqC,MAAM;gBACJtC,YAAYkC,aAAalC,UAAU;gBACnCuC,MAAML,aAAaK,IAAI;YACzB;QACF;QAEA,IAAI,CAACH,IAAII,EAAE,EAAE;YACX,MAAM9B,cAAM,CAACD,KAAK,CAAC,CAAC,WAAW,EAAEwB,KAAK,EAAE,IAAIjB,MAAM,CAAC,KAAK,EAAEoB,IAAIK,MAAM,EAAE,GAAG;gBACvE9B,WAAW;gBACXsB;gBACAQ,QAAQL,IAAIK,MAAM;gBAClBC,YAAYN,IAAIM,UAAU;YAC5B;YACA,MAAM,IAAI1B,MAAM,CAAC,WAAW,EAAEoB,IAAIK,MAAM,EAAE;QAC5C;QAEA,OAAOL,IAAIO,IAAI;IACjB,GAAG,CAAC,SAAS,EAAEV,KAAK;IAEpB,IAAI7B,OAAOa,OAAO,EAAE;QAClB,OAAOb,OAAOI,IAAI;IACpB,OAAO;QACL,MAAMJ,OAAOK,KAAK;IACpB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2d3b5a861ebbad8315b5a3b9028ed0918e1d965e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_fvnq42iso = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_fvnq42iso();
cov_fvnq42iso().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_fvnq42iso().f[0]++;
  cov_fvnq42iso().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_fvnq42iso().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_fvnq42iso().s[3]++;
_export(exports, {
  fetchApi: function () {
    /* istanbul ignore next */
    cov_fvnq42iso().f[1]++;
    cov_fvnq42iso().s[4]++;
    return fetchApi;
  },
  fetchById: function () {
    /* istanbul ignore next */
    cov_fvnq42iso().f[2]++;
    cov_fvnq42iso().s[5]++;
    return fetchById;
  },
  fetchFromSupabase: function () {
    /* istanbul ignore next */
    cov_fvnq42iso().f[3]++;
    cov_fvnq42iso().s[6]++;
    return fetchFromSupabase;
  },
  fetchList: function () {
    /* istanbul ignore next */
    cov_fvnq42iso().f[4]++;
    cov_fvnq42iso().s[7]++;
    return fetchList;
  }
});
const _supabaseserverclient =
/* istanbul ignore next */
(cov_fvnq42iso().s[8]++, require("../../utils/supabase-server-client"));
const _react =
/* istanbul ignore next */
(cov_fvnq42iso().s[9]++, require("react"));
const _retry =
/* istanbul ignore next */
(cov_fvnq42iso().s[10]++, require("../../utils/retry"));
const _logger =
/* istanbul ignore next */
(cov_fvnq42iso().s[11]++, require("../../utils/logger"));
const DEFAULT_CACHE_OPTIONS =
/* istanbul ignore next */
(cov_fvnq42iso().s[12]++, {
  revalidate: 60,
  cache: "force-cache"
});
const fetchFromSupabase =
/* istanbul ignore next */
(cov_fvnq42iso().s[13]++, (0, _react.cache)(async (queryBuilder, options =
/* istanbul ignore next */
(cov_fvnq42iso().b[0][0]++, DEFAULT_CACHE_OPTIONS)) => {
  /* istanbul ignore next */
  cov_fvnq42iso().f[5]++;
  const result =
  /* istanbul ignore next */
  (cov_fvnq42iso().s[14]++, await (0, _retry.withDatabaseRetry)(async () => {
    /* istanbul ignore next */
    cov_fvnq42iso().f[6]++;
    const supabase =
    /* istanbul ignore next */
    (cov_fvnq42iso().s[15]++, await (0, _supabaseserverclient.createClient)());
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_fvnq42iso().s[16]++, await queryBuilder(supabase));
    /* istanbul ignore next */
    cov_fvnq42iso().s[17]++;
    if (error) {
      /* istanbul ignore next */
      cov_fvnq42iso().b[1][0]++;
      cov_fvnq42iso().s[18]++;
      await _logger.logger.error("Supabase query error", error, {
        operation: 'fetchFromSupabase',
        errorCode: error.code,
        errorMessage: error.message
      });
      /* istanbul ignore next */
      cov_fvnq42iso().s[19]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_fvnq42iso().b[2][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_fvnq42iso().b[2][1]++, "데이터 조회 중 오류가 발생했습니다."));
    } else
    /* istanbul ignore next */
    {
      cov_fvnq42iso().b[1][1]++;
    }
    cov_fvnq42iso().s[20]++;
    if (!data) {
      /* istanbul ignore next */
      cov_fvnq42iso().b[3][0]++;
      cov_fvnq42iso().s[21]++;
      // null 데이터 처리를 보다
      // 안전하게 배열 타입에 대해서는 빈 배열, 그 외에는 null 반환
      // 타입스크립트는 컴파일 타임에만 존재하므로 실행 시점에는 판단 불가
      // 타입 매개변수에서 명시적으로 배열 타입인 경우에만 빈 배열 반환
      return []; // 기본적으로 빈 배열 반환
    } else
    /* istanbul ignore next */
    {
      cov_fvnq42iso().b[3][1]++;
    }
    cov_fvnq42iso().s[22]++;
    return data;
  }, 'fetchFromSupabase'));
  /* istanbul ignore next */
  cov_fvnq42iso().s[23]++;
  if (result.success) {
    /* istanbul ignore next */
    cov_fvnq42iso().b[4][0]++;
    cov_fvnq42iso().s[24]++;
    return result.data;
  } else {
    /* istanbul ignore next */
    cov_fvnq42iso().b[4][1]++;
    cov_fvnq42iso().s[25]++;
    throw result.error;
  }
}));
const fetchById =
/* istanbul ignore next */
(cov_fvnq42iso().s[26]++, (0, _react.cache)(async (table, id, columns =
/* istanbul ignore next */
(cov_fvnq42iso().b[5][0]++, "*"), options =
/* istanbul ignore next */
(cov_fvnq42iso().b[6][0]++, DEFAULT_CACHE_OPTIONS)) => {
  /* istanbul ignore next */
  cov_fvnq42iso().f[7]++;
  cov_fvnq42iso().s[27]++;
  return fetchFromSupabase(async supabase => {
    /* istanbul ignore next */
    cov_fvnq42iso().f[8]++;
    cov_fvnq42iso().s[28]++;
    return supabase.from(table).select(columns).eq("id", id).single();
  }, options);
}));
const fetchList =
/* istanbul ignore next */
(cov_fvnq42iso().s[29]++, (0, _react.cache)(async (table, columns =
/* istanbul ignore next */
(cov_fvnq42iso().b[7][0]++, "*"), filters, options =
/* istanbul ignore next */
(cov_fvnq42iso().b[8][0]++, DEFAULT_CACHE_OPTIONS)) => {
  /* istanbul ignore next */
  cov_fvnq42iso().f[9]++;
  cov_fvnq42iso().s[30]++;
  return fetchFromSupabase(async supabase => {
    /* istanbul ignore next */
    cov_fvnq42iso().f[10]++;
    let query =
    /* istanbul ignore next */
    (cov_fvnq42iso().s[31]++, supabase.from(table).select(columns));
    // 필터 적용
    /* istanbul ignore next */
    cov_fvnq42iso().s[32]++;
    if (filters) {
      /* istanbul ignore next */
      cov_fvnq42iso().b[9][0]++;
      cov_fvnq42iso().s[33]++;
      Object.entries(filters).forEach(([key, value]) => {
        /* istanbul ignore next */
        cov_fvnq42iso().f[11]++;
        cov_fvnq42iso().s[34]++;
        if (value !== undefined) {
          /* istanbul ignore next */
          cov_fvnq42iso().b[10][0]++;
          cov_fvnq42iso().s[35]++;
          query = query.eq(key, value);
        } else
        /* istanbul ignore next */
        {
          cov_fvnq42iso().b[10][1]++;
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_fvnq42iso().b[9][1]++;
    }
    // 타입 안전한 방식으로 쿼리 결과 반환
    cov_fvnq42iso().s[36]++;
    return query;
  }, options);
}));
const fetchApi =
/* istanbul ignore next */
(cov_fvnq42iso().s[37]++, (0, _react.cache)(async (url, options =
/* istanbul ignore next */
(cov_fvnq42iso().b[11][0]++, {}), cacheOptions =
/* istanbul ignore next */
(cov_fvnq42iso().b[12][0]++, DEFAULT_CACHE_OPTIONS)) => {
  /* istanbul ignore next */
  cov_fvnq42iso().f[12]++;
  const result =
  /* istanbul ignore next */
  (cov_fvnq42iso().s[38]++, await (0, _retry.withNetworkRetry)(async () => {
    /* istanbul ignore next */
    cov_fvnq42iso().f[13]++;
    const res =
    /* istanbul ignore next */
    (cov_fvnq42iso().s[39]++, await fetch(url, {
      ...options,
      cache:
      /* istanbul ignore next */
      (cov_fvnq42iso().b[13][0]++, cacheOptions.cache) ||
      /* istanbul ignore next */
      (cov_fvnq42iso().b[13][1]++, "force-cache"),
      next: {
        revalidate: cacheOptions.revalidate,
        tags: cacheOptions.tags
      }
    }));
    /* istanbul ignore next */
    cov_fvnq42iso().s[40]++;
    if (!res.ok) {
      /* istanbul ignore next */
      cov_fvnq42iso().b[14][0]++;
      cov_fvnq42iso().s[41]++;
      await _logger.logger.error(`API 요청 실패: ${url}`, new Error(`HTTP ${res.status}`), {
        operation: 'fetchApi',
        url,
        status: res.status,
        statusText: res.statusText
      });
      /* istanbul ignore next */
      cov_fvnq42iso().s[42]++;
      throw new Error(`API 요청 실패: ${res.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_fvnq42iso().b[14][1]++;
    }
    cov_fvnq42iso().s[43]++;
    return res.json();
  }, `fetchApi-${url}`));
  /* istanbul ignore next */
  cov_fvnq42iso().s[44]++;
  if (result.success) {
    /* istanbul ignore next */
    cov_fvnq42iso().b[15][0]++;
    cov_fvnq42iso().s[45]++;
    return result.data;
  } else {
    /* istanbul ignore next */
    cov_fvnq42iso().b[15][1]++;
    cov_fvnq42iso().s[46]++;
    throw result.error;
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZnZucTQyaXNvIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwidW5kZWZpbmVkIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJ2ZXJzaW9uIiwic291cmNlcyIsInNvdXJjZXNDb250ZW50IiwibmFtZXMiLCJtYXBwaW5ncyIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJmZXRjaEFwaSIsImZldGNoQnlJZCIsImZldGNoRnJvbVN1cGFiYXNlIiwiZmV0Y2hMaXN0IiwiREVGQVVMVF9DQUNIRV9PUFRJT05TIiwicmV2YWxpZGF0ZSIsImNhY2hlIiwiX3JlYWN0IiwicXVlcnlCdWlsZGVyIiwib3B0aW9ucyIsInJlc3VsdCIsIl9yZXRyeSIsIndpdGhEYXRhYmFzZVJldHJ5Iiwic3VwYWJhc2UiLCJfc3VwYWJhc2VzZXJ2ZXJjbGllbnQiLCJjcmVhdGVDbGllbnQiLCJkYXRhIiwiZXJyb3IiLCJfbG9nZ2VyIiwibG9nZ2VyIiwib3BlcmF0aW9uIiwiZXJyb3JDb2RlIiwiY29kZSIsImVycm9yTWVzc2FnZSIsIm1lc3NhZ2UiLCJFcnJvciIsInN1Y2Nlc3MiLCJ0YWJsZSIsImlkIiwiY29sdW1ucyIsImZyb20iLCJzZWxlY3QiLCJlcSIsInNpbmdsZSIsImZpbHRlcnMiLCJxdWVyeSIsIk9iamVjdCIsImVudHJpZXMiLCJmb3JFYWNoIiwia2V5IiwidmFsdWUiLCJ1cmwiLCJjYWNoZU9wdGlvbnMiLCJ3aXRoTmV0d29ya1JldHJ5IiwicmVzIiwiZmV0Y2giLCJuZXh0IiwidGFncyIsIm9rIiwic3RhdHVzIiwic3RhdHVzVGV4dCIsImpzb24iXSwic291cmNlcyI6WyIvVXNlcnMvY2hlb2xoeXVuL1JlcG9zaXRvcmllcy9waWNuaWMtd2ViL2xpYi9kYXRhLWZldGNoaW5nL2ZldGNoZXJzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICog7ISc67KEIOyCrOydtOuTnCDrjbDsnbTthLAg7Y6Y7LmtIOycoO2LuOumrO2LsFxuICpcbiAqIE5leHQuanPsnZgg7ISc67KEIOy7tO2PrOuEjO2KuOyXkOyEnCDsgqzsmqntlaAg642w7J207YSwIO2OmOy5rSDsnKDti7jrpqzti7Ag7ZWo7IiYIOuqqOydjOyeheuLiOuLpC5cbiAqIOydtCDtjIzsnbzsnZgg7ZWo7IiY65Ok7J2AIOyEnOuyhCDsu7Ttj6zrhIztirjsl5DshJzrp4wg7IKs7Jqp7ZW07JW8IO2VqeuLiOuLpC5cbiAqL1xuXG5pbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tIFwiQC91dGlscy9zdXBhYmFzZS1zZXJ2ZXItY2xpZW50XCI7XG5pbXBvcnQgeyBub3RGb3VuZCB9IGZyb20gXCJuZXh0L25hdmlnYXRpb25cIjtcbmltcG9ydCB7IGNhY2hlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBcbiAgd2l0aERhdGFiYXNlUmV0cnksIFxuICB3aXRoTmV0d29ya1JldHJ5LCBcbiAgRXh0ZW5kZWRSZXRyeVV0aWxpdHksXG4gIERBVEFCQVNFX1JFVFJZX0NPTkZJRyxcbiAgTkVUV09SS19SRVRSWV9DT05GSUcgXG59IGZyb20gXCJAL3V0aWxzL3JldHJ5XCI7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tIFwiQC91dGlscy9sb2dnZXJcIjtcblxuLy8g6riw67O4IOy6kOyLsSDsmLXshZhcbmV4cG9ydCB0eXBlIENhY2hlT3B0aW9ucyA9IHtcbiAgcmV2YWxpZGF0ZT86IG51bWJlciB8IGZhbHNlOyAvLyDrjbDsnbTthLAg7J6s6rKA7KadIOyLnOqwhCAo7LSIKVxuICB0YWdzPzogc3RyaW5nW107IC8vIOy6kOyLnCDtg5zqt7hcbiAgY2FjaGU/OiBcImZvcmNlLWNhY2hlXCIgfCBcIm5vLXN0b3JlXCIgfCBcImRlZmF1bHRcIjsgLy8g7LqQ7IucIOyghOuetVxufTtcblxuY29uc3QgREVGQVVMVF9DQUNIRV9PUFRJT05TOiBDYWNoZU9wdGlvbnMgPSB7XG4gIHJldmFsaWRhdGU6IDYwLCAvLyDquLDrs7ggMeu2hCDsupDsi7FcbiAgY2FjaGU6IFwiZm9yY2UtY2FjaGVcIiwgLy8gTmV4dC5qcyAxNS4zLjHrtoDthLAgbm8tc3RvcmXqsIAg6riw67O46rCS7J2066+A66GcIOuqheyLnOyggeycvOuhnCBmb3JjZS1jYWNoZSDshKTsoJVcbn07XG5cbi8qKlxuICogU3VwYWJhc2Ug7L+866as66W8IOychO2VnCDquLDrs7gg7Y6Y7LKYIO2VqOyImCAo7J6s7Iuc64+EIOuhnOyngSDtj6ztlagpXG4gKiDshJzrsoQg7Lu07Y+s64SM7Yq47JeQ7IScIOy6kOyLseqzvCDtlajqu5ggU3VwYWJhc2Ug7L+866as66W8IOyLpO2WiVxuICovXG5leHBvcnQgY29uc3QgZmV0Y2hGcm9tU3VwYWJhc2UgPSBjYWNoZShhc3luYyA8VD4oXG4gIHF1ZXJ5QnVpbGRlcjogKFxuICAgIHN1cGFiYXNlOiBBd2FpdGVkPFJldHVyblR5cGU8dHlwZW9mIGNyZWF0ZUNsaWVudD4+LFxuICApID0+IFByb21pc2U8eyBkYXRhOiBUIHwgbnVsbDsgZXJyb3I6IGFueSB9PixcbiAgb3B0aW9uczogQ2FjaGVPcHRpb25zID0gREVGQVVMVF9DQUNIRV9PUFRJT05TLFxuKTogUHJvbWlzZTxUPiA9PiB7XG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHdpdGhEYXRhYmFzZVJldHJ5KGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBzdXBhYmFzZSA9IGF3YWl0IGNyZWF0ZUNsaWVudCgpO1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHF1ZXJ5QnVpbGRlcihzdXBhYmFzZSk7XG5cbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIGF3YWl0IGxvZ2dlci5lcnJvcihcIlN1cGFiYXNlIHF1ZXJ5IGVycm9yXCIsIGVycm9yLCB7XG4gICAgICAgIG9wZXJhdGlvbjogJ2ZldGNoRnJvbVN1cGFiYXNlJyxcbiAgICAgICAgZXJyb3JDb2RlOiBlcnJvci5jb2RlLFxuICAgICAgICBlcnJvck1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXG4gICAgICB9KTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvci5tZXNzYWdlIHx8IFwi642w7J207YSwIOyhsO2ajCDspJEg7Jik66WY6rCAIOuwnOyDne2WiOyKteuLiOuLpC5cIik7XG4gICAgfVxuXG4gICAgaWYgKCFkYXRhKSB7XG4gICAgICAvLyBudWxsIOuNsOydtO2EsCDsspjrpqzrpbwg67O064ukXG4gICAgICAvLyDslYjsoITtlZjqsowg67Cw7Je0IO2DgOyeheyXkCDrjIDtlbTshJzripQg67mIIOuwsOyXtCwg6re4IOyZuOyXkOuKlCBudWxsIOuwmO2ZmFxuICAgICAgLy8g7YOA7J6F7Iqk7YGs66a97Yq464qUIOy7tO2MjOydvCDtg4DsnoTsl5Drp4wg7KG07J6s7ZWY66+A66GcIOyLpO2WiSDsi5zsoJDsl5DripQg7YyQ64uoIOu2iOqwgFxuICAgICAgLy8g7YOA7J6FIOunpOqwnOuzgOyImOyXkOyEnCDrqoXsi5zsoIHsnLzroZwg67Cw7Je0IO2DgOyeheyduCDqsr3smrDsl5Drp4wg67mIIOuwsOyXtCDrsJjtmZhcbiAgICAgIHJldHVybiAoW10gYXMgYW55KSBhcyBUOyAvLyDquLDrs7jsoIHsnLzroZwg67mIIOuwsOyXtCDrsJjtmZhcbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfSwgJ2ZldGNoRnJvbVN1cGFiYXNlJyk7XG5cbiAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgcmV0dXJuIHJlc3VsdC5kYXRhITtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyByZXN1bHQuZXJyb3I7XG4gIH1cbn0pO1xuXG4vKipcbiAqIElE66GcIOuLqOydvCDrjbDsnbTthLAg7KGw7ZqMXG4gKi9cbmV4cG9ydCBjb25zdCBmZXRjaEJ5SWQgPSBjYWNoZShhc3luYyA8VD4oXG4gIHRhYmxlOiBzdHJpbmcsXG4gIGlkOiBzdHJpbmcsXG4gIGNvbHVtbnM6IHN0cmluZyA9IFwiKlwiLFxuICBvcHRpb25zOiBDYWNoZU9wdGlvbnMgPSBERUZBVUxUX0NBQ0hFX09QVElPTlMsXG4pOiBQcm9taXNlPFQ+ID0+IHtcbiAgcmV0dXJuIGZldGNoRnJvbVN1cGFiYXNlKGFzeW5jIChzdXBhYmFzZSkgPT4ge1xuICAgIHJldHVybiBzdXBhYmFzZVxuICAgICAgLmZyb20odGFibGUpXG4gICAgICAuc2VsZWN0KGNvbHVtbnMpXG4gICAgICAuZXEoXCJpZFwiLCBpZClcbiAgICAgIC5zaW5nbGUoKTtcbiAgfSwgb3B0aW9ucyk7XG59KTtcblxuLyoqXG4gKiDtirnsoJUg7KGw6rG07Jy866GcIOuNsOydtO2EsCDrqqnroZ0g7KGw7ZqMXG4gKi9cbmV4cG9ydCBjb25zdCBmZXRjaExpc3QgPSBjYWNoZShhc3luYyA8VCA9IGFueT4oXG4gIHRhYmxlOiBzdHJpbmcsXG4gIGNvbHVtbnM6IHN0cmluZyA9IFwiKlwiLFxuICBmaWx0ZXJzPzogUmVjb3JkPHN0cmluZywgYW55PixcbiAgb3B0aW9uczogQ2FjaGVPcHRpb25zID0gREVGQVVMVF9DQUNIRV9PUFRJT05TLFxuKTogUHJvbWlzZTxUW10+ID0+IHtcbiAgcmV0dXJuIGZldGNoRnJvbVN1cGFiYXNlPFRbXT4oYXN5bmMgKHN1cGFiYXNlKSA9PiB7XG4gICAgbGV0IHF1ZXJ5ID0gc3VwYWJhc2UuZnJvbSh0YWJsZSkuc2VsZWN0KGNvbHVtbnMpO1xuXG4gICAgLy8g7ZWE7YSwIOyggeyaqVxuICAgIGlmIChmaWx0ZXJzKSB7XG4gICAgICBPYmplY3QuZW50cmllcyhmaWx0ZXJzKS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBxdWVyeSA9IHF1ZXJ5LmVxKGtleSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyDtg4DsnoUg7JWI7KCE7ZWcIOuwqeyLneycvOuhnCDsv7zrpqwg6rKw6rO8IOuwmO2ZmFxuICAgIHJldHVybiBxdWVyeSBhcyB1bmtub3duIGFzIFByb21pc2U8eyBkYXRhOiBUW107IGVycm9yOiBhbnkgfT47XG4gIH0sIG9wdGlvbnMpO1xufSk7XG5cbi8qKlxuICog7Jm467aAIEFQSeulvCDtmLjstpztlZjripQg7Y6Y7LKYIO2VqOyImCAo7J6s7Iuc64+EIOuhnOyngSDtj6ztlagpXG4gKi9cbmV4cG9ydCBjb25zdCBmZXRjaEFwaSA9IGNhY2hlKGFzeW5jIDxUPihcbiAgdXJsOiBzdHJpbmcsXG4gIG9wdGlvbnM6IFJlcXVlc3RJbml0ID0ge30sXG4gIGNhY2hlT3B0aW9uczogQ2FjaGVPcHRpb25zID0gREVGQVVMVF9DQUNIRV9PUFRJT05TLFxuKTogUHJvbWlzZTxUPiA9PiB7XG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHdpdGhOZXR3b3JrUmV0cnkoYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIGNhY2hlOiBjYWNoZU9wdGlvbnMuY2FjaGUgfHwgXCJmb3JjZS1jYWNoZVwiLCAvLyBOZXh0LmpzIDE1LjMuMeu2gO2EsCBuby1zdG9yZeqwgCDquLDrs7jqsJLsnbTrr4DroZwg66qF7Iuc7KCB7Jy866GcIOyEpOyglVxuICAgICAgbmV4dDoge1xuICAgICAgICByZXZhbGlkYXRlOiBjYWNoZU9wdGlvbnMucmV2YWxpZGF0ZSxcbiAgICAgICAgdGFnczogY2FjaGVPcHRpb25zLnRhZ3MsXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgaWYgKCFyZXMub2spIHtcbiAgICAgIGF3YWl0IGxvZ2dlci5lcnJvcihgQVBJIOyalOyyrSDsi6TtjKg6ICR7dXJsfWAsIG5ldyBFcnJvcihgSFRUUCAke3Jlcy5zdGF0dXN9YCksIHtcbiAgICAgICAgb3BlcmF0aW9uOiAnZmV0Y2hBcGknLFxuICAgICAgICB1cmwsXG4gICAgICAgIHN0YXR1czogcmVzLnN0YXR1cyxcbiAgICAgICAgc3RhdHVzVGV4dDogcmVzLnN0YXR1c1RleHQsXG4gICAgICB9KTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQVBJIOyalOyyrSDsi6TtjKg6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgfSwgYGZldGNoQXBpLSR7dXJsfWApO1xuXG4gIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgIHJldHVybiByZXN1bHQuZGF0YSE7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgcmVzdWx0LmVycm9yO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0dBS0M7O0FBQUE7QUFBQSxTQUFBQSxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFXLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxjQUFBO01BQUFDLE9BQUE7TUFBQUMsT0FBQTtNQUFBQyxjQUFBO01BQUFDLEtBQUE7TUFBQUMsUUFBQTtJQUFBO0lBQUFDLGVBQUE7SUFBQTNCLElBQUE7RUFBQTtFQUFBLElBQUE0QixRQUFBLEdBQUEzQixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQXlCLFFBQUEsQ0FBQTdCLElBQUEsS0FBQTZCLFFBQUEsQ0FBQTdCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUE0QixRQUFBLENBQUE3QixJQUFB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