{"version":3,"names":["cov_fvnq42iso","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","fetchApi","fetchById","fetchFromSupabase","fetchList","DEFAULT_CACHE_OPTIONS","revalidate","cache","_react","queryBuilder","options","result","_retry","withDatabaseRetry","supabase","_supabaseserverclient","createClient","data","error","_logger","logger","operation","errorCode","code","errorMessage","message","Error","success","table","id","columns","from","select","eq","single","filters","query","Object","entries","forEach","key","value","url","cacheOptions","withNetworkRetry","res","fetch","next","tags","ok","status","statusText","json"],"sources":["/Users/cheolhyun/Repositories/picnic-web/lib/data-fetching/fetchers.ts"],"sourcesContent":["/**\n * 서버 사이드 데이터 페칭 유틸리티\n *\n * Next.js의 서버 컴포넌트에서 사용할 데이터 페칭 유틸리티 함수 모음입니다.\n * 이 파일의 함수들은 서버 컴포넌트에서만 사용해야 합니다.\n */\n\nimport { createClient } from \"@/utils/supabase-server-client\";\nimport { notFound } from \"next/navigation\";\nimport { cache } from \"react\";\nimport { \n  withDatabaseRetry, \n  withNetworkRetry, \n  ExtendedRetryUtility,\n  DATABASE_RETRY_CONFIG,\n  NETWORK_RETRY_CONFIG \n} from \"@/utils/retry\";\nimport { logger } from \"@/utils/logger\";\n\n// 기본 캐싱 옵션\nexport type CacheOptions = {\n  revalidate?: number | false; // 데이터 재검증 시간 (초)\n  tags?: string[]; // 캐시 태그\n  cache?: \"force-cache\" | \"no-store\" | \"default\"; // 캐시 전략\n};\n\nconst DEFAULT_CACHE_OPTIONS: CacheOptions = {\n  revalidate: 60, // 기본 1분 캐싱\n  cache: \"force-cache\", // Next.js 15.3.1부터 no-store가 기본값이므로 명시적으로 force-cache 설정\n};\n\n/**\n * Supabase 쿼리를 위한 기본 페처 함수 (재시도 로직 포함)\n * 서버 컴포넌트에서 캐싱과 함께 Supabase 쿼리를 실행\n */\nexport const fetchFromSupabase = cache(async <T>(\n  queryBuilder: (\n    supabase: Awaited<ReturnType<typeof createClient>>,\n  ) => Promise<{ data: T | null; error: any }>,\n  options: CacheOptions = DEFAULT_CACHE_OPTIONS,\n): Promise<T> => {\n  const result = await withDatabaseRetry(async () => {\n    const supabase = await createClient();\n    const { data, error } = await queryBuilder(supabase);\n\n    if (error) {\n      await logger.error(\"Supabase query error\", error, {\n        operation: 'fetchFromSupabase',\n        errorCode: error.code,\n        errorMessage: error.message,\n      });\n      throw new Error(error.message || \"데이터 조회 중 오류가 발생했습니다.\");\n    }\n\n    if (!data) {\n      // null 데이터 처리를 보다\n      // 안전하게 배열 타입에 대해서는 빈 배열, 그 외에는 null 반환\n      // 타입스크립트는 컴파일 타임에만 존재하므로 실행 시점에는 판단 불가\n      // 타입 매개변수에서 명시적으로 배열 타입인 경우에만 빈 배열 반환\n      return ([] as any) as T; // 기본적으로 빈 배열 반환\n    }\n\n    return data;\n  }, 'fetchFromSupabase');\n\n  if (result.success) {\n    return result.data!;\n  } else {\n    throw result.error;\n  }\n});\n\n/**\n * ID로 단일 데이터 조회\n */\nexport const fetchById = cache(async <T>(\n  table: string,\n  id: string,\n  columns: string = \"*\",\n  options: CacheOptions = DEFAULT_CACHE_OPTIONS,\n): Promise<T> => {\n  return fetchFromSupabase(async (supabase) => {\n    return supabase\n      .from(table)\n      .select(columns)\n      .eq(\"id\", id)\n      .single();\n  }, options);\n});\n\n/**\n * 특정 조건으로 데이터 목록 조회\n */\nexport const fetchList = cache(async <T = any>(\n  table: string,\n  columns: string = \"*\",\n  filters?: Record<string, any>,\n  options: CacheOptions = DEFAULT_CACHE_OPTIONS,\n): Promise<T[]> => {\n  return fetchFromSupabase<T[]>(async (supabase) => {\n    let query = supabase.from(table).select(columns);\n\n    // 필터 적용\n    if (filters) {\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value !== undefined) {\n          query = query.eq(key, value);\n        }\n      });\n    }\n\n    // 타입 안전한 방식으로 쿼리 결과 반환\n    return query as unknown as Promise<{ data: T[]; error: any }>;\n  }, options);\n});\n\n/**\n * 외부 API를 호출하는 페처 함수 (재시도 로직 포함)\n */\nexport const fetchApi = cache(async <T>(\n  url: string,\n  options: RequestInit = {},\n  cacheOptions: CacheOptions = DEFAULT_CACHE_OPTIONS,\n): Promise<T> => {\n  const result = await withNetworkRetry(async () => {\n    const res = await fetch(url, {\n      ...options,\n      cache: cacheOptions.cache || \"force-cache\", // Next.js 15.3.1부터 no-store가 기본값이므로 명시적으로 설정\n      next: {\n        revalidate: cacheOptions.revalidate,\n        tags: cacheOptions.tags,\n      },\n    });\n\n    if (!res.ok) {\n      await logger.error(`API 요청 실패: ${url}`, new Error(`HTTP ${res.status}`), {\n        operation: 'fetchApi',\n        url,\n        status: res.status,\n        statusText: res.statusText,\n      });\n      throw new Error(`API 요청 실패: ${res.status}`);\n    }\n\n    return res.json();\n  }, `fetchApi-${url}`);\n\n  if (result.success) {\n    return result.data!;\n  } else {\n    throw result.error;\n  }\n});\n"],"mappings":"AAAA;;;;;GAKC;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,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","ignoreList":[]}