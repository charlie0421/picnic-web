7df405ddbc4521ce42ac90764f479436
"use strict";

/* istanbul ignore next */
function cov_2l3gbq646p() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/components/server/banner/BannerListFetcher.tsx";
  var hash = "9d6f92ce500e97740e94992cd0ba738495b0c2c5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/components/server/banner/BannerListFetcher.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 33
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "5": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 54
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "7": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 16,
          column: 56
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "9": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 24
        }
      },
      "10": {
        start: {
          line: 21,
          column: 30
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "11": {
        start: {
          line: 21,
          column: 53
        },
        end: {
          line: 36,
          column: 13
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 40,
          column: 11
        }
      },
      "13": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 57
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "BannerListFetcher",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 32
          }
        },
        loc: {
          start: {
            line: 14,
            column: 53
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 42
          },
          end: {
            line: 21,
            column: 43
          }
        },
        loc: {
          start: {
            line: 21,
            column: 53
          },
          end: {
            line: 36,
            column: 13
          }
        },
        line: 21
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 33
          },
          end: {
            line: 14,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 49
          },
          end: {
            line: 14,
            column: 51
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 20
          }
        }, {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 44
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/components/server/banner/BannerListFetcher.tsx"],
      sourcesContent: ["import { createClient } from \"@/utils/supabase-server-client\";\nimport { Banner as DBBanner } from \"@/types/interfaces\";\nimport { getLocalizedString } from \"@/utils/api/strings\";\nimport { getCdnImageUrl } from \"@/utils/api/image\";\nimport { BannerListPresenter } from \"@/components/client/banner\";\nimport { getBanners } from \"@/utils/api/queries\";\n\n\nexport interface BannerListFetcherProps {\n  className?: string;\n}\n\n/**\n * \uC11C\uBC84 \uCEF4\uD3EC\uB10C\uD2B8: \uBC30\uB108 \uB370\uC774\uD130\uB97C \uC11C\uBC84\uC5D0\uC11C \uD398\uCE6D\uD558\uC5EC \uD074\uB77C\uC774\uC5B8\uD2B8 \uCEF4\uD3EC\uB10C\uD2B8\uC5D0 \uC804\uB2EC\n * \n * \uC7A5\uC810:\n * - \uCD08\uAE30 \uD398\uC774\uC9C0 \uB85C\uB4DC \uC2DC \uBE60\uB978 \uB80C\uB354\uB9C1 (\uC11C\uBC84\uC5D0\uC11C \uB370\uC774\uD130 \uD3EC\uD568)\n * - SEO \uCD5C\uC801\uD654 (\uD06C\uB864\uB7EC\uAC00 \uBC30\uB108 \uB0B4\uC6A9 \uC778\uB371\uC2F1 \uAC00\uB2A5)\n * - \uD074\uB77C\uC774\uC5B8\uD2B8 \uBC88\uB4E4 \uD06C\uAE30 \uAC10\uC18C\n * \n * \uC0AC\uC6A9\uBC95:\n * ```tsx\n * <BannerListFetcher className=\"my-4\" />\n * ```\n */\nexport async function BannerListFetcher({ className }: BannerListFetcherProps = {}) {\n  try {\n    const banners = await getBanners();\n    \n    if (!banners || banners.length === 0) {\n      return null; // \uBC30\uB108\uAC00 \uC5C6\uC73C\uBA74 \uC544\uBB34\uAC83\uB3C4 \uB80C\uB354\uB9C1\uD558\uC9C0 \uC54A\uC74C\n    }\n\n    // \uB370\uC774\uD130 \uBCC0\uD658 - DBBanner\uB97C \uD074\uB77C\uC774\uC5B8\uD2B8\uC6A9 Banner\uB85C \uBCC0\uD658\n    const clientBanners = banners.map((banner) => ({\n      id: banner.id,\n      celeb_id: banner.celeb_id,\n      created_at: banner.created_at,\n      deleted_at: banner.deleted_at,\n      duration: banner.duration,\n      end_at: banner.end_at,\n      image: banner.image,\n      link: banner.link,\n      location: banner.location,\n      order: banner.order,\n      start_at: banner.start_at,\n      thumbnail: banner.thumbnail,\n      title: banner.title,\n      updated_at: banner.updated_at,\n    }));\n\n    return <BannerListPresenter banners={clientBanners} className={className} />;\n  } catch (error) {\n    console.error('BannerListFetcher error:', error);\n    return null; // \uC5D0\uB7EC \uC2DC \uBC30\uB108 \uC139\uC158\uC744 \uC228\uAE40\n  }\n} "],
      names: ["BannerListFetcher", "className", "banners", "getBanners", "length", "clientBanners", "map", "banner", "id", "celeb_id", "created_at", "deleted_at", "duration", "end_at", "image", "link", "location", "order", "start_at", "thumbnail", "title", "updated_at", "BannerListPresenter", "error", "console"],
      mappings: ";;;;+BAyBsBA;;;eAAAA;;;;wBArBc;yBACT;AAoBpB,eAAeA,kBAAkB,EAAEC,SAAS,EAA0B,GAAG,CAAC,CAAC;IAChF,IAAI;QACF,MAAMC,UAAU,MAAMC,IAAAA,mBAAU;QAEhC,IAAI,CAACD,WAAWA,QAAQE,MAAM,KAAK,GAAG;YACpC,OAAO,MAAM,wBAAwB;QACvC;QAEA,uCAAuC;QACvC,MAAMC,gBAAgBH,QAAQI,GAAG,CAAC,CAACC,SAAY,CAAA;gBAC7CC,IAAID,OAAOC,EAAE;gBACbC,UAAUF,OAAOE,QAAQ;gBACzBC,YAAYH,OAAOG,UAAU;gBAC7BC,YAAYJ,OAAOI,UAAU;gBAC7BC,UAAUL,OAAOK,QAAQ;gBACzBC,QAAQN,OAAOM,MAAM;gBACrBC,OAAOP,OAAOO,KAAK;gBACnBC,MAAMR,OAAOQ,IAAI;gBACjBC,UAAUT,OAAOS,QAAQ;gBACzBC,OAAOV,OAAOU,KAAK;gBACnBC,UAAUX,OAAOW,QAAQ;gBACzBC,WAAWZ,OAAOY,SAAS;gBAC3BC,OAAOb,OAAOa,KAAK;gBACnBC,YAAYd,OAAOc,UAAU;YAC/B,CAAA;QAEA,qBAAO,qBAACC,2BAAmB;YAACpB,SAASG;YAAeJ,WAAWA;;IACjE,EAAE,OAAOsB,OAAO;QACdC,QAAQD,KAAK,CAAC,4BAA4BA;QAC1C,OAAO,MAAM,iBAAiB;IAChC;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9d6f92ce500e97740e94992cd0ba738495b0c2c5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2l3gbq646p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2l3gbq646p();
cov_2l3gbq646p().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2l3gbq646p().s[1]++;
Object.defineProperty(exports, "BannerListFetcher", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2l3gbq646p().f[0]++;
    cov_2l3gbq646p().s[2]++;
    return BannerListFetcher;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2l3gbq646p().s[3]++, require("react/jsx-runtime"));
const _banner =
/* istanbul ignore next */
(cov_2l3gbq646p().s[4]++, require("../../client/banner"));
const _queries =
/* istanbul ignore next */
(cov_2l3gbq646p().s[5]++, require("../../../utils/api/queries"));
async function BannerListFetcher({
  className
} =
/* istanbul ignore next */
(cov_2l3gbq646p().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_2l3gbq646p().f[1]++;
  cov_2l3gbq646p().s[6]++;
  try {
    const banners =
    /* istanbul ignore next */
    (cov_2l3gbq646p().s[7]++, await (0, _queries.getBanners)());
    /* istanbul ignore next */
    cov_2l3gbq646p().s[8]++;
    if (
    /* istanbul ignore next */
    (cov_2l3gbq646p().b[2][0]++, !banners) ||
    /* istanbul ignore next */
    (cov_2l3gbq646p().b[2][1]++, banners.length === 0)) {
      /* istanbul ignore next */
      cov_2l3gbq646p().b[1][0]++;
      cov_2l3gbq646p().s[9]++;
      return null; // 배너가 없으면 아무것도 렌더링하지 않음
    } else
    /* istanbul ignore next */
    {
      cov_2l3gbq646p().b[1][1]++;
    }
    // 데이터 변환 - DBBanner를 클라이언트용 Banner로 변환
    const clientBanners =
    /* istanbul ignore next */
    (cov_2l3gbq646p().s[10]++, banners.map(banner => {
      /* istanbul ignore next */
      cov_2l3gbq646p().f[2]++;
      cov_2l3gbq646p().s[11]++;
      return {
        id: banner.id,
        celeb_id: banner.celeb_id,
        created_at: banner.created_at,
        deleted_at: banner.deleted_at,
        duration: banner.duration,
        end_at: banner.end_at,
        image: banner.image,
        link: banner.link,
        location: banner.location,
        order: banner.order,
        start_at: banner.start_at,
        thumbnail: banner.thumbnail,
        title: banner.title,
        updated_at: banner.updated_at
      };
    }));
    /* istanbul ignore next */
    cov_2l3gbq646p().s[12]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_banner.BannerListPresenter, {
      banners: clientBanners,
      className: className
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2l3gbq646p().s[13]++;
    console.error('BannerListFetcher error:', error);
    /* istanbul ignore next */
    cov_2l3gbq646p().s[14]++;
    return null; // 에러 시 배너 섹션을 숨김
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmwzZ2JxNjQ2cCIsImFjdHVhbENvdmVyYWdlIiwicyIsIkJhbm5lckxpc3RGZXRjaGVyIiwiY2xhc3NOYW1lIiwiYiIsImYiLCJiYW5uZXJzIiwiX3F1ZXJpZXMiLCJnZXRCYW5uZXJzIiwibGVuZ3RoIiwiY2xpZW50QmFubmVycyIsIm1hcCIsImJhbm5lciIsImlkIiwiY2VsZWJfaWQiLCJjcmVhdGVkX2F0IiwiZGVsZXRlZF9hdCIsImR1cmF0aW9uIiwiZW5kX2F0IiwiaW1hZ2UiLCJsaW5rIiwibG9jYXRpb24iLCJvcmRlciIsInN0YXJ0X2F0IiwidGh1bWJuYWlsIiwidGl0bGUiLCJ1cGRhdGVkX2F0IiwiX2pzeHJ1bnRpbWUiLCJqc3giLCJfYmFubmVyIiwiQmFubmVyTGlzdFByZXNlbnRlciIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGVvbGh5dW4vUmVwb3NpdG9yaWVzL3BpY25pYy13ZWIvY29tcG9uZW50cy9zZXJ2ZXIvYmFubmVyL0Jhbm5lckxpc3RGZXRjaGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tIFwiQC91dGlscy9zdXBhYmFzZS1zZXJ2ZXItY2xpZW50XCI7XG5pbXBvcnQgeyBCYW5uZXIgYXMgREJCYW5uZXIgfSBmcm9tIFwiQC90eXBlcy9pbnRlcmZhY2VzXCI7XG5pbXBvcnQgeyBnZXRMb2NhbGl6ZWRTdHJpbmcgfSBmcm9tIFwiQC91dGlscy9hcGkvc3RyaW5nc1wiO1xuaW1wb3J0IHsgZ2V0Q2RuSW1hZ2VVcmwgfSBmcm9tIFwiQC91dGlscy9hcGkvaW1hZ2VcIjtcbmltcG9ydCB7IEJhbm5lckxpc3RQcmVzZW50ZXIgfSBmcm9tIFwiQC9jb21wb25lbnRzL2NsaWVudC9iYW5uZXJcIjtcbmltcG9ydCB7IGdldEJhbm5lcnMgfSBmcm9tIFwiQC91dGlscy9hcGkvcXVlcmllc1wiO1xuXG5cbmV4cG9ydCBpbnRlcmZhY2UgQmFubmVyTGlzdEZldGNoZXJQcm9wcyB7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbn1cblxuLyoqXG4gKiDshJzrsoQg7Lu07Y+s64SM7Yq4OiDrsLDrhIgg642w7J207YSw66W8IOyEnOuyhOyXkOyEnCDtjpjsua3tlZjsl6wg7YG065287J207Ja47Yq4IOy7tO2PrOuEjO2KuOyXkCDsoITri6xcbiAqIFxuICog7J6l7KCQOlxuICogLSDstIjquLAg7Y6Y7J207KeAIOuhnOuTnCDsi5wg67mg66W4IOugjOuNlOungSAo7ISc67KE7JeQ7IScIOuNsOydtO2EsCDtj6ztlagpXG4gKiAtIFNFTyDstZzsoIHtmZQgKO2BrOuhpOufrOqwgCDrsLDrhIgg64K07JqpIOyduOuNseyLsSDqsIDriqUpXG4gKiAtIO2BtOudvOydtOyWuO2KuCDrsojrk6Qg7YGs6riwIOqwkOyGjFxuICogXG4gKiDsgqzsmqnrspU6XG4gKiBgYGB0c3hcbiAqIDxCYW5uZXJMaXN0RmV0Y2hlciBjbGFzc05hbWU9XCJteS00XCIgLz5cbiAqIGBgYFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gQmFubmVyTGlzdEZldGNoZXIoeyBjbGFzc05hbWUgfTogQmFubmVyTGlzdEZldGNoZXJQcm9wcyA9IHt9KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgYmFubmVycyA9IGF3YWl0IGdldEJhbm5lcnMoKTtcbiAgICBcbiAgICBpZiAoIWJhbm5lcnMgfHwgYmFubmVycy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiBudWxsOyAvLyDrsLDrhIjqsIAg7JeG7Jy866m0IOyVhOustOqyg+uPhCDroIzrjZTrp4HtlZjsp4Ag7JWK7J2MXG4gICAgfVxuXG4gICAgLy8g642w7J207YSwIOuzgO2ZmCAtIERCQmFubmVy66W8IO2BtOudvOydtOyWuO2KuOyaqSBCYW5uZXLroZwg67OA7ZmYXG4gICAgY29uc3QgY2xpZW50QmFubmVycyA9IGJhbm5lcnMubWFwKChiYW5uZXIpID0+ICh7XG4gICAgICBpZDogYmFubmVyLmlkLFxuICAgICAgY2VsZWJfaWQ6IGJhbm5lci5jZWxlYl9pZCxcbiAgICAgIGNyZWF0ZWRfYXQ6IGJhbm5lci5jcmVhdGVkX2F0LFxuICAgICAgZGVsZXRlZF9hdDogYmFubmVyLmRlbGV0ZWRfYXQsXG4gICAgICBkdXJhdGlvbjogYmFubmVyLmR1cmF0aW9uLFxuICAgICAgZW5kX2F0OiBiYW5uZXIuZW5kX2F0LFxuICAgICAgaW1hZ2U6IGJhbm5lci5pbWFnZSxcbiAgICAgIGxpbms6IGJhbm5lci5saW5rLFxuICAgICAgbG9jYXRpb246IGJhbm5lci5sb2NhdGlvbixcbiAgICAgIG9yZGVyOiBiYW5uZXIub3JkZXIsXG4gICAgICBzdGFydF9hdDogYmFubmVyLnN0YXJ0X2F0LFxuICAgICAgdGh1bWJuYWlsOiBiYW5uZXIudGh1bWJuYWlsLFxuICAgICAgdGl0bGU6IGJhbm5lci50aXRsZSxcbiAgICAgIHVwZGF0ZWRfYXQ6IGJhbm5lci51cGRhdGVkX2F0LFxuICAgIH0pKTtcblxuICAgIHJldHVybiA8QmFubmVyTGlzdFByZXNlbnRlciBiYW5uZXJzPXtjbGllbnRCYW5uZXJzfSBjbGFzc05hbWU9e2NsYXNzTmFtZX0gLz47XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignQmFubmVyTGlzdEZldGNoZXIgZXJyb3I6JywgZXJyb3IpO1xuICAgIHJldHVybiBudWxsOyAvLyDsl5Drn6wg7IucIOuwsOuEiCDshLnshZjsnYQg7Iio6rmAXG4gIH1cbn0gIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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