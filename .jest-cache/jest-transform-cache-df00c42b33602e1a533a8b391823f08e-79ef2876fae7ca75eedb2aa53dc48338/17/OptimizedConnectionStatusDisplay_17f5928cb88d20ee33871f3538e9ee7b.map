{"version":3,"names":["_default","ConnectionStatusIcon","cov_29lqcmkejk","s","_react","memo","status","f","iconConfig","useMemo","b","icon","color","pulse","_jsxruntime","jsx","className","displayName","SystemStatusBadge","systemStatus","badges","isOnline","push","text","isSlowConnection","isPageVisible","battery","level","isCharging","length","map","badge","index","PerformanceMetrics","performanceMetrics","formatMemoryUsage","memoryUsage","toFixed","renderCount","isHighRenderCount","eventCount","jsxs","Date","lastRenderTime","toLocaleTimeString","ControlPanel","onToggleSmartReconnect","onToggleBatterySaver","smartReconnectEnabled","batterySaverEnabled","onClick","tabIndex","OptimizedConnectionStatusDisplay","connectionStatus","connectionInfo","showDetails","isCompact","statusText","reconnectAttempts","maxReconnectAttempts","lastError","message","role","lastConnected","Fragment","connectionType","Math","round"],"sources":["/Users/cheolhyun/Repositories/picnic-web/components/client/vote/common/OptimizedConnectionStatusDisplay.tsx"],"sourcesContent":["'use client';\n\nimport React, { memo, useMemo } from 'react';\nimport { ConnectionStatus, ConnectionInfo } from '@/lib/supabase/realtime';\nimport { UseVoteRealtimeOptimizedReturn } from '@/hooks/useVoteRealtimeOptimized';\n\ninterface OptimizedConnectionStatusDisplayProps {\n  connectionStatus: ConnectionStatus;\n  connectionInfo: ConnectionInfo;\n  systemStatus: UseVoteRealtimeOptimizedReturn['systemStatus'];\n  performanceMetrics: UseVoteRealtimeOptimizedReturn['performanceMetrics'];\n  onToggleSmartReconnect?: () => void;\n  onToggleBatterySaver?: () => void;\n  smartReconnectEnabled?: boolean;\n  batterySaverEnabled?: boolean;\n  showDetails?: boolean;\n  isCompact?: boolean;\n}\n\n// 연결 상태 아이콘 컴포넌트 (메모화)\nconst ConnectionStatusIcon = memo(({ status }: { status: ConnectionStatus }) => {\n  const iconConfig = useMemo(() => {\n    switch (status) {\n      case 'connected':\n        return { icon: '●', color: 'text-green-500', pulse: false };\n      case 'connecting':\n      case 'reconnecting':\n        return { icon: '●', color: 'text-yellow-500', pulse: true };\n      case 'disconnected':\n        return { icon: '●', color: 'text-gray-400', pulse: false };\n      case 'error':\n      case 'network_error':\n        return { icon: '●', color: 'text-red-500', pulse: false };\n      case 'suspended':\n        return { icon: '⏸', color: 'text-blue-500', pulse: false };\n      default:\n        return { icon: '●', color: 'text-gray-400', pulse: false };\n    }\n  }, [status]);\n\n  return (\n    <span \n      className={`${iconConfig.color} ${iconConfig.pulse ? 'animate-pulse' : ''}`}\n      aria-label={`연결 상태: ${status}`}\n      data-testid=\"connection-status-icon\"\n    >\n      {iconConfig.icon}\n    </span>\n  );\n});\n\nConnectionStatusIcon.displayName = 'ConnectionStatusIcon';\n\n// 시스템 상태 배지 컴포넌트 (메모화)\nconst SystemStatusBadge = memo(({ \n  systemStatus \n}: { \n  systemStatus: UseVoteRealtimeOptimizedReturn['systemStatus'] \n}) => {\n  const badges = useMemo(() => {\n    const badges: Array<{ text: string; color: string }> = [];\n    \n    if (!systemStatus.isOnline) {\n      badges.push({ text: '오프라인', color: 'bg-red-100 text-red-800' });\n    }\n    \n    if (systemStatus.isSlowConnection) {\n      badges.push({ text: '느린 연결', color: 'bg-yellow-100 text-yellow-800' });\n    }\n    \n    if (!systemStatus.isPageVisible) {\n      badges.push({ text: '백그라운드', color: 'bg-gray-100 text-gray-800' });\n    }\n    \n    if (systemStatus.battery.level !== null && \n        !systemStatus.battery.isCharging && \n        systemStatus.battery.level < 0.15) {\n      badges.push({ text: '배터리 부족', color: 'bg-red-100 text-red-800' });\n    }\n    \n    return badges;\n  }, [systemStatus]);\n\n  if (badges.length === 0) return null;\n\n  return (\n    <div className=\"flex gap-1 mt-1\">\n      {badges.map((badge, index) => (\n        <span\n          key={index}\n          className={`px-2 py-1 text-xs rounded-full ${badge.color}`}\n        >\n          {badge.text}\n        </span>\n      ))}\n    </div>\n  );\n});\n\nSystemStatusBadge.displayName = 'SystemStatusBadge';\n\n// 성능 메트릭 표시 컴포넌트 (메모화)\nconst PerformanceMetrics = memo(({ \n  performanceMetrics \n}: { \n  performanceMetrics: UseVoteRealtimeOptimizedReturn['performanceMetrics'] \n}) => {\n  const formatMemoryUsage = useMemo(() => {\n    if (performanceMetrics.memoryUsage === null) return 'N/A';\n    return `${(performanceMetrics.memoryUsage / 1024 / 1024).toFixed(1)}MB`;\n  }, [performanceMetrics.memoryUsage]);\n\n  const renderCount = performanceMetrics.renderCount;\n  const isHighRenderCount = renderCount > 50;\n  const eventCount = 0;\n\n  return (\n    <div className=\"text-xs text-gray-600 space-y-1\">\n      <div className=\"grid grid-cols-2 gap-2\">\n        <div>\n          <span className=\"font-medium\">렌더링:</span>\n          <span className={isHighRenderCount ? 'text-orange-600 ml-1 font-medium' : 'ml-1'}>\n            {renderCount}회\n            {isHighRenderCount && ' ⚠️'}\n          </span>\n        </div>\n        <div>\n          <span className=\"font-medium\">메모리:</span>\n          <span className=\"ml-1\">{formatMemoryUsage}</span>\n        </div>\n      </div>\n      <div>\n        <span className=\"font-medium\">이벤트:</span>\n        <span className=\"ml-1\">{eventCount}개</span>\n      </div>\n      <div className=\"text-xs text-gray-500\">\n        마지막 렌더: {new Date(performanceMetrics.lastRenderTime).toLocaleTimeString()}\n      </div>\n    </div>\n  );\n});\n\nPerformanceMetrics.displayName = 'PerformanceMetrics';\n\n// 컨트롤 패널 컴포넌트 (메모화)\nconst ControlPanel = memo(({\n  onToggleSmartReconnect,\n  onToggleBatterySaver,\n  smartReconnectEnabled,\n  batterySaverEnabled\n}: {\n  onToggleSmartReconnect?: () => void;\n  onToggleBatterySaver?: () => void;\n  smartReconnectEnabled?: boolean;\n  batterySaverEnabled?: boolean;\n}) => {\n  if (!onToggleSmartReconnect && !onToggleBatterySaver) return null;\n\n  return (\n    <div className=\"space-y-2 pt-2 border-t border-gray-200\">\n      <div className=\"text-xs font-medium text-gray-700\">최적화 설정</div>\n      <div className=\"space-y-1\">\n        {onToggleSmartReconnect && (\n          <label className=\"flex items-center justify-between cursor-pointer\">\n            <span className=\"text-xs text-gray-600\">스마트 재연결</span>\n            <button\n              onClick={onToggleSmartReconnect}\n              className={`w-8 h-4 rounded-full transition-colors ${\n                smartReconnectEnabled ? 'bg-blue-500' : 'bg-gray-300'\n              }`}\n              aria-label={`스마트 재연결 ${smartReconnectEnabled ? '비활성화' : '활성화'}`}\n              tabIndex={0}\n            >\n              <div\n                className={`w-3 h-3 bg-white rounded-full transition-transform ${\n                  smartReconnectEnabled ? 'translate-x-4' : 'translate-x-0.5'\n                }`}\n              />\n            </button>\n          </label>\n        )}\n        {onToggleBatterySaver && (\n          <label className=\"flex items-center justify-between cursor-pointer\">\n            <span className=\"text-xs text-gray-600\">배터리 절약</span>\n            <button\n              onClick={onToggleBatterySaver}\n              className={`w-8 h-4 rounded-full transition-colors ${\n                batterySaverEnabled ? 'bg-green-500' : 'bg-gray-300'\n              }`}\n              aria-label={`배터리 절약 ${batterySaverEnabled ? '비활성화' : '활성화'}`}\n              tabIndex={0}\n            >\n              <div\n                className={`w-3 h-3 bg-white rounded-full transition-transform ${\n                  batterySaverEnabled ? 'translate-x-4' : 'translate-x-0.5'\n                }`}\n              />\n            </button>\n          </label>\n        )}\n      </div>\n    </div>\n  );\n});\n\nControlPanel.displayName = 'ControlPanel';\n\n// 메인 컴포넌트 (메모화)\nconst OptimizedConnectionStatusDisplay = memo(({\n  connectionStatus,\n  connectionInfo,\n  systemStatus,\n  performanceMetrics,\n  onToggleSmartReconnect,\n  onToggleBatterySaver,\n  smartReconnectEnabled = true,\n  batterySaverEnabled = true,\n  showDetails = false,\n  isCompact = false\n}: OptimizedConnectionStatusDisplayProps) => {\n  // 상태 텍스트 계산 (메모화)\n  const statusText = useMemo(() => {\n    switch (connectionStatus) {\n      case 'connected':\n        return isCompact ? '연결됨' : '실시간 연결됨';\n      case 'connecting':\n        return '연결 중...';\n      case 'reconnecting':\n        return `재연결 중... (${connectionInfo.reconnectAttempts}/${connectionInfo.maxReconnectAttempts})`;\n      case 'disconnected':\n        return '연결 해제됨';\n      case 'error':\n        return `오류: ${connectionInfo.lastError?.message || '알 수 없는 오류'}`;\n      case 'network_error':\n        return '네트워크 오류';\n      case 'suspended':\n        return '일시 중단됨';\n      default:\n        return '상태 확인 중';\n    }\n  }, [connectionStatus, connectionInfo, isCompact]);\n\n  // 컴팩트 모드\n  if (isCompact) {\n    return (\n      <div className=\"flex items-center gap-2 text-sm\">\n        <ConnectionStatusIcon status={connectionStatus} />\n        <span className=\"text-gray-600\">{statusText}</span>\n        <SystemStatusBadge systemStatus={systemStatus} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white border border-gray-200 rounded-lg p-3 shadow-sm\" role=\"status\">\n      {/* 기본 상태 정보 */}\n      <div className=\"flex items-center justify-between mb-2\">\n        <div className=\"flex items-center gap-2\">\n          <ConnectionStatusIcon status={connectionStatus} />\n          <span className=\"text-sm font-medium text-gray-900\">{statusText}</span>\n        </div>\n        <div className=\"text-xs text-gray-500\">\n          {connectionInfo.lastConnected && (\n            <>마지막 연결: {connectionInfo.lastConnected.toLocaleTimeString()}</>\n          )}\n        </div>\n      </div>\n\n      {/* 시스템 상태 배지 */}\n      <SystemStatusBadge systemStatus={systemStatus} />\n\n      {/* 상세 정보 */}\n      {showDetails && (\n        <div className=\"mt-3 space-y-3\">\n          {/* 연결 정보 */}\n          <div className=\"text-xs text-gray-600 space-y-1\">\n            <div className=\"grid grid-cols-2 gap-2\">\n              <div>\n                <span className=\"font-medium\">네트워크:</span>\n                <span className=\"ml-1\">\n                  {systemStatus.isOnline ? '온라인' : '오프라인'}\n                  {systemStatus.connectionType && ` (${systemStatus.connectionType})`}\n                </span>\n              </div>\n              <div>\n                <span className=\"font-medium\">페이지:</span>\n                <span className=\"ml-1\">\n                  {systemStatus.isPageVisible ? '활성' : '백그라운드'}\n                </span>\n              </div>\n            </div>\n            {systemStatus.battery.level !== null && (\n              <div>\n                <span className=\"font-medium\">배터리:</span>\n                <span className=\"ml-1\">\n                  {Math.round(systemStatus.battery.level * 100)}%\n                  {systemStatus.battery.isCharging ? ' (충전 중)' : ''}\n                </span>\n              </div>\n            )}\n          </div>\n\n          {/* 성능 메트릭 */}\n          <PerformanceMetrics performanceMetrics={performanceMetrics} />\n\n          {/* 컨트롤 패널 */}\n          <ControlPanel\n            onToggleSmartReconnect={onToggleSmartReconnect}\n            onToggleBatterySaver={onToggleBatterySaver}\n            smartReconnectEnabled={smartReconnectEnabled}\n            batterySaverEnabled={batterySaverEnabled}\n          />\n        </div>\n      )}\n    </div>\n  );\n});\n\nOptimizedConnectionStatusDisplay.displayName = 'OptimizedConnectionStatusDisplay';\n\nexport default OptimizedConnectionStatusDisplay;"],"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","ignoreList":[]}