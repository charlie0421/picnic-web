4521cadbc8fc9e818a1fd7e708ad9e95
"use client";
"use strict";

/* istanbul ignore next */
function cov_1a305own5h() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/hooks/useVoteSubmit.ts";
  var hash = "804de8af4872ccf558588da4f909eb5a774d46b5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/hooks/useVoteSubmit.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 29
        }
      },
      "3": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "5": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 40
        }
      },
      "6": {
        start: {
          line: 16,
          column: 44
        },
        end: {
          line: 16,
          column: 71
        }
      },
      "7": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 17,
          column: 56
        }
      },
      "8": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "10": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "11": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 40,
          column: 24
        }
      },
      "12": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 28,
          column: 14
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 38,
          column: 13
        }
      },
      "14": {
        start: {
          line: 30,
          column: 31
        },
        end: {
          line: 30,
          column: 52
        }
      },
      "15": {
        start: {
          line: 31,
          column: 37
        },
        end: {
          line: 31,
          column: 76
        }
      },
      "16": {
        start: {
          line: 33,
          column: 45
        },
        end: {
          line: 33,
          column: 95
        }
      },
      "17": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 37,
          column: 19
        }
      },
      "18": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 35
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 31
        }
      },
      "20": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "21": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 31
        }
      },
      "22": {
        start: {
          line: 45,
          column: 33
        },
        end: {
          line: 45,
          column: 79
        }
      },
      "23": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 35
        }
      },
      "24": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 63
        }
      },
      "25": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 24
        }
      },
      "26": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "27": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 23
        }
      },
      "28": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 59,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "useVoteSubmit",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 22
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 18,
            column: 24
          }
        },
        loc: {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 58
          },
          end: {
            line: 21,
            column: 59
          }
        },
        loc: {
          start: {
            line: 21,
            column: 68
          },
          end: {
            line: 40,
            column: 9
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 51,
            column: 47
          },
          end: {
            line: 51,
            column: 48
          }
        },
        loc: {
          start: {
            line: 51,
            column: 51
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 37
          },
          end: {
            line: 31,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 37
          },
          end: {
            line: 31,
            column: 49
          }
        }, {
          start: {
            line: 31,
            column: 53
          },
          end: {
            line: 31,
            column: 76
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 45
          },
          end: {
            line: 33,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 45
          },
          end: {
            line: 33,
            column: 68
          }
        }, {
          start: {
            line: 33,
            column: 72
          },
          end: {
            line: 33,
            column: 95
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 56
          },
          end: {
            line: 34,
            column: 199
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 79
          },
          end: {
            line: 34,
            column: 110
          }
        }, {
          start: {
            line: 34,
            column: 113
          },
          end: {
            line: 34,
            column: 199
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 113
          },
          end: {
            line: 34,
            column: 199
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 138
          },
          end: {
            line: 34,
            column: 165
          }
        }, {
          start: {
            line: 34,
            column: 168
          },
          end: {
            line: 34,
            column: 199
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: 44,
            column: 15
          },
          end: {
            line: 49,
            column: 9
          }
        }],
        line: 42
      },
      "6": {
        loc: {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 45,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 45,
            column: 54
          }
        }, {
          start: {
            line: 45,
            column: 58
          },
          end: {
            line: 45,
            column: 79
          }
        }],
        line: 45
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/hooks/useVoteSubmit.ts"],
      sourcesContent: ["\"use client\";\n\nimport { useState, useCallback } from \"react\";\nimport { AppError, ErrorCategory, ErrorSeverity } from \"@/utils/error\";\nimport { withNetworkRetry } from \"@/utils/retry\";\n\ninterface VoteSubmissionData {\n    voteId: number;\n    voteItemId: number;\n    amount: number;\n    userId: string;\n    totalBonusRemain: number;\n}\n\ninterface VoteSubmissionResponse {\n    success: boolean;\n    data?: any;\n    message?: string;\n    error?: string;\n}\n\n/**\n * \uD22C\uD45C \uC81C\uCD9C\uC744 \uCC98\uB9AC\uD558\uB294 \uD6C5 (\uC7AC\uC2DC\uB3C4 \uB85C\uC9C1 \uD3EC\uD568)\n * \n * \uC0C8\uB85C\uC6B4 \uC7AC\uC2DC\uB3C4 \uC2DC\uC2A4\uD15C\uC744 \uC0AC\uC6A9\uD558\uC5EC \uB124\uD2B8\uC6CC\uD06C \uC624\uB958\uB098 \uC77C\uC2DC\uC801\uC778 \uC11C\uBC84 \uC624\uB958\uC5D0 \uB300\uD574\n * \uC790\uB3D9\uC73C\uB85C \uC7AC\uC2DC\uB3C4\uB97C \uC218\uD589\uD569\uB2C8\uB2E4.\n */\nexport function useVoteSubmit() {\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n\n    const submitVote = async (\n        voteData: VoteSubmissionData,\n    ): Promise<VoteSubmissionResponse | null> => {\n        setIsSubmitting(true);\n        setError(null);\n\n        const result = await withNetworkRetry(async () => {\n            const response = await fetch(\"/api/vote/submit\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(voteData),\n            });\n\n            if (!response.ok) {\n                const result = await response.json();\n                const errorMessage = result.error || \"Failed to submit vote\";\n                \n                // \uBE44\uC988\uB2C8\uC2A4 \uB85C\uC9C1 \uC5D0\uB7EC (\uC794\uC561 \uBD80\uC871, \uC911\uBCF5 \uD22C\uD45C \uB4F1)\uB294 \uC7AC\uC2DC\uB3C4\uD558\uC9C0 \uC54A\uC74C\n                const isBusinessLogicError = response.status === 400 || response.status === 409;\n                \n                throw new AppError(\n                    errorMessage,\n                    isBusinessLogicError ? ErrorCategory.VALIDATION : \n                    response.status >= 500 ? ErrorCategory.SERVER : ErrorCategory.VALIDATION,\n                    ErrorSeverity.MEDIUM,\n                    response.status,\n                    { \n                        originalError: result,\n                        isRetryable: !isBusinessLogicError \n                    }\n                );\n            }\n\n            return response.json() as Promise<VoteSubmissionResponse>;\n        }, 'submitVote');\n\n        setIsSubmitting(false);\n\n        if (result.success) {\n            return result.data!;\n        } else {\n            const errorMessage = result.error?.message || \"\uD22C\uD45C \uC81C\uCD9C \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.\";\n            setError(errorMessage);\n            console.error(\"[useVoteSubmit] \uC5D0\uB7EC:\", result.error);\n            return null;\n        }\n    };\n\n    const clearError = useCallback(() => {\n        setError(null);\n    }, []);\n\n    return {\n        submitVote,\n        isSubmitting,\n        error,\n        clearError,\n    };\n}\n"],
      names: ["useVoteSubmit", "isSubmitting", "setIsSubmitting", "useState", "error", "setError", "submitVote", "voteData", "result", "withNetworkRetry", "response", "fetch", "method", "headers", "body", "JSON", "stringify", "ok", "json", "errorMessage", "isBusinessLogicError", "status", "AppError", "ErrorCategory", "VALIDATION", "SERVER", "ErrorSeverity", "MEDIUM", "originalError", "isRetryable", "success", "data", "message", "console", "clearError", "useCallback"],
      mappings: "AAAA;;;;;+BA2BgBA;;;eAAAA;;;uBAzBsB;uBACiB;uBACtB;AAuB1B,SAASA;IACZ,MAAM,CAACC,cAAcC,gBAAgB,GAAGC,IAAAA,eAAQ,EAAC;IACjD,MAAM,CAACC,OAAOC,SAAS,GAAGF,IAAAA,eAAQ,EAAgB;IAElD,MAAMG,aAAa,OACfC;QAEAL,gBAAgB;QAChBG,SAAS;QAET,MAAMG,SAAS,MAAMC,IAAAA,uBAAgB,EAAC;YAClC,MAAMC,WAAW,MAAMC,MAAM,oBAAoB;gBAC7CC,QAAQ;gBACRC,SAAS;oBACL,gBAAgB;gBACpB;gBACAC,MAAMC,KAAKC,SAAS,CAACT;YACzB;YAEA,IAAI,CAACG,SAASO,EAAE,EAAE;gBACd,MAAMT,SAAS,MAAME,SAASQ,IAAI;gBAClC,MAAMC,eAAeX,OAAOJ,KAAK,IAAI;gBAErC,wCAAwC;gBACxC,MAAMgB,uBAAuBV,SAASW,MAAM,KAAK,OAAOX,SAASW,MAAM,KAAK;gBAE5E,MAAM,IAAIC,eAAQ,CACdH,cACAC,uBAAuBG,oBAAa,CAACC,UAAU,GAC/Cd,SAASW,MAAM,IAAI,MAAME,oBAAa,CAACE,MAAM,GAAGF,oBAAa,CAACC,UAAU,EACxEE,oBAAa,CAACC,MAAM,EACpBjB,SAASW,MAAM,EACf;oBACIO,eAAepB;oBACfqB,aAAa,CAACT;gBAClB;YAER;YAEA,OAAOV,SAASQ,IAAI;QACxB,GAAG;QAEHhB,gBAAgB;QAEhB,IAAIM,OAAOsB,OAAO,EAAE;YAChB,OAAOtB,OAAOuB,IAAI;QACtB,OAAO;YACH,MAAMZ,eAAeX,OAAOJ,KAAK,EAAE4B,WAAW;YAC9C3B,SAASc;YACTc,QAAQ7B,KAAK,CAAC,uBAAuBI,OAAOJ,KAAK;YACjD,OAAO;QACX;IACJ;IAEA,MAAM8B,aAAaC,IAAAA,kBAAW,EAAC;QAC3B9B,SAAS;IACb,GAAG,EAAE;IAEL,OAAO;QACHC;QACAL;QACAG;QACA8B;IACJ;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "804de8af4872ccf558588da4f909eb5a774d46b5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1a305own5h = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1a305own5h();
cov_1a305own5h().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1a305own5h().s[1]++;
Object.defineProperty(exports, "useVoteSubmit", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1a305own5h().f[0]++;
    cov_1a305own5h().s[2]++;
    return useVoteSubmit;
  }
});
const _react =
/* istanbul ignore next */
(cov_1a305own5h().s[3]++, require("react"));
const _error =
/* istanbul ignore next */
(cov_1a305own5h().s[4]++, require("../utils/error"));
const _retry =
/* istanbul ignore next */
(cov_1a305own5h().s[5]++, require("../utils/retry"));
function useVoteSubmit() {
  /* istanbul ignore next */
  cov_1a305own5h().f[1]++;
  const [isSubmitting, setIsSubmitting] =
  /* istanbul ignore next */
  (cov_1a305own5h().s[6]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1a305own5h().s[7]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_1a305own5h().s[8]++;
  const submitVote = async voteData => {
    /* istanbul ignore next */
    cov_1a305own5h().f[2]++;
    cov_1a305own5h().s[9]++;
    setIsSubmitting(true);
    /* istanbul ignore next */
    cov_1a305own5h().s[10]++;
    setError(null);
    const result =
    /* istanbul ignore next */
    (cov_1a305own5h().s[11]++, await (0, _retry.withNetworkRetry)(async () => {
      /* istanbul ignore next */
      cov_1a305own5h().f[3]++;
      const response =
      /* istanbul ignore next */
      (cov_1a305own5h().s[12]++, await fetch("/api/vote/submit", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(voteData)
      }));
      /* istanbul ignore next */
      cov_1a305own5h().s[13]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1a305own5h().b[0][0]++;
        const result =
        /* istanbul ignore next */
        (cov_1a305own5h().s[14]++, await response.json());
        const errorMessage =
        /* istanbul ignore next */
        (cov_1a305own5h().s[15]++,
        /* istanbul ignore next */
        (cov_1a305own5h().b[1][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_1a305own5h().b[1][1]++, "Failed to submit vote"));
        // 비즈니스 로직 에러 (잔액 부족, 중복 투표 등)는 재시도하지 않음
        const isBusinessLogicError =
        /* istanbul ignore next */
        (cov_1a305own5h().s[16]++,
        /* istanbul ignore next */
        (cov_1a305own5h().b[2][0]++, response.status === 400) ||
        /* istanbul ignore next */
        (cov_1a305own5h().b[2][1]++, response.status === 409));
        /* istanbul ignore next */
        cov_1a305own5h().s[17]++;
        throw new _error.AppError(errorMessage, isBusinessLogicError ?
        /* istanbul ignore next */
        (cov_1a305own5h().b[3][0]++, _error.ErrorCategory.VALIDATION) :
        /* istanbul ignore next */
        (cov_1a305own5h().b[3][1]++, response.status >= 500 ?
        /* istanbul ignore next */
        (cov_1a305own5h().b[4][0]++, _error.ErrorCategory.SERVER) :
        /* istanbul ignore next */
        (cov_1a305own5h().b[4][1]++, _error.ErrorCategory.VALIDATION)), _error.ErrorSeverity.MEDIUM, response.status, {
          originalError: result,
          isRetryable: !isBusinessLogicError
        });
      } else
      /* istanbul ignore next */
      {
        cov_1a305own5h().b[0][1]++;
      }
      cov_1a305own5h().s[18]++;
      return response.json();
    }, 'submitVote'));
    /* istanbul ignore next */
    cov_1a305own5h().s[19]++;
    setIsSubmitting(false);
    /* istanbul ignore next */
    cov_1a305own5h().s[20]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_1a305own5h().b[5][0]++;
      cov_1a305own5h().s[21]++;
      return result.data;
    } else {
      /* istanbul ignore next */
      cov_1a305own5h().b[5][1]++;
      const errorMessage =
      /* istanbul ignore next */
      (cov_1a305own5h().s[22]++,
      /* istanbul ignore next */
      (cov_1a305own5h().b[6][0]++, result.error?.message) ||
      /* istanbul ignore next */
      (cov_1a305own5h().b[6][1]++, "투표 제출 중 오류가 발생했습니다."));
      /* istanbul ignore next */
      cov_1a305own5h().s[23]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_1a305own5h().s[24]++;
      console.error("[useVoteSubmit] 에러:", result.error);
      /* istanbul ignore next */
      cov_1a305own5h().s[25]++;
      return null;
    }
  };
  const clearError =
  /* istanbul ignore next */
  (cov_1a305own5h().s[26]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1a305own5h().f[4]++;
    cov_1a305own5h().s[27]++;
    setError(null);
  }, []));
  /* istanbul ignore next */
  cov_1a305own5h().s[28]++;
  return {
    submitVote,
    isSubmitting,
    error,
    clearError
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,