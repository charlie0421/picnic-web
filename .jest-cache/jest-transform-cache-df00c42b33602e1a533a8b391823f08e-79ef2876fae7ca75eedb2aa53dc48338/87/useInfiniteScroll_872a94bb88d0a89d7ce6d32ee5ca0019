6577894bd27f3a44b6c1b5b2b96103ae
"use strict";

/* istanbul ignore next */
function cov_2mz8roxnpf() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/hooks/useInfiniteScroll.ts";
  var hash = "eab34992e6f6dcf6e2ab8bff164d2e13a5c07a5f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/hooks/useInfiniteScroll.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 33
        }
      },
      "3": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "4": {
        start: {
          line: 13,
          column: 71
        },
        end: {
          line: 13,
          column: 78
        }
      },
      "5": {
        start: {
          line: 15,
          column: 30
        },
        end: {
          line: 23,
          column: 6
        }
      },
      "6": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "7": {
        start: {
          line: 25,
          column: 40
        },
        end: {
          line: 25,
          column: 64
        }
      },
      "8": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 27,
          column: 48
        }
      },
      "9": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 48
        }
      },
      "10": {
        start: {
          line: 29,
          column: 31
        },
        end: {
          line: 29,
          column: 55
        }
      },
      "11": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 102,
          column: 6
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "13": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 47
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 59
        }
      },
      "15": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 46,
          column: 16
        }
      },
      "16": {
        start: {
          line: 38,
          column: 26
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "17": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "18": {
        start: {
          line: 48,
          column: 29
        },
        end: {
          line: 50,
          column: 14
        }
      },
      "19": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "20": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 76
        }
      },
      "21": {
        start: {
          line: 54,
          column: 25
        },
        end: {
          line: 54,
          column: 46
        }
      },
      "22": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "23": {
        start: {
          line: 57,
          column: 40
        },
        end: {
          line: 57,
          column: 88
        }
      },
      "24": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 61,
          column: 23
        }
      },
      "25": {
        start: {
          line: 58,
          column: 33
        },
        end: {
          line: 61,
          column: 21
        }
      },
      "26": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 68,
          column: 24
        }
      },
      "27": {
        start: {
          line: 62,
          column: 34
        },
        end: {
          line: 68,
          column: 21
        }
      },
      "28": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 72,
          column: 17
        }
      },
      "29": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 51
        }
      },
      "30": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 34
        }
      },
      "31": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 65
        }
      },
      "32": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "33": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 23
        }
      },
      "34": {
        start: {
          line: 82,
          column: 33
        },
        end: {
          line: 82,
          column: 90
        }
      },
      "35": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 87,
          column: 20
        }
      },
      "36": {
        start: {
          line: 83,
          column: 30
        },
        end: {
          line: 87,
          column: 17
        }
      },
      "37": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 36
        }
      },
      "38": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 94,
          column: 20
        }
      },
      "39": {
        start: {
          line: 90,
          column: 30
        },
        end: {
          line: 94,
          column: 17
        }
      },
      "40": {
        start: {
          line: 104,
          column: 18
        },
        end: {
          line: 119,
          column: 6
        }
      },
      "41": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 113,
          column: 11
        }
      },
      "42": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 21
        }
      },
      "43": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 26
        }
      },
      "44": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 27
        }
      },
      "45": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 150,
          column: 7
        }
      },
      "46": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "47": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 19
        }
      },
      "48": {
        start: {
          line: 125,
          column: 25
        },
        end: {
          line: 125,
          column: 44
        }
      },
      "49": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "50": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 45
        }
      },
      "51": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 138,
          column: 11
        }
      },
      "52": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "53": {
        start: {
          line: 132,
          column: 33
        },
        end: {
          line: 132,
          column: 47
        }
      },
      "54": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 43
        }
      },
      "55": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 46
        }
      },
      "56": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 144,
          column: 10
        }
      },
      "57": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "58": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 49
        }
      },
      "59": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 154,
          column: 11
        }
      },
      "60": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 27
        }
      },
      "61": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 165,
          column: 11
        }
      },
      "62": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 164,
          column: 10
        }
      },
      "63": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 160,
          column: 13
        }
      },
      "64": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 49
        }
      },
      "65": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "66": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 51
        }
      },
      "67": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 179,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "useInfiniteScroll",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 26
          }
        },
        loc: {
          start: {
            line: 12,
            column: 36
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 46
          },
          end: {
            line: 31,
            column: 47
          }
        },
        loc: {
          start: {
            line: 31,
            column: 78
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 18
          }
        },
        loc: {
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 46,
            column: 13
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 25
          },
          end: {
            line: 58,
            column: 26
          }
        },
        loc: {
          start: {
            line: 58,
            column: 33
          },
          end: {
            line: 61,
            column: 21
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 62,
            column: 26
          }
        },
        loc: {
          start: {
            line: 62,
            column: 34
          },
          end: {
            line: 68,
            column: 21
          }
        },
        line: 62
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 83,
            column: 21
          },
          end: {
            line: 83,
            column: 22
          }
        },
        loc: {
          start: {
            line: 83,
            column: 30
          },
          end: {
            line: 87,
            column: 17
          }
        },
        line: 83
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 90,
            column: 21
          },
          end: {
            line: 90,
            column: 22
          }
        },
        loc: {
          start: {
            line: 90,
            column: 30
          },
          end: {
            line: 94,
            column: 17
          }
        },
        line: 90
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 104,
            column: 42
          },
          end: {
            line: 104,
            column: 43
          }
        },
        loc: {
          start: {
            line: 104,
            column: 46
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 104
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 121,
            column: 26
          },
          end: {
            line: 121,
            column: 27
          }
        },
        loc: {
          start: {
            line: 121,
            column: 30
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 121
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 130,
            column: 55
          },
          end: {
            line: 130,
            column: 56
          }
        },
        loc: {
          start: {
            line: 130,
            column: 66
          },
          end: {
            line: 135,
            column: 9
          }
        },
        line: 130
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 140,
            column: 15
          },
          end: {
            line: 140,
            column: 16
          }
        },
        loc: {
          start: {
            line: 140,
            column: 19
          },
          end: {
            line: 144,
            column: 9
          }
        },
        line: 140
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 152,
            column: 26
          },
          end: {
            line: 152,
            column: 27
          }
        },
        loc: {
          start: {
            line: 152,
            column: 30
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 152
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 156,
            column: 26
          },
          end: {
            line: 156,
            column: 27
          }
        },
        loc: {
          start: {
            line: 156,
            column: 30
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 156
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 157,
            column: 15
          },
          end: {
            line: 157,
            column: 16
          }
        },
        loc: {
          start: {
            line: 157,
            column: 19
          },
          end: {
            line: 164,
            column: 9
          }
        },
        line: 157
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 13,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 33
          },
          end: {
            line: 13,
            column: 35
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 62
          },
          end: {
            line: 31,
            column: 75
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 70
          },
          end: {
            line: 31,
            column: 75
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 19
          },
          end: {
            line: 44,
            column: 17
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 42,
            column: 17
          }
        }, {
          start: {
            line: 42,
            column: 20
          },
          end: {
            line: 44,
            column: 17
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        }, {
          start: {
            line: 74,
            column: 19
          },
          end: {
            line: 76,
            column: 13
          }
        }],
        line: 55
      },
      "6": {
        loc: {
          start: {
            line: 57,
            column: 40
          },
          end: {
            line: 57,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 52
          },
          end: {
            line: 57,
            column: 76
          }
        }, {
          start: {
            line: 57,
            column: 79
          },
          end: {
            line: 57,
            column: 88
          }
        }],
        line: 57
      },
      "7": {
        loc: {
          start: {
            line: 58,
            column: 33
          },
          end: {
            line: 61,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 41
          },
          end: {
            line: 58,
            column: 56
          }
        }, {
          start: {
            line: 58,
            column: 59
          },
          end: {
            line: 61,
            column: 21
          }
        }],
        line: 58
      },
      "8": {
        loc: {
          start: {
            line: 67,
            column: 30
          },
          end: {
            line: 67,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 38
          },
          end: {
            line: 67,
            column: 39
          }
        }, {
          start: {
            line: 67,
            column: 42
          },
          end: {
            line: 67,
            column: 49
          }
        }],
        line: 67
      },
      "9": {
        loc: {
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 72,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 72,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "10": {
        loc: {
          start: {
            line: 75,
            column: 32
          },
          end: {
            line: 75,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 32
          },
          end: {
            line: 75,
            column: 42
          }
        }, {
          start: {
            line: 75,
            column: 46
          },
          end: {
            line: 75,
            column: 63
          }
        }],
        line: 75
      },
      "11": {
        loc: {
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "12": {
        loc: {
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 79,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 79,
            column: 36
          }
        }, {
          start: {
            line: 79,
            column: 40
          },
          end: {
            line: 79,
            column: 65
          }
        }],
        line: 79
      },
      "13": {
        loc: {
          start: {
            line: 82,
            column: 33
          },
          end: {
            line: 82,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 56
          },
          end: {
            line: 82,
            column: 67
          }
        }, {
          start: {
            line: 82,
            column: 70
          },
          end: {
            line: 82,
            column: 90
          }
        }],
        line: 82
      },
      "14": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "15": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 122,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 122,
            column: 32
          }
        }, {
          start: {
            line: 122,
            column: 36
          },
          end: {
            line: 122,
            column: 50
          }
        }, {
          start: {
            line: 122,
            column: 54
          },
          end: {
            line: 122,
            column: 73
          }
        }],
        line: 122
      },
      "16": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "17": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "18": {
        loc: {
          start: {
            line: 131,
            column: 16
          },
          end: {
            line: 131,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 16
          },
          end: {
            line: 131,
            column: 41
          }
        }, {
          start: {
            line: 131,
            column: 45
          },
          end: {
            line: 131,
            column: 58
          }
        }, {
          start: {
            line: 131,
            column: 62
          },
          end: {
            line: 131,
            column: 82
          }
        }],
        line: 131
      },
      "19": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "20": {
        loc: {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "21": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "22": {
        loc: {
          start: {
            line: 177,
            column: 17
          },
          end: {
            line: 177,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 17
          },
          end: {
            line: 177,
            column: 33
          }
        }, {
          start: {
            line: 177,
            column: 37
          },
          end: {
            line: 177,
            column: 57
          }
        }, {
          start: {
            line: 177,
            column: 61
          },
          end: {
            line: 177,
            column: 79
          }
        }, {
          start: {
            line: 177,
            column: 83
          },
          end: {
            line: 177,
            column: 95
          }
        }],
        line: 177
      },
      "23": {
        loc: {
          start: {
            line: 178,
            column: 20
          },
          end: {
            line: 178,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 20
          },
          end: {
            line: 178,
            column: 36
          }
        }, {
          start: {
            line: 178,
            column: 40
          },
          end: {
            line: 178,
            column: 60
          }
        }, {
          start: {
            line: 178,
            column: 64
          },
          end: {
            line: 178,
            column: 78
          }
        }, {
          start: {
            line: 178,
            column: 82
          },
          end: {
            line: 178,
            column: 98
          }
        }],
        line: 178
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0, 0],
      "23": [0, 0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/hooks/useInfiniteScroll.ts"],
      sourcesContent: ["import { useState, useEffect, useCallback, useRef } from 'react';\nimport type { InfiniteScrollState, BaseResponse } from '@/types/mypage-common';\n\ninterface UseInfiniteScrollOptions<T> {\n  apiEndpoint: string;\n  limit?: number;\n  onSuccess?: (data: BaseResponse<T>) => void;\n  onError?: (error: string) => void;\n  transform?: (data: any) => T;\n}\n\nexport function useInfiniteScroll<T>(options: UseInfiniteScrollOptions<T>) {\n  const { apiEndpoint, limit = 10, onSuccess, onError, transform } = options;\n\n  // \uC0C1\uD0DC \uAD00\uB9AC\n  const [state, setState] = useState<InfiniteScrollState>({\n    page: 1,\n    isLoading: false,\n    hasMore: false,\n    isLoadingMore: false,\n    isInitialLoad: true,\n    error: null,\n    totalCount: 0\n  });\n\n  const [items, setItems] = useState<T[]>([]);\n  const [statistics, setStatistics] = useState<any>({});\n\n  // Refs\n  const sentinelRef = useRef<HTMLDivElement>(null);\n  const observerRef = useRef<IntersectionObserver | null>(null);\n  const abortControllerRef = useRef<AbortController | null>(null);\n\n  // \uB370\uC774\uD130 \uD328\uCE58 \uD568\uC218\n  const fetchData = useCallback(async (pageNum: number, reset: boolean = false) => {\n    // \uC774\uC804 \uC694\uCCAD \uCDE8\uC18C\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n    }\n    \n    // \uC0C8\uB85C\uC6B4 AbortController \uC0DD\uC131\n    abortControllerRef.current = new AbortController();\n    \n    setState(prev => ({\n      ...prev,\n      ...(reset ? { isLoading: true } : { isLoadingMore: true }),\n      error: null\n    }));\n\n    try {\n      const response = await fetch(`${apiEndpoint}?page=${pageNum}&limit=${limit}`, {\n        signal: abortControllerRef.current.signal\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: \uB370\uC774\uD130 \uC870\uD68C\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.`);\n      }\n\n      const data: BaseResponse<T> = await response.json();\n\n      if (data.success) {\n        // \uB370\uC774\uD130 \uBCC0\uD658 \uC801\uC6A9\n        const transformedData = transform \n          ? data.data.map(transform)\n          : data.data;\n\n        setItems(prev => reset ? transformedData : [...prev, ...transformedData]);\n        \n        setState(prev => ({\n          ...prev,\n          totalCount: data.pagination.totalCount,\n          hasMore: data.pagination.hasNext,\n          isInitialLoad: false,\n          page: reset ? 1 : pageNum\n        }));\n\n        // \uD1B5\uACC4 \uB370\uC774\uD130\uAC00 \uC788\uC73C\uBA74 \uC124\uC815\n        if ('statistics' in data) {\n          setStatistics((data as any).statistics);\n        }\n\n        onSuccess?.(data);\n      } else {\n        throw new Error(data.error || '\uB370\uC774\uD130 \uC870\uD68C\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.');\n      }\n    } catch (err) {\n      // AbortError\uB294 \uBB34\uC2DC\n      if (err instanceof Error && err.name === 'AbortError') {\n        return;\n      }\n      \n      const errorMessage = err instanceof Error ? err.message : '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.';\n      setState(prev => ({\n        ...prev,\n        error: errorMessage,\n        isInitialLoad: false\n      }));\n      \n      onError?.(errorMessage);\n    } finally {\n      setState(prev => ({\n        ...prev,\n        isLoading: false,\n        isLoadingMore: false\n      }));\n    }\n  }, [apiEndpoint, limit, transform, onSuccess, onError]);\n\n  // \uC7AC\uC2DC\uB3C4 \uD568\uC218\n  const retry = useCallback(() => {\n    setState({\n      page: 1,\n      isLoading: false,\n      hasMore: false,\n      isLoadingMore: false,\n      isInitialLoad: true,\n      error: null,\n      totalCount: 0\n    });\n    setItems([]);\n    setStatistics({});\n    fetchData(1, true);\n  }, [fetchData]);\n\n  // \uBB34\uD55C \uC2A4\uD06C\uB864 \uCC98\uB9AC\n  useEffect(() => {\n    if (!sentinelRef.current || !state.hasMore || state.isLoadingMore) {\n      return;\n    }\n\n    const sentinel = sentinelRef.current;\n    \n    // \uAE30\uC874 observer \uC815\uB9AC\n    if (observerRef.current) {\n      observerRef.current.disconnect();\n    }\n    \n    observerRef.current = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting && state.hasMore && !state.isLoadingMore) {\n          const nextPage = state.page + 1;\n          fetchData(nextPage, false);\n        }\n      },\n      { threshold: 0.1, rootMargin: '100px' }\n    );\n\n    observerRef.current.observe(sentinel);\n\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n    };\n  }, [state.hasMore, state.isLoadingMore, state.page, fetchData]);\n\n  // \uCD08\uAE30 \uB370\uC774\uD130 \uB85C\uB4DC\n  useEffect(() => {\n    fetchData(1, true);\n  }, []);\n\n  // \uCEF4\uD3EC\uB10C\uD2B8 \uC5B8\uB9C8\uC6B4\uD2B8 \uC2DC \uC815\uB9AC\n  useEffect(() => {\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n      if (abortControllerRef.current) {\n        abortControllerRef.current.abort();\n      }\n    };\n  }, []);\n\n  return {\n    // \uC0C1\uD0DC\n    ...state,\n    items,\n    statistics,\n    \n    // Refs\n    sentinelRef,\n    \n    // \uD568\uC218\uB4E4\n    retry,\n    fetchData,\n    \n    // \uD3B8\uC758 \uD568\uC218\uB4E4\n    isEmpty: !state.isLoading && !state.isInitialLoad && items.length === 0 && !state.error,\n    isLastPage: !state.isLoading && !state.isInitialLoad && !state.hasMore && items.length > 0\n  };\n} "],
      names: ["useInfiniteScroll", "options", "apiEndpoint", "limit", "onSuccess", "onError", "transform", "state", "setState", "useState", "page", "isLoading", "hasMore", "isLoadingMore", "isInitialLoad", "error", "totalCount", "items", "setItems", "statistics", "setStatistics", "sentinelRef", "useRef", "observerRef", "abortControllerRef", "fetchData", "useCallback", "pageNum", "reset", "current", "abort", "AbortController", "prev", "response", "fetch", "signal", "ok", "Error", "status", "data", "json", "success", "transformedData", "map", "pagination", "hasNext", "err", "name", "errorMessage", "message", "retry", "useEffect", "sentinel", "disconnect", "IntersectionObserver", "entries", "isIntersecting", "nextPage", "threshold", "rootMargin", "observe", "isEmpty", "length", "isLastPage"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "eab34992e6f6dcf6e2ab8bff164d2e13a5c07a5f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2mz8roxnpf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2mz8roxnpf();
cov_2mz8roxnpf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2mz8roxnpf().s[1]++;
Object.defineProperty(exports, "useInfiniteScroll", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2mz8roxnpf().f[0]++;
    cov_2mz8roxnpf().s[2]++;
    return useInfiniteScroll;
  }
});
const _react =
/* istanbul ignore next */
(cov_2mz8roxnpf().s[3]++, require("react"));
function useInfiniteScroll(options) {
  /* istanbul ignore next */
  cov_2mz8roxnpf().f[1]++;
  const {
    apiEndpoint,
    limit =
    /* istanbul ignore next */
    (cov_2mz8roxnpf().b[0][0]++, 10),
    onSuccess,
    onError,
    transform
  } =
  /* istanbul ignore next */
  (cov_2mz8roxnpf().s[4]++, options);
  // 상태 관리
  const [state, setState] =
  /* istanbul ignore next */
  (cov_2mz8roxnpf().s[5]++, (0, _react.useState)({
    page: 1,
    isLoading: false,
    hasMore: false,
    isLoadingMore: false,
    isInitialLoad: true,
    error: null,
    totalCount: 0
  }));
  const [items, setItems] =
  /* istanbul ignore next */
  (cov_2mz8roxnpf().s[6]++, (0, _react.useState)([]));
  const [statistics, setStatistics] =
  /* istanbul ignore next */
  (cov_2mz8roxnpf().s[7]++, (0, _react.useState)({}));
  // Refs
  const sentinelRef =
  /* istanbul ignore next */
  (cov_2mz8roxnpf().s[8]++, (0, _react.useRef)(null));
  const observerRef =
  /* istanbul ignore next */
  (cov_2mz8roxnpf().s[9]++, (0, _react.useRef)(null));
  const abortControllerRef =
  /* istanbul ignore next */
  (cov_2mz8roxnpf().s[10]++, (0, _react.useRef)(null));
  // 데이터 패치 함수
  const fetchData =
  /* istanbul ignore next */
  (cov_2mz8roxnpf().s[11]++, (0, _react.useCallback)(async (pageNum, reset =
  /* istanbul ignore next */
  (cov_2mz8roxnpf().b[1][0]++, false)) => {
    /* istanbul ignore next */
    cov_2mz8roxnpf().f[2]++;
    cov_2mz8roxnpf().s[12]++;
    // 이전 요청 취소
    if (abortControllerRef.current) {
      /* istanbul ignore next */
      cov_2mz8roxnpf().b[2][0]++;
      cov_2mz8roxnpf().s[13]++;
      abortControllerRef.current.abort();
    } else
    /* istanbul ignore next */
    {
      cov_2mz8roxnpf().b[2][1]++;
    }
    // 새로운 AbortController 생성
    cov_2mz8roxnpf().s[14]++;
    abortControllerRef.current = new AbortController();
    /* istanbul ignore next */
    cov_2mz8roxnpf().s[15]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2mz8roxnpf().f[3]++;
      cov_2mz8roxnpf().s[16]++;
      return {
        ...prev,
        ...(reset ?
        /* istanbul ignore next */
        (cov_2mz8roxnpf().b[3][0]++, {
          isLoading: true
        }) :
        /* istanbul ignore next */
        (cov_2mz8roxnpf().b[3][1]++, {
          isLoadingMore: true
        })),
        error: null
      };
    });
    /* istanbul ignore next */
    cov_2mz8roxnpf().s[17]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2mz8roxnpf().s[18]++, await fetch(`${apiEndpoint}?page=${pageNum}&limit=${limit}`, {
        signal: abortControllerRef.current.signal
      }));
      /* istanbul ignore next */
      cov_2mz8roxnpf().s[19]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2mz8roxnpf().b[4][0]++;
        cov_2mz8roxnpf().s[20]++;
        throw new Error(`HTTP ${response.status}: 데이터 조회에 실패했습니다.`);
      } else
      /* istanbul ignore next */
      {
        cov_2mz8roxnpf().b[4][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_2mz8roxnpf().s[21]++, await response.json());
      /* istanbul ignore next */
      cov_2mz8roxnpf().s[22]++;
      if (data.success) {
        /* istanbul ignore next */
        cov_2mz8roxnpf().b[5][0]++;
        // 데이터 변환 적용
        const transformedData =
        /* istanbul ignore next */
        (cov_2mz8roxnpf().s[23]++, transform ?
        /* istanbul ignore next */
        (cov_2mz8roxnpf().b[6][0]++, data.data.map(transform)) :
        /* istanbul ignore next */
        (cov_2mz8roxnpf().b[6][1]++, data.data));
        /* istanbul ignore next */
        cov_2mz8roxnpf().s[24]++;
        setItems(prev => {
          /* istanbul ignore next */
          cov_2mz8roxnpf().f[4]++;
          cov_2mz8roxnpf().s[25]++;
          return reset ?
          /* istanbul ignore next */
          (cov_2mz8roxnpf().b[7][0]++, transformedData) :
          /* istanbul ignore next */
          (cov_2mz8roxnpf().b[7][1]++, [...prev, ...transformedData]);
        });
        /* istanbul ignore next */
        cov_2mz8roxnpf().s[26]++;
        setState(prev => {
          /* istanbul ignore next */
          cov_2mz8roxnpf().f[5]++;
          cov_2mz8roxnpf().s[27]++;
          return {
            ...prev,
            totalCount: data.pagination.totalCount,
            hasMore: data.pagination.hasNext,
            isInitialLoad: false,
            page: reset ?
            /* istanbul ignore next */
            (cov_2mz8roxnpf().b[8][0]++, 1) :
            /* istanbul ignore next */
            (cov_2mz8roxnpf().b[8][1]++, pageNum)
          };
        });
        // 통계 데이터가 있으면 설정
        /* istanbul ignore next */
        cov_2mz8roxnpf().s[28]++;
        if ('statistics' in data) {
          /* istanbul ignore next */
          cov_2mz8roxnpf().b[9][0]++;
          cov_2mz8roxnpf().s[29]++;
          setStatistics(data.statistics);
        } else
        /* istanbul ignore next */
        {
          cov_2mz8roxnpf().b[9][1]++;
        }
        cov_2mz8roxnpf().s[30]++;
        onSuccess?.(data);
      } else {
        /* istanbul ignore next */
        cov_2mz8roxnpf().b[5][1]++;
        cov_2mz8roxnpf().s[31]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_2mz8roxnpf().b[10][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_2mz8roxnpf().b[10][1]++, '데이터 조회에 실패했습니다.'));
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_2mz8roxnpf().s[32]++;
      // AbortError는 무시
      if (
      /* istanbul ignore next */
      (cov_2mz8roxnpf().b[12][0]++, err instanceof Error) &&
      /* istanbul ignore next */
      (cov_2mz8roxnpf().b[12][1]++, err.name === 'AbortError')) {
        /* istanbul ignore next */
        cov_2mz8roxnpf().b[11][0]++;
        cov_2mz8roxnpf().s[33]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2mz8roxnpf().b[11][1]++;
      }
      const errorMessage =
      /* istanbul ignore next */
      (cov_2mz8roxnpf().s[34]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_2mz8roxnpf().b[13][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2mz8roxnpf().b[13][1]++, '알 수 없는 오류가 발생했습니다.'));
      /* istanbul ignore next */
      cov_2mz8roxnpf().s[35]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_2mz8roxnpf().f[6]++;
        cov_2mz8roxnpf().s[36]++;
        return {
          ...prev,
          error: errorMessage,
          isInitialLoad: false
        };
      });
      /* istanbul ignore next */
      cov_2mz8roxnpf().s[37]++;
      onError?.(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_2mz8roxnpf().s[38]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_2mz8roxnpf().f[7]++;
        cov_2mz8roxnpf().s[39]++;
        return {
          ...prev,
          isLoading: false,
          isLoadingMore: false
        };
      });
    }
  }, [apiEndpoint, limit, transform, onSuccess, onError]));
  // 재시도 함수
  const retry =
  /* istanbul ignore next */
  (cov_2mz8roxnpf().s[40]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2mz8roxnpf().f[8]++;
    cov_2mz8roxnpf().s[41]++;
    setState({
      page: 1,
      isLoading: false,
      hasMore: false,
      isLoadingMore: false,
      isInitialLoad: true,
      error: null,
      totalCount: 0
    });
    /* istanbul ignore next */
    cov_2mz8roxnpf().s[42]++;
    setItems([]);
    /* istanbul ignore next */
    cov_2mz8roxnpf().s[43]++;
    setStatistics({});
    /* istanbul ignore next */
    cov_2mz8roxnpf().s[44]++;
    fetchData(1, true);
  }, [fetchData]));
  // 무한 스크롤 처리
  /* istanbul ignore next */
  cov_2mz8roxnpf().s[45]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2mz8roxnpf().f[9]++;
    cov_2mz8roxnpf().s[46]++;
    if (
    /* istanbul ignore next */
    (cov_2mz8roxnpf().b[15][0]++, !sentinelRef.current) ||
    /* istanbul ignore next */
    (cov_2mz8roxnpf().b[15][1]++, !state.hasMore) ||
    /* istanbul ignore next */
    (cov_2mz8roxnpf().b[15][2]++, state.isLoadingMore)) {
      /* istanbul ignore next */
      cov_2mz8roxnpf().b[14][0]++;
      cov_2mz8roxnpf().s[47]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2mz8roxnpf().b[14][1]++;
    }
    const sentinel =
    /* istanbul ignore next */
    (cov_2mz8roxnpf().s[48]++, sentinelRef.current);
    // 기존 observer 정리
    /* istanbul ignore next */
    cov_2mz8roxnpf().s[49]++;
    if (observerRef.current) {
      /* istanbul ignore next */
      cov_2mz8roxnpf().b[16][0]++;
      cov_2mz8roxnpf().s[50]++;
      observerRef.current.disconnect();
    } else
    /* istanbul ignore next */
    {
      cov_2mz8roxnpf().b[16][1]++;
    }
    cov_2mz8roxnpf().s[51]++;
    observerRef.current = new IntersectionObserver(entries => {
      /* istanbul ignore next */
      cov_2mz8roxnpf().f[10]++;
      cov_2mz8roxnpf().s[52]++;
      if (
      /* istanbul ignore next */
      (cov_2mz8roxnpf().b[18][0]++, entries[0].isIntersecting) &&
      /* istanbul ignore next */
      (cov_2mz8roxnpf().b[18][1]++, state.hasMore) &&
      /* istanbul ignore next */
      (cov_2mz8roxnpf().b[18][2]++, !state.isLoadingMore)) {
        /* istanbul ignore next */
        cov_2mz8roxnpf().b[17][0]++;
        const nextPage =
        /* istanbul ignore next */
        (cov_2mz8roxnpf().s[53]++, state.page + 1);
        /* istanbul ignore next */
        cov_2mz8roxnpf().s[54]++;
        fetchData(nextPage, false);
      } else
      /* istanbul ignore next */
      {
        cov_2mz8roxnpf().b[17][1]++;
      }
    }, {
      threshold: 0.1,
      rootMargin: '100px'
    });
    /* istanbul ignore next */
    cov_2mz8roxnpf().s[55]++;
    observerRef.current.observe(sentinel);
    /* istanbul ignore next */
    cov_2mz8roxnpf().s[56]++;
    return () => {
      /* istanbul ignore next */
      cov_2mz8roxnpf().f[11]++;
      cov_2mz8roxnpf().s[57]++;
      if (observerRef.current) {
        /* istanbul ignore next */
        cov_2mz8roxnpf().b[19][0]++;
        cov_2mz8roxnpf().s[58]++;
        observerRef.current.disconnect();
      } else
      /* istanbul ignore next */
      {
        cov_2mz8roxnpf().b[19][1]++;
      }
    };
  }, [state.hasMore, state.isLoadingMore, state.page, fetchData]);
  // 초기 데이터 로드
  /* istanbul ignore next */
  cov_2mz8roxnpf().s[59]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2mz8roxnpf().f[12]++;
    cov_2mz8roxnpf().s[60]++;
    fetchData(1, true);
  }, []);
  // 컴포넌트 언마운트 시 정리
  /* istanbul ignore next */
  cov_2mz8roxnpf().s[61]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2mz8roxnpf().f[13]++;
    cov_2mz8roxnpf().s[62]++;
    return () => {
      /* istanbul ignore next */
      cov_2mz8roxnpf().f[14]++;
      cov_2mz8roxnpf().s[63]++;
      if (observerRef.current) {
        /* istanbul ignore next */
        cov_2mz8roxnpf().b[20][0]++;
        cov_2mz8roxnpf().s[64]++;
        observerRef.current.disconnect();
      } else
      /* istanbul ignore next */
      {
        cov_2mz8roxnpf().b[20][1]++;
      }
      cov_2mz8roxnpf().s[65]++;
      if (abortControllerRef.current) {
        /* istanbul ignore next */
        cov_2mz8roxnpf().b[21][0]++;
        cov_2mz8roxnpf().s[66]++;
        abortControllerRef.current.abort();
      } else
      /* istanbul ignore next */
      {
        cov_2mz8roxnpf().b[21][1]++;
      }
    };
  }, []);
  /* istanbul ignore next */
  cov_2mz8roxnpf().s[67]++;
  return {
    // 상태
    ...state,
    items,
    statistics,
    // Refs
    sentinelRef,
    // 함수들
    retry,
    fetchData,
    // 편의 함수들
    isEmpty:
    /* istanbul ignore next */
    (cov_2mz8roxnpf().b[22][0]++, !state.isLoading) &&
    /* istanbul ignore next */
    (cov_2mz8roxnpf().b[22][1]++, !state.isInitialLoad) &&
    /* istanbul ignore next */
    (cov_2mz8roxnpf().b[22][2]++, items.length === 0) &&
    /* istanbul ignore next */
    (cov_2mz8roxnpf().b[22][3]++, !state.error),
    isLastPage:
    /* istanbul ignore next */
    (cov_2mz8roxnpf().b[23][0]++, !state.isLoading) &&
    /* istanbul ignore next */
    (cov_2mz8roxnpf().b[23][1]++, !state.isInitialLoad) &&
    /* istanbul ignore next */
    (cov_2mz8roxnpf().b[23][2]++, !state.hasMore) &&
    /* istanbul ignore next */
    (cov_2mz8roxnpf().b[23][3]++, items.length > 0)
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,