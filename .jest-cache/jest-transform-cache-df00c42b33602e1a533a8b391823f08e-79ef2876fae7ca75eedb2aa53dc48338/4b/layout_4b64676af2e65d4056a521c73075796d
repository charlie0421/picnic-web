3629e50983f3ab9fa3f73c15474e491c
"use strict";

/* istanbul ignore next */
function cov_2fkvm6t77c() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/app/layout.tsx";
  var hash = "5d5848c91b6fbfe79a1eee71d5bbe7efefbca534";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/app/layout.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 26
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 40
        }
      },
      "8": {
        start: {
          line: 21,
          column: 17
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "9": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 27,
          column: 53
        }
      },
      "10": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 84
        }
      },
      "11": {
        start: {
          line: 30,
          column: 26
        },
        end: {
          line: 30,
          column: 65
        }
      },
      "12": {
        start: {
          line: 31,
          column: 24
        },
        end: {
          line: 31,
          column: 63
        }
      },
      "13": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 37,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 14
          },
          end: {
            line: 15,
            column: 15
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "RootLayout",
        decl: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 25
          }
        },
        loc: {
          start: {
            line: 25,
            column: 40
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 21
          },
          end: {
            line: 28,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 21
          },
          end: {
            line: 28,
            column: 50
          }
        }, {
          start: {
            line: 28,
            column: 54
          },
          end: {
            line: 28,
            column: 78
          }
        }, {
          start: {
            line: 28,
            column: 82
          },
          end: {
            line: 28,
            column: 84
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 40
          },
          end: {
            line: 31,
            column: 56
          }
        }, {
          start: {
            line: 31,
            column: 59
          },
          end: {
            line: 31,
            column: 63
          }
        }],
        line: 31
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/app/layout.tsx"],
      sourcesContent: ["import type { Metadata } from 'next'\nimport { headers } from 'next/headers'\n\nexport const metadata: Metadata = {\n  title: 'Picnic',\n  description: 'Picnic - Your favorite voting platform',\n}\n\nexport default async function RootLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  // \uD604\uC7AC \uACBD\uB85C\uC5D0\uC11C \uC5B8\uC5B4 \uAC10\uC9C0\n  const headersList = await headers()\n  const pathname = headersList.get('x-pathname') || headersList.get('x-url') || ''\n  \n  // \uACBD\uB85C\uC5D0\uC11C \uC5B8\uC5B4 \uCD94\uCD9C (\uC608: /ko, /en, /ja \uB4F1)\n  const languageMatch = pathname.match(/^\\/([a-z]{2})(?:\\/|$)/)\n  const currentLang = languageMatch ? languageMatch[1] : 'ko'\n\n  return (\n    <html lang={currentLang}>\n      <body>\n        {children}\n      </body>\n    </html>\n  )\n} "],
      names: ["RootLayout", "metadata", "title", "description", "children", "headersList", "headers", "pathname", "get", "languageMatch", "match", "currentLang", "html", "lang", "body"],
      mappings: ";;;;;;;;;;;IAQA,OAoBC;eApB6BA;;IALjBC,QAAQ;eAARA;;;;yBAFW;AAEjB,MAAMA,WAAqB;IAChCC,OAAO;IACPC,aAAa;AACf;AAEe,eAAeH,WAAW,EACvCI,QAAQ,EAGT;IACC,gBAAgB;IAChB,MAAMC,cAAc,MAAMC,IAAAA,gBAAO;IACjC,MAAMC,WAAWF,YAAYG,GAAG,CAAC,iBAAiBH,YAAYG,GAAG,CAAC,YAAY;IAE9E,kCAAkC;IAClC,MAAMC,gBAAgBF,SAASG,KAAK,CAAC;IACrC,MAAMC,cAAcF,gBAAgBA,aAAa,CAAC,EAAE,GAAG;IAEvD,qBACE,qBAACG;QAAKC,MAAMF;kBACV,cAAA,qBAACG;sBACEV;;;AAIT"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5d5848c91b6fbfe79a1eee71d5bbe7efefbca534"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fkvm6t77c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2fkvm6t77c();
cov_2fkvm6t77c().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2fkvm6t77c().f[0]++;
  cov_2fkvm6t77c().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2fkvm6t77c().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2fkvm6t77c().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_2fkvm6t77c().f[1]++;
    cov_2fkvm6t77c().s[4]++;
    return RootLayout;
  },
  metadata: function () {
    /* istanbul ignore next */
    cov_2fkvm6t77c().f[2]++;
    cov_2fkvm6t77c().s[5]++;
    return metadata;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2fkvm6t77c().s[6]++, require("react/jsx-runtime"));
const _headers =
/* istanbul ignore next */
(cov_2fkvm6t77c().s[7]++, require("next/headers"));
const metadata =
/* istanbul ignore next */
(cov_2fkvm6t77c().s[8]++, {
  title: 'Picnic',
  description: 'Picnic - Your favorite voting platform'
});
async function RootLayout({
  children
}) {
  /* istanbul ignore next */
  cov_2fkvm6t77c().f[3]++;
  // 현재 경로에서 언어 감지
  const headersList =
  /* istanbul ignore next */
  (cov_2fkvm6t77c().s[9]++, await (0, _headers.headers)());
  const pathname =
  /* istanbul ignore next */
  (cov_2fkvm6t77c().s[10]++,
  /* istanbul ignore next */
  (cov_2fkvm6t77c().b[0][0]++, headersList.get('x-pathname')) ||
  /* istanbul ignore next */
  (cov_2fkvm6t77c().b[0][1]++, headersList.get('x-url')) ||
  /* istanbul ignore next */
  (cov_2fkvm6t77c().b[0][2]++, ''));
  // 경로에서 언어 추출 (예: /ko, /en, /ja 등)
  const languageMatch =
  /* istanbul ignore next */
  (cov_2fkvm6t77c().s[11]++, pathname.match(/^\/([a-z]{2})(?:\/|$)/));
  const currentLang =
  /* istanbul ignore next */
  (cov_2fkvm6t77c().s[12]++, languageMatch ?
  /* istanbul ignore next */
  (cov_2fkvm6t77c().b[1][0]++, languageMatch[1]) :
  /* istanbul ignore next */
  (cov_2fkvm6t77c().b[1][1]++, 'ko'));
  /* istanbul ignore next */
  cov_2fkvm6t77c().s[13]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("html", {
    lang: currentLang,
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("body", {
      children: children
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZWZhdWx0IiwiY292XzJma3ZtNnQ3N2MiLCJmIiwicyIsIlJvb3RMYXlvdXQiLCJtZXRhZGF0YSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJjaGlsZHJlbiIsImhlYWRlcnNMaXN0IiwiX2hlYWRlcnMiLCJoZWFkZXJzIiwicGF0aG5hbWUiLCJiIiwiZ2V0IiwibGFuZ3VhZ2VNYXRjaCIsIm1hdGNoIiwiY3VycmVudExhbmciLCJfanN4cnVudGltZSIsImpzeCIsImxhbmciXSwic291cmNlcyI6WyIvVXNlcnMvY2hlb2xoeXVuL1JlcG9zaXRvcmllcy9waWNuaWMtd2ViL2FwcC9sYXlvdXQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTWV0YWRhdGEgfSBmcm9tICduZXh0J1xuaW1wb3J0IHsgaGVhZGVycyB9IGZyb20gJ25leHQvaGVhZGVycydcblxuZXhwb3J0IGNvbnN0IG1ldGFkYXRhOiBNZXRhZGF0YSA9IHtcbiAgdGl0bGU6ICdQaWNuaWMnLFxuICBkZXNjcmlwdGlvbjogJ1BpY25pYyAtIFlvdXIgZmF2b3JpdGUgdm90aW5nIHBsYXRmb3JtJyxcbn1cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gUm9vdExheW91dCh7XG4gIGNoaWxkcmVuLFxufToge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlXG59KSB7XG4gIC8vIO2YhOyerCDqsr3roZzsl5DshJwg7Ja47Ja0IOqwkOyngFxuICBjb25zdCBoZWFkZXJzTGlzdCA9IGF3YWl0IGhlYWRlcnMoKVxuICBjb25zdCBwYXRobmFtZSA9IGhlYWRlcnNMaXN0LmdldCgneC1wYXRobmFtZScpIHx8IGhlYWRlcnNMaXN0LmdldCgneC11cmwnKSB8fCAnJ1xuICBcbiAgLy8g6rK966Gc7JeQ7IScIOyWuOyWtCDstpTstpwgKOyYiDogL2tvLCAvZW4sIC9qYSDrk7EpXG4gIGNvbnN0IGxhbmd1YWdlTWF0Y2ggPSBwYXRobmFtZS5tYXRjaCgvXlxcLyhbYS16XXsyfSkoPzpcXC98JCkvKVxuICBjb25zdCBjdXJyZW50TGFuZyA9IGxhbmd1YWdlTWF0Y2ggPyBsYW5ndWFnZU1hdGNoWzFdIDogJ2tvJ1xuXG4gIHJldHVybiAoXG4gICAgPGh0bWwgbGFuZz17Y3VycmVudExhbmd9PlxuICAgICAgPGJvZHk+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvYm9keT5cbiAgICA8L2h0bWw+XG4gIClcbn0gIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBUUFBLE9Bb0JDLFdBQUFBLENBQUE7SUFBQTtJQUFBQyxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO1dBcEI2QkMsVUFBQTs7RUFMakJDLFFBQVEsV0FBQUEsQ0FBQTtJQUFBO0lBQUFKLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7V0FBUkUsUUFBQTs7Ozs7Ozs7a0NBRlc7QUFFakIsTUFBTUEsUUFBQTtBQUFBO0FBQUEsQ0FBQUosY0FBQSxHQUFBRSxDQUFBLE9BQXFCO0VBQ2hDRyxLQUFBLEVBQU87RUFDUEMsV0FBQSxFQUFhO0FBQ2Y7QUFFZSxlQUFlSCxXQUFXO0VBQ3ZDSTtBQUFRLENBR1Q7RUFBQTtFQUFBUCxjQUFBLEdBQUFDLENBQUE7RUFDQztFQUNBLE1BQU1PLFdBQUE7RUFBQTtFQUFBLENBQUFSLGNBQUEsR0FBQUUsQ0FBQSxPQUFjLE1BQU0sSUFBQU8sUUFBQSxDQUFBQyxPQUFPO0VBQ2pDLE1BQU1DLFFBQUE7RUFBQTtFQUFBLENBQUFYLGNBQUEsR0FBQUUsQ0FBQTtFQUFXO0VBQUEsQ0FBQUYsY0FBQSxHQUFBWSxDQUFBLFVBQUFKLFdBQUEsQ0FBWUssR0FBRyxDQUFDO0VBQUE7RUFBQSxDQUFBYixjQUFBLEdBQUFZLENBQUEsVUFBaUJKLFdBQUEsQ0FBWUssR0FBRyxDQUFDO0VBQUE7RUFBQSxDQUFBYixjQUFBLEdBQUFZLENBQUEsVUFBWTtFQUU5RTtFQUNBLE1BQU1FLGFBQUE7RUFBQTtFQUFBLENBQUFkLGNBQUEsR0FBQUUsQ0FBQSxRQUFnQlMsUUFBQSxDQUFTSSxLQUFLLENBQUM7RUFDckMsTUFBTUMsV0FBQTtFQUFBO0VBQUEsQ0FBQWhCLGNBQUEsR0FBQUUsQ0FBQSxRQUFjWSxhQUFBO0VBQUE7RUFBQSxDQUFBZCxjQUFBLEdBQUFZLENBQUEsVUFBZ0JFLGFBQWEsQ0FBQyxFQUFFO0VBQUE7RUFBQSxDQUFBZCxjQUFBLEdBQUFZLENBQUEsVUFBRztFQUFBO0VBQUFaLGNBQUEsR0FBQUUsQ0FBQTtFQUV2RCxvQkFDRSxJQUFBZSxXQUFBLENBQUFDLEdBQUEsRUFBQztJQUFLQyxJQUFBLEVBQU1ILFdBQUE7Y0FDVixpQkFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUM7Z0JBQ0VYOzs7QUFJVCIsImlnbm9yZUxpc3QiOltdfQ==