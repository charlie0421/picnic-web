{"version":3,"names":["cov_2ksp2g0kya","actualCoverage","s","VoteDetailFetcher","voteId","className","f","supabase","_server","createPublicSupabaseClient","numericVoteId","parseInt","isNaN","b","console","error","_navigation","notFound","data","vote","voteError","voteItems","itemsError","rewards","Promise","all","from","select","eq","single","order","ascending","Error","log","length","_jsxruntime","jsx","_HybridVoteDetailPresenter","HybridVoteDetailPresenter","initialItems","initialUser","initialUserVotes","enableRealtime","pollingInterval","maxRetries"],"sources":["/Users/cheolhyun/Repositories/picnic-web/components/server/vote/VoteDetailFetcher.tsx"],"sourcesContent":["import { notFound } from 'next/navigation';\nimport { HybridVoteDetailPresenter } from '@/components/client/vote/detail/HybridVoteDetailPresenter';\nimport { createPublicSupabaseClient } from '@/lib/supabase/server';\nimport { Vote, VoteItem } from '@/types/interfaces';\n\ninterface VoteDetailFetcherProps {\n  voteId: string;\n  className?: string;\n}\n\n/**\n * 투표 상세 데이터를 서버에서 가져오는 컴포넌트 (공개 데이터만)\n * 사용자 인증 관련 데이터는 클라이언트에서 처리하여 정적 렌더링 지원\n */\nexport async function VoteDetailFetcher({\n  voteId,\n  className,\n}: VoteDetailFetcherProps) {\n  // 🔧 정적 렌더링 지원: 공개 데이터 전용 클라이언트 사용 (쿠키 없음)\n  const supabase = createPublicSupabaseClient();\n\n  try {\n    // voteId를 숫자로 변환\n    const numericVoteId = parseInt(voteId, 10);\n    if (isNaN(numericVoteId)) {\n      console.error('Invalid vote ID:', voteId);\n      notFound();\n    }\n\n    // 🚀 공개 데이터만 서버에서 조회 (정적 렌더링 가능)\n    const [\n      { data: vote, error: voteError },\n      { data: voteItems, error: itemsError },\n      { data: rewards }\n    ] = await Promise.all([\n      // 투표 정보 조회 (공개 데이터)\n      supabase\n        .from('vote')\n        .select('*')\n        .eq('id', numericVoteId)\n        .single(),\n\n      // 투표 아이템들 조회 (공개 데이터)\n      supabase\n        .from('vote_item')\n        .select(`\n          *,\n          artist:artist_id (\n            id,\n            name,\n            image\n          )\n        `)\n        .eq('vote_id', numericVoteId)\n        .order('vote_total', { ascending: false }),\n\n      // 리워드 정보 조회 (공개 데이터)\n      supabase\n        .from('reward')\n        .select('*')\n        .eq('vote_id', numericVoteId)\n    ]);\n\n    if (voteError || !vote) {\n      console.error('Vote fetch error:', voteError);\n      notFound();\n    }\n\n    if (itemsError) {\n      console.error('Vote items fetch error:', itemsError);\n      throw new Error('Failed to fetch vote items');\n    }\n\n    console.log(`[VoteDetailFetcher] 서버 공개 데이터 로드 완료: ${voteItems?.length || 0}개 아이템`);\n\n    // ✨ 클라이언트 컴포넌트에 공개 데이터만 전달\n    // 사용자 인증 정보와 투표 상태는 클라이언트에서 처리\n    return (\n      <HybridVoteDetailPresenter\n        vote={vote as Vote}\n        initialItems={(voteItems || []) as unknown as VoteItem[]}\n        rewards={rewards || []}\n        initialUser={null} // 클라이언트에서 로드\n        initialUserVotes={[]} // 클라이언트에서 로드\n        className={className}\n        enableRealtime={true}\n        pollingInterval={1000}\n        maxRetries={3}\n      />\n    );\n  } catch (error) {\n    console.error('VoteDetailFetcher error:', error);\n    notFound();\n  }\n}\n"],"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","ignoreList":[]}