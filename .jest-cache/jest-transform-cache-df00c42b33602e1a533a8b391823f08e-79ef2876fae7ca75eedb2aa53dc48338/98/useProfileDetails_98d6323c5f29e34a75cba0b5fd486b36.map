{"version":3,"names":["cov_24kaguqr3x","actualCoverage","s","useProfileDetails","f","user","userProfile","_useAuth","useAuth","userProfileDetails","setUserProfileDetails","_react","useState","loading","setLoading","error","setError","fetchUserProfileDetails","id","b","supabase","_client","createBrowserSupabaseClient","data","from","select","eq","single","err","console","message","useEffect","fetchProfileDetails","useCallback","force","now","Date","cacheExpiry","created_at","getTime","log","startTime","timeoutPromise","Promise","_","reject","setTimeout","Error","profilePromise","race","duration","warn","detailedProfile","nickname","starCandy","star_candy","isAdmin","is_admin","needsDetailedProfile","requiredFields","detailOnlyFields","some","field","includes","fetchForMyPage","fetchForVoting","checkAdminStatus","undefined","detailed","refetch"],"sources":["/Users/cheolhyun/Repositories/picnic-web/hooks/useProfileDetails.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { useAuth } from './useAuth';\nimport { createBrowserSupabaseClient } from '@/lib/supabase/client';\nimport { UserProfiles } from '@/types/interfaces';\n\ninterface ProfileDetailsState {\n  isLoading: boolean;\n  error: string | null;\n  detailedProfile: UserProfiles | null;\n  lastFetched: number | null;\n}\n\ninterface UserProfileDetailsHook {\n  userProfileDetails: UserProfiles | null;\n  loading: boolean;\n  error: string | null;\n  refetch: () => Promise<void>;\n}\n\n/**\n * 필요한 시점에 프로필 상세 정보를 조회하는 훅\n * 로그인 시에는 세션 기반 기본 프로필만 사용하고,\n * 마이페이지, 투표 등에서 필요할 때만 DB 조회 수행\n */\nexport function useProfileDetails(): UserProfileDetailsHook {\n  const { user, userProfile } = useAuth();\n  const [userProfileDetails, setUserProfileDetails] = useState<UserProfiles | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchUserProfileDetails = async () => {\n    if (!user?.id) {\n      setUserProfileDetails(null);\n      setError(null);\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const supabase = createBrowserSupabaseClient();\n      const { data, error } = await supabase\n        .from('user_profiles')\n        .select('*')\n        .eq('id', user.id)\n        .single();\n\n      if (error) {\n        throw error;\n      }\n\n      setUserProfileDetails(data);\n    } catch (err: any) {\n      console.error('사용자 프로필 상세 정보 조회 오류:', err);\n      setError(err.message || '프로필 정보를 불러오는 중 오류가 발생했습니다.');\n      setUserProfileDetails(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserProfileDetails();\n  }, [user?.id]);\n\n  /**\n   * 프로필 상세 정보 조회 (필요시에만 호출)\n   * @param force - 캐시 무시하고 강제 조회 여부\n   */\n  const fetchProfileDetails = useCallback(async (force: boolean = false) => {\n    if (!user?.id) {\n      setError('로그인이 필요합니다');\n      return null;\n    }\n\n    // 최근에 조회했다면 스킵 (5분 캐시)\n    const now = Date.now();\n    const cacheExpiry = 5 * 60 * 1000; // 5분\n    \n    if (!force && userProfileDetails && userProfileDetails.created_at && (now - new Date(userProfileDetails.created_at).getTime()) < cacheExpiry) {\n      console.log('📋 [useProfileDetails] 캐시된 상세 프로필 사용');\n      return userProfileDetails;\n    }\n\n    setLoading(true);\n    setError(null);\n    \n    const startTime = Date.now();\n    \n    try {\n      console.log('📋 [useProfileDetails] 프로필 상세 정보 조회 시작');\n\n      // 단순한 타임아웃 설정 (5초)\n      const timeoutPromise = new Promise((_, reject) => {\n        setTimeout(() => reject(new Error('프로필 상세 조회 타임아웃')), 5000);\n      });\n\n      const supabase = createBrowserSupabaseClient();\n      const profilePromise = supabase\n        .from('user_profiles')\n        .select(`\n          id, email, nickname, avatar_url, is_admin, is_super_admin,\n          star_candy, star_candy_bonus, birth_date, birth_time,\n          gender, open_ages, open_gender, created_at, updated_at\n        `)\n        .eq('id', user.id)\n        .single();\n\n      const { data, error } = await Promise.race([\n        profilePromise,\n        timeoutPromise,\n      ]) as any;\n\n      const duration = Date.now() - startTime;\n      \n      if (error) {\n        console.warn('⚠️ [useProfileDetails] 프로필 상세 조회 실패:', error);\n        \n        // DB 조회 실패 시 세션 기반 프로필 유지\n        setUserProfileDetails(userProfile);\n        \n        return userProfile;\n      }\n\n      const detailedProfile = data as UserProfiles;\n      \n      console.log(`✅ [useProfileDetails] 프로필 상세 조회 성공 (${duration}ms):`, {\n        nickname: detailedProfile.nickname,\n        starCandy: detailedProfile.star_candy,\n        isAdmin: detailedProfile.is_admin,\n      });\n\n      // 상태 업데이트\n      setUserProfileDetails(detailedProfile);\n\n      // 상세 프로필 정보를 내부 상태에만 저장 (AuthProvider는 세션 기반 프로필 유지)\n      return detailedProfile;\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      console.error(`❌ [useProfileDetails] 프로필 상세 조회 예외 (${duration}ms):`, error);\n      \n      setUserProfileDetails(userProfile);\n      \n      return userProfile;\n    }\n  }, [user?.id, userProfileDetails, userProfile]);\n\n  /**\n   * 특정 정보가 필요한지 확인하는 유틸리티 함수들\n   */\n  const needsDetailedProfile = useCallback((requiredFields: Array<keyof UserProfiles>) => {\n    if (!userProfile) return true;\n    \n    // 세션 기반 프로필에서 제공되지 않는 정보들 체크\n    const detailOnlyFields: Array<keyof UserProfiles> = [\n      'star_candy', 'star_candy_bonus', 'is_admin', 'is_super_admin',\n      'birth_date', 'birth_time', 'gender', 'open_ages', 'open_gender'\n    ];\n    \n    return requiredFields.some(field => detailOnlyFields.includes(field));\n  }, [userProfile]);\n\n  /**\n   * 마이페이지용 프로필 조회\n   */\n  const fetchForMyPage = useCallback(async () => {\n    console.log('👤 [useProfileDetails] 마이페이지용 프로필 조회');\n    return await fetchProfileDetails();\n  }, [fetchProfileDetails]);\n\n  /**\n   * 투표용 프로필 조회 (별사탕, 권한 확인)\n   */\n  const fetchForVoting = useCallback(async () => {\n    console.log('🗳️ [useProfileDetails] 투표용 프로필 조회');\n    return await fetchProfileDetails();\n  }, [fetchProfileDetails]);\n\n  /**\n   * 관리자 권한 확인\n   */\n  const checkAdminStatus = useCallback(async () => {\n    if (userProfile?.is_admin !== undefined) {\n      return userProfile.is_admin;\n    }\n    \n    const detailed = await fetchProfileDetails();\n    return detailed?.is_admin || false;\n  }, [userProfile?.is_admin, fetchProfileDetails]);\n\n  return {\n    userProfileDetails,\n    loading,\n    error,\n    refetch: fetchUserProfileDetails,\n  };\n} "],"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","ignoreList":[]}