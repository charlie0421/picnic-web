1700d80561510949461ab5bda4ccfa3a
"use strict";

/* istanbul ignore next */
function cov_2ah9vp72im() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/utils/global-timer.ts";
  var hash = "6cd04bcd0412211a37f4b6f61b5f19ce7734803a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/utils/global-timer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 35
        }
      },
      "4": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 49,
          column: 2
        }
      },
      "5": {
        start: {
          line: 13,
          column: 22
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "6": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 20
        }
      },
      "7": {
        start: {
          line: 15,
          column: 23
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 59
        }
      },
      "9": {
        start: {
          line: 16,
          column: 52
        },
        end: {
          line: 16,
          column: 59
        }
      },
      "10": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 24,
          column: 17
        }
      },
      "11": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 18,
          column: 34
        }
      },
      "12": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 21,
          column: 15
        }
      },
      "13": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 44
        }
      },
      "14": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 59
        }
      },
      "15": {
        start: {
          line: 23,
          column: 44
        },
        end: {
          line: 23,
          column: 57
        }
      },
      "16": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "17": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "18": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "19": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 25
        }
      },
      "20": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 80
        }
      },
      "21": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 48,
          column: 6
        }
      },
      "22": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 38
        }
      },
      "23": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "24": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 29
        }
      },
      "25": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 46,
          column: 14
        }
      },
      "26": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 45
        }
      },
      "27": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 45,
          column: 17
        }
      },
      "28": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 32
        }
      },
      "29": {
        start: {
          line: 50,
          column: 17
        },
        end: {
          line: 50,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 44
          },
          end: {
            line: 12,
            column: 45
          }
        },
        loc: {
          start: {
            line: 12,
            column: 56
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 15,
            column: 24
          }
        },
        loc: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 17,
            column: 29
          }
        },
        loc: {
          start: {
            line: 17,
            column: 32
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 17
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 44
          },
          end: {
            line: 23,
            column: 57
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 22
          },
          end: {
            line: 26,
            column: 23
          }
        },
        loc: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 20
          }
        },
        loc: {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 47,
            column: 9
          }
        },
        line: 36
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 41,
            column: 19
          },
          end: {
            line: 41,
            column: 20
          }
        },
        loc: {
          start: {
            line: 41,
            column: 23
          },
          end: {
            line: 46,
            column: 13
          }
        },
        line: 41
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 16,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 16,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 17
          }
        }, {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 50
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 56
          },
          end: {
            line: 33,
            column: 66
          }
        }, {
          start: {
            line: 33,
            column: 69
          },
          end: {
            line: 33,
            column: 80
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 38
          }
        }, {
          start: {
            line: 38,
            column: 42
          },
          end: {
            line: 38,
            column: 71
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 45,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 45,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/utils/global-timer.ts"],
      sourcesContent: ["import {create} from 'zustand';\n\ninterface GlobalTimerState {\n  currentTime: Date;\n  subscribe: (callback: (time: Date) => void) => () => void;\n}\n\nconst useGlobalTimer = create<GlobalTimerState>((set, get) => {\n  let subscribers = new Set<(time: Date) => void>();\n  let timer: NodeJS.Timeout | null = null;\n\n  const startTimer = () => {\n    if (timer || typeof window === 'undefined') return;\n\n    timer = setInterval(() => {\n      const now = new Date();\n      set({ currentTime: now });\n      console.log('currentTime', now);\n      subscribers.forEach(callback => callback(now));\n    }, 1000);\n  };\n\n  const stopTimer = () => {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n  };\n\n  // \uC11C\uBC84 \uC0AC\uC774\uB4DC\uC5D0\uC11C\uB294 \uACE0\uC815\uB41C \uC2DC\uAC04, \uD074\uB77C\uC774\uC5B8\uD2B8\uC5D0\uC11C\uB294 \uD604\uC7AC \uC2DC\uAC04\n  const initialTime = typeof window !== 'undefined' ? new Date() : new Date(0);\n\n  return {\n    currentTime: initialTime,\n    subscribe: (callback) => {\n      subscribers.add(callback);\n      if (subscribers.size === 1 && typeof window !== 'undefined') {\n        startTimer();\n      }\n      return () => {\n        subscribers.delete(callback);\n        if (subscribers.size === 0) {\n          stopTimer();\n        }\n      };\n    },\n  };\n});\n\nexport default useGlobalTimer;\n"],
      names: ["useGlobalTimer", "create", "set", "get", "subscribers", "Set", "timer", "startTimer", "window", "setInterval", "now", "Date", "currentTime", "console", "log", "forEach", "callback", "stopTimer", "clearInterval", "initialTime", "subscribe", "add", "size", "delete"],
      mappings: ";;;;+BAiDA;;;eAAA;;;yBAjDqB;AAOrB,MAAMA,iBAAiBC,IAAAA,eAAM,EAAmB,CAACC,KAAKC;IACpD,IAAIC,cAAc,IAAIC;IACtB,IAAIC,QAA+B;IAEnC,MAAMC,aAAa;QACjB,IAAID,SAAS,OAAOE,WAAW,aAAa;QAE5CF,QAAQG,YAAY;YAClB,MAAMC,MAAM,IAAIC;YAChBT,IAAI;gBAAEU,aAAaF;YAAI;YACvBG,QAAQC,GAAG,CAAC,eAAeJ;YAC3BN,YAAYW,OAAO,CAACC,CAAAA,WAAYA,SAASN;QAC3C,GAAG;IACL;IAEA,MAAMO,YAAY;QAChB,IAAIX,OAAO;YACTY,cAAcZ;YACdA,QAAQ;QACV;IACF;IAEA,mCAAmC;IACnC,MAAMa,cAAc,OAAOX,WAAW,cAAc,IAAIG,SAAS,IAAIA,KAAK;IAE1E,OAAO;QACLC,aAAaO;QACbC,WAAW,CAACJ;YACVZ,YAAYiB,GAAG,CAACL;YAChB,IAAIZ,YAAYkB,IAAI,KAAK,KAAK,OAAOd,WAAW,aAAa;gBAC3DD;YACF;YACA,OAAO;gBACLH,YAAYmB,MAAM,CAACP;gBACnB,IAAIZ,YAAYkB,IAAI,KAAK,GAAG;oBAC1BL;gBACF;YACF;QACF;IACF;AACF;MAEA,WAAejB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6cd04bcd0412211a37f4b6f61b5f19ce7734803a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ah9vp72im = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ah9vp72im();
cov_2ah9vp72im().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ah9vp72im().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2ah9vp72im().f[0]++;
    cov_2ah9vp72im().s[2]++;
    return _default;
  }
});
const _zustand =
/* istanbul ignore next */
(cov_2ah9vp72im().s[3]++, require("zustand"));
const useGlobalTimer =
/* istanbul ignore next */
(cov_2ah9vp72im().s[4]++, (0, _zustand.create)((set, get) => {
  /* istanbul ignore next */
  cov_2ah9vp72im().f[1]++;
  let subscribers =
  /* istanbul ignore next */
  (cov_2ah9vp72im().s[5]++, new Set());
  let timer =
  /* istanbul ignore next */
  (cov_2ah9vp72im().s[6]++, null);
  /* istanbul ignore next */
  cov_2ah9vp72im().s[7]++;
  const startTimer = () => {
    /* istanbul ignore next */
    cov_2ah9vp72im().f[2]++;
    cov_2ah9vp72im().s[8]++;
    if (
    /* istanbul ignore next */
    (cov_2ah9vp72im().b[1][0]++, timer) ||
    /* istanbul ignore next */
    (cov_2ah9vp72im().b[1][1]++, typeof window === 'undefined')) {
      /* istanbul ignore next */
      cov_2ah9vp72im().b[0][0]++;
      cov_2ah9vp72im().s[9]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2ah9vp72im().b[0][1]++;
    }
    cov_2ah9vp72im().s[10]++;
    timer = setInterval(() => {
      /* istanbul ignore next */
      cov_2ah9vp72im().f[3]++;
      const now =
      /* istanbul ignore next */
      (cov_2ah9vp72im().s[11]++, new Date());
      /* istanbul ignore next */
      cov_2ah9vp72im().s[12]++;
      set({
        currentTime: now
      });
      /* istanbul ignore next */
      cov_2ah9vp72im().s[13]++;
      console.log('currentTime', now);
      /* istanbul ignore next */
      cov_2ah9vp72im().s[14]++;
      subscribers.forEach(callback => {
        /* istanbul ignore next */
        cov_2ah9vp72im().f[4]++;
        cov_2ah9vp72im().s[15]++;
        return callback(now);
      });
    }, 1000);
  };
  /* istanbul ignore next */
  cov_2ah9vp72im().s[16]++;
  const stopTimer = () => {
    /* istanbul ignore next */
    cov_2ah9vp72im().f[5]++;
    cov_2ah9vp72im().s[17]++;
    if (timer) {
      /* istanbul ignore next */
      cov_2ah9vp72im().b[2][0]++;
      cov_2ah9vp72im().s[18]++;
      clearInterval(timer);
      /* istanbul ignore next */
      cov_2ah9vp72im().s[19]++;
      timer = null;
    } else
    /* istanbul ignore next */
    {
      cov_2ah9vp72im().b[2][1]++;
    }
  };
  // 서버 사이드에서는 고정된 시간, 클라이언트에서는 현재 시간
  const initialTime =
  /* istanbul ignore next */
  (cov_2ah9vp72im().s[20]++, typeof window !== 'undefined' ?
  /* istanbul ignore next */
  (cov_2ah9vp72im().b[3][0]++, new Date()) :
  /* istanbul ignore next */
  (cov_2ah9vp72im().b[3][1]++, new Date(0)));
  /* istanbul ignore next */
  cov_2ah9vp72im().s[21]++;
  return {
    currentTime: initialTime,
    subscribe: callback => {
      /* istanbul ignore next */
      cov_2ah9vp72im().f[6]++;
      cov_2ah9vp72im().s[22]++;
      subscribers.add(callback);
      /* istanbul ignore next */
      cov_2ah9vp72im().s[23]++;
      if (
      /* istanbul ignore next */
      (cov_2ah9vp72im().b[5][0]++, subscribers.size === 1) &&
      /* istanbul ignore next */
      (cov_2ah9vp72im().b[5][1]++, typeof window !== 'undefined')) {
        /* istanbul ignore next */
        cov_2ah9vp72im().b[4][0]++;
        cov_2ah9vp72im().s[24]++;
        startTimer();
      } else
      /* istanbul ignore next */
      {
        cov_2ah9vp72im().b[4][1]++;
      }
      cov_2ah9vp72im().s[25]++;
      return () => {
        /* istanbul ignore next */
        cov_2ah9vp72im().f[7]++;
        cov_2ah9vp72im().s[26]++;
        subscribers.delete(callback);
        /* istanbul ignore next */
        cov_2ah9vp72im().s[27]++;
        if (subscribers.size === 0) {
          /* istanbul ignore next */
          cov_2ah9vp72im().b[6][0]++;
          cov_2ah9vp72im().s[28]++;
          stopTimer();
        } else
        /* istanbul ignore next */
        {
          cov_2ah9vp72im().b[6][1]++;
        }
      };
    }
  };
}));
const _default =
/* istanbul ignore next */
(cov_2ah9vp72im().s[29]++, useGlobalTimer);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmFoOXZwNzJpbSIsImFjdHVhbENvdmVyYWdlIiwicyIsIl9kZWZhdWx0IiwidXNlR2xvYmFsVGltZXIiLCJfenVzdGFuZCIsImNyZWF0ZSIsInNldCIsImdldCIsImYiLCJzdWJzY3JpYmVycyIsIlNldCIsInRpbWVyIiwic3RhcnRUaW1lciIsImIiLCJ3aW5kb3ciLCJzZXRJbnRlcnZhbCIsIm5vdyIsIkRhdGUiLCJjdXJyZW50VGltZSIsImNvbnNvbGUiLCJsb2ciLCJmb3JFYWNoIiwiY2FsbGJhY2siLCJzdG9wVGltZXIiLCJjbGVhckludGVydmFsIiwiaW5pdGlhbFRpbWUiLCJzdWJzY3JpYmUiLCJhZGQiLCJzaXplIiwiZGVsZXRlIl0sInNvdXJjZXMiOlsiL1VzZXJzL2NoZW9saHl1bi9SZXBvc2l0b3JpZXMvcGljbmljLXdlYi91dGlscy9nbG9iYWwtdGltZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjcmVhdGV9IGZyb20gJ3p1c3RhbmQnO1xuXG5pbnRlcmZhY2UgR2xvYmFsVGltZXJTdGF0ZSB7XG4gIGN1cnJlbnRUaW1lOiBEYXRlO1xuICBzdWJzY3JpYmU6IChjYWxsYmFjazogKHRpbWU6IERhdGUpID0+IHZvaWQpID0+ICgpID0+IHZvaWQ7XG59XG5cbmNvbnN0IHVzZUdsb2JhbFRpbWVyID0gY3JlYXRlPEdsb2JhbFRpbWVyU3RhdGU+KChzZXQsIGdldCkgPT4ge1xuICBsZXQgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PCh0aW1lOiBEYXRlKSA9PiB2b2lkPigpO1xuICBsZXQgdGltZXI6IE5vZGVKUy5UaW1lb3V0IHwgbnVsbCA9IG51bGw7XG5cbiAgY29uc3Qgc3RhcnRUaW1lciA9ICgpID0+IHtcbiAgICBpZiAodGltZXIgfHwgdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHJldHVybjtcblxuICAgIHRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgIHNldCh7IGN1cnJlbnRUaW1lOiBub3cgfSk7XG4gICAgICBjb25zb2xlLmxvZygnY3VycmVudFRpbWUnLCBub3cpO1xuICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaChjYWxsYmFjayA9PiBjYWxsYmFjayhub3cpKTtcbiAgICB9LCAxMDAwKTtcbiAgfTtcblxuICBjb25zdCBzdG9wVGltZXIgPSAoKSA9PiB7XG4gICAgaWYgKHRpbWVyKSB7XG4gICAgICBjbGVhckludGVydmFsKHRpbWVyKTtcbiAgICAgIHRpbWVyID0gbnVsbDtcbiAgICB9XG4gIH07XG5cbiAgLy8g7ISc67KEIOyCrOydtOuTnOyXkOyEnOuKlCDqs6DsoJXrkJwg7Iuc6rCELCDtgbTrnbzsnbTslrjtirjsl5DshJzripQg7ZiE7J6sIOyLnOqwhFxuICBjb25zdCBpbml0aWFsVGltZSA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gbmV3IERhdGUoKSA6IG5ldyBEYXRlKDApO1xuXG4gIHJldHVybiB7XG4gICAgY3VycmVudFRpbWU6IGluaXRpYWxUaW1lLFxuICAgIHN1YnNjcmliZTogKGNhbGxiYWNrKSA9PiB7XG4gICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spO1xuICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDEgJiYgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgc3RhcnRUaW1lcigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKTtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICBzdG9wVGltZXIoKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9LFxuICB9O1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUdsb2JhbFRpbWVyO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQVlRO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7QUFBQUEsY0FBQSxHQUFBRSxDQUFBOzs7Ozs7K0JBcUNSOzs7Ozs7V0FBQUMsUUFB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