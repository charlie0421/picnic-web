{"version":3,"names":["cov_2ah9vp72im","actualCoverage","s","_default","useGlobalTimer","_zustand","create","set","get","f","subscribers","Set","timer","startTimer","b","window","setInterval","now","Date","currentTime","console","log","forEach","callback","stopTimer","clearInterval","initialTime","subscribe","add","size","delete"],"sources":["/Users/cheolhyun/Repositories/picnic-web/utils/global-timer.ts"],"sourcesContent":["import {create} from 'zustand';\n\ninterface GlobalTimerState {\n  currentTime: Date;\n  subscribe: (callback: (time: Date) => void) => () => void;\n}\n\nconst useGlobalTimer = create<GlobalTimerState>((set, get) => {\n  let subscribers = new Set<(time: Date) => void>();\n  let timer: NodeJS.Timeout | null = null;\n\n  const startTimer = () => {\n    if (timer || typeof window === 'undefined') return;\n\n    timer = setInterval(() => {\n      const now = new Date();\n      set({ currentTime: now });\n      console.log('currentTime', now);\n      subscribers.forEach(callback => callback(now));\n    }, 1000);\n  };\n\n  const stopTimer = () => {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n  };\n\n  // 서버 사이드에서는 고정된 시간, 클라이언트에서는 현재 시간\n  const initialTime = typeof window !== 'undefined' ? new Date() : new Date(0);\n\n  return {\n    currentTime: initialTime,\n    subscribe: (callback) => {\n      subscribers.add(callback);\n      if (subscribers.size === 1 && typeof window !== 'undefined') {\n        startTimer();\n      }\n      return () => {\n        subscribers.delete(callback);\n        if (subscribers.size === 0) {\n          stopTimer();\n        }\n      };\n    },\n  };\n});\n\nexport default useGlobalTimer;\n"],"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","ignoreList":[]}