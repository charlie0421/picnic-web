7f982535b8d252818df0dcbcdd450ba6
"use strict";

/* istanbul ignore next */
function cov_5j9v7ywcy() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/lib/payment/portone.ts";
  var hash = "456e3e87731d488d0a565faa1bb6478739336d86";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/lib/payment/portone.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "3": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 35
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 18,
          column: 10
        }
      },
      "5": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "6": {
        start: {
          line: 23,
          column: 32
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "8": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 36
        }
      },
      "9": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 38
        }
      },
      "10": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 68
        }
      },
      "11": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 24
        }
      },
      "12": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 74
        }
      },
      "13": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 25
        }
      },
      "14": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 50,
          column: 11
        }
      },
      "15": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "16": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 26
        }
      },
      "17": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 23
        }
      },
      "18": {
        start: {
          line: 44,
          column: 27
        },
        end: {
          line: 44,
          column: 59
        }
      },
      "19": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 68
        }
      },
      "20": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 32
        }
      },
      "21": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 42
        }
      },
      "22": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 47,
          column: 41
        }
      },
      "23": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 85
        }
      },
      "24": {
        start: {
          line: 48,
          column: 33
        },
        end: {
          line: 48,
          column: 84
        }
      },
      "25": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 46
        }
      },
      "26": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "27": {
        start: {
          line: 57,
          column: 32
        },
        end: {
          line: 57,
          column: 55
        }
      },
      "28": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "29": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 67
        }
      },
      "30": {
        start: {
          line: 62,
          column: 35
        },
        end: {
          line: 83,
          column: 13
        }
      },
      "31": {
        start: {
          line: 85,
          column: 29
        },
        end: {
          line: 85,
          column: 80
        }
      },
      "32": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "33": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 92,
          column: 18
        }
      },
      "34": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 101,
          column: 18
        }
      },
      "35": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 71
        }
      },
      "36": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 111,
          column: 14
        }
      },
      "37": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "38": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "39": {
        start: {
          line: 127,
          column: 29
        },
        end: {
          line: 135,
          column: 14
        }
      },
      "40": {
        start: {
          line: 136,
          column: 27
        },
        end: {
          line: 136,
          column: 48
        }
      },
      "41": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 44
        }
      },
      "42": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 64
        }
      },
      "43": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 25
        }
      },
      "44": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 167,
          column: 10
        }
      },
      "45": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 52
        }
      },
      "46": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 50
        }
      },
      "47": {
        start: {
          line: 181,
          column: 23
        },
        end: {
          line: 181,
          column: 43
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 17
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 22,
            column: 7
          }
        },
        loc: {
          start: {
            line: 22,
            column: 25
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 6
          },
          end: {
            line: 37,
            column: 7
          }
        },
        loc: {
          start: {
            line: 37,
            column: 19
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 27
          },
          end: {
            line: 38,
            column: 28
          }
        },
        loc: {
          start: {
            line: 38,
            column: 46
          },
          end: {
            line: 50,
            column: 9
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 47,
            column: 29
          }
        },
        loc: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 41
          }
        },
        line: 47
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 48,
            column: 29
          },
          end: {
            line: 48,
            column: 30
          }
        },
        loc: {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 48,
            column: 84
          }
        },
        line: 48
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 54,
            column: 7
          }
        },
        loc: {
          start: {
            line: 54,
            column: 36
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 54
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 116,
            column: 6
          },
          end: {
            line: 116,
            column: 7
          }
        },
        loc: {
          start: {
            line: 116,
            column: 40
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 116
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 125,
            column: 6
          },
          end: {
            line: 125,
            column: 7
          }
        },
        loc: {
          start: {
            line: 125,
            column: 37
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 125
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 145,
            column: 7
          }
        },
        loc: {
          start: {
            line: 145,
            column: 35
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 145
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 171,
            column: 6
          },
          end: {
            line: 171,
            column: 7
          }
        },
        loc: {
          start: {
            line: 171,
            column: 26
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 171
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 176,
            column: 6
          },
          end: {
            line: 176,
            column: 7
          }
        },
        loc: {
          start: {
            line: 176,
            column: 40
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 176
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 15,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 15,
            column: 61
          }
        }, {
          start: {
            line: 15,
            column: 65
          },
          end: {
            line: 15,
            column: 67
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 16,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 16,
            column: 67
          }
        }, {
          start: {
            line: 16,
            column: 71
          },
          end: {
            line: 16,
            column: 73
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 60
          }
        }, {
          start: {
            line: 17,
            column: 64
          },
          end: {
            line: 17,
            column: 70
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        }, {
          start: {
            line: 93,
            column: 19
          },
          end: {
            line: 102,
            column: 13
          }
        }],
        line: 86
      },
      "7": {
        loc: {
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 86,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 86,
            column: 38
          }
        }, {
          start: {
            line: 86,
            column: 42
          },
          end: {
            line: 86,
            column: 60
          }
        }],
        line: 86
      },
      "8": {
        loc: {
          start: {
            line: 98,
            column: 30
          },
          end: {
            line: 98,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 30
          },
          end: {
            line: 98,
            column: 43
          }
        }, {
          start: {
            line: 98,
            column: 47
          },
          end: {
            line: 98,
            column: 63
          }
        }],
        line: 98
      },
      "9": {
        loc: {
          start: {
            line: 99,
            column: 33
          },
          end: {
            line: 99,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 33
          },
          end: {
            line: 99,
            column: 49
          }
        }, {
          start: {
            line: 99,
            column: 53
          },
          end: {
            line: 99,
            column: 66
          }
        }],
        line: 99
      },
      "10": {
        loc: {
          start: {
            line: 109,
            column: 29
          },
          end: {
            line: 109,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 54
          },
          end: {
            line: 109,
            column: 67
          }
        }, {
          start: {
            line: 109,
            column: 70
          },
          end: {
            line: 109,
            column: 91
          }
        }],
        line: 109
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/lib/payment/portone.ts"],
      sourcesContent: ["interface PortOneConfig {\n  storeId: string;\n  channelKey: string;\n  environment: 'test' | 'production';\n}\n\ninterface PaymentRequest {\n  paymentId: string;\n  orderName: string;\n  totalAmount: number;\n  currency: 'KRW';\n  payMethod: 'CARD' | 'TRANS' | 'VBANK' | 'PHONE';\n  customer: {\n    fullName: string;\n    email: string;\n    phoneNumber?: string;\n  };\n  productInfo: {\n    id: string;\n    name: string;\n    starCandy: number;\n    bonusAmount: number;\n  };\n}\n\ninterface PaymentResponse {\n  success: boolean;\n  paymentId?: string;\n  transactionId?: string;\n  error?: {\n    code: string;\n    message: string;\n  };\n}\n\ndeclare global {\n  interface Window {\n    PortOne?: any;\n  }\n}\n\nclass PortOneService {\n  private config: PortOneConfig;\n  private isInitialized: boolean = false;\n\n  constructor() {\n    this.config = {\n      storeId: process.env.NEXT_PUBLIC_PORTONE_STORE_ID || '',\n      channelKey: process.env.NEXT_PUBLIC_PORTONE_CHANNEL_KEY || '',\n      environment: (process.env.NEXT_PUBLIC_PORTONE_ENV as 'test' | 'production') || 'test',\n    };\n  }\n\n  /**\n   * Initialize Port One v2 SDK\n   */\n  async initialize(): Promise<boolean> {\n    if (this.isInitialized) return true;\n\n    try {\n      // Load Port One v2 SDK script\n      await this.loadScript();\n      \n      this.isInitialized = true;\n      console.log('Port One v2 SDK initialized successfully');\n      return true;\n    } catch (error) {\n      console.error('Failed to initialize Port One v2 SDK:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Load Port One v2 SDK script\n   */\n  private loadScript(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      // Check if already loaded\n      if (window.PortOne) {\n        resolve();\n        return;\n      }\n\n      const script = document.createElement('script');\n      script.src = 'https://cdn.portone.io/v2/browser-sdk.js';\n      script.async = true;\n      script.onload = () => resolve();\n      script.onerror = () => reject(new Error('Failed to load Port One v2 SDK'));\n      \n      document.head.appendChild(script);\n    });\n  }\n\n  /**\n   * Request payment through Port One v2 with simplified flow\n   */\n  async requestPayment(request: PaymentRequest): Promise<PaymentResponse> {\n    try {\n      // Ensure SDK is initialized\n      const initialized = await this.initialize();\n      if (!initialized) {\n        throw new Error('Port One v2 SDK not initialized');\n      }\n\n      // Prepare payment request for v2 API\n      const paymentRequest = {\n        storeId: this.config.storeId,\n        channelKey: this.config.channelKey,\n        paymentId: request.paymentId,\n        orderName: request.orderName,\n        totalAmount: request.totalAmount,\n        currency: request.currency,\n        payMethod: request.payMethod,\n        customer: {\n          fullName: request.customer.fullName,\n          email: request.customer.email,\n          phoneNumber: request.customer.phoneNumber,\n        },\n        customData: {\n          productId: request.productInfo.id,\n          starCandy: request.productInfo.starCandy,\n          bonusAmount: request.productInfo.bonusAmount,\n        },\n        redirectUrl: `${window.location.origin}/api/payment/portone/callback`,\n        noticeUrl: `${window.location.origin}/api/payment/portone/webhook`,\n        confirmUrl: `${window.location.origin}/api/payment/portone/confirm`,\n      };\n\n      // Request payment using v2 API\n      const response = await window.PortOne.requestPayment(paymentRequest);\n\n      if (response.code === null && response.paymentId) {\n        // Payment completed successfully\n        return {\n          success: true,\n          paymentId: response.paymentId,\n          transactionId: response.transactionId,\n        };\n      } else {\n        // Payment failed or cancelled\n        return {\n          success: false,\n          error: {\n            code: response.code || 'PAYMENT_FAILED',\n            message: response.message || '\uACB0\uC81C\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.',\n          },\n        };\n      }\n    } catch (error) {\n      console.error('Port One v2 payment request error:', error);\n      return {\n        success: false,\n        error: {\n          code: 'PAYMENT_ERROR',\n          message: error instanceof Error ? error.message : '\uACB0\uC81C \uCC98\uB9AC \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.',\n        },\n      };\n    }\n  }\n\n  /**\n   * Request payment with automatic payment method detection\n   */\n  async requestPaymentAuto(request: Omit<PaymentRequest, 'payMethod'>): Promise<PaymentResponse> {\n    // For auto payment, we'll use CARD as default but let Port One handle the selection\n    return this.requestPayment({\n      ...request,\n      payMethod: 'CARD', // Port One v2 will show payment method selection UI\n    });\n  }\n\n  /**\n   * Verify payment status on server\n   */\n  async verifyPayment(paymentId: string): Promise<boolean> {\n    try {\n      const response = await fetch('/api/payment/portone/verify', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ paymentId }),\n      });\n\n      const result = await response.json();\n      return result.verified === true;\n    } catch (error) {\n      console.error('Payment verification error:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get available payment methods for Korean users\n   */\n  getAvailablePaymentMethods() {\n    return [\n      { id: 'CARD', name: '\uC2E0\uC6A9/\uCCB4\uD06C\uCE74\uB4DC', icon: '\uD83D\uDCB3' },\n      { id: 'TRANS', name: '\uC2E4\uC2DC\uAC04 \uACC4\uC88C\uC774\uCCB4', icon: '\uD83C\uDFE6' },\n      { id: 'VBANK', name: '\uAC00\uC0C1\uACC4\uC88C', icon: '\uD83D\uDCF1' },\n      { id: 'PHONE', name: '\uD734\uB300\uD3F0 \uC18C\uC561\uACB0\uC81C', icon: '\uD83D\uDCDE' },\n    ];\n  }\n\n  /**\n   * Format price for display\n   */\n  formatPrice(amount: number): string {\n    return `\u20A9${amount.toLocaleString('ko-KR')}`;\n  }\n\n  /**\n   * Check if Port One is available (mainly for Korean users)\n   */\n  isAvailableInCountry(countryCode: string): boolean {\n    // Port One is primarily for Korean market\n    return countryCode.toUpperCase() === 'KR';\n  }\n}\n\n// Export singleton instance\nexport const portOneService = new PortOneService();"],
      names: ["portOneService", "PortOneService", "constructor", "isInitialized", "config", "storeId", "process", "env", "NEXT_PUBLIC_PORTONE_STORE_ID", "channelKey", "NEXT_PUBLIC_PORTONE_CHANNEL_KEY", "environment", "NEXT_PUBLIC_PORTONE_ENV", "initialize", "loadScript", "console", "log", "error", "Promise", "resolve", "reject", "window", "PortOne", "script", "document", "createElement", "src", "async", "onload", "onerror", "Error", "head", "appendChild", "requestPayment", "request", "initialized", "paymentRequest", "paymentId", "orderName", "totalAmount", "currency", "payMethod", "customer", "fullName", "email", "phoneNumber", "customData", "productId", "productInfo", "id", "starCandy", "bonusAmount", "redirectUrl", "location", "origin", "noticeUrl", "confirmUrl", "response", "code", "success", "transactionId", "message", "requestPaymentAuto", "verifyPayment", "fetch", "method", "headers", "body", "JSON", "stringify", "result", "json", "verified", "getAvailablePaymentMethods", "name", "icon", "formatPrice", "amount", "toLocaleString", "isAvailableInCountry", "countryCode", "toUpperCase"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "456e3e87731d488d0a565faa1bb6478739336d86"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_5j9v7ywcy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_5j9v7ywcy();
cov_5j9v7ywcy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_5j9v7ywcy().s[1]++;
Object.defineProperty(exports, "portOneService", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_5j9v7ywcy().f[0]++;
    cov_5j9v7ywcy().s[2]++;
    return portOneService;
  }
});
class PortOneService {
  constructor() {
    /* istanbul ignore next */
    cov_5j9v7ywcy().f[1]++;
    cov_5j9v7ywcy().s[3]++;
    this.isInitialized = false;
    /* istanbul ignore next */
    cov_5j9v7ywcy().s[4]++;
    this.config = {
      storeId:
      /* istanbul ignore next */
      (cov_5j9v7ywcy().b[0][0]++, process.env.NEXT_PUBLIC_PORTONE_STORE_ID) ||
      /* istanbul ignore next */
      (cov_5j9v7ywcy().b[0][1]++, ''),
      channelKey:
      /* istanbul ignore next */
      (cov_5j9v7ywcy().b[1][0]++, process.env.NEXT_PUBLIC_PORTONE_CHANNEL_KEY) ||
      /* istanbul ignore next */
      (cov_5j9v7ywcy().b[1][1]++, ''),
      environment:
      /* istanbul ignore next */
      (cov_5j9v7ywcy().b[2][0]++, process.env.NEXT_PUBLIC_PORTONE_ENV) ||
      /* istanbul ignore next */
      (cov_5j9v7ywcy().b[2][1]++, 'test')
    };
  }
  /**
  * Initialize Port One v2 SDK
  */
  async initialize() {
    /* istanbul ignore next */
    cov_5j9v7ywcy().f[2]++;
    cov_5j9v7ywcy().s[5]++;
    if (this.isInitialized) {
      /* istanbul ignore next */
      cov_5j9v7ywcy().b[3][0]++;
      cov_5j9v7ywcy().s[6]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_5j9v7ywcy().b[3][1]++;
    }
    cov_5j9v7ywcy().s[7]++;
    try {
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[8]++;
      // Load Port One v2 SDK script
      await this.loadScript();
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[9]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[10]++;
      console.log('Port One v2 SDK initialized successfully');
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[11]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[12]++;
      console.error('Failed to initialize Port One v2 SDK:', error);
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[13]++;
      return false;
    }
  }
  /**
  * Load Port One v2 SDK script
  */
  loadScript() {
    /* istanbul ignore next */
    cov_5j9v7ywcy().f[3]++;
    cov_5j9v7ywcy().s[14]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_5j9v7ywcy().f[4]++;
      cov_5j9v7ywcy().s[15]++;
      // Check if already loaded
      if (window.PortOne) {
        /* istanbul ignore next */
        cov_5j9v7ywcy().b[4][0]++;
        cov_5j9v7ywcy().s[16]++;
        resolve();
        /* istanbul ignore next */
        cov_5j9v7ywcy().s[17]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_5j9v7ywcy().b[4][1]++;
      }
      const script =
      /* istanbul ignore next */
      (cov_5j9v7ywcy().s[18]++, document.createElement('script'));
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[19]++;
      script.src = 'https://cdn.portone.io/v2/browser-sdk.js';
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[20]++;
      script.async = true;
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[21]++;
      script.onload = () => {
        /* istanbul ignore next */
        cov_5j9v7ywcy().f[5]++;
        cov_5j9v7ywcy().s[22]++;
        return resolve();
      };
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[23]++;
      script.onerror = () => {
        /* istanbul ignore next */
        cov_5j9v7ywcy().f[6]++;
        cov_5j9v7ywcy().s[24]++;
        return reject(new Error('Failed to load Port One v2 SDK'));
      };
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[25]++;
      document.head.appendChild(script);
    });
  }
  /**
  * Request payment through Port One v2 with simplified flow
  */
  async requestPayment(request) {
    /* istanbul ignore next */
    cov_5j9v7ywcy().f[7]++;
    cov_5j9v7ywcy().s[26]++;
    try {
      // Ensure SDK is initialized
      const initialized =
      /* istanbul ignore next */
      (cov_5j9v7ywcy().s[27]++, await this.initialize());
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[28]++;
      if (!initialized) {
        /* istanbul ignore next */
        cov_5j9v7ywcy().b[5][0]++;
        cov_5j9v7ywcy().s[29]++;
        throw new Error('Port One v2 SDK not initialized');
      } else
      /* istanbul ignore next */
      {
        cov_5j9v7ywcy().b[5][1]++;
      }
      // Prepare payment request for v2 API
      const paymentRequest =
      /* istanbul ignore next */
      (cov_5j9v7ywcy().s[30]++, {
        storeId: this.config.storeId,
        channelKey: this.config.channelKey,
        paymentId: request.paymentId,
        orderName: request.orderName,
        totalAmount: request.totalAmount,
        currency: request.currency,
        payMethod: request.payMethod,
        customer: {
          fullName: request.customer.fullName,
          email: request.customer.email,
          phoneNumber: request.customer.phoneNumber
        },
        customData: {
          productId: request.productInfo.id,
          starCandy: request.productInfo.starCandy,
          bonusAmount: request.productInfo.bonusAmount
        },
        redirectUrl: `${window.location.origin}/api/payment/portone/callback`,
        noticeUrl: `${window.location.origin}/api/payment/portone/webhook`,
        confirmUrl: `${window.location.origin}/api/payment/portone/confirm`
      });
      // Request payment using v2 API
      const response =
      /* istanbul ignore next */
      (cov_5j9v7ywcy().s[31]++, await window.PortOne.requestPayment(paymentRequest));
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_5j9v7ywcy().b[7][0]++, response.code === null) &&
      /* istanbul ignore next */
      (cov_5j9v7ywcy().b[7][1]++, response.paymentId)) {
        /* istanbul ignore next */
        cov_5j9v7ywcy().b[6][0]++;
        cov_5j9v7ywcy().s[33]++;
        // Payment completed successfully
        return {
          success: true,
          paymentId: response.paymentId,
          transactionId: response.transactionId
        };
      } else {
        /* istanbul ignore next */
        cov_5j9v7ywcy().b[6][1]++;
        cov_5j9v7ywcy().s[34]++;
        // Payment failed or cancelled
        return {
          success: false,
          error: {
            code:
            /* istanbul ignore next */
            (cov_5j9v7ywcy().b[8][0]++, response.code) ||
            /* istanbul ignore next */
            (cov_5j9v7ywcy().b[8][1]++, 'PAYMENT_FAILED'),
            message:
            /* istanbul ignore next */
            (cov_5j9v7ywcy().b[9][0]++, response.message) ||
            /* istanbul ignore next */
            (cov_5j9v7ywcy().b[9][1]++, '결제에 실패했습니다.')
          }
        };
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[35]++;
      console.error('Port One v2 payment request error:', error);
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[36]++;
      return {
        success: false,
        error: {
          code: 'PAYMENT_ERROR',
          message: error instanceof Error ?
          /* istanbul ignore next */
          (cov_5j9v7ywcy().b[10][0]++, error.message) :
          /* istanbul ignore next */
          (cov_5j9v7ywcy().b[10][1]++, '결제 처리 중 오류가 발생했습니다.')
        }
      };
    }
  }
  /**
  * Request payment with automatic payment method detection
  */
  async requestPaymentAuto(request) {
    /* istanbul ignore next */
    cov_5j9v7ywcy().f[8]++;
    cov_5j9v7ywcy().s[37]++;
    // For auto payment, we'll use CARD as default but let Port One handle the selection
    return this.requestPayment({
      ...request,
      payMethod: 'CARD'
    });
  }
  /**
  * Verify payment status on server
  */
  async verifyPayment(paymentId) {
    /* istanbul ignore next */
    cov_5j9v7ywcy().f[9]++;
    cov_5j9v7ywcy().s[38]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_5j9v7ywcy().s[39]++, await fetch('/api/payment/portone/verify', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          paymentId
        })
      }));
      const result =
      /* istanbul ignore next */
      (cov_5j9v7ywcy().s[40]++, await response.json());
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[41]++;
      return result.verified === true;
    } catch (error) {
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[42]++;
      console.error('Payment verification error:', error);
      /* istanbul ignore next */
      cov_5j9v7ywcy().s[43]++;
      return false;
    }
  }
  /**
  * Get available payment methods for Korean users
  */
  getAvailablePaymentMethods() {
    /* istanbul ignore next */
    cov_5j9v7ywcy().f[10]++;
    cov_5j9v7ywcy().s[44]++;
    return [{
      id: 'CARD',
      name: '신용/체크카드',
      icon: '💳'
    }, {
      id: 'TRANS',
      name: '실시간 계좌이체',
      icon: '🏦'
    }, {
      id: 'VBANK',
      name: '가상계좌',
      icon: '📱'
    }, {
      id: 'PHONE',
      name: '휴대폰 소액결제',
      icon: '📞'
    }];
  }
  /**
  * Format price for display
  */
  formatPrice(amount) {
    /* istanbul ignore next */
    cov_5j9v7ywcy().f[11]++;
    cov_5j9v7ywcy().s[45]++;
    return `₩${amount.toLocaleString('ko-KR')}`;
  }
  /**
  * Check if Port One is available (mainly for Korean users)
  */
  isAvailableInCountry(countryCode) {
    /* istanbul ignore next */
    cov_5j9v7ywcy().f[12]++;
    cov_5j9v7ywcy().s[46]++;
    // Port One is primarily for Korean market
    return countryCode.toUpperCase() === 'KR';
  }
}
const portOneService =
/* istanbul ignore next */
(cov_5j9v7ywcy().s[47]++, new PortOneService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,