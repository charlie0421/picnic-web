eb1895a875b0905c5e478ce8d5667cb4
"use strict";

/* istanbul ignore next */
function cov_20euqclhiu() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/components/server/VoteDataExample.tsx";
  var hash = "ef45e14e614c4a690ac7bf886d3e61934c91bdf0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/components/server/VoteDataExample.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 14,
          column: 3
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "3": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "4": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 72
        }
      },
      "5": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "6": {
        start: {
          line: 18,
          column: 25
        },
        end: {
          line: 18,
          column: 76
        }
      },
      "7": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 28
        }
      },
      "8": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 50
        }
      },
      "9": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "10": {
        start: {
          line: 22,
          column: 39
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "11": {
        start: {
          line: 23,
          column: 28
        },
        end: {
          line: 23,
          column: 41
        }
      },
      "12": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 40
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 20
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 66
        }
      },
      "15": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "17": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 10
        }
      },
      "19": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 53
        }
      },
      "20": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "21": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 30
        }
      },
      "22": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "23": {
        start: {
          line: 45,
          column: 32
        },
        end: {
          line: 45,
          column: 88
        }
      },
      "24": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "25": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "26": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 48,
          column: 95
        }
      },
      "27": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "28": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 57
        }
      },
      "29": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 39
        }
      },
      "30": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 25
        }
      },
      "31": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "32": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 31
        }
      },
      "33": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 18
        }
      },
      "34": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "35": {
        start: {
          line: 70,
          column: 21
        },
        end: {
          line: 70,
          column: 100
        }
      },
      "36": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 83,
          column: 11
        }
      },
      "37": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "38": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 50
        }
      },
      "39": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 98
        }
      },
      "40": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "41": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 40
        }
      },
      "42": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 20
        }
      },
      "43": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 107,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 10
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 33
          }
        },
        loc: {
          start: {
            line: 21,
            column: 47
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 25,
            column: 40
          }
        },
        loc: {
          start: {
            line: 25,
            column: 61
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 34
          }
        },
        loc: {
          start: {
            line: 29,
            column: 53
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 29
      },
      "4": {
        name: "VoteData",
        decl: {
          start: {
            line: 66,
            column: 19
          },
          end: {
            line: 66,
            column: 27
          }
        },
        loc: {
          start: {
            line: 66,
            column: 36
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 66
      },
      "5": {
        name: "VoteDataExample",
        decl: {
          start: {
            line: 98,
            column: 9
          },
          end: {
            line: 98,
            column: 24
          }
        },
        loc: {
          start: {
            line: 98,
            column: 33
          },
          end: {
            line: 108,
            column: 1
          }
        },
        line: 98
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 26,
            column: 45
          }
        }, {
          start: {
            line: 26,
            column: 48
          },
          end: {
            line: 26,
            column: 65
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 20
          }
        }, {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 27
          }
        }, {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 30,
            column: 45
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 47
          }
        }, {
          start: {
            line: 33,
            column: 51
          },
          end: {
            line: 33,
            column: 76
          }
        }],
        line: 33
      },
      "6": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "7": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 31
          }
        }],
        line: 39
      },
      "8": {
        loc: {
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 53
          }
        }, {
          start: {
            line: 45,
            column: 57
          },
          end: {
            line: 45,
            column: 88
          }
        }],
        line: 45
      },
      "9": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "10": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 29
          }
        }, {
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 47,
            column: 79
          }
        }],
        line: 47
      },
      "11": {
        loc: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 47
          },
          end: {
            line: 48,
            column: 88
          }
        }, {
          start: {
            line: 48,
            column: 91
          },
          end: {
            line: 48,
            column: 95
          }
        }],
        line: 48
      },
      "12": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: 51,
            column: 19
          },
          end: {
            line: 53,
            column: 13
          }
        }],
        line: 49
      },
      "13": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 20
          }
        }, {
          start: {
            line: 49,
            column: 25
          },
          end: {
            line: 49,
            column: 33
          }
        }, {
          start: {
            line: 49,
            column: 37
          },
          end: {
            line: 49,
            column: 45
          }
        }],
        line: 49
      },
      "14": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "15": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "16": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/components/server/VoteDataExample.tsx"],
      sourcesContent: ["import React, { Suspense } from 'react';\nimport { notFound } from 'next/navigation';\nimport { getByIdOrNotFound, TABLES } from '@/lib/data-fetching/supabase-service';\nimport { ErrorState, LoadingState } from '@/components/server';\nimport { AppError, ErrorCode } from '@/lib/supabase/error';\n\ninterface VoteDataProps {\n  id: string;\n}\n\n// \uD22C\uD45C \uB370\uC774\uD130 \uD0C0\uC785 \uC815\uC758\ninterface Vote {\n  id: number;\n  title: string;\n  description: string;\n  created_at: string;\n  updated_at: string;\n  [key: string]: any; // \uCD94\uAC00 \uD544\uB4DC\uAC00 \uC788\uC744 \uC218 \uC788\uC74C\n}\n\n/**\n * \uD22C\uD45C \uB370\uC774\uD130\uB97C \uAC00\uC838\uC624\uB294 \uC11C\uBC84 \uCEF4\uD3EC\uB10C\uD2B8\n * \n * \uC774 \uCEF4\uD3EC\uB10C\uD2B8\uB294 \uC11C\uBC84 \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uB370\uC774\uD130 \uD398\uCE6D\uACFC \uC624\uB958 \uCC98\uB9AC\uB97C \uAD6C\uD604\uD558\uB294 \uD328\uD134\uC744 \uBCF4\uC5EC\uC90D\uB2C8\uB2E4.\n */\nasync function VoteData({ id }: VoteDataProps) {\n  try {\n    // 404 \uCC98\uB9AC\uAC00 \uD3EC\uD568\uB41C \uB370\uC774\uD130 \uC870\uD68C \uD568\uC218 \uC0AC\uC6A9\n    // \uB370\uC774\uD130\uAC00 \uC5C6\uC73C\uBA74 \uC790\uB3D9\uC73C\uB85C notFound()\uAC00 \uD638\uCD9C\uB428\n    const vote = await getByIdOrNotFound<Vote>(TABLES.VOTE, id);\n    \n    return (\n      <div className=\"p-4 bg-white rounded-lg shadow\">\n        <h2 className=\"text-xl font-bold\">{vote.title}</h2>\n        <p className=\"mt-2 text-gray-600\">{vote.description}</p>\n        {/* \uCD94\uAC00 \uD22C\uD45C \uB370\uC774\uD130 \uD45C\uC2DC */}\n      </div>\n    );\n  } catch (error) {\n    // AppError\uAC00 \uC544\uB2CC \uC624\uB958\uB294 \uBAA8\uB450 UNKNOWN\uC73C\uB85C \uCC98\uB9AC\n    if (!(error instanceof AppError)) {\n      console.error('\uD22C\uD45C \uB370\uC774\uD130 \uC870\uD68C \uC624\uB958:', error);\n      \n      throw new AppError(\n        '\uD22C\uD45C \uB370\uC774\uD130\uB97C \uBD88\uB7EC\uC62C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4',\n        ErrorCode.UNKNOWN,\n        error,\n        500\n      );\n    }\n    \n    // ErrorCode.NOT_FOUND \uC5D0\uB7EC\uB294 notFound()\uB85C \uCC98\uB9AC\n    if (error.code === ErrorCode.NOT_FOUND) {\n      notFound();\n    }\n    \n    // \uADF8 \uC678 \uC5D0\uB7EC\uB294 \uB2E4\uC2DC throw\uD558\uC5EC \uC0C1\uC704 \uCEF4\uD3EC\uB10C\uD2B8\uC758 error boundary\uC5D0\uC11C \uCC98\uB9AC\n    throw error;\n  }\n}\n\n/**\n * \uD22C\uD45C \uB370\uC774\uD130\uB97C \uD45C\uC2DC\uD558\uB294 \uC608\uC81C \uCEF4\uD3EC\uB10C\uD2B8\n * \n * AsyncBoundary\uB97C \uC0AC\uC6A9\uD558\uC5EC \uB85C\uB529 \uC0C1\uD0DC\uC640 \uC624\uB958 \uC0C1\uD0DC\uB97C \uCC98\uB9AC\uD569\uB2C8\uB2E4.\n */\nexport default function VoteDataExample({ id }: VoteDataProps) {\n  return (\n    <Suspense fallback={<LoadingState message=\"\uD22C\uD45C \uB370\uC774\uD130\uB97C \uBD88\uB7EC\uC624\uB294 \uC911...\" size=\"medium\" />}>\n      <VoteData id={id} />\n    </Suspense>\n  );\n} "],
      names: ["VoteDataExample", "VoteData", "id", "vote", "getByIdOrNotFound", "TABLES", "VOTE", "div", "className", "h2", "title", "p", "description", "error", "AppError", "console", "ErrorCode", "UNKNOWN", "code", "NOT_FOUND", "notFound", "Suspense", "fallback", "LoadingState", "message", "size"],
      mappings: ";;;;+BA6DA;;;;CAIC,GACD;;;eAAwBA;;;;+DAlEQ;4BACP;iCACiB;wBACD;uBACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBpC;;;;CAIC,GACD,eAAeC,SAAS,EAAEC,EAAE,EAAiB;IAC3C,IAAI;QACF,2BAA2B;QAC3B,gCAAgC;QAChC,MAAMC,OAAO,MAAMC,IAAAA,kCAAiB,EAAOC,uBAAM,CAACC,IAAI,EAAEJ;QAExD,qBACE,sBAACK;YAAIC,WAAU;;8BACb,qBAACC;oBAAGD,WAAU;8BAAqBL,KAAKO,KAAK;;8BAC7C,qBAACC;oBAAEH,WAAU;8BAAsBL,KAAKS,WAAW;;;;IAIzD,EAAE,OAAOC,OAAO;QACd,mCAAmC;QACnC,IAAI,CAAEA,CAAAA,iBAAiBC,eAAQ,AAAD,GAAI;YAChCC,QAAQF,KAAK,CAAC,iBAAiBA;YAE/B,MAAM,IAAIC,eAAQ,CAChB,sBACAE,gBAAS,CAACC,OAAO,EACjBJ,OACA;QAEJ;QAEA,yCAAyC;QACzC,IAAIA,MAAMK,IAAI,KAAKF,gBAAS,CAACG,SAAS,EAAE;YACtCC,IAAAA,oBAAQ;QACV;QAEA,kDAAkD;QAClD,MAAMP;IACR;AACF;AAOe,SAASb,gBAAgB,EAAEE,EAAE,EAAiB;IAC3D,qBACE,qBAACmB,eAAQ;QAACC,wBAAU,qBAACC,oBAAY;YAACC,SAAQ;YAAoBC,MAAK;;kBACjE,cAAA,qBAACxB;YAASC,IAAIA;;;AAGpB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ef45e14e614c4a690ac7bf886d3e61934c91bdf0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_20euqclhiu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_20euqclhiu();
cov_20euqclhiu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_20euqclhiu().s[1]++;
Object.defineProperty(exports,
/**
* 투표 데이터를 표시하는 예제 컴포넌트
* 
* AsyncBoundary를 사용하여 로딩 상태와 오류 상태를 처리합니다.
*/
"default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_20euqclhiu().f[0]++;
    cov_20euqclhiu().s[2]++;
    return VoteDataExample;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_20euqclhiu().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_20euqclhiu().s[4]++, _interop_require_wildcard(require("react")));
const _navigation =
/* istanbul ignore next */
(cov_20euqclhiu().s[5]++, require("next/navigation"));
const _supabaseservice =
/* istanbul ignore next */
(cov_20euqclhiu().s[6]++, require("../../lib/data-fetching/supabase-service"));
const _server =
/* istanbul ignore next */
(cov_20euqclhiu().s[7]++, require("."));
const _error =
/* istanbul ignore next */
(cov_20euqclhiu().s[8]++, require("../../lib/supabase/error"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_20euqclhiu().f[1]++;
  cov_20euqclhiu().s[9]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_20euqclhiu().b[0][0]++;
    cov_20euqclhiu().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_20euqclhiu().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_20euqclhiu().s[11]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_20euqclhiu().s[12]++, new WeakMap());
  /* istanbul ignore next */
  cov_20euqclhiu().s[13]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_20euqclhiu().f[2]++;
    cov_20euqclhiu().s[14]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_20euqclhiu().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_20euqclhiu().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_20euqclhiu().f[3]++;
  cov_20euqclhiu().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_20euqclhiu().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_20euqclhiu().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_20euqclhiu().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_20euqclhiu().b[2][0]++;
    cov_20euqclhiu().s[16]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_20euqclhiu().b[2][1]++;
  }
  cov_20euqclhiu().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_20euqclhiu().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_20euqclhiu().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_20euqclhiu().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_20euqclhiu().b[4][0]++;
    cov_20euqclhiu().s[18]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_20euqclhiu().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_20euqclhiu().s[19]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_20euqclhiu().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_20euqclhiu().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_20euqclhiu().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_20euqclhiu().b[6][0]++;
    cov_20euqclhiu().s[21]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_20euqclhiu().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_20euqclhiu().s[22]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_20euqclhiu().s[23]++,
  /* istanbul ignore next */
  (cov_20euqclhiu().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_20euqclhiu().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_20euqclhiu().s[24]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_20euqclhiu().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_20euqclhiu().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_20euqclhiu().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_20euqclhiu().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_20euqclhiu().s[26]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_20euqclhiu().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_20euqclhiu().b[11][1]++, null));
      /* istanbul ignore next */
      cov_20euqclhiu().s[27]++;
      if (
      /* istanbul ignore next */
      (cov_20euqclhiu().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_20euqclhiu().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_20euqclhiu().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_20euqclhiu().b[12][0]++;
        cov_20euqclhiu().s[28]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_20euqclhiu().b[12][1]++;
        cov_20euqclhiu().s[29]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_20euqclhiu().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_20euqclhiu().s[30]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_20euqclhiu().s[31]++;
  if (cache) {
    /* istanbul ignore next */
    cov_20euqclhiu().b[14][0]++;
    cov_20euqclhiu().s[32]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_20euqclhiu().b[14][1]++;
  }
  cov_20euqclhiu().s[33]++;
  return newObj;
}
/**
 * 투표 데이터를 가져오는 서버 컴포넌트
 * 
 * 이 컴포넌트는 서버 컴포넌트에서 데이터 페칭과 오류 처리를 구현하는 패턴을 보여줍니다.
 */
async function VoteData({
  id
}) {
  /* istanbul ignore next */
  cov_20euqclhiu().f[4]++;
  cov_20euqclhiu().s[34]++;
  try {
    // 404 처리가 포함된 데이터 조회 함수 사용
    // 데이터가 없으면 자동으로 notFound()가 호출됨
    const vote =
    /* istanbul ignore next */
    (cov_20euqclhiu().s[35]++, await (0, _supabaseservice.getByIdOrNotFound)(_supabaseservice.TABLES.VOTE, id));
    /* istanbul ignore next */
    cov_20euqclhiu().s[36]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "p-4 bg-white rounded-lg shadow",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
        className: "text-xl font-bold",
        children: vote.title
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "mt-2 text-gray-600",
        children: vote.description
      })]
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20euqclhiu().s[37]++;
    // AppError가 아닌 오류는 모두 UNKNOWN으로 처리
    if (!(error instanceof _error.AppError)) {
      /* istanbul ignore next */
      cov_20euqclhiu().b[15][0]++;
      cov_20euqclhiu().s[38]++;
      console.error('투표 데이터 조회 오류:', error);
      /* istanbul ignore next */
      cov_20euqclhiu().s[39]++;
      throw new _error.AppError('투표 데이터를 불러올 수 없습니다', _error.ErrorCode.UNKNOWN, error, 500);
    } else
    /* istanbul ignore next */
    {
      cov_20euqclhiu().b[15][1]++;
    }
    // ErrorCode.NOT_FOUND 에러는 notFound()로 처리
    cov_20euqclhiu().s[40]++;
    if (error.code === _error.ErrorCode.NOT_FOUND) {
      /* istanbul ignore next */
      cov_20euqclhiu().b[16][0]++;
      cov_20euqclhiu().s[41]++;
      (0, _navigation.notFound)();
    } else
    /* istanbul ignore next */
    {
      cov_20euqclhiu().b[16][1]++;
    }
    // 그 외 에러는 다시 throw하여 상위 컴포넌트의 error boundary에서 처리
    cov_20euqclhiu().s[42]++;
    throw error;
  }
}
function VoteDataExample({
  id
}) {
  /* istanbul ignore next */
  cov_20euqclhiu().f[5]++;
  cov_20euqclhiu().s[43]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
    fallback: /*#__PURE__*/(0, _jsxruntime.jsx)(_server.LoadingState, {
      message: "투표 데이터를 불러오는 중...",
      size: "medium"
    }),
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(VoteData, {
      id: id
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWb3RlRGF0YUV4YW1wbGUiLCJWb3RlRGF0YSIsImlkIiwiY292XzIwZXVxY2xoaXUiLCJmIiwicyIsInZvdGUiLCJfc3VwYWJhc2VzZXJ2aWNlIiwiZ2V0QnlJZE9yTm90Rm91bmQiLCJUQUJMRVMiLCJWT1RFIiwiX2pzeHJ1bnRpbWUiLCJqc3hzIiwiY2xhc3NOYW1lIiwianN4IiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImVycm9yIiwiX2Vycm9yIiwiQXBwRXJyb3IiLCJiIiwiY29uc29sZSIsIkVycm9yQ29kZSIsIlVOS05PV04iLCJjb2RlIiwiTk9UX0ZPVU5EIiwiX25hdmlnYXRpb24iLCJub3RGb3VuZCIsIl9yZWFjdCIsIlN1c3BlbnNlIiwiZmFsbGJhY2siLCJfc2VydmVyIiwiTG9hZGluZ1N0YXRlIiwibWVzc2FnZSIsInNpemUiXSwic291cmNlcyI6WyIvVXNlcnMvY2hlb2xoeXVuL1JlcG9zaXRvcmllcy9waWNuaWMtd2ViL2NvbXBvbmVudHMvc2VydmVyL1ZvdGVEYXRhRXhhbXBsZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFN1c3BlbnNlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbm90Rm91bmQgfSBmcm9tICduZXh0L25hdmlnYXRpb24nO1xuaW1wb3J0IHsgZ2V0QnlJZE9yTm90Rm91bmQsIFRBQkxFUyB9IGZyb20gJ0AvbGliL2RhdGEtZmV0Y2hpbmcvc3VwYWJhc2Utc2VydmljZSc7XG5pbXBvcnQgeyBFcnJvclN0YXRlLCBMb2FkaW5nU3RhdGUgfSBmcm9tICdAL2NvbXBvbmVudHMvc2VydmVyJztcbmltcG9ydCB7IEFwcEVycm9yLCBFcnJvckNvZGUgfSBmcm9tICdAL2xpYi9zdXBhYmFzZS9lcnJvcic7XG5cbmludGVyZmFjZSBWb3RlRGF0YVByb3BzIHtcbiAgaWQ6IHN0cmluZztcbn1cblxuLy8g7Yis7ZGcIOuNsOydtO2EsCDtg4DsnoUg7KCV7J2YXG5pbnRlcmZhY2UgVm90ZSB7XG4gIGlkOiBudW1iZXI7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gIGNyZWF0ZWRfYXQ6IHN0cmluZztcbiAgdXBkYXRlZF9hdDogc3RyaW5nO1xuICBba2V5OiBzdHJpbmddOiBhbnk7IC8vIOy2lOqwgCDtlYTrk5zqsIAg7J6I7J2EIOyImCDsnojsnYxcbn1cblxuLyoqXG4gKiDtiKztkZwg642w7J207YSw66W8IOqwgOyguOyYpOuKlCDshJzrsoQg7Lu07Y+s64SM7Yq4XG4gKiBcbiAqIOydtCDsu7Ttj6zrhIztirjripQg7ISc67KEIOy7tO2PrOuEjO2KuOyXkOyEnCDrjbDsnbTthLAg7Y6Y7Lmt6rO8IOyYpOulmCDsspjrpqzrpbwg6rWs7ZiE7ZWY64qUIO2MqO2EtOydhCDrs7Tsl6zspI3ri4jri6QuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIFZvdGVEYXRhKHsgaWQgfTogVm90ZURhdGFQcm9wcykge1xuICB0cnkge1xuICAgIC8vIDQwNCDsspjrpqzqsIAg7Y+s7ZWo65CcIOuNsOydtO2EsCDsobDtmowg7ZWo7IiYIOyCrOyaqVxuICAgIC8vIOuNsOydtO2EsOqwgCDsl4bsnLzrqbQg7J6Q64+Z7Jy866GcIG5vdEZvdW5kKCnqsIAg7Zi47Lac65CoXG4gICAgY29uc3Qgdm90ZSA9IGF3YWl0IGdldEJ5SWRPck5vdEZvdW5kPFZvdGU+KFRBQkxFUy5WT1RFLCBpZCk7XG4gICAgXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicC00IGJnLXdoaXRlIHJvdW5kZWQtbGcgc2hhZG93XCI+XG4gICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LXhsIGZvbnQtYm9sZFwiPnt2b3RlLnRpdGxlfTwvaDI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cIm10LTIgdGV4dC1ncmF5LTYwMFwiPnt2b3RlLmRlc2NyaXB0aW9ufTwvcD5cbiAgICAgICAgey8qIOy2lOqwgCDtiKztkZwg642w7J207YSwIO2RnOyLnCAqL31cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgLy8gQXBwRXJyb3LqsIAg7JWE64uMIOyYpOulmOuKlCDrqqjrkZAgVU5LTk9XTuycvOuhnCDsspjrpqxcbiAgICBpZiAoIShlcnJvciBpbnN0YW5jZW9mIEFwcEVycm9yKSkge1xuICAgICAgY29uc29sZS5lcnJvcign7Yis7ZGcIOuNsOydtO2EsCDsobDtmowg7Jik66WYOicsIGVycm9yKTtcbiAgICAgIFxuICAgICAgdGhyb3cgbmV3IEFwcEVycm9yKFxuICAgICAgICAn7Yis7ZGcIOuNsOydtO2EsOulvCDrtojrn6zsmKwg7IiYIOyXhuyKteuLiOuLpCcsXG4gICAgICAgIEVycm9yQ29kZS5VTktOT1dOLFxuICAgICAgICBlcnJvcixcbiAgICAgICAgNTAwXG4gICAgICApO1xuICAgIH1cbiAgICBcbiAgICAvLyBFcnJvckNvZGUuTk9UX0ZPVU5EIOyXkOufrOuKlCBub3RGb3VuZCgp66GcIOyymOumrFxuICAgIGlmIChlcnJvci5jb2RlID09PSBFcnJvckNvZGUuTk9UX0ZPVU5EKSB7XG4gICAgICBub3RGb3VuZCgpO1xuICAgIH1cbiAgICBcbiAgICAvLyDqt7gg7Jm4IOyXkOufrOuKlCDri6Tsi5wgdGhyb3ftlZjsl6wg7IOB7JyEIOy7tO2PrOuEjO2KuOydmCBlcnJvciBib3VuZGFyeeyXkOyEnCDsspjrpqxcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG4vKipcbiAqIO2IrO2RnCDrjbDsnbTthLDrpbwg7ZGc7Iuc7ZWY64qUIOyYiOygnCDsu7Ttj6zrhIztirhcbiAqIFxuICogQXN5bmNCb3VuZGFyeeulvCDsgqzsmqntlZjsl6wg66Gc65SpIOyDge2DnOyZgCDsmKTrpZgg7IOB7YOc66W8IOyymOumrO2VqeuLiOuLpC5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVm90ZURhdGFFeGFtcGxlKHsgaWQgfTogVm90ZURhdGFQcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxTdXNwZW5zZSBmYWxsYmFjaz17PExvYWRpbmdTdGF0ZSBtZXNzYWdlPVwi7Yis7ZGcIOuNsOydtO2EsOulvCDrtojrn6zsmKTripQg7KSRLi4uXCIgc2l6ZT1cIm1lZGl1bVwiIC8+fT5cbiAgICAgIDxWb3RlRGF0YSBpZD17aWR9IC8+XG4gICAgPC9TdXNwZW5zZT5cbiAgKTtcbn0gIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTZEQTs7Ozs7QUFLQTs7Ozs7O1dBQXdCQSxlQUFBOzs7Ozs7Ozt5RUFsRVE7OztrQ0FDUDs7O2tDQUNpQjs7O2tDQUNEOzs7a0NBQ0w7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQnBDOzs7OztBQUtBLGVBQWVDLFNBQVM7RUFBRUM7QUFBRSxDQUFpQjtFQUFBO0VBQUFDLGNBQUEsR0FBQUMsQ0FBQTtFQUFBRCxjQUFBLEdBQUFFLENBQUE7RUFDM0MsSUFBSTtJQUNGO0lBQ0E7SUFDQSxNQUFNQyxJQUFBO0lBQUE7SUFBQSxDQUFBSCxjQUFBLEdBQUFFLENBQUEsUUFBTyxNQUFNLElBQUFFLGdCQUFBLENBQUFDLGlCQUFpQixFQUFPRCxnQkFBQSxDQUFBRSxNQUFNLENBQUNDLElBQUksRUFBRVIsRUFBQTtJQUFBO0lBQUFDLGNBQUEsR0FBQUUsQ0FBQTtJQUV4RCxvQkFDRSxJQUFBTSxXQUFBLENBQUFDLElBQUEsRUFBQztNQUFJQyxTQUFBLEVBQVU7OEJBQ2IsSUFBQUYsV0FBQSxDQUFBRyxHQUFBLEVBQUM7UUFBR0QsU0FBQSxFQUFVO2tCQUFxQlAsSUFBQSxDQUFLUzt1QkFDeEMsSUFBQUosV0FBQSxDQUFBRyxHQUFBLEVBQUM7UUFBRUQsU0FBQSxFQUFVO2tCQUFzQlAsSUFBQSxDQUFLVTs7O0VBSTlDLEVBQUUsT0FBT0MsS0FBQSxFQUFPO0lBQUE7SUFBQWQsY0FBQSxHQUFBRSxDQUFBO0lBQ2Q7SUFDQSxJQUFJLEVBQUVZLEtBQUEsWUFBaUJDLE1BQUEsQ0FBQUMsUUFBUSxDQUFELEVBQUk7TUFBQTtNQUFBaEIsY0FBQSxHQUFBaUIsQ0FBQTtNQUFBakIsY0FBQSxHQUFBRSxDQUFBO01BQ2hDZ0IsT0FBQSxDQUFRSixLQUFLLENBQUMsaUJBQWlCQSxLQUFBO01BQUE7TUFBQWQsY0FBQSxHQUFBRSxDQUFBO01BRS9CLE1BQU0sSUFBSWEsTUFBQSxDQUFBQyxRQUFRLENBQ2hCLHNCQUNBRCxNQUFBLENBQUFJLFNBQVMsQ0FBQ0MsT0FBTyxFQUNqQk4sS0FBQSxFQUNBO0lBRUo7SUFBQTtJQUFBO01BQUFkLGNBQUEsR0FBQWlCLENBQUE7SUFBQTtJQUVBO0lBQUFqQixjQUFBLEdBQUFFLENBQUE7SUFDQSxJQUFJWSxLQUFBLENBQU1PLElBQUksS0FBS04sTUFBQSxDQUFBSSxTQUFTLENBQUNHLFNBQVMsRUFBRTtNQUFBO01BQUF0QixjQUFBLEdBQUFpQixDQUFBO01BQUFqQixjQUFBLEdBQUFFLENBQUE7TUFDdEMsSUFBQXFCLFdBQUEsQ0FBQUMsUUFBUTtJQUNWO0lBQUE7SUFBQTtNQUFBeEIsY0FBQSxHQUFBaUIsQ0FBQTtJQUFBO0lBRUE7SUFBQWpCLGNBQUEsR0FBQUUsQ0FBQTtJQUNBLE1BQU1ZLEtBQUE7RUFDUjtBQUNGO0FBT2UsU0FBU2pCLGdCQUFnQjtFQUFFRTtBQUFFLENBQWlCO0VBQUE7RUFBQUMsY0FBQSxHQUFBQyxDQUFBO0VBQUFELGNBQUEsR0FBQUUsQ0FBQTtFQUMzRCxvQkFDRSxJQUFBTSxXQUFBLENBQUFHLEdBQUEsRUFBQ2MsTUFBQSxDQUFBQyxRQUFRO0lBQUNDLFFBQUEsZUFBVSxJQUFBbkIsV0FBQSxDQUFBRyxHQUFBLEVBQUNpQixPQUFBLENBQUFDLFlBQVk7TUFBQ0MsT0FBQSxFQUFRO01BQW9CQyxJQUFBLEVBQUs7O2NBQ2pFLGlCQUFBdkIsV0FBQSxDQUFBRyxHQUFBLEVBQUNiLFFBQUE7TUFBU0MsRUFBQSxFQUFJQTs7O0FBR3BCIiwiaWdub3JlTGlzdCI6W119