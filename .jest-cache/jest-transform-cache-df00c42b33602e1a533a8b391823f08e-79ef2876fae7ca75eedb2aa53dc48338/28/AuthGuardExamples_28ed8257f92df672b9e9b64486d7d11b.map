{"version":3,"names":["cov_15zua6dih6","actualCoverage","s","AuthGuardExamples","f","AuthGuardHOCExample","AuthGuardHookExample","CustomCallbackExample","DirectLoginDialogExample","VoteButtonExample","checkAuth","withAuth","navigateWithAuth","isAuthenticated","_useAuthGuard","useRequireAuth","t","_languageStore","useLanguageStore","handleVote","console","log","handleNavigateToProfile","_jsxruntime","jsxs","className","jsx","b","onClick","ProtectedComponent","OptionalAuthComponent","ProtectedWithAuth","_withAuthGuard","withRequireAuth","OptionalWithAuth","withOptionalAuth","showLoginRequired","_Dialog","useLoginRequired","result","setResult","_react","useState","handleShowLoginDialog","confirmed","title","description","redirectUrl","loginText","cancelText","useAuthGuard","onAuthRequired","onAuthSuccess","handleCustomAuth","isAuthorized","voteResult","setVoteResult","voteId","voteItemId","Promise","resolve","reject","setTimeout","Math","random","Error","_VoteButton","VoteButton","onVote","artistName","user","_authprovider","useAuth","debugInfo","setDebugInfo","useEffect","updateDebugInfo","sessionStorageData","localStorageData","i","sessionStorage","length","key","includes","getItem","localStorage","error","warn","hasValidAuth","id","hasStaleAuthData","userId","userEmail","email","currentPath","window","location","pathname","savedRedirectUrl","_authredirect","getRedirectUrl","timestamp","Date","toLocaleTimeString","interval","setInterval","clearInterval","handleVoteAction","alert","handleClearRedirectUrl","clearRedirectUrl","handleSetTestRedirectUrl","testUrl","setItem","now","toString","handleClearAllStorage","clearAllAuthData","handleClearStaleAuthData","authKeys","forEach","removeItem","handleTestGoogleLogin","href","handleCheckSupabaseSession","createClient","then","_interop_require_wildcard","require","supabase","process","env","NEXT_PUBLIC_SUPABASE_URL","NEXT_PUBLIC_SUPABASE_ANON_KEY","data","auth","getUser","hasUser","provider","app_metadata","message","JSON","stringify","_common","Card","Header","Body","Object","keys","entries","map","value","String"],"sources":["/Users/cheolhyun/Repositories/picnic-web/components/ui/Dialog/examples/AuthGuardExamples.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '@/lib/supabase/auth-provider';\nimport { useAuthGuard, useRequireAuth } from '@/hooks/useAuthGuard';\nimport {\n  withRequireAuth,\n  withOptionalAuth,\n} from '@/components/auth/withAuthGuard';\nimport { useLoginRequired } from '@/components/ui/Dialog';\nimport { useLanguageStore } from '@/stores/languageStore';\nimport { VoteButton } from '@/components/client/vote/common/VoteButton';\nimport {\n  getRedirectUrl,\n  clearRedirectUrl,\n  clearAllAuthData,\n} from '@/utils/auth-redirect';\nimport { Card } from '@/components/common';\n\n// 1. 훅을 사용한 예제\nexport function AuthGuardHookExample() {\n  const { checkAuth, withAuth, navigateWithAuth, isAuthenticated } =\n    useRequireAuth();\n  const { t } = useLanguageStore();\n\n  const handleVote = async () => {\n    await withAuth(async () => {\n      console.log('투표 실행!');\n      // 실제 투표 로직\n    });\n  };\n\n  const handleNavigateToProfile = async () => {\n    await navigateWithAuth('/mypage');\n  };\n\n  return (\n    <div className='space-y-4 p-4'>\n      <h3 className='text-lg font-semibold'>인증 가드 훅 예제</h3>\n\n      <div className='space-y-2'>\n        <p>현재 인증 상태: {isAuthenticated ? '로그인됨' : '로그인 안됨'}</p>\n\n        <button\n          onClick={handleVote}\n          className='px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700'\n        >\n          투표하기 (인증 필요)\n        </button>\n\n        <button\n          onClick={handleNavigateToProfile}\n          className='px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700'\n        >\n          마이페이지로 이동 (인증 필요)\n        </button>\n      </div>\n    </div>\n  );\n}\n\n// 2. HOC를 사용한 예제\nfunction ProtectedComponent() {\n  return (\n    <div className='p-4 bg-green-50 rounded'>\n      <h3 className='text-lg font-semibold text-green-800'>보호된 컴포넌트</h3>\n      <p className='text-green-600'>\n        이 컴포넌트는 로그인한 사용자만 볼 수 있습니다.\n      </p>\n    </div>\n  );\n}\n\nfunction OptionalAuthComponent() {\n  return (\n    <div className='p-4 bg-blue-50 rounded'>\n      <h3 className='text-lg font-semibold text-blue-800'>\n        선택적 인증 컴포넌트\n      </h3>\n      <p className='text-blue-600'>\n        이 컴포넌트는 로그인 여부와 관계없이 볼 수 있습니다.\n      </p>\n    </div>\n  );\n}\n\n// HOC 적용\nconst ProtectedWithAuth = withRequireAuth(ProtectedComponent);\nconst OptionalWithAuth = withOptionalAuth(OptionalAuthComponent);\n\nexport function AuthGuardHOCExample() {\n  return (\n    <div className='space-y-4 p-4'>\n      <h3 className='text-lg font-semibold'>인증 가드 HOC 예제</h3>\n\n      <div className='space-y-4'>\n        <ProtectedWithAuth />\n        <OptionalWithAuth />\n      </div>\n    </div>\n  );\n}\n\n// 3. 직접 로그인 다이얼로그 사용 예제\nexport function DirectLoginDialogExample() {\n  const showLoginRequired = useLoginRequired();\n  const { t } = useLanguageStore();\n  const [result, setResult] = useState<string>('');\n\n  const handleShowLoginDialog = async () => {\n    const confirmed = await showLoginRequired({\n      title: '프리미엄 기능',\n      description:\n        '이 기능은 프리미엄 회원만 사용할 수 있습니다. 로그인하시겠습니까?',\n      redirectUrl: '/premium-feature',\n      loginText: t('dialog.login_required.login_button') || '로그인하기',\n      cancelText: t('dialog.login_required.cancel_button') || '나중에',\n    });\n\n    setResult(confirmed ? '로그인 선택됨' : '취소됨');\n  };\n\n  return (\n    <div className='space-y-4 p-4'>\n      <h3 className='text-lg font-semibold'>직접 로그인 다이얼로그 예제</h3>\n\n      <button\n        onClick={handleShowLoginDialog}\n        className='px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700'\n      >\n        프리미엄 기능 사용하기\n      </button>\n\n      {result && <p className='text-sm text-gray-600'>결과: {result}</p>}\n    </div>\n  );\n}\n\n// 4. 커스텀 콜백을 사용한 예제\nexport function CustomCallbackExample() {\n  const { checkAuth } = useAuthGuard({\n    onAuthRequired: (redirectUrl) => {\n      console.log('커스텀 인증 필요 처리:', redirectUrl);\n      // 커스텀 로직 (예: 특별한 로그인 플로우)\n    },\n    onAuthSuccess: () => {\n      console.log('인증 성공!');\n      // 성공 후 추가 로직\n    },\n  });\n\n  const handleCustomAuth = async () => {\n    const isAuthorized = await checkAuth();\n    if (isAuthorized) {\n      console.log('인증된 사용자 전용 기능 실행');\n    }\n  };\n\n  return (\n    <div className='space-y-4 p-4'>\n      <h3 className='text-lg font-semibold'>커스텀 콜백 예제</h3>\n\n      <button\n        onClick={handleCustomAuth}\n        className='px-4 py-2 bg-orange-600 text-white rounded hover:bg-orange-700'\n      >\n        커스텀 인증 체크\n      </button>\n    </div>\n  );\n}\n\n// 5. VoteButton을 사용한 실제 투표 예제\nexport function VoteButtonExample() {\n  const { t } = useLanguageStore();\n  const [voteResult, setVoteResult] = useState<string>('');\n\n  const handleVote = async (voteId: string, voteItemId: string) => {\n    // 실제 투표 API 호출 시뮬레이션\n    return new Promise<void>((resolve, reject) => {\n      setTimeout(() => {\n        if (Math.random() > 0.1) {\n          // 90% 성공률\n          setVoteResult(`투표 성공: ${voteItemId}에 투표했습니다!`);\n          resolve();\n        } else {\n          reject(new Error('투표 처리 중 오류가 발생했습니다.'));\n        }\n      }, 1500);\n    });\n  };\n\n  return (\n    <div className='space-y-4 p-4'>\n      <h3 className='text-lg font-semibold'>VoteButton 투표 예제</h3>\n\n      <div className='grid gap-4 md:grid-cols-2'>\n        <div className='p-4 border rounded-lg'>\n          <h4 className='font-medium mb-2'>아티스트 A</h4>\n          <VoteButton\n            voteId='vote-123'\n            voteItemId='artist-a'\n            onVote={handleVote}\n            artistName='아티스트 A'\n            className='w-full'\n          />\n        </div>\n\n        <div className='p-4 border rounded-lg'>\n          <h4 className='font-medium mb-2'>아티스트 B</h4>\n          <VoteButton\n            voteId='vote-123'\n            voteItemId='artist-b'\n            onVote={handleVote}\n            artistName='아티스트 B'\n            className='w-full'\n          />\n        </div>\n      </div>\n\n      {voteResult && (\n        <div className='p-3 bg-green-50 border border-green-200 rounded-lg'>\n          <p className='text-green-800 text-sm'>{voteResult}</p>\n        </div>\n      )}\n\n      <div className='text-sm text-gray-600'>\n        <p>\n          <strong>테스트 방법:</strong>\n        </p>\n        <ul className='list-disc list-inside mt-1 space-y-1'>\n          <li>\n            로그아웃 상태에서 투표 버튼 클릭 → 로그인 필요 다이얼로그 표시\n          </li>\n          <li>로그인 상태에서 투표 버튼 클릭 → 투표 진행</li>\n          <li>아티스트별로 다른 메시지 확인</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\n// 전체 예제를 모은 컴포넌트\nexport function AuthGuardExamples() {\n  const { isAuthenticated, user } = useAuth();\n  const { withAuth } = useRequireAuth();\n  const [debugInfo, setDebugInfo] = useState<any>({});\n\n  // 디버깅 정보 업데이트\n  useEffect(() => {\n    const updateDebugInfo = () => {\n      // sessionStorage와 localStorage 상태 확인\n      const sessionStorageData = {};\n      const localStorageData = {};\n\n      try {\n        // sessionStorage 데이터 수집\n        for (let i = 0; i < sessionStorage.length; i++) {\n          const key = sessionStorage.key(i);\n          if (key && (key.includes('redirect') || key.includes('auth'))) {\n            sessionStorageData[key] = sessionStorage.getItem(key);\n          }\n        }\n\n        // localStorage 데이터 수집\n        for (let i = 0; i < localStorage.length; i++) {\n          const key = localStorage.key(i);\n          if (key && (key.includes('redirect') || key.includes('auth'))) {\n            localStorageData[key] = localStorage.getItem(key);\n          }\n        }\n      } catch (error) {\n        console.warn('Storage 접근 오류:', error);\n      }\n\n      // 인증 상태 검증\n      const hasValidAuth = isAuthenticated && user && user.id;\n      const hasStaleAuthData =\n        !hasValidAuth &&\n        (localStorage.getItem('auth_success') ||\n          localStorage.getItem('auth_provider') ||\n          localStorage.getItem('auth_timestamp'));\n\n      setDebugInfo({\n        isAuthenticated,\n        userId: user?.id || null,\n        userEmail: user?.email || null,\n        hasValidAuth,\n        hasStaleAuthData,\n        currentPath:\n          typeof window !== 'undefined' ? window.location.pathname : null,\n        savedRedirectUrl: getRedirectUrl(),\n        sessionStorage: sessionStorageData,\n        localStorage: localStorageData,\n        timestamp: new Date().toLocaleTimeString(),\n      });\n    };\n\n    updateDebugInfo();\n    const interval = setInterval(updateDebugInfo, 1000);\n\n    return () => clearInterval(interval);\n  }, [isAuthenticated, user]);\n\n  const handleVoteAction = async () => {\n    await withAuth(async () => {\n      alert('투표가 완료되었습니다!');\n    });\n  };\n\n  const handleClearRedirectUrl = () => {\n    clearRedirectUrl();\n    alert('리다이렉트 URL이 제거되었습니다.');\n  };\n\n  const handleSetTestRedirectUrl = () => {\n    const testUrl = '/ko/vote/123';\n    if (typeof window !== 'undefined') {\n      sessionStorage.setItem('auth_redirect_url', testUrl);\n      sessionStorage.setItem('auth_redirect_timestamp', Date.now().toString());\n      alert(`테스트 리다이렉트 URL 설정: ${testUrl}`);\n    }\n  };\n\n  const handleClearAllStorage = () => {\n    if (typeof window !== 'undefined') {\n      // clearAllAuthData 함수 사용\n      clearAllAuthData();\n      alert('모든 인증 관련 저장소 데이터가 제거되었습니다.');\n    }\n  };\n\n  const handleClearStaleAuthData = () => {\n    if (typeof window !== 'undefined') {\n      // 잘못된 인증 데이터만 정리\n      const authKeys = ['auth_success', 'auth_provider', 'auth_timestamp'];\n      authKeys.forEach((key) => {\n        if (localStorage.getItem(key)) {\n          localStorage.removeItem(key);\n        }\n      });\n      alert('잘못된 인증 데이터가 정리되었습니다.');\n    }\n  };\n\n  const handleTestGoogleLogin = () => {\n    if (typeof window !== 'undefined') {\n      // 구글 로그인 테스트\n      window.location.href = '/api/auth/google';\n    }\n  };\n\n  const handleCheckSupabaseSession = async () => {\n    if (typeof window !== 'undefined') {\n      try {\n        const { createClient } = await import('@supabase/supabase-js');\n        const supabase = createClient(\n          process.env.NEXT_PUBLIC_SUPABASE_URL!,\n          process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n        );\n\n        const {\n          data: { user },\n          error,\n        } = await supabase.auth.getUser();\n\n        console.log('🔍 Supabase 사용자 확인:', {\n          hasUser: !!user,\n          userId: user?.id,\n          userEmail: user?.email,\n          provider: user?.app_metadata?.provider,\n          error: error?.message,\n        });\n\n        alert(\n          `Supabase 사용자 상태:\\n${JSON.stringify(\n            {\n              hasUser: !!user,\n              userId: user?.id,\n              userEmail: user?.email,\n              provider: user?.app_metadata?.provider,\n              error: error?.message,\n            },\n            null,\n            2,\n          )}`,\n        );\n      } catch (error) {\n        console.error('세션 확인 오류:', error);\n        alert(`세션 확인 오류: ${error}`);\n      }\n    }\n  };\n\n  return (\n    <div className='space-y-6 p-6'>\n      <h2 className='text-2xl font-bold'>인증 가드 테스트</h2>\n\n      {/* 디버깅 정보 */}\n      <Card>\n        <Card.Header>\n          <h3 className='text-lg font-semibold'>디버깅 정보</h3>\n        </Card.Header>\n        <Card.Body>\n          <div className='space-y-2 text-sm'>\n            <div>\n              <strong>인증 상태:</strong>{' '}\n              {debugInfo.isAuthenticated ? '✅ 로그인됨' : '❌ 로그아웃됨'}\n            </div>\n            <div>\n              <strong>유효한 인증:</strong>{' '}\n              {debugInfo.hasValidAuth ? '✅ 유효함' : '❌ 무효함'}\n            </div>\n            {debugInfo.hasStaleAuthData && (\n              <div className='text-red-600'>\n                <strong>⚠️ 잘못된 인증 데이터:</strong> 로컬 스토리지에 오래된\n                인증 데이터가 남아있습니다.\n              </div>\n            )}\n            <div>\n              <strong>사용자 ID:</strong> {debugInfo.userId || 'N/A'}\n            </div>\n            <div>\n              <strong>사용자 이메일:</strong> {debugInfo.userEmail || 'N/A'}\n            </div>\n            <div>\n              <strong>현재 경로:</strong> {debugInfo.currentPath || 'N/A'}\n            </div>\n            <div>\n              <strong>저장된 리다이렉트 URL:</strong>{' '}\n              {debugInfo.savedRedirectUrl || 'N/A'}\n            </div>\n            <div>\n              <strong>마지막 업데이트:</strong> {debugInfo.timestamp}\n            </div>\n\n            {/* sessionStorage 정보 */}\n            <div className='mt-4 pt-4 border-t'>\n              <strong>SessionStorage:</strong>\n              <div className='ml-4 mt-2 space-y-1'>\n                {debugInfo.sessionStorage &&\n                Object.keys(debugInfo.sessionStorage).length > 0 ? (\n                  Object.entries(debugInfo.sessionStorage).map(\n                    ([key, value]) => (\n                      <div key={key} className='text-xs'>\n                        <span className='font-mono text-blue-600'>{key}:</span>{' '}\n                        {String(value)}\n                      </div>\n                    ),\n                  )\n                ) : (\n                  <div className='text-xs text-gray-500'>관련 데이터 없음</div>\n                )}\n              </div>\n            </div>\n\n            {/* localStorage 정보 */}\n            <div className='mt-4 pt-4 border-t'>\n              <strong>LocalStorage:</strong>\n              <div className='ml-4 mt-2 space-y-1'>\n                {debugInfo.localStorage &&\n                Object.keys(debugInfo.localStorage).length > 0 ? (\n                  Object.entries(debugInfo.localStorage).map(([key, value]) => (\n                    <div key={key} className='text-xs'>\n                      <span className='font-mono text-green-600'>{key}:</span>{' '}\n                      {String(value)}\n                    </div>\n                  ))\n                ) : (\n                  <div className='text-xs text-gray-500'>관련 데이터 없음</div>\n                )}\n              </div>\n            </div>\n          </div>\n        </Card.Body>\n      </Card>\n\n      {/* 테스트 버튼들 */}\n      <Card>\n        <Card.Header>\n          <h3 className='text-lg font-semibold'>테스트 액션</h3>\n        </Card.Header>\n        <Card.Body className='space-y-4'>\n          <button\n            onClick={handleVoteAction}\n            className='w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors'\n          >\n            투표하기 (인증 필요)\n          </button>\n\n          <button\n            onClick={() => {\n              // 실제 투표 페이지로 이동하여 테스트\n              if (typeof window !== 'undefined') {\n                window.location.href = '/ko/vote/1';\n              }\n            }}\n            className='w-full px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors'\n          >\n            실제 투표 페이지로 이동 (테스트용)\n          </button>\n\n          <button\n            onClick={handleClearRedirectUrl}\n            className='w-full px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors'\n          >\n            리다이렉트 URL 제거\n          </button>\n\n          <button\n            onClick={handleSetTestRedirectUrl}\n            className='w-full px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition-colors'\n          >\n            테스트 리다이렉트 URL 설정\n          </button>\n\n          <button\n            onClick={handleClearAllStorage}\n            className='w-full px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors'\n          >\n            모든 인증 관련 저장소 데이터 제거\n          </button>\n\n          <button\n            onClick={handleClearStaleAuthData}\n            className='w-full px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors'\n          >\n            잘못된 인증 데이터 정리\n          </button>\n\n          {isAuthenticated && (\n            <button\n              onClick={() => {\n                if (typeof window !== 'undefined') {\n                  window.location.href = '/login';\n                }\n              }}\n              className='w-full px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors'\n            >\n              로그인 페이지로 이동 (테스트용)\n            </button>\n          )}\n\n          <button\n            onClick={handleTestGoogleLogin}\n            className='w-full px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors'\n          >\n            구글 로그인 테스트\n          </button>\n\n          <button\n            onClick={handleCheckSupabaseSession}\n            className='w-full px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors'\n          >\n            스파바 세션 확인\n          </button>\n        </Card.Body>\n      </Card>\n\n      {/* 기존 예제들 */}\n      <VoteButtonExample />\n    </div>\n  );\n}\n"],"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","ignoreList":[]}