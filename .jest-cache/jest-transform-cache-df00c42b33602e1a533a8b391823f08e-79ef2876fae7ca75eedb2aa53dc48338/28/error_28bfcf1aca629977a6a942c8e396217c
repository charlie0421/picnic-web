cb52e4c2ede3b019594bfddbaa0a9b2f
"use strict";

/* istanbul ignore next */
function cov_khxtgp9rg() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/lib/supabase/error.ts";
  var hash = "4ddeda0a0dedb954b4874014d17acb43b82e5ce4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/lib/supabase/error.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 24
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 25
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 27
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 35
        }
      },
      "8": {
        start: {
          line: 25,
          column: 30
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "9": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "10": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 47
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "12": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 39
        }
      },
      "13": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 43
        }
      },
      "14": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 47
        }
      },
      "15": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 49
        }
      },
      "16": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 63
        }
      },
      "17": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 37
        }
      },
      "18": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 21
        }
      },
      "19": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 23
        }
      },
      "20": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 31
        }
      },
      "21": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 25
        }
      },
      "22": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 31
        }
      },
      "23": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 29
        }
      },
      "24": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "25": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 45
        }
      },
      "26": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 37
        }
      },
      "27": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 38
        }
      },
      "28": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 63
        }
      },
      "29": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 41
        }
      },
      "30": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 44
        }
      },
      "31": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 42
        }
      },
      "32": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 56
        }
      },
      "33": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 60
        }
      },
      "34": {
        start: {
          line: 74,
          column: 27
        },
        end: {
          line: 93,
          column: 1
        }
      },
      "35": {
        start: {
          line: 95,
          column: 39
        },
        end: {
          line: 95,
          column: 44
        }
      },
      "36": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "37": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 107
        }
      },
      "38": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "39": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 77
        }
      },
      "40": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "41": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 70
        }
      },
      "42": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 112,
          column: 5
        }
      },
      "43": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 72
        }
      },
      "44": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "45": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 78
        }
      },
      "46": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 82
        }
      },
      "47": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "48": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 21
        }
      },
      "49": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "50": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 42
        }
      },
      "51": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "52": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 74
        }
      },
      "53": {
        start: {
          line: 135,
          column: 25
        },
        end: {
          line: 135,
          column: 79
        }
      },
      "54": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 84
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 14
          },
          end: {
            line: 12,
            column: 15
          }
        },
        loc: {
          start: {
            line: 12,
            column: 25
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 15,
            column: 16
          }
        },
        loc: {
          start: {
            line: 15,
            column: 26
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 17
          },
          end: {
            line: 18,
            column: 18
          }
        },
        loc: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 21,
            column: 26
          }
        },
        loc: {
          start: {
            line: 21,
            column: 36
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 25,
            column: 31
          }
        },
        loc: {
          start: {
            line: 25,
            column: 50
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 47
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 38
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 47,
            column: 6
          },
          end: {
            line: 47,
            column: 7
          }
        },
        loc: {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 47
      },
      "8": {
        name: "handleSupabaseError",
        decl: {
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 94,
            column: 28
          }
        },
        loc: {
          start: {
            line: 94,
            column: 36
          },
          end: {
            line: 120,
            column: 1
          }
        },
        line: 94
      },
      "9": {
        name: "handleError",
        decl: {
          start: {
            line: 121,
            column: 9
          },
          end: {
            line: 121,
            column: 20
          }
        },
        loc: {
          start: {
            line: 121,
            column: 28
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 121
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 50,
            column: 45
          }
        }, {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 52,
            column: 37
          }
        }, {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 54,
            column: 38
          }
        }, {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 56,
            column: 63
          }
        }, {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 58,
            column: 41
          }
        }, {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 60,
            column: 44
          }
        }, {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 62,
            column: 42
          }
        }, {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 64,
            column: 56
          }
        }, {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 66,
            column: 60
          }
        }],
        line: 48
      },
      "1": {
        loc: {
          start: {
            line: 66,
            column: 23
          },
          end: {
            line: 66,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 23
          },
          end: {
            line: 66,
            column: 35
          }
        }, {
          start: {
            line: 66,
            column: 39
          },
          end: {
            line: 66,
            column: 59
          }
        }],
        line: 66
      },
      "2": {
        loc: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "3": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 98,
            column: 251
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 98,
            column: 52
          }
        }, {
          start: {
            line: 98,
            column: 56
          },
          end: {
            line: 98,
            column: 100
          }
        }, {
          start: {
            line: 98,
            column: 104
          },
          end: {
            line: 98,
            column: 149
          }
        }, {
          start: {
            line: 98,
            column: 153
          },
          end: {
            line: 98,
            column: 206
          }
        }, {
          start: {
            line: 98,
            column: 210
          },
          end: {
            line: 98,
            column: 251
          }
        }],
        line: 98
      },
      "4": {
        loc: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "5": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 102,
            column: 195
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 102,
            column: 47
          }
        }, {
          start: {
            line: 102,
            column: 51
          },
          end: {
            line: 102,
            column: 91
          }
        }, {
          start: {
            line: 102,
            column: 95
          },
          end: {
            line: 102,
            column: 146
          }
        }, {
          start: {
            line: 102,
            column: 150
          },
          end: {
            line: 102,
            column: 195
          }
        }],
        line: 102
      },
      "6": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "7": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 106,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 106,
            column: 54
          }
        }, {
          start: {
            line: 106,
            column: 58
          },
          end: {
            line: 106,
            column: 98
          }
        }],
        line: 106
      },
      "8": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "9": {
        loc: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "10": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 114,
            column: 175
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 114,
            column: 50
          }
        }, {
          start: {
            line: 114,
            column: 54
          },
          end: {
            line: 114,
            column: 93
          }
        }, {
          start: {
            line: 114,
            column: 97
          },
          end: {
            line: 114,
            column: 149
          }
        }, {
          start: {
            line: 114,
            column: 153
          },
          end: {
            line: 114,
            column: 175
          }
        }],
        line: 114
      },
      "11": {
        loc: {
          start: {
            line: 119,
            column: 24
          },
          end: {
            line: 119,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 24
          },
          end: {
            line: 119,
            column: 31
          }
        }, {
          start: {
            line: 119,
            column: 35
          },
          end: {
            line: 119,
            column: 50
          }
        }],
        line: 119
      },
      "12": {
        loc: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "13": {
        loc: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "14": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 127,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 127,
            column: 13
          }
        }, {
          start: {
            line: 127,
            column: 17
          },
          end: {
            line: 127,
            column: 42
          }
        }, {
          start: {
            line: 127,
            column: 46
          },
          end: {
            line: 127,
            column: 61
          }
        }, {
          start: {
            line: 127,
            column: 65
          },
          end: {
            line: 127,
            column: 83
          }
        }],
        line: 127
      },
      "15": {
        loc: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "16": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 131,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 131,
            column: 34
          }
        }, {
          start: {
            line: 131,
            column: 38
          },
          end: {
            line: 131,
            column: 69
          }
        }],
        line: 131
      },
      "17": {
        loc: {
          start: {
            line: 135,
            column: 25
          },
          end: {
            line: 135,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 50
          },
          end: {
            line: 135,
            column: 63
          }
        }, {
          start: {
            line: 135,
            column: 66
          },
          end: {
            line: 135,
            column: 79
          }
        }],
        line: 135
      },
      "18": {
        loc: {
          start: {
            line: 136,
            column: 24
          },
          end: {
            line: 136,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 24
          },
          end: {
            line: 136,
            column: 36
          }
        }, {
          start: {
            line: 136,
            column: 40
          },
          end: {
            line: 136,
            column: 59
          }
        }],
        line: 136
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/lib/supabase/error.ts"],
      sourcesContent: ["import { PostgrestError } from '@supabase/supabase-js';\n\n/**\n * \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 \uC5D0\uB7EC \uCF54\uB4DC \uC5F4\uAC70\uD615\n */\nexport enum ErrorCode {\n  NOT_FOUND = 'not_found',\n  UNAUTHORIZED = 'unauthorized',\n  FORBIDDEN = 'forbidden',\n  CONFLICT = 'conflict',\n  VALIDATION = 'validation',\n  SERVER_ERROR = 'server_error',\n  NETWORK_ERROR = 'network_error',\n  RLS_POLICY_VIOLATION = 'rls_policy_violation',\n  UNKNOWN = 'unknown',\n}\n\n/**\n * \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uC5D0\uB7EC \uD074\uB798\uC2A4\n * \n * \uBAA8\uB4E0 API \uC5D0\uB7EC\uB294 \uC774 \uD074\uB798\uC2A4\uB97C \uC0AC\uC6A9\uD558\uC5EC \uC77C\uAD00\uB41C \uD615\uC2DD\uC73C\uB85C \uBC18\uD658\uB429\uB2C8\uB2E4.\n */\nexport class AppError extends Error {\n  code: ErrorCode;\n  status?: number;\n  details?: unknown;\n\n  constructor(message: string, code: ErrorCode, details?: unknown, status?: number) {\n    super(message);\n    this.name = 'AppError';\n    this.code = code;\n    this.details = details;\n    this.status = status;\n  }\n\n  /**\n   * \uC5D0\uB7EC \uBA54\uC2DC\uC9C0\uC640 \uD568\uAED8 \uD1A0\uC2A4\uD2B8 \uB4F1\uC5D0 \uD45C\uC2DC\uD560 \uC218 \uC788\uB294 \uC0AC\uC6A9\uC790 \uCE5C\uD654\uC801\uC778 \uBA54\uC2DC\uC9C0\uB97C \uBC18\uD658\uD569\uB2C8\uB2E4.\n   */\n  toFriendlyMessage(): string {\n    switch (this.code) {\n      case ErrorCode.NOT_FOUND:\n        return '\uC694\uCCAD\uD55C \uB370\uC774\uD130\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.';\n      case ErrorCode.UNAUTHORIZED:\n        return '\uB85C\uADF8\uC778\uC774 \uD544\uC694\uD569\uB2C8\uB2E4.';\n      case ErrorCode.FORBIDDEN:\n        return '\uC811\uADFC \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.';\n      case ErrorCode.RLS_POLICY_VIOLATION:\n        return '\uB370\uC774\uD130 \uC811\uADFC \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4. \uBCF8\uC778\uC758 \uB370\uC774\uD130\uB9CC \uC811\uADFC\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.';\n      case ErrorCode.CONFLICT:\n        return '\uB370\uC774\uD130 \uCDA9\uB3CC\uC774 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.';\n      case ErrorCode.VALIDATION:\n        return '\uC785\uB825 \uB370\uC774\uD130\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.';\n      case ErrorCode.NETWORK_ERROR:\n        return '\uB124\uD2B8\uC6CC\uD06C \uC5F0\uACB0\uC744 \uD655\uC778\uD574\uC8FC\uC138\uC694.';\n      case ErrorCode.SERVER_ERROR:\n        return '\uC11C\uBC84 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. \uC7A0\uC2DC \uD6C4 \uB2E4\uC2DC \uC2DC\uB3C4\uD574\uC8FC\uC138\uC694.';\n      default:\n        return this.message || '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.';\n    }\n  }\n}\n\n/**\n * PostgreSQL \uC5D0\uB7EC \uCF54\uB4DC\uC640 \uAD00\uB828 \uC815\uBCF4\n * \n * https://www.postgresql.org/docs/current/errcodes-appendix.html\n */\nconst PG_ERROR_CODES = {\n  // \"not_found\" \uAD00\uB828 \uC5D0\uB7EC\n  UNDEFINED_TABLE: '42P01',      // undefined_table\n  UNDEFINED_COLUMN: '42703',     // undefined_column\n  INVALID_TEXT_REPRESENTATION: '22P02',  // invalid_text_representation (e.g., UUID \uD3EC\uB9F7 \uC624\uB958)\n  FOREIGN_KEY_VIOLATION: '23503', // foreign_key_violation\n\n  // \"forbidden\" \uAD00\uB828 \uC5D0\uB7EC\n  INSUFFICIENT_PRIVILEGE: '42501', // insufficient_privilege\n  INVALID_PASSWORD: '28P01',      // invalid_password\n\n  // \"conflict\" \uAD00\uB828 \uC5D0\uB7EC\n  UNIQUE_VIOLATION: '23505',     // unique_violation\n\n  // \"validation\" \uAD00\uB828 \uC5D0\uB7EC\n  NOT_NULL_VIOLATION: '23502',   // not_null_violation\n  CHECK_VIOLATION: '23514',      // check_violation\n  STRING_DATA_RIGHT_TRUNCATION: '22001', // string_data_right_truncation\n\n  // RLS \uC815\uCC45 \uAD00\uB828 \uC5D0\uB7EC (Supabase/PostgREST \uD2B9\uD654)\n  RLS_POLICY_VIOLATION: 'PGRST301', // RLS \uC815\uCC45 \uC704\uBC18\n  RLS_NO_ROWS_RETURNED: 'PGRST204', // RLS\uB85C \uC778\uD574 \uBC18\uD658\uB41C \uD589\uC774 \uC5C6\uC74C\n  RLS_PERMISSION_DENIED: 'PGRST403', // RLS \uAD8C\uD55C \uAC70\uBD80\n};\n\n/**\n * Supabase/Postgres \uC5D0\uB7EC\uB97C \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uD45C\uC900 \uC5D0\uB7EC\uB85C \uBCC0\uD658\uD569\uB2C8\uB2E4.\n * \n * @param error Supabase\uC5D0\uC11C \uBC18\uD658\uB41C PostgrestError\n * @returns \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uD45C\uC900 \uC5D0\uB7EC \uAC1D\uCCB4\n */\nexport function handleSupabaseError(error: PostgrestError): AppError {\n  const { code, message, details } = error;\n  \n  // PostgreSQL \uC5D0\uB7EC \uCF54\uB4DC\uC5D0 \uB530\uB77C \uC801\uC808\uD55C \uC5D0\uB7EC \uBC18\uD658\n  \n  // RLS \uC815\uCC45 \uAD00\uB828 \uC5D0\uB7EC (\uCD5C\uC6B0\uC120 \uCC98\uB9AC)\n  if (\n    code === PG_ERROR_CODES.RLS_POLICY_VIOLATION ||\n    code === PG_ERROR_CODES.RLS_NO_ROWS_RETURNED ||\n    code === PG_ERROR_CODES.RLS_PERMISSION_DENIED ||\n    message?.toLowerCase().includes('row level security') ||\n    message?.toLowerCase().includes('policy')\n  ) {\n    return new AppError(\n      '\uB370\uC774\uD130 \uC811\uADFC \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4. \uBCF8\uC778\uC758 \uB370\uC774\uD130\uB9CC \uC811\uADFC\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.',\n      ErrorCode.RLS_POLICY_VIOLATION,\n      details,\n      403\n    );\n  }\n  \n  // NOT_FOUND \uC5D0\uB7EC\n  if (\n    code === PG_ERROR_CODES.UNDEFINED_TABLE ||\n    code === PG_ERROR_CODES.UNDEFINED_COLUMN ||\n    code === PG_ERROR_CODES.INVALID_TEXT_REPRESENTATION ||\n    code === PG_ERROR_CODES.FOREIGN_KEY_VIOLATION\n  ) {\n    return new AppError(\n      '\uC694\uCCAD\uD55C \uB370\uC774\uD130\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4', \n      ErrorCode.NOT_FOUND, \n      details,\n      404\n    );\n  }\n  \n  // FORBIDDEN \uC5D0\uB7EC\n  if (\n    code === PG_ERROR_CODES.INSUFFICIENT_PRIVILEGE ||\n    code === PG_ERROR_CODES.INVALID_PASSWORD\n  ) {\n    return new AppError(\n      '\uC811\uADFC \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4', \n      ErrorCode.FORBIDDEN, \n      details,\n      403\n    );\n  }\n  \n  // CONFLICT \uC5D0\uB7EC\n  if (code === PG_ERROR_CODES.UNIQUE_VIOLATION) {\n    return new AppError(\n      '\uC911\uBCF5\uB41C \uB370\uC774\uD130\uAC00 \uC874\uC7AC\uD569\uB2C8\uB2E4', \n      ErrorCode.CONFLICT, \n      details,\n      409\n    );\n  }\n  \n  // VALIDATION \uC5D0\uB7EC\n  if (\n    code === PG_ERROR_CODES.NOT_NULL_VIOLATION ||\n    code === PG_ERROR_CODES.CHECK_VIOLATION ||\n    code === PG_ERROR_CODES.STRING_DATA_RIGHT_TRUNCATION ||\n    code?.startsWith('22') // \uB370\uC774\uD130 \uC608\uC678 \uD074\uB798\uC2A4\n  ) {\n    return new AppError(\n      '\uB370\uC774\uD130 \uC720\uD6A8\uC131 \uAC80\uC99D\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4', \n      ErrorCode.VALIDATION, \n      details,\n      400\n    );\n  }\n  \n  // \uAE30\uD0C0 \uC11C\uBC84 \uC5D0\uB7EC\n  return new AppError(\n    message || '\uC11C\uBC84 \uC5D0\uB7EC\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4', \n    ErrorCode.SERVER_ERROR, \n    details,\n    500\n  );\n}\n\n/**\n * \uC77C\uBC18 \uC5D0\uB7EC\uB97C \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uD45C\uC900 \uC5D0\uB7EC\uB85C \uBCC0\uD658\uD569\uB2C8\uB2E4.\n * \n * @param error \uBC1C\uC0DD\uD55C \uC5D0\uB7EC \uAC1D\uCCB4\n * @returns \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uD45C\uC900 \uC5D0\uB7EC \uAC1D\uCCB4\n */\nexport function handleError(error: unknown): AppError {\n  // \uC774\uBBF8 AppError\uC778 \uACBD\uC6B0 \uADF8\uB300\uB85C \uBC18\uD658\n  if (error instanceof AppError) {\n    return error;\n  }\n  \n  // PostgrestError\uC778 \uACBD\uC6B0 handleSupabaseError\uB85C \uBCC0\uD658\n  if (error && typeof error === 'object' && 'code' in error && 'message' in error) {\n    return handleSupabaseError(error as PostgrestError);\n  }\n  \n  // \uB124\uD2B8\uC6CC\uD06C \uC5D0\uB7EC\n  if (error instanceof TypeError && error.message.includes('fetch')) {\n    return new AppError(\n      '\uB124\uD2B8\uC6CC\uD06C \uC5F0\uACB0\uC744 \uD655\uC778\uD574\uC8FC\uC138\uC694',\n      ErrorCode.NETWORK_ERROR,\n      error,\n      0\n    );\n  }\n  \n  // \uADF8 \uC678 \uBAA8\uB4E0 \uC5D0\uB7EC\uB294 UNKNOWN\uC73C\uB85C \uCC98\uB9AC\n  const errorMessage = error instanceof Error ? error.message : String(error);\n  return new AppError(\n    errorMessage || '\uC54C \uC218 \uC5C6\uB294 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4',\n    ErrorCode.UNKNOWN,\n    error,\n    500\n  );\n} "],
      names: ["AppError", "ErrorCode", "handleError", "handleSupabaseError", "Error", "constructor", "message", "code", "details", "status", "name", "toFriendlyMessage", "PG_ERROR_CODES", "UNDEFINED_TABLE", "UNDEFINED_COLUMN", "INVALID_TEXT_REPRESENTATION", "FOREIGN_KEY_VIOLATION", "INSUFFICIENT_PRIVILEGE", "INVALID_PASSWORD", "UNIQUE_VIOLATION", "NOT_NULL_VIOLATION", "CHECK_VIOLATION", "STRING_DATA_RIGHT_TRUNCATION", "RLS_POLICY_VIOLATION", "RLS_NO_ROWS_RETURNED", "RLS_PERMISSION_DENIED", "error", "toLowerCase", "includes", "startsWith", "TypeError", "errorMessage", "String"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4ddeda0a0dedb954b4874014d17acb43b82e5ce4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_khxtgp9rg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_khxtgp9rg();
cov_khxtgp9rg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_khxtgp9rg().f[0]++;
  cov_khxtgp9rg().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_khxtgp9rg().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_khxtgp9rg().s[3]++;
_export(exports, {
  AppError: function () {
    /* istanbul ignore next */
    cov_khxtgp9rg().f[1]++;
    cov_khxtgp9rg().s[4]++;
    return AppError;
  },
  ErrorCode: function () {
    /* istanbul ignore next */
    cov_khxtgp9rg().f[2]++;
    cov_khxtgp9rg().s[5]++;
    return ErrorCode;
  },
  handleError: function () {
    /* istanbul ignore next */
    cov_khxtgp9rg().f[3]++;
    cov_khxtgp9rg().s[6]++;
    return handleError;
  },
  handleSupabaseError: function () {
    /* istanbul ignore next */
    cov_khxtgp9rg().f[4]++;
    cov_khxtgp9rg().s[7]++;
    return handleSupabaseError;
  }
});
var ErrorCode =
/* istanbul ignore next */
(/*#__PURE__*/cov_khxtgp9rg().s[8]++, function (ErrorCode) {
  /* istanbul ignore next */
  cov_khxtgp9rg().f[5]++;
  cov_khxtgp9rg().s[9]++;
  ErrorCode["NOT_FOUND"] = "not_found";
  /* istanbul ignore next */
  cov_khxtgp9rg().s[10]++;
  ErrorCode["UNAUTHORIZED"] = "unauthorized";
  /* istanbul ignore next */
  cov_khxtgp9rg().s[11]++;
  ErrorCode["FORBIDDEN"] = "forbidden";
  /* istanbul ignore next */
  cov_khxtgp9rg().s[12]++;
  ErrorCode["CONFLICT"] = "conflict";
  /* istanbul ignore next */
  cov_khxtgp9rg().s[13]++;
  ErrorCode["VALIDATION"] = "validation";
  /* istanbul ignore next */
  cov_khxtgp9rg().s[14]++;
  ErrorCode["SERVER_ERROR"] = "server_error";
  /* istanbul ignore next */
  cov_khxtgp9rg().s[15]++;
  ErrorCode["NETWORK_ERROR"] = "network_error";
  /* istanbul ignore next */
  cov_khxtgp9rg().s[16]++;
  ErrorCode["RLS_POLICY_VIOLATION"] = "rls_policy_violation";
  /* istanbul ignore next */
  cov_khxtgp9rg().s[17]++;
  ErrorCode["UNKNOWN"] = "unknown";
  /* istanbul ignore next */
  cov_khxtgp9rg().s[18]++;
  return ErrorCode;
}({}));
class AppError extends Error {
  constructor(message, code, details, status) {
    /* istanbul ignore next */
    cov_khxtgp9rg().f[6]++;
    cov_khxtgp9rg().s[19]++;
    super(message);
    /* istanbul ignore next */
    cov_khxtgp9rg().s[20]++;
    this.name = 'AppError';
    /* istanbul ignore next */
    cov_khxtgp9rg().s[21]++;
    this.code = code;
    /* istanbul ignore next */
    cov_khxtgp9rg().s[22]++;
    this.details = details;
    /* istanbul ignore next */
    cov_khxtgp9rg().s[23]++;
    this.status = status;
  }
  /**
  * 에러 메시지와 함께 토스트 등에 표시할 수 있는 사용자 친화적인 메시지를 반환합니다.
  */
  toFriendlyMessage() {
    /* istanbul ignore next */
    cov_khxtgp9rg().f[7]++;
    cov_khxtgp9rg().s[24]++;
    switch (this.code) {
      case "not_found":
        /* istanbul ignore next */
        cov_khxtgp9rg().b[0][0]++;
        cov_khxtgp9rg().s[25]++;
        return '요청한 데이터를 찾을 수 없습니다.';
      case "unauthorized":
        /* istanbul ignore next */
        cov_khxtgp9rg().b[0][1]++;
        cov_khxtgp9rg().s[26]++;
        return '로그인이 필요합니다.';
      case "forbidden":
        /* istanbul ignore next */
        cov_khxtgp9rg().b[0][2]++;
        cov_khxtgp9rg().s[27]++;
        return '접근 권한이 없습니다.';
      case "rls_policy_violation":
        /* istanbul ignore next */
        cov_khxtgp9rg().b[0][3]++;
        cov_khxtgp9rg().s[28]++;
        return '데이터 접근 권한이 없습니다. 본인의 데이터만 접근할 수 있습니다.';
      case "conflict":
        /* istanbul ignore next */
        cov_khxtgp9rg().b[0][4]++;
        cov_khxtgp9rg().s[29]++;
        return '데이터 충돌이 발생했습니다.';
      case "validation":
        /* istanbul ignore next */
        cov_khxtgp9rg().b[0][5]++;
        cov_khxtgp9rg().s[30]++;
        return '입력 데이터가 유효하지 않습니다.';
      case "network_error":
        /* istanbul ignore next */
        cov_khxtgp9rg().b[0][6]++;
        cov_khxtgp9rg().s[31]++;
        return '네트워크 연결을 확인해주세요.';
      case "server_error":
        /* istanbul ignore next */
        cov_khxtgp9rg().b[0][7]++;
        cov_khxtgp9rg().s[32]++;
        return '서버 오류가 발생했습니다. 잠시 후 다시 시도해주세요.';
      default:
        /* istanbul ignore next */
        cov_khxtgp9rg().b[0][8]++;
        cov_khxtgp9rg().s[33]++;
        return /* istanbul ignore next */(cov_khxtgp9rg().b[1][0]++, this.message) ||
        /* istanbul ignore next */
        (cov_khxtgp9rg().b[1][1]++, '알 수 없는 오류가 발생했습니다.');
    }
  }
}
/**
 * PostgreSQL 에러 코드와 관련 정보
 * 
 * https://www.postgresql.org/docs/current/errcodes-appendix.html
 */
const PG_ERROR_CODES =
/* istanbul ignore next */
(cov_khxtgp9rg().s[34]++, {
  // "not_found" 관련 에러
  UNDEFINED_TABLE: '42P01',
  UNDEFINED_COLUMN: '42703',
  INVALID_TEXT_REPRESENTATION: '22P02',
  FOREIGN_KEY_VIOLATION: '23503',
  // "forbidden" 관련 에러
  INSUFFICIENT_PRIVILEGE: '42501',
  INVALID_PASSWORD: '28P01',
  // "conflict" 관련 에러
  UNIQUE_VIOLATION: '23505',
  // "validation" 관련 에러
  NOT_NULL_VIOLATION: '23502',
  CHECK_VIOLATION: '23514',
  STRING_DATA_RIGHT_TRUNCATION: '22001',
  // RLS 정책 관련 에러 (Supabase/PostgREST 특화)
  RLS_POLICY_VIOLATION: 'PGRST301',
  RLS_NO_ROWS_RETURNED: 'PGRST204',
  RLS_PERMISSION_DENIED: 'PGRST403'
});
function handleSupabaseError(error) {
  /* istanbul ignore next */
  cov_khxtgp9rg().f[8]++;
  const {
    code,
    message,
    details
  } =
  /* istanbul ignore next */
  (cov_khxtgp9rg().s[35]++, error);
  // PostgreSQL 에러 코드에 따라 적절한 에러 반환
  // RLS 정책 관련 에러 (최우선 처리)
  /* istanbul ignore next */
  cov_khxtgp9rg().s[36]++;
  if (
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[3][0]++, code === PG_ERROR_CODES.RLS_POLICY_VIOLATION) ||
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[3][1]++, code === PG_ERROR_CODES.RLS_NO_ROWS_RETURNED) ||
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[3][2]++, code === PG_ERROR_CODES.RLS_PERMISSION_DENIED) ||
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[3][3]++, message?.toLowerCase().includes('row level security')) ||
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[3][4]++, message?.toLowerCase().includes('policy'))) {
    /* istanbul ignore next */
    cov_khxtgp9rg().b[2][0]++;
    cov_khxtgp9rg().s[37]++;
    return new AppError('데이터 접근 권한이 없습니다. 본인의 데이터만 접근할 수 있습니다.', "rls_policy_violation", details, 403);
  } else
  /* istanbul ignore next */
  {
    cov_khxtgp9rg().b[2][1]++;
  }
  // NOT_FOUND 에러
  cov_khxtgp9rg().s[38]++;
  if (
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[5][0]++, code === PG_ERROR_CODES.UNDEFINED_TABLE) ||
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[5][1]++, code === PG_ERROR_CODES.UNDEFINED_COLUMN) ||
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[5][2]++, code === PG_ERROR_CODES.INVALID_TEXT_REPRESENTATION) ||
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[5][3]++, code === PG_ERROR_CODES.FOREIGN_KEY_VIOLATION)) {
    /* istanbul ignore next */
    cov_khxtgp9rg().b[4][0]++;
    cov_khxtgp9rg().s[39]++;
    return new AppError('요청한 데이터를 찾을 수 없습니다', "not_found", details, 404);
  } else
  /* istanbul ignore next */
  {
    cov_khxtgp9rg().b[4][1]++;
  }
  // FORBIDDEN 에러
  cov_khxtgp9rg().s[40]++;
  if (
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[7][0]++, code === PG_ERROR_CODES.INSUFFICIENT_PRIVILEGE) ||
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[7][1]++, code === PG_ERROR_CODES.INVALID_PASSWORD)) {
    /* istanbul ignore next */
    cov_khxtgp9rg().b[6][0]++;
    cov_khxtgp9rg().s[41]++;
    return new AppError('접근 권한이 없습니다', "forbidden", details, 403);
  } else
  /* istanbul ignore next */
  {
    cov_khxtgp9rg().b[6][1]++;
  }
  // CONFLICT 에러
  cov_khxtgp9rg().s[42]++;
  if (code === PG_ERROR_CODES.UNIQUE_VIOLATION) {
    /* istanbul ignore next */
    cov_khxtgp9rg().b[8][0]++;
    cov_khxtgp9rg().s[43]++;
    return new AppError('중복된 데이터가 존재합니다', "conflict", details, 409);
  } else
  /* istanbul ignore next */
  {
    cov_khxtgp9rg().b[8][1]++;
  }
  // VALIDATION 에러
  cov_khxtgp9rg().s[44]++;
  if (
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[10][0]++, code === PG_ERROR_CODES.NOT_NULL_VIOLATION) ||
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[10][1]++, code === PG_ERROR_CODES.CHECK_VIOLATION) ||
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[10][2]++, code === PG_ERROR_CODES.STRING_DATA_RIGHT_TRUNCATION) ||
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[10][3]++, code?.startsWith('22')) // 데이터 예외 클래스
  ) {
    /* istanbul ignore next */
    cov_khxtgp9rg().b[9][0]++;
    cov_khxtgp9rg().s[45]++;
    return new AppError('데이터 유효성 검증에 실패했습니다', "validation", details, 400);
  } else
  /* istanbul ignore next */
  {
    cov_khxtgp9rg().b[9][1]++;
  }
  // 기타 서버 에러
  cov_khxtgp9rg().s[46]++;
  return new AppError(
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[11][0]++, message) ||
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[11][1]++, '서버 에러가 발생했습니다'), "server_error", details, 500);
}
function handleError(error) {
  /* istanbul ignore next */
  cov_khxtgp9rg().f[9]++;
  cov_khxtgp9rg().s[47]++;
  // 이미 AppError인 경우 그대로 반환
  if (error instanceof AppError) {
    /* istanbul ignore next */
    cov_khxtgp9rg().b[12][0]++;
    cov_khxtgp9rg().s[48]++;
    return error;
  } else
  /* istanbul ignore next */
  {
    cov_khxtgp9rg().b[12][1]++;
  }
  // PostgrestError인 경우 handleSupabaseError로 변환
  cov_khxtgp9rg().s[49]++;
  if (
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[14][0]++, error) &&
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[14][1]++, typeof error === 'object') &&
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[14][2]++, 'code' in error) &&
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[14][3]++, 'message' in error)) {
    /* istanbul ignore next */
    cov_khxtgp9rg().b[13][0]++;
    cov_khxtgp9rg().s[50]++;
    return handleSupabaseError(error);
  } else
  /* istanbul ignore next */
  {
    cov_khxtgp9rg().b[13][1]++;
  }
  // 네트워크 에러
  cov_khxtgp9rg().s[51]++;
  if (
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[16][0]++, error instanceof TypeError) &&
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[16][1]++, error.message.includes('fetch'))) {
    /* istanbul ignore next */
    cov_khxtgp9rg().b[15][0]++;
    cov_khxtgp9rg().s[52]++;
    return new AppError('네트워크 연결을 확인해주세요', "network_error", error, 0);
  } else
  /* istanbul ignore next */
  {
    cov_khxtgp9rg().b[15][1]++;
  }
  // 그 외 모든 에러는 UNKNOWN으로 처리
  const errorMessage =
  /* istanbul ignore next */
  (cov_khxtgp9rg().s[53]++, error instanceof Error ?
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[17][0]++, error.message) :
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[17][1]++, String(error)));
  /* istanbul ignore next */
  cov_khxtgp9rg().s[54]++;
  return new AppError(
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[18][0]++, errorMessage) ||
  /* istanbul ignore next */
  (cov_khxtgp9rg().b[18][1]++, '알 수 없는 오류가 발생했습니다'), "unknown", error, 500);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,