{"version":3,"names":["VoteDataExample","VoteData","id","cov_20euqclhiu","f","s","vote","_supabaseservice","getByIdOrNotFound","TABLES","VOTE","_jsxruntime","jsxs","className","jsx","title","description","error","_error","AppError","b","console","ErrorCode","UNKNOWN","code","NOT_FOUND","_navigation","notFound","_react","Suspense","fallback","_server","LoadingState","message","size"],"sources":["/Users/cheolhyun/Repositories/picnic-web/components/server/VoteDataExample.tsx"],"sourcesContent":["import React, { Suspense } from 'react';\nimport { notFound } from 'next/navigation';\nimport { getByIdOrNotFound, TABLES } from '@/lib/data-fetching/supabase-service';\nimport { ErrorState, LoadingState } from '@/components/server';\nimport { AppError, ErrorCode } from '@/lib/supabase/error';\n\ninterface VoteDataProps {\n  id: string;\n}\n\n// 투표 데이터 타입 정의\ninterface Vote {\n  id: number;\n  title: string;\n  description: string;\n  created_at: string;\n  updated_at: string;\n  [key: string]: any; // 추가 필드가 있을 수 있음\n}\n\n/**\n * 투표 데이터를 가져오는 서버 컴포넌트\n * \n * 이 컴포넌트는 서버 컴포넌트에서 데이터 페칭과 오류 처리를 구현하는 패턴을 보여줍니다.\n */\nasync function VoteData({ id }: VoteDataProps) {\n  try {\n    // 404 처리가 포함된 데이터 조회 함수 사용\n    // 데이터가 없으면 자동으로 notFound()가 호출됨\n    const vote = await getByIdOrNotFound<Vote>(TABLES.VOTE, id);\n    \n    return (\n      <div className=\"p-4 bg-white rounded-lg shadow\">\n        <h2 className=\"text-xl font-bold\">{vote.title}</h2>\n        <p className=\"mt-2 text-gray-600\">{vote.description}</p>\n        {/* 추가 투표 데이터 표시 */}\n      </div>\n    );\n  } catch (error) {\n    // AppError가 아닌 오류는 모두 UNKNOWN으로 처리\n    if (!(error instanceof AppError)) {\n      console.error('투표 데이터 조회 오류:', error);\n      \n      throw new AppError(\n        '투표 데이터를 불러올 수 없습니다',\n        ErrorCode.UNKNOWN,\n        error,\n        500\n      );\n    }\n    \n    // ErrorCode.NOT_FOUND 에러는 notFound()로 처리\n    if (error.code === ErrorCode.NOT_FOUND) {\n      notFound();\n    }\n    \n    // 그 외 에러는 다시 throw하여 상위 컴포넌트의 error boundary에서 처리\n    throw error;\n  }\n}\n\n/**\n * 투표 데이터를 표시하는 예제 컴포넌트\n * \n * AsyncBoundary를 사용하여 로딩 상태와 오류 상태를 처리합니다.\n */\nexport default function VoteDataExample({ id }: VoteDataProps) {\n  return (\n    <Suspense fallback={<LoadingState message=\"투표 데이터를 불러오는 중...\" size=\"medium\" />}>\n      <VoteData id={id} />\n    </Suspense>\n  );\n} "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;;;;;AAKA;;;;;;WAAwBA,eAAA;;;;;;;;yEAlEQ;;;kCACP;;;kCACiB;;;kCACD;;;kCACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBpC;;;;;AAKA,eAAeC,SAAS;EAAEC;AAAE,CAAiB;EAAA;EAAAC,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EAC3C,IAAI;IACF;IACA;IACA,MAAMC,IAAA;IAAA;IAAA,CAAAH,cAAA,GAAAE,CAAA,QAAO,MAAM,IAAAE,gBAAA,CAAAC,iBAAiB,EAAOD,gBAAA,CAAAE,MAAM,CAACC,IAAI,EAAER,EAAA;IAAA;IAAAC,cAAA,GAAAE,CAAA;IAExD,oBACE,IAAAM,WAAA,CAAAC,IAAA,EAAC;MAAIC,SAAA,EAAU;8BACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;QAAGD,SAAA,EAAU;kBAAqBP,IAAA,CAAKS;uBACxC,IAAAJ,WAAA,CAAAG,GAAA,EAAC;QAAED,SAAA,EAAU;kBAAsBP,IAAA,CAAKU;;;EAI9C,EAAE,OAAOC,KAAA,EAAO;IAAA;IAAAd,cAAA,GAAAE,CAAA;IACd;IACA,IAAI,EAAEY,KAAA,YAAiBC,MAAA,CAAAC,QAAQ,CAAD,EAAI;MAAA;MAAAhB,cAAA,GAAAiB,CAAA;MAAAjB,cAAA,GAAAE,CAAA;MAChCgB,OAAA,CAAQJ,KAAK,CAAC,iBAAiBA,KAAA;MAAA;MAAAd,cAAA,GAAAE,CAAA;MAE/B,MAAM,IAAIa,MAAA,CAAAC,QAAQ,CAChB,sBACAD,MAAA,CAAAI,SAAS,CAACC,OAAO,EACjBN,KAAA,EACA;IAEJ;IAAA;IAAA;MAAAd,cAAA,GAAAiB,CAAA;IAAA;IAEA;IAAAjB,cAAA,GAAAE,CAAA;IACA,IAAIY,KAAA,CAAMO,IAAI,KAAKN,MAAA,CAAAI,SAAS,CAACG,SAAS,EAAE;MAAA;MAAAtB,cAAA,GAAAiB,CAAA;MAAAjB,cAAA,GAAAE,CAAA;MACtC,IAAAqB,WAAA,CAAAC,QAAQ;IACV;IAAA;IAAA;MAAAxB,cAAA,GAAAiB,CAAA;IAAA;IAEA;IAAAjB,cAAA,GAAAE,CAAA;IACA,MAAMY,KAAA;EACR;AACF;AAOe,SAASjB,gBAAgB;EAAEE;AAAE,CAAiB;EAAA;EAAAC,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EAC3D,oBACE,IAAAM,WAAA,CAAAG,GAAA,EAACc,MAAA,CAAAC,QAAQ;IAACC,QAAA,eAAU,IAAAnB,WAAA,CAAAG,GAAA,EAACiB,OAAA,CAAAC,YAAY;MAACC,OAAA,EAAQ;MAAoBC,IAAA,EAAK;;cACjE,iBAAAvB,WAAA,CAAAG,GAAA,EAACb,QAAA;MAASC,EAAA,EAAIA;;;AAGpB","ignoreList":[]}