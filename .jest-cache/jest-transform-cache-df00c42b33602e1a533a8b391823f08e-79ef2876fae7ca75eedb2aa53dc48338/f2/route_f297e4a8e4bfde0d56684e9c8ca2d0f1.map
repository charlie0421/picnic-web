{"version":3,"names":["GET","cov_1nxi49c5s4","f","s","OPTIONS","request","console","log","searchParams","URL","url","requestedUserId","get","cookieStore","_headers","cookies","supabase","_server","createServerSupabaseClientWithCookies","name","cookie","b","value","undefined","set","data","userData","error","userError","auth","getUser","user","warn","_server1","NextResponse","json","success","message","status","currentUserId","id","profile","profileError","from","select","eq","single","provider","providerDisplayName","identities","length","identity","userId","nickname","star_candy","star_candy_bonus","total","is_admin","is_super_admin","email","avatar_url","total_candy","provider_display_name","created_at","updated_at","headers"],"sources":["/Users/cheolhyun/Repositories/picnic-web/app/api/user/profile/route.ts"],"sourcesContent":["import { createServerSupabaseClientWithCookies } from '@/lib/supabase/server';\nimport { NextRequest, NextResponse } from 'next/server';\nimport { cookies } from 'next/headers';\n\n/**\n * ÏÇ¨Ïö©Ïûê ÌîÑÎ°úÌïÑ Ï†ïÎ≥¥ API ÏóîÎìúÌè¨Ïù∏Ìä∏\n * Ï∫îÎîî Í∞úÏàòÎ•º Ìè¨Ìï®Ìïú ÏÇ¨Ïö©Ïûê ÌîÑÎ°úÌïÑ Ï†ïÎ≥¥Î•º Î∞òÌôòÌï©ÎãàÎã§.\n */\nexport async function GET(request: NextRequest) {\n  try {\n    console.log('üîç [User Profile API] ÏÇ¨Ïö©Ïûê ÌîÑÎ°úÌïÑ ÏöîÏ≤≠ Î∞õÏùå');\n\n    // URLÏóêÏÑú userId ÌååÎùºÎØ∏ÌÑ∞ Ï∂îÏ∂ú\n    const { searchParams } = new URL(request.url);\n    const requestedUserId = searchParams.get('userId');\n\n    // App RouterÏóêÏÑú Ïø†ÌÇ§Î•º ÏùΩÏùÑ Ïàò ÏûàÎäî ÏÑúÎ≤ÑÏÇ¨Ïù¥Îìú Supabase ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏÉùÏÑ±\n    const cookieStore = await cookies();\n    \n    const supabase = createServerSupabaseClientWithCookies({\n      get: (name: string) => {\n        const cookie = cookieStore.get(name);\n        return cookie ? { name: cookie.name, value: cookie.value } : undefined;\n      },\n      set: (cookie: { name: string; value: string; [key: string]: any }) => {\n        cookieStore.set(cookie.name, cookie.value, cookie);\n      }\n    });\n\n    console.log('üîç [User Profile API] Supabase ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏÉùÏÑ± ÏôÑÎ£å');\n\n    // Ïù∏Ï¶ùÎêú ÏÇ¨Ïö©Ïûê ÌôïÏù∏\n    const { data: userData, error: userError } = await supabase.auth.getUser();\n    \n    if (userError || !userData?.user) {\n      console.warn('‚ö†Ô∏è [User Profile API] Ïù∏Ï¶ùÎêòÏßÄ ÏïäÏùÄ ÏöîÏ≤≠:', userError);\n      return NextResponse.json(\n        { \n          success: false,\n          error: 'Unauthorized',\n          message: 'Ïù∏Ï¶ùÏù¥ ÌïÑÏöîÌï©ÎãàÎã§.'\n        }, \n        { status: 401 }\n      );\n    }\n\n    const currentUserId = userData.user.id;\n    \n    // ÏöîÏ≤≠Îêú ÏÇ¨Ïö©Ïûê IDÍ∞Ä ÌòÑÏû¨ Ïù∏Ï¶ùÎêú ÏÇ¨Ïö©ÏûêÏôÄ Îã§Î•∏ Í≤ΩÏö∞ Í∂åÌïú Ï≤¥ÌÅ¨\n    if (requestedUserId && requestedUserId !== currentUserId) {\n      console.warn('‚ö†Ô∏è [User Profile API] Îã§Î•∏ ÏÇ¨Ïö©ÏûêÏùò ÌîÑÎ°úÌïÑ ÏöîÏ≤≠ ÏãúÎèÑ:', {\n        currentUserId,\n        requestedUserId\n      });\n      return NextResponse.json(\n        { \n          success: false,\n          error: 'Forbidden',\n          message: 'Îã§Î•∏ ÏÇ¨Ïö©ÏûêÏùò ÌîÑÎ°úÌïÑÏóê Ï†ëÍ∑ºÌï† Ïàò ÏóÜÏäµÎãàÎã§.'\n        }, \n        { status: 403 }\n      );\n    }\n\n    // ÏÇ¨Ïö©Ïûê ÌîÑÎ°úÌïÑ Ï†ïÎ≥¥ Ï°∞Ìöå (Ï∫îÎîî Ï†ïÎ≥¥ + Í¥ÄÎ¶¨Ïûê Í∂åÌïú Ìè¨Ìï®)\n    const { data: profile, error: profileError } = await supabase\n      .from('user_profiles')\n      .select(`\n        id,\n        email,\n        nickname,\n        avatar_url,\n        star_candy,\n        star_candy_bonus,\n        is_admin,\n        is_super_admin,\n        created_at,\n        updated_at\n      `)\n      .eq('id', currentUserId)\n      .single();\n\n    if (profileError) {\n      console.error('‚ùå [User Profile API] ÌîÑÎ°úÌïÑ Ï°∞Ìöå Ïò§Î•ò:', profileError);\n      return NextResponse.json(\n        { \n          success: false,\n          error: 'Profile not found',\n          message: 'ÏÇ¨Ïö©Ïûê ÌîÑÎ°úÌïÑÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.'\n        }, \n        { status: 404 }\n      );\n    }\n\n    // Provider Ï†ïÎ≥¥ Ï∂îÏ∂ú (Supabase authÏóêÏÑú Í∞ÄÏ†∏Ïò§Í∏∞)\n    const user = userData.user;\n    let provider = 'email'; // Í∏∞Î≥∏Í∞í\n    let providerDisplayName = 'Ïù¥Î©îÏùº';\n    \n    // user.identitiesÏóêÏÑú provider Ï†ïÎ≥¥ ÌôïÏù∏\n    if (user.identities && user.identities.length > 0) {\n      const identity = user.identities[0]; // Ï≤´ Î≤àÏß∏ identity ÏÇ¨Ïö©\n      provider = identity.provider || 'email';\n      \n      // ProviderÎ≥Ñ ÌïúÍµ≠Ïñ¥ ÌëúÏãúÎ™Ö ÏÑ§Ï†ï\n      switch (provider) {\n        case 'google':\n          providerDisplayName = 'Google';\n          break;\n        case 'kakao':\n          providerDisplayName = 'Kakao';\n          break;\n        case 'apple':\n          providerDisplayName = 'Apple';\n          break;\n        case 'github':\n          providerDisplayName = 'GitHub';\n          break;\n        case 'facebook':\n          providerDisplayName = 'Facebook';\n          break;\n        case 'twitter':\n          providerDisplayName = 'Twitter';\n          break;\n        case 'discord':\n          providerDisplayName = 'Discord';\n          break;\n        case 'email':\n        default:\n          providerDisplayName = 'Ïù¥Î©îÏùº';\n          break;\n      }\n    }\n\n    console.log('‚úÖ [User Profile API] ÌîÑÎ°úÌïÑ Ï°∞Ìöå ÏÑ±Í≥µ:', {\n      userId: profile.id,\n      nickname: profile.nickname,\n      star_candy: profile.star_candy,\n      star_candy_bonus: profile.star_candy_bonus,\n      total: (profile.star_candy || 0) + (profile.star_candy_bonus || 0),\n      is_admin: profile.is_admin,\n      is_super_admin: profile.is_super_admin,\n      provider: provider,\n      providerDisplayName: providerDisplayName\n    });\n\n    return NextResponse.json({\n      success: true,\n      user: {\n        id: profile.id,\n        email: profile.email,\n        name: profile.nickname,\n        avatar_url: profile.avatar_url,\n        star_candy: profile.star_candy || 0,\n        star_candy_bonus: profile.star_candy_bonus || 0,\n        total_candy: (profile.star_candy || 0) + (profile.star_candy_bonus || 0),\n        is_admin: profile.is_admin || false,\n        is_super_admin: profile.is_super_admin || false,\n        provider: provider,\n        provider_display_name: providerDisplayName,\n        created_at: profile.created_at,\n        updated_at: profile.updated_at\n      }\n    });\n\n  } catch (error) {\n    console.error('üí• [User Profile API] Ï≤òÎ¶¨ Ï§ë Ïò§Î•ò:', error);\n    \n    return NextResponse.json(\n      { \n        success: false,\n        error: 'Internal server error',\n        message: 'ÏÑúÎ≤Ñ ÎÇ¥Î∂Ä Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.'\n      }, \n      { status: 500 }\n    );\n  }\n}\n\n/**\n * OPTIONS ÏöîÏ≤≠ Ï≤òÎ¶¨ (CORS ÏßÄÏõê)\n */\nexport async function OPTIONS(request: NextRequest) {\n  return new NextResponse(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n} "],"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","ignoreList":[]}