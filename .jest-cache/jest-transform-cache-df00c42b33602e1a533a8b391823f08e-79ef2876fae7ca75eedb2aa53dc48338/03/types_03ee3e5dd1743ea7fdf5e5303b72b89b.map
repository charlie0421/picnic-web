{"version":3,"names":["cov_1k8xyc2ptk","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","SocialAuthError","SocialAuthErrorCode","Error","constructor","code","message","provider","originalError"],"sources":["/Users/cheolhyun/Repositories/picnic-web/lib/supabase/social/types.ts"],"sourcesContent":["/**\n * 소셜 로그인 통합을 위한 타입 정의\n * \n * 이 파일은 소셜 로그인 구현에 필요한 타입, 인터페이스 및 공통 구조를 정의합니다.\n */\n\nimport { SupabaseClient, User, Session, Provider } from '@supabase/supabase-js';\nimport { Database } from '@/types/supabase';\n\n/**\n * 지원하는 소셜 로그인 제공자 타입\n */\nexport type SocialLoginProvider = 'google' | 'apple' | 'kakao' | 'wechat';\n\n/**\n * 소셜 로그인 요청 옵션\n */\nexport interface SocialAuthOptions {\n  /**\n   * 요청할 권한 범위 배열\n   */\n  scopes?: string[];\n  \n  /**\n   * 리디렉션 URL (기본값: `${window.location.origin}/auth/callback/{provider}`)\n   */\n  redirectUrl?: string;\n  \n  /**\n   * 제공자 특화 추가 파라미터\n   */\n  additionalParams?: Record<string, string>;\n  \n  /**\n   * 상태 토큰 (CSRF 방지를 위한 랜덤 문자열)\n   */\n  state?: string;\n  \n  /**\n   * 디버그 모드 활성화 여부\n   */\n  debug?: boolean;\n}\n\n/**\n * 정규화된 소셜 프로필 정보\n */\nexport interface NormalizedProfile {\n  /**\n   * 소셜 제공자의 고유 ID\n   */\n  id: string;\n  \n  /**\n   * 사용자 이름\n   */\n  name: string;\n  \n  /**\n   * 사용자 이메일 (일부 제공자는 제공하지 않을 수 있음)\n   */\n  email: string;\n  \n  /**\n   * 프로필 이미지 URL\n   */\n  avatar: string;\n  \n  /**\n   * Supabase 사용자 ID (연결된 경우)\n   */\n  userId?: string;\n  \n  /**\n   * 제공자별 추가 정보\n   */\n  additionalInfo?: Record<string, any>;\n  \n  /**\n   * 원본 프로필 데이터\n   */\n  raw?: any;\n}\n\n/**\n * 인증 결과 인터페이스\n */\nexport interface AuthResult {\n  /**\n   * 인증 성공 여부\n   */\n  success: boolean;\n  \n  /**\n   * 인증 세션 정보 (성공 시)\n   */\n  session?: Session | null;\n  \n  /**\n   * 사용자 정보 (성공 시)\n   */\n  user?: User | null;\n  \n  /**\n   * 오류 정보 (실패 시)\n   */\n  error?: Error | null;\n  \n  /**\n   * 소셜 로그인 제공자 (인증에 사용된)\n   */\n  provider?: SocialLoginProvider;\n  \n  /**\n   * 처리 과정에서 발생한 메시지\n   */\n  message?: string;\n}\n\n/**\n * 소셜 로그인 서비스 인터페이스\n */\nexport interface SocialAuthServiceInterface {\n  /**\n   * Google 로그인 처리\n   */\n  signInWithGoogle(options?: SocialAuthOptions): Promise<AuthResult>;\n  \n  /**\n   * Apple 로그인 처리\n   */\n  signInWithApple(options?: SocialAuthOptions): Promise<AuthResult>;\n  \n  /**\n   * Kakao 로그인 처리\n   */\n  signInWithKakao(options?: SocialAuthOptions): Promise<AuthResult>;\n  \n  /**\n   * WeChat 로그인 처리\n   */\n  signInWithWeChat(options?: SocialAuthOptions): Promise<AuthResult>;\n  \n  /**\n   * 통합 소셜 로그인 처리\n   */\n  signInWithProvider(provider: SocialLoginProvider, options?: SocialAuthOptions): Promise<AuthResult>;\n  \n  /**\n   * 소셜 로그인 콜백 처리\n   */\n  handleCallback(provider: SocialLoginProvider, params?: Record<string, string>): Promise<AuthResult>;\n}\n\n/**\n * 플랫폼별 OAuth 설정 인터페이스\n */\nexport interface OAuthProviderConfig {\n  /**\n   * 클라이언트 ID\n   */\n  clientId: string;\n  \n  /**\n   * 클라이언트 시크릿 (환경 변수 참조용)\n   */\n  clientSecretEnvKey?: string;\n  \n  /**\n   * 기본 권한 범위\n   */\n  defaultScopes: string[];\n  \n  /**\n   * 인증 URL (직접 구현 시)\n   */\n  authUrl?: string;\n  \n  /**\n   * 토큰 URL (직접 구현 시)\n   */\n  tokenUrl?: string;\n  \n  /**\n   * 프로필 URL (직접 구현 시)\n   */\n  profileUrl?: string;\n  \n  /**\n   * 제공자별 추가 설정\n   */\n  additionalConfig?: Record<string, any>;\n}\n\n/**\n * 공통 로깅 함수 타입\n */\nexport type LogFunction = (message: string, data?: any) => void;\n\n/**\n * 소셜 로그인 오류 코드\n */\nexport enum SocialAuthErrorCode {\n  PROVIDER_NOT_SUPPORTED = 'provider_not_supported',\n  INITIALIZATION_FAILED = 'initialization_failed',\n  AUTH_PROCESS_FAILED = 'auth_process_failed',\n  CALLBACK_FAILED = 'callback_failed',\n  USER_CANCELLED = 'user_cancelled',\n  NETWORK_ERROR = 'network_error',\n  TOKEN_EXCHANGE_FAILED = 'token_exchange_failed',\n  PROFILE_FETCH_FAILED = 'profile_fetch_failed',\n  INVALID_RESPONSE = 'invalid_response',\n  INVALID_STATE = 'invalid_state',\n  UNKNOWN_ERROR = 'unknown_error',\n  PROVIDER_NOT_AVAILABLE = 'provider_not_available',\n  USER_INFO_FAILED = 'user_info_failed',\n  SESSION_CREATION_FAILED = 'session_creation_failed',\n  TOKEN_VALIDATION_FAILED = 'token_validation_failed',\n  TOKEN_REFRESH_FAILED = 'token_refresh_failed'\n}\n\n/**\n * 소셜 인증 오류 클래스\n */\nexport class SocialAuthError extends Error {\n  code: SocialAuthErrorCode;\n  provider?: SocialLoginProvider;\n  originalError?: any;\n  \n  constructor(\n    code: SocialAuthErrorCode,\n    message: string,\n    provider?: SocialLoginProvider,\n    originalError?: any\n  ) {\n    super(message);\n    this.name = 'SocialAuthError';\n    this.code = code;\n    this.provider = provider;\n    this.originalError = originalError;\n  }\n} "],"mappings":"AAAA;;;;GAIC;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;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","ignoreList":[]}