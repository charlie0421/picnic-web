{"version":3,"names":["cov_5vmkzuzty","actualCoverage","s","payPalService","PayPalService","constructor","f","paypal","isInitialized","config","clientId","b","process","env","NEXT_PUBLIC_PAYPAL_CLIENT_ID","environment","NEXT_PUBLIC_PAYPAL_ENV","currency","initialize","_paypaljs","loadScript","enableFunding","disableFunding","dataSdkIntegrationSource","Error","console","log","error","createOrder","orderData","response","fetch","method","headers","body","JSON","stringify","productId","productName","amount","starCandy","bonusAmount","userId","userEmail","data","json","ok","orderID","captureOrder","getPayPal","formatPrice","toFixed","isAvailableInCountry","countryCode","unsupportedCountries","includes","toUpperCase","getButtonStyle","layout","color","shape","label","height"],"sources":["/Users/cheolhyun/Repositories/picnic-web/lib/payment/paypal.ts"],"sourcesContent":["import { loadScript, PayPalNamespace } from '@paypal/paypal-js';\n\ninterface PayPalConfig {\n  clientId: string;\n  environment: 'sandbox' | 'production';\n  currency: 'USD';\n}\n\ninterface PayPalOrderData {\n  productId: string;\n  productName: string;\n  amount: number;\n  starCandy: number;\n  bonusAmount: number;\n  userId: string;\n  userEmail: string;\n}\n\ninterface PayPalOrderResponse {\n  id: string;\n  status: string;\n  purchase_units: Array<{\n    amount: {\n      currency_code: string;\n      value: string;\n    };\n    description: string;\n  }>;\n}\n\nclass PayPalService {\n  private config: PayPalConfig;\n  private paypal: PayPalNamespace | null = null;\n  private isInitialized: boolean = false;\n\n  constructor() {\n    this.config = {\n      clientId: process.env.NEXT_PUBLIC_PAYPAL_CLIENT_ID || '',\n      environment: (process.env.NEXT_PUBLIC_PAYPAL_ENV as 'sandbox' | 'production') || 'sandbox',\n      currency: 'USD',\n    };\n  }\n\n  /**\n   * Initialize PayPal SDK\n   */\n  async initialize(): Promise<boolean> {\n    if (this.isInitialized && this.paypal) return true;\n\n    try {\n      this.paypal = await loadScript({\n        clientId: this.config.clientId,\n        currency: this.config.currency,\n        enableFunding: 'paypal',\n        disableFunding: 'card,credit,paylater',\n        dataSdkIntegrationSource: 'integrationbuilder_ac',\n      });\n\n      if (!this.paypal) {\n        throw new Error('PayPal SDK failed to load');\n      }\n\n      this.isInitialized = true;\n      console.log('PayPal SDK initialized successfully');\n      return true;\n    } catch (error) {\n      console.error('Failed to initialize PayPal SDK:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Create PayPal order\n   */\n  async createOrder(orderData: PayPalOrderData): Promise<string> {\n    try {\n      const response = await fetch('/api/payment/paypal/create-order', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          productId: orderData.productId,\n          productName: orderData.productName,\n          amount: orderData.amount,\n          starCandy: orderData.starCandy,\n          bonusAmount: orderData.bonusAmount,\n          userId: orderData.userId,\n          userEmail: orderData.userEmail,\n        }),\n      });\n\n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to create order');\n      }\n\n      return data.orderID;\n    } catch (error) {\n      console.error('Error creating PayPal order:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Capture PayPal order\n   */\n  async captureOrder(orderID: string): Promise<any> {\n    try {\n      const response = await fetch('/api/payment/paypal/capture-order', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ orderID }),\n      });\n\n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to capture order');\n      }\n\n      return data;\n    } catch (error) {\n      console.error('Error capturing PayPal order:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get PayPal SDK instance\n   */\n  getPayPal(): PayPalNamespace | null {\n    return this.paypal;\n  }\n\n  /**\n   * Format price for display\n   */\n  formatPrice(amount: number): string {\n    return `$${amount.toFixed(2)}`;\n  }\n\n  /**\n   * Check if PayPal is available in the user's country\n   */\n  isAvailableInCountry(countryCode: string): boolean {\n    // PayPal is available in most countries except a few\n    const unsupportedCountries = ['KP', 'IR', 'CU', 'SY', 'SD'];\n    return !unsupportedCountries.includes(countryCode.toUpperCase());\n  }\n\n  /**\n   * Get PayPal button style configuration\n   */\n  getButtonStyle() {\n    return {\n      layout: 'vertical' as const,\n      color: 'blue' as const,\n      shape: 'rect' as const,\n      label: 'paypal' as const,\n      height: 45,\n    };\n  }\n}\n\n// Export singleton instance\nexport const payPalService = new PayPalService();"],"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","ignoreList":[]}