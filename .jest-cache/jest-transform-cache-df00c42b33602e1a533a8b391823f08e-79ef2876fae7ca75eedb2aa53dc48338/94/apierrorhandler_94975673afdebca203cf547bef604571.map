{"version":3,"names":["cov_2h5ijzbep","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","ApiErrorHandler","apiHelpers","createAuthError","createAuthorizationError","createBusinessLogicError","createConflictError","createDatabaseError","createExternalServiceError","createNotFoundError","createRateLimitError","createValidationError","safeApiOperation","withApiErrorHandler","handleApiError","error","request","requestId","context","_error","createContext","setUrl","url","setUserAgent","headers","get","setRequestId","generateRequestId","setAdditionalData","method","Object","fromEntries","entries","isApiRoute","build","appError","ErrorHandler","handle","requestLogger","_logger","createRequestLogger","logAppError","logger","response","toApiResponse","_server","NextResponse","json","status","statusCode","handlingError","fatal","originalError","fallbackResponse","message","category","ErrorCategory","SERVER","timestamp","Date","toISOString","createSuccessResponse","data","now","Math","random","toString","substr","handler","set","info","result","operation","errorResponse","field","AppError","VALIDATION","ErrorSeverity","LOW","validationError","AUTHENTICATION","MEDIUM","AUTHORIZATION","resource","NOT_FOUND","CONFLICT","CLIENT","EXTERNAL_SERVICE","HIGH","success","validation","auth","authorization","notFound","conflict","rateLimit"],"sources":["/Users/cheolhyun/Repositories/picnic-web/utils/api-error-handler.ts"],"sourcesContent":["/**\n * API 라우트 에러 핸들링 유틸리티\n * \n * Next.js App Router의 API 라우트에서 일관된 에러 처리를 제공합니다.\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { ErrorHandler, AppError, createContext, ErrorCategory, ErrorSeverity } from '@/utils/error';\nimport { logger, createRequestLogger } from '@/utils/logger';\n\n/**\n * API 에러 응답 인터페이스\n */\ninterface ApiErrorResponse {\n  error: {\n    message: string;\n    category: string;\n    statusCode: number;\n    timestamp: string;\n    requestId?: string;\n  };\n}\n\n/**\n * API 성공 응답 인터페이스\n */\ninterface ApiSuccessResponse<T = any> {\n  data: T;\n  timestamp: string;\n  requestId?: string;\n}\n\n/**\n * API 응답 래퍼 타입\n */\nexport type ApiResponse<T = any> = ApiSuccessResponse<T> | ApiErrorResponse;\n\n/**\n * API 에러 핸들러 클래스\n */\nexport class ApiErrorHandler {\n  /**\n   * API 라우트에서 발생한 에러를 처리하고 적절한 HTTP 응답을 반환\n   */\n  static async handleApiError(\n    error: unknown,\n    request?: NextRequest,\n    requestId?: string\n  ): Promise<NextResponse<ApiErrorResponse>> {\n    try {\n      // 에러 컨텍스트 생성\n      const context = createContext()\n        .setUrl(request?.url || '')\n        .setUserAgent(request?.headers.get('user-agent') || '')\n        .setRequestId(requestId || this.generateRequestId())\n        .setAdditionalData({\n          method: request?.method,\n          headers: request ? Object.fromEntries(request.headers.entries()) : {},\n          isApiRoute: true,\n        })\n        .build();\n\n      // 중앙화된 에러 핸들러로 처리\n      const appError = await ErrorHandler.handle(error, context);\n\n      // 로깅 시스템에 에러 기록\n      if (request) {\n        const requestLogger = createRequestLogger(request);\n        await requestLogger.logAppError(appError, {\n          requestId: context.requestId,\n          isApiRoute: true,\n        });\n      } else {\n        await logger.logAppError(appError, {\n          requestId: context.requestId,\n          isApiRoute: true,\n        });\n      }\n\n      // API 응답 생성\n      const response = appError.toApiResponse();\n\n      return NextResponse.json(response, {\n        status: appError.statusCode,\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Request-ID': context.requestId || '',\n        },\n      });\n\n    } catch (handlingError) {\n      // 핸들링 에러도 로깅\n      await logger.fatal('API 에러 핸들러에서 치명적 오류', handlingError as Error, {\n        originalError: error,\n        requestId: requestId || this.generateRequestId(),\n        isApiRoute: true,\n      });\n\n      // 최후의 수단 응답\n      const fallbackResponse: ApiErrorResponse = {\n        error: {\n          message: '서버 내부 오류가 발생했습니다.',\n          category: ErrorCategory.SERVER,\n          statusCode: 500,\n          timestamp: new Date().toISOString(),\n          requestId: requestId || this.generateRequestId(),\n        },\n      };\n\n      return NextResponse.json(fallbackResponse, {\n        status: 500,\n        headers: {\n          'Content-Type': 'application/json',\n          ...(fallbackResponse.error.requestId && { 'X-Request-ID': fallbackResponse.error.requestId }),\n        },\n      });\n    }\n  }\n\n  /**\n   * 성공 응답 생성\n   */\n  static createSuccessResponse<T>(\n    data: T,\n    requestId?: string\n  ): NextResponse<ApiSuccessResponse<T>> {\n    const response: ApiSuccessResponse<T> = {\n      data,\n      timestamp: new Date().toISOString(),\n      requestId: requestId || this.generateRequestId(),\n    };\n\n    return NextResponse.json(response, {\n      status: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        ...(response.requestId && { 'X-Request-ID': response.requestId }),\n      },\n    });\n  }\n\n  /**\n   * 요청 ID 생성\n   */\n  private static generateRequestId(): string {\n    return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n}\n\n/**\n * API 라우트 래퍼 함수\n * \n * API 라우트 핸들러를 래핑하여 자동으로 에러 처리를 적용합니다.\n */\nexport function withApiErrorHandler<T = any>(\n  handler: (request: NextRequest, context?: { params?: any }) => Promise<NextResponse<T>>\n) {\n  return async (\n    request: NextRequest,\n    context?: { params?: any }\n  ): Promise<NextResponse<T | ApiErrorResponse>> => {\n    const requestId = ApiErrorHandler['generateRequestId']();\n    const requestLogger = createRequestLogger(request);\n\n    try {\n      // 요청 헤더에 Request ID 추가 (로깅용)\n      request.headers.set('X-Request-ID', requestId);\n\n      // 요청 시작 로깅\n      await requestLogger.info(`API 요청 시작: ${request.method} ${request.url}`, {\n        requestId,\n        method: request.method,\n        url: request.url,\n      });\n\n      const result = await handler(request, context);\n\n      // 성공 응답 로깅\n      await requestLogger.info(`API 요청 완료: ${request.method} ${request.url}`, {\n        requestId,\n        method: request.method,\n        url: request.url,\n        statusCode: result.status,\n      });\n\n      return result;\n    } catch (error) {\n      // 에러 발생 로깅\n      await requestLogger.error(`API 요청 실패: ${request.method} ${request.url}`, error as Error, {\n        requestId,\n        method: request.method,\n        url: request.url,\n      });\n\n      return ApiErrorHandler.handleApiError(error, request, requestId);\n    }\n  };\n}\n\n/**\n * 비동기 API 작업 래퍼\n * \n * API 라우트 내에서 비동기 작업을 안전하게 실행합니다.\n */\nexport async function safeApiOperation<T>(\n  operation: () => Promise<T>,\n  request?: NextRequest,\n  requestId?: string\n): Promise<{ data?: T; error?: NextResponse<ApiErrorResponse> }> {\n  try {\n    const data = await operation();\n    return { data };\n  } catch (error) {\n    const errorResponse = await ApiErrorHandler.handleApiError(error, request, requestId);\n    return { error: errorResponse };\n  }\n}\n\n/**\n * 입력 검증 에러 생성 헬퍼\n */\nexport function createValidationError(\n  message: string,\n  field?: string\n): AppError {\n  return new AppError(\n    message,\n    ErrorCategory.VALIDATION,\n    ErrorSeverity.LOW,\n    400,\n    {\n      context: createContext()\n        .setAdditionalData({ field, validationError: true })\n        .build(),\n    }\n  );\n}\n\n/**\n * 인증 에러 생성 헬퍼\n */\nexport function createAuthError(message: string = '인증이 필요합니다.'): AppError {\n  return new AppError(\n    message,\n    ErrorCategory.AUTHENTICATION,\n    ErrorSeverity.MEDIUM,\n    401\n  );\n}\n\n/**\n * 권한 에러 생성 헬퍼\n */\nexport function createAuthorizationError(message: string = '접근 권한이 없습니다.'): AppError {\n  return new AppError(\n    message,\n    ErrorCategory.AUTHORIZATION,\n    ErrorSeverity.MEDIUM,\n    403\n  );\n}\n\n/**\n * 리소스 없음 에러 생성 헬퍼\n */\nexport function createNotFoundError(resource: string = '리소스'): AppError {\n  return new AppError(\n    `${resource}를 찾을 수 없습니다.`,\n    ErrorCategory.NOT_FOUND,\n    ErrorSeverity.LOW,\n    404\n  );\n}\n\n/**\n * 충돌 에러 생성 헬퍼\n */\nexport function createConflictError(message: string = '이미 존재하는 데이터입니다.'): AppError {\n  return new AppError(\n    message,\n    ErrorCategory.CONFLICT,\n    ErrorSeverity.LOW,\n    409\n  );\n}\n\n/**\n * 레이트 리밋 에러 생성 헬퍼\n */\nexport function createRateLimitError(message: string = '요청 한도를 초과했습니다.'): AppError {\n  return new AppError(\n    message,\n    ErrorCategory.CLIENT,\n    ErrorSeverity.MEDIUM,\n    429\n  );\n}\n\n/**\n * 외부 서비스 에러 생성 헬퍼\n */\nexport function createExternalServiceError(message: string = '외부 서비스 연결에 실패했습니다.'): AppError {\n  return new AppError(\n    message,\n    ErrorCategory.EXTERNAL_SERVICE,\n    ErrorSeverity.HIGH,\n    502\n  );\n}\n\n/**\n * 데이터베이스 에러 생성 헬퍼\n */\nexport function createDatabaseError(message: string = '데이터베이스 오류가 발생했습니다.'): AppError {\n  return new AppError(\n    message,\n    ErrorCategory.SERVER,\n    ErrorSeverity.HIGH,\n    500\n  );\n}\n\n/**\n * 비즈니스 로직 에러 생성 헬퍼\n */\nexport function createBusinessLogicError(message: string = '비즈니스 규칙 위반입니다.'): AppError {\n  return new AppError(\n    message,\n    ErrorCategory.VALIDATION,\n    ErrorSeverity.MEDIUM,\n    400\n  );\n}\n\n/**\n * API 라우트에서 사용할 수 있는 편의 함수들\n */\nexport const apiHelpers = {\n  success: ApiErrorHandler.createSuccessResponse,\n  error: ApiErrorHandler.handleApiError,\n  validation: createValidationError,\n  auth: createAuthError,\n  authorization: createAuthorizationError,\n  notFound: createNotFoundError,\n  conflict: createConflictError,\n  rateLimit: createRateLimitError,\n}; "],"mappings":"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","ignoreList":[]}