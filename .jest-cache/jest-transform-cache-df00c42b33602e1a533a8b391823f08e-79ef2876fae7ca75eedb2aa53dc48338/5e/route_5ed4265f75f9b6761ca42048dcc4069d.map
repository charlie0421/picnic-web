{"version":3,"names":["cov_iosit57je","actualCoverage","s","POST","PAYPAL_API_URL","process","env","PAYPAL_ENV","b","PAYPAL_CLIENT_ID","PAYPAL_CLIENT_SECRET","getPayPalAccessToken","f","auth","Buffer","from","toString","response","fetch","method","headers","body","data","json","ok","Error","access_token","request","supabase","_server1","createServerSupabaseClient","user","error","authError","getUser","_server","NextResponse","status","productId","productName","amount","starCandy","bonusAmount","accessToken","orderData","intent","purchase_units","reference_id","description","currency_code","value","toFixed","custom_id","JSON","stringify","userId","id","application_context","brand_name","landing_page","user_action","return_url","NEXT_PUBLIC_APP_URL","cancel_url","Date","now","order","console","orderID","message"],"sources":["/Users/cheolhyun/Repositories/picnic-web/app/api/payment/paypal/create-order/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { createServerSupabaseClient } from '@/lib/supabase/server';\n\nconst PAYPAL_API_URL = process.env.PAYPAL_ENV === 'production' \n  ? 'https://api-m.paypal.com' \n  : 'https://api-m.sandbox.paypal.com';\n\nconst PAYPAL_CLIENT_ID = process.env.PAYPAL_CLIENT_ID || '';\nconst PAYPAL_CLIENT_SECRET = process.env.PAYPAL_CLIENT_SECRET || '';\n\ninterface CreateOrderRequest {\n  productId: string;\n  productName: string;\n  amount: number;\n  starCandy: number;\n  bonusAmount: number;\n  userId: string;\n  userEmail: string;\n}\n\n// Get PayPal access token\nasync function getPayPalAccessToken(): Promise<string> {\n  const auth = Buffer.from(`${PAYPAL_CLIENT_ID}:${PAYPAL_CLIENT_SECRET}`).toString('base64');\n  \n  const response = await fetch(`${PAYPAL_API_URL}/v1/oauth2/token`, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Basic ${auth}`,\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: 'grant_type=client_credentials',\n  });\n\n  const data = await response.json();\n  \n  if (!response.ok) {\n    throw new Error('Failed to get PayPal access token');\n  }\n\n  return data.access_token;\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const supabase = await createServerSupabaseClient();\n    \n    // Get current user\n    const { data: { user }, error: authError } = await supabase.auth.getUser();\n    if (authError || !user) {\n      return NextResponse.json(\n        { error: 'Unauthorized' },\n        { status: 401 }\n      );\n    }\n\n    const body: CreateOrderRequest = await request.json();\n    const { productId, productName, amount, starCandy, bonusAmount } = body;\n\n    // Validate request\n    if (!productId || !amount || amount <= 0) {\n      return NextResponse.json(\n        { error: 'Invalid request data' },\n        { status: 400 }\n      );\n    }\n\n    // Get PayPal access token\n    const accessToken = await getPayPalAccessToken();\n\n    // Create PayPal order\n    const orderData = {\n      intent: 'CAPTURE',\n      purchase_units: [{\n        reference_id: productId,\n        description: `${productName} - ${starCandy} Star Candy`,\n        amount: {\n          currency_code: 'USD',\n          value: amount.toFixed(2),\n        },\n        custom_id: JSON.stringify({\n          productId,\n          starCandy,\n          bonusAmount,\n          userId: user.id,\n        }),\n      }],\n      application_context: {\n        brand_name: 'Picnic',\n        landing_page: 'LOGIN',\n        user_action: 'PAY_NOW',\n        return_url: `${process.env.NEXT_PUBLIC_APP_URL}/payment/success`,\n        cancel_url: `${process.env.NEXT_PUBLIC_APP_URL}/star-candy`,\n      },\n    };\n\n    const response = await fetch(`${PAYPAL_API_URL}/v2/checkout/orders`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n        'PayPal-Request-Id': `${productId}-${Date.now()}`,\n      },\n      body: JSON.stringify(orderData),\n    });\n\n    const order = await response.json();\n\n    if (!response.ok) {\n      console.error('PayPal order creation failed:', order);\n      return NextResponse.json(\n        { error: 'Failed to create PayPal order' },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json({ orderID: order.id });\n\n  } catch (error) {\n    console.error('Create order error:', error);\n    return NextResponse.json(\n      { error: error instanceof Error ? error.message : 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}"],"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","ignoreList":[]}