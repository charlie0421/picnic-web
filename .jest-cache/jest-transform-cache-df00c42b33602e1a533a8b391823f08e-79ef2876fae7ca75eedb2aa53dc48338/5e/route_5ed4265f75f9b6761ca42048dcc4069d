85a4590e417d3a9c7659b5b167b22476
"use strict";

/* istanbul ignore next */
function cov_iosit57je() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/app/api/payment/paypal/create-order/route.ts";
  var hash = "ec00efa906eac7053b326fb0f33eaca0b08c1e1f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/app/api/payment/paypal/create-order/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "5": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 13,
          column: 128
        }
      },
      "6": {
        start: {
          line: 14,
          column: 25
        },
        end: {
          line: 14,
          column: 59
        }
      },
      "7": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 67
        }
      },
      "8": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 18,
          column: 94
        }
      },
      "9": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "10": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 38
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "12": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 61
        }
      },
      "13": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 29
        }
      },
      "14": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 112,
          column: 5
        }
      },
      "15": {
        start: {
          line: 35,
          column: 25
        },
        end: {
          line: 35,
          column: 73
        }
      },
      "16": {
        start: {
          line: 37,
          column: 53
        },
        end: {
          line: 37,
          column: 82
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "18": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "19": {
        start: {
          line: 45,
          column: 21
        },
        end: {
          line: 45,
          column: 41
        }
      },
      "20": {
        start: {
          line: 46,
          column: 75
        },
        end: {
          line: 46,
          column: 79
        }
      },
      "21": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "22": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 53,
          column: 15
        }
      },
      "23": {
        start: {
          line: 56,
          column: 28
        },
        end: {
          line: 56,
          column: 56
        }
      },
      "24": {
        start: {
          line: 58,
          column: 26
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "25": {
        start: {
          line: 84,
          column: 25
        },
        end: {
          line: 92,
          column: 10
        }
      },
      "26": {
        start: {
          line: 93,
          column: 22
        },
        end: {
          line: 93,
          column: 43
        }
      },
      "27": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "28": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 66
        }
      },
      "29": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 100,
          column: 15
        }
      },
      "30": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 104,
          column: 11
        }
      },
      "31": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 52
        }
      },
      "32": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 111,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "getPayPalAccessToken",
        decl: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 35
          }
        },
        loc: {
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "POST",
        decl: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 19
          }
        },
        loc: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 113,
            column: 1
          }
        },
        line: 33
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 23
          },
          end: {
            line: 13,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 65
          },
          end: {
            line: 13,
            column: 91
          }
        }, {
          start: {
            line: 13,
            column: 94
          },
          end: {
            line: 13,
            column: 128
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 25
          },
          end: {
            line: 14,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 25
          },
          end: {
            line: 14,
            column: 53
          }
        }, {
          start: {
            line: 14,
            column: 57
          },
          end: {
            line: 14,
            column: 59
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 15,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 15,
            column: 61
          }
        }, {
          start: {
            line: 15,
            column: 65
          },
          end: {
            line: 15,
            column: 67
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 21
          }
        }, {
          start: {
            line: 38,
            column: 25
          },
          end: {
            line: 38,
            column: 30
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 22
          }
        }, {
          start: {
            line: 48,
            column: 26
          },
          end: {
            line: 48,
            column: 33
          }
        }, {
          start: {
            line: 48,
            column: 37
          },
          end: {
            line: 48,
            column: 48
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "9": {
        loc: {
          start: {
            line: 108,
            column: 19
          },
          end: {
            line: 108,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 44
          },
          end: {
            line: 108,
            column: 57
          }
        }, {
          start: {
            line: 108,
            column: 60
          },
          end: {
            line: 108,
            column: 83
          }
        }],
        line: 108
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/app/api/payment/paypal/create-order/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { createServerSupabaseClient } from '@/lib/supabase/server';\n\nconst PAYPAL_API_URL = process.env.PAYPAL_ENV === 'production' \n  ? 'https://api-m.paypal.com' \n  : 'https://api-m.sandbox.paypal.com';\n\nconst PAYPAL_CLIENT_ID = process.env.PAYPAL_CLIENT_ID || '';\nconst PAYPAL_CLIENT_SECRET = process.env.PAYPAL_CLIENT_SECRET || '';\n\ninterface CreateOrderRequest {\n  productId: string;\n  productName: string;\n  amount: number;\n  starCandy: number;\n  bonusAmount: number;\n  userId: string;\n  userEmail: string;\n}\n\n// Get PayPal access token\nasync function getPayPalAccessToken(): Promise<string> {\n  const auth = Buffer.from(`${PAYPAL_CLIENT_ID}:${PAYPAL_CLIENT_SECRET}`).toString('base64');\n  \n  const response = await fetch(`${PAYPAL_API_URL}/v1/oauth2/token`, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Basic ${auth}`,\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: 'grant_type=client_credentials',\n  });\n\n  const data = await response.json();\n  \n  if (!response.ok) {\n    throw new Error('Failed to get PayPal access token');\n  }\n\n  return data.access_token;\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const supabase = await createServerSupabaseClient();\n    \n    // Get current user\n    const { data: { user }, error: authError } = await supabase.auth.getUser();\n    if (authError || !user) {\n      return NextResponse.json(\n        { error: 'Unauthorized' },\n        { status: 401 }\n      );\n    }\n\n    const body: CreateOrderRequest = await request.json();\n    const { productId, productName, amount, starCandy, bonusAmount } = body;\n\n    // Validate request\n    if (!productId || !amount || amount <= 0) {\n      return NextResponse.json(\n        { error: 'Invalid request data' },\n        { status: 400 }\n      );\n    }\n\n    // Get PayPal access token\n    const accessToken = await getPayPalAccessToken();\n\n    // Create PayPal order\n    const orderData = {\n      intent: 'CAPTURE',\n      purchase_units: [{\n        reference_id: productId,\n        description: `${productName} - ${starCandy} Star Candy`,\n        amount: {\n          currency_code: 'USD',\n          value: amount.toFixed(2),\n        },\n        custom_id: JSON.stringify({\n          productId,\n          starCandy,\n          bonusAmount,\n          userId: user.id,\n        }),\n      }],\n      application_context: {\n        brand_name: 'Picnic',\n        landing_page: 'LOGIN',\n        user_action: 'PAY_NOW',\n        return_url: `${process.env.NEXT_PUBLIC_APP_URL}/payment/success`,\n        cancel_url: `${process.env.NEXT_PUBLIC_APP_URL}/star-candy`,\n      },\n    };\n\n    const response = await fetch(`${PAYPAL_API_URL}/v2/checkout/orders`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n        'PayPal-Request-Id': `${productId}-${Date.now()}`,\n      },\n      body: JSON.stringify(orderData),\n    });\n\n    const order = await response.json();\n\n    if (!response.ok) {\n      console.error('PayPal order creation failed:', order);\n      return NextResponse.json(\n        { error: 'Failed to create PayPal order' },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json({ orderID: order.id });\n\n  } catch (error) {\n    console.error('Create order error:', error);\n    return NextResponse.json(\n      { error: error instanceof Error ? error.message : 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["POST", "PAYPAL_API_URL", "process", "env", "PAYPAL_ENV", "PAYPAL_CLIENT_ID", "PAYPAL_CLIENT_SECRET", "getPayPalAccessToken", "auth", "Buffer", "from", "toString", "response", "fetch", "method", "headers", "body", "data", "json", "ok", "Error", "access_token", "request", "supabase", "createServerSupabaseClient", "user", "error", "authError", "getUser", "NextResponse", "status", "productId", "productName", "amount", "starCandy", "bonusAmount", "accessToken", "orderData", "intent", "purchase_units", "reference_id", "description", "currency_code", "value", "toFixed", "custom_id", "JSON", "stringify", "userId", "id", "application_context", "brand_name", "landing_page", "user_action", "return_url", "NEXT_PUBLIC_APP_URL", "cancel_url", "Date", "now", "order", "console", "orderID", "message"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ec00efa906eac7053b326fb0f33eaca0b08c1e1f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_iosit57je = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_iosit57je();
cov_iosit57je().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_iosit57je().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_iosit57je().f[0]++;
    cov_iosit57je().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_iosit57je().s[3]++, require("next/server"));
const _server1 =
/* istanbul ignore next */
(cov_iosit57je().s[4]++, require("../../../../../lib/supabase/server"));
const PAYPAL_API_URL =
/* istanbul ignore next */
(cov_iosit57je().s[5]++, process.env.PAYPAL_ENV === 'production' ?
/* istanbul ignore next */
(cov_iosit57je().b[0][0]++, 'https://api-m.paypal.com') :
/* istanbul ignore next */
(cov_iosit57je().b[0][1]++, 'https://api-m.sandbox.paypal.com'));
const PAYPAL_CLIENT_ID =
/* istanbul ignore next */
(cov_iosit57je().s[6]++,
/* istanbul ignore next */
(cov_iosit57je().b[1][0]++, process.env.PAYPAL_CLIENT_ID) ||
/* istanbul ignore next */
(cov_iosit57je().b[1][1]++, ''));
const PAYPAL_CLIENT_SECRET =
/* istanbul ignore next */
(cov_iosit57je().s[7]++,
/* istanbul ignore next */
(cov_iosit57je().b[2][0]++, process.env.PAYPAL_CLIENT_SECRET) ||
/* istanbul ignore next */
(cov_iosit57je().b[2][1]++, ''));
// Get PayPal access token
async function getPayPalAccessToken() {
  /* istanbul ignore next */
  cov_iosit57je().f[1]++;
  const auth =
  /* istanbul ignore next */
  (cov_iosit57je().s[8]++, Buffer.from(`${PAYPAL_CLIENT_ID}:${PAYPAL_CLIENT_SECRET}`).toString('base64'));
  const response =
  /* istanbul ignore next */
  (cov_iosit57je().s[9]++, await fetch(`${PAYPAL_API_URL}/v1/oauth2/token`, {
    method: 'POST',
    headers: {
      'Authorization': `Basic ${auth}`,
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    body: 'grant_type=client_credentials'
  }));
  const data =
  /* istanbul ignore next */
  (cov_iosit57je().s[10]++, await response.json());
  /* istanbul ignore next */
  cov_iosit57je().s[11]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_iosit57je().b[3][0]++;
    cov_iosit57je().s[12]++;
    throw new Error('Failed to get PayPal access token');
  } else
  /* istanbul ignore next */
  {
    cov_iosit57je().b[3][1]++;
  }
  cov_iosit57je().s[13]++;
  return data.access_token;
}
async function POST(request) {
  /* istanbul ignore next */
  cov_iosit57je().f[2]++;
  cov_iosit57je().s[14]++;
  try {
    const supabase =
    /* istanbul ignore next */
    (cov_iosit57je().s[15]++, await (0, _server1.createServerSupabaseClient)());
    // Get current user
    const {
      data: {
        user
      },
      error: authError
    } =
    /* istanbul ignore next */
    (cov_iosit57je().s[16]++, await supabase.auth.getUser());
    /* istanbul ignore next */
    cov_iosit57je().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_iosit57je().b[5][0]++, authError) ||
    /* istanbul ignore next */
    (cov_iosit57je().b[5][1]++, !user)) {
      /* istanbul ignore next */
      cov_iosit57je().b[4][0]++;
      cov_iosit57je().s[18]++;
      return _server.NextResponse.json({
        error: 'Unauthorized'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_iosit57je().b[4][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_iosit57je().s[19]++, await request.json());
    const {
      productId,
      productName,
      amount,
      starCandy,
      bonusAmount
    } =
    /* istanbul ignore next */
    (cov_iosit57je().s[20]++, body);
    // Validate request
    /* istanbul ignore next */
    cov_iosit57je().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_iosit57je().b[7][0]++, !productId) ||
    /* istanbul ignore next */
    (cov_iosit57je().b[7][1]++, !amount) ||
    /* istanbul ignore next */
    (cov_iosit57je().b[7][2]++, amount <= 0)) {
      /* istanbul ignore next */
      cov_iosit57je().b[6][0]++;
      cov_iosit57je().s[22]++;
      return _server.NextResponse.json({
        error: 'Invalid request data'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_iosit57je().b[6][1]++;
    }
    // Get PayPal access token
    const accessToken =
    /* istanbul ignore next */
    (cov_iosit57je().s[23]++, await getPayPalAccessToken());
    // Create PayPal order
    const orderData =
    /* istanbul ignore next */
    (cov_iosit57je().s[24]++, {
      intent: 'CAPTURE',
      purchase_units: [{
        reference_id: productId,
        description: `${productName} - ${starCandy} Star Candy`,
        amount: {
          currency_code: 'USD',
          value: amount.toFixed(2)
        },
        custom_id: JSON.stringify({
          productId,
          starCandy,
          bonusAmount,
          userId: user.id
        })
      }],
      application_context: {
        brand_name: 'Picnic',
        landing_page: 'LOGIN',
        user_action: 'PAY_NOW',
        return_url: `${process.env.NEXT_PUBLIC_APP_URL}/payment/success`,
        cancel_url: `${process.env.NEXT_PUBLIC_APP_URL}/star-candy`
      }
    });
    const response =
    /* istanbul ignore next */
    (cov_iosit57je().s[25]++, await fetch(`${PAYPAL_API_URL}/v2/checkout/orders`, {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${accessToken}`,
        'Content-Type': 'application/json',
        'PayPal-Request-Id': `${productId}-${Date.now()}`
      },
      body: JSON.stringify(orderData)
    }));
    const order =
    /* istanbul ignore next */
    (cov_iosit57je().s[26]++, await response.json());
    /* istanbul ignore next */
    cov_iosit57je().s[27]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_iosit57je().b[8][0]++;
      cov_iosit57je().s[28]++;
      console.error('PayPal order creation failed:', order);
      /* istanbul ignore next */
      cov_iosit57je().s[29]++;
      return _server.NextResponse.json({
        error: 'Failed to create PayPal order'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_iosit57je().b[8][1]++;
    }
    cov_iosit57je().s[30]++;
    return _server.NextResponse.json({
      orderID: order.id
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_iosit57je().s[31]++;
    console.error('Create order error:', error);
    /* istanbul ignore next */
    cov_iosit57je().s[32]++;
    return _server.NextResponse.json({
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_iosit57je().b[9][0]++, error.message) :
      /* istanbul ignore next */
      (cov_iosit57je().b[9][1]++, 'Internal server error')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,