f70b443d318fca9203424f7b2a8087e3
'use client';
"use strict";

/* istanbul ignore next */
function cov_7uugmurm() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/contexts/ErrorContext.tsx";
  var hash = "70c5970d9029fcbb5145e6745776b70c3e57f811";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/contexts/ErrorContext.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 29
        }
      },
      "8": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 48
        }
      },
      "9": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 27,
          column: 72
        }
      },
      "10": {
        start: {
          line: 28,
          column: 15
        },
        end: {
          line: 28,
          column: 40
        }
      },
      "11": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "12": {
        start: {
          line: 30,
          column: 39
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "13": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 31,
          column: 41
        }
      },
      "14": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "15": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 20
        }
      },
      "16": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 66
        }
      },
      "17": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "18": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 19
        }
      },
      "19": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "20": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "21": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 53
        }
      },
      "22": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "23": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 30
        }
      },
      "24": {
        start: {
          line: 50,
          column: 17
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "25": {
        start: {
          line: 53,
          column: 32
        },
        end: {
          line: 53,
          column: 88
        }
      },
      "26": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "27": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "28": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 95
        }
      },
      "29": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "30": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 57
        }
      },
      "31": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 39
        }
      },
      "32": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 25
        }
      },
      "33": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "34": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 31
        }
      },
      "35": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 18
        }
      },
      "36": {
        start: {
          line: 71,
          column: 21
        },
        end: {
          line: 75,
          column: 1
        }
      },
      "37": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "38": {
        start: {
          line: 81,
          column: 68
        },
        end: {
          line: 81,
          column: 82
        }
      },
      "39": {
        start: {
          line: 82,
          column: 27
        },
        end: {
          line: 82,
          column: 91
        }
      },
      "40": {
        start: {
          line: 83,
          column: 38
        },
        end: {
          line: 90,
          column: 17
        }
      },
      "41": {
        start: {
          line: 92,
          column: 36
        },
        end: {
          line: 93,
          column: 17
        }
      },
      "42": {
        start: {
          line: 92,
          column: 71
        },
        end: {
          line: 92,
          column: 201
        }
      },
      "43": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 96,
          column: 17
        }
      },
      "44": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 95,
          column: 33
        }
      },
      "45": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 104,
          column: 18
        }
      },
      "46": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 114,
          column: 18
        }
      },
      "47": {
        start: {
          line: 110,
          column: 54
        },
        end: {
          line: 113,
          column: 33
        }
      },
      "48": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 124,
          column: 18
        }
      },
      "49": {
        start: {
          line: 120,
          column: 54
        },
        end: {
          line: 123,
          column: 33
        }
      },
      "50": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 132,
          column: 18
        }
      },
      "51": {
        start: {
          line: 136,
          column: 37
        },
        end: {
          line: 136,
          column: 83
        }
      },
      "52": {
        start: {
          line: 136,
          column: 66
        },
        end: {
          line: 136,
          column: 82
        }
      },
      "53": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 141,
          column: 18
        }
      },
      "54": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 148,
          column: 18
        }
      },
      "55": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 25
        }
      },
      "56": {
        start: {
          line: 155,
          column: 35
        },
        end: {
          line: 155,
          column: 71
        }
      },
      "57": {
        start: {
          line: 157,
          column: 30
        },
        end: {
          line: 157,
          column: 80
        }
      },
      "58": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 179,
          column: 7
        }
      },
      "59": {
        start: {
          line: 160,
          column: 23
        },
        end: {
          line: 160,
          column: 25
        }
      },
      "60": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 173,
          column: 11
        }
      },
      "61": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 172,
          column: 13
        }
      },
      "62": {
        start: {
          line: 163,
          column: 30
        },
        end: {
          line: 170,
          column: 39
        }
      },
      "63": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 169,
          column: 23
        }
      },
      "64": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 35
        }
      },
      "65": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 176,
          column: 10
        }
      },
      "66": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 57
        }
      },
      "67": {
        start: {
          line: 175,
          column: 36
        },
        end: {
          line: 175,
          column: 55
        }
      },
      "68": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 197,
          column: 7
        }
      },
      "69": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "70": {
        start: {
          line: 183,
          column: 32
        },
        end: {
          line: 183,
          column: 63
        }
      },
      "71": {
        start: {
          line: 184,
          column: 33
        },
        end: {
          line: 184,
          column: 67
        }
      },
      "72": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 192,
          column: 15
        }
      },
      "73": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 191,
          column: 19
        }
      },
      "74": {
        start: {
          line: 199,
          column: 21
        },
        end: {
          line: 230,
          column: 6
        }
      },
      "75": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "76": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 34
        }
      },
      "77": {
        start: {
          line: 203,
          column: 15
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "78": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 206,
          column: 15
        }
      },
      "79": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 119
        }
      },
      "80": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 216,
          column: 11
        }
      },
      "81": {
        start: {
          line: 217,
          column: 19
        },
        end: {
          line: 217,
          column: 83
        }
      },
      "82": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 225,
          column: 11
        }
      },
      "83": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 18
        }
      },
      "84": {
        start: {
          line: 232,
          column: 25
        },
        end: {
          line: 239,
          column: 10
        }
      },
      "85": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 238,
          column: 11
        }
      },
      "86": {
        start: {
          line: 241,
          column: 27
        },
        end: {
          line: 245,
          column: 10
        }
      },
      "87": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 244,
          column: 11
        }
      },
      "88": {
        start: {
          line: 247,
          column: 33
        },
        end: {
          line: 251,
          column: 10
        }
      },
      "89": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 250,
          column: 11
        }
      },
      "90": {
        start: {
          line: 253,
          column: 23
        },
        end: {
          line: 260,
          column: 10
        }
      },
      "91": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 259,
          column: 11
        }
      },
      "92": {
        start: {
          line: 262,
          column: 22
        },
        end: {
          line: 267,
          column: 6
        }
      },
      "93": {
        start: {
          line: 263,
          column: 22
        },
        end: {
          line: 263,
          column: 70
        }
      },
      "94": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 31
        }
      },
      "95": {
        start: {
          line: 268,
          column: 29
        },
        end: {
          line: 272,
          column: 6
        }
      },
      "96": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 269,
          column: 93
        }
      },
      "97": {
        start: {
          line: 273,
          column: 32
        },
        end: {
          line: 277,
          column: 6
        }
      },
      "98": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 93
        }
      },
      "99": {
        start: {
          line: 278,
          column: 28
        },
        end: {
          line: 282,
          column: 6
        }
      },
      "100": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 90
        }
      },
      "101": {
        start: {
          line: 284,
          column: 28
        },
        end: {
          line: 288,
          column: 6
        }
      },
      "102": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 285,
          column: 62
        }
      },
      "103": {
        start: {
          line: 285,
          column: 44
        },
        end: {
          line: 285,
          column: 60
        }
      },
      "104": {
        start: {
          line: 289,
          column: 32
        },
        end: {
          line: 293,
          column: 6
        }
      },
      "105": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 99
        }
      },
      "106": {
        start: {
          line: 290,
          column: 44
        },
        end: {
          line: 290,
          column: 97
        }
      },
      "107": {
        start: {
          line: 294,
          column: 32
        },
        end: {
          line: 298,
          column: 6
        }
      },
      "108": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 99
        }
      },
      "109": {
        start: {
          line: 295,
          column: 44
        },
        end: {
          line: 295,
          column: 97
        }
      },
      "110": {
        start: {
          line: 299,
          column: 22
        },
        end: {
          line: 303,
          column: 6
        }
      },
      "111": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 60
        }
      },
      "112": {
        start: {
          line: 300,
          column: 42
        },
        end: {
          line: 300,
          column: 58
        }
      },
      "113": {
        start: {
          line: 304,
          column: 32
        },
        end: {
          line: 308,
          column: 6
        }
      },
      "114": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 97
        }
      },
      "115": {
        start: {
          line: 305,
          column: 42
        },
        end: {
          line: 305,
          column: 95
        }
      },
      "116": {
        start: {
          line: 309,
          column: 25
        },
        end: {
          line: 325,
          column: 5
        }
      },
      "117": {
        start: {
          line: 326,
          column: 4
        },
        end: {
          line: 329,
          column: 7
        }
      },
      "118": {
        start: {
          line: 332,
          column: 20
        },
        end: {
          line: 332,
          column: 56
        }
      },
      "119": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "120": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 73
        }
      },
      "121": {
        start: {
          line: 336,
          column: 4
        },
        end: {
          line: 336,
          column: 19
        }
      },
      "122": {
        start: {
          line: 339,
          column: 92
        },
        end: {
          line: 339,
          column: 102
        }
      },
      "123": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 346,
          column: 6
        }
      },
      "124": {
        start: {
          line: 349,
          column: 71
        },
        end: {
          line: 349,
          column: 81
        }
      },
      "125": {
        start: {
          line: 350,
          column: 4
        },
        end: {
          line: 359,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 20
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 14
          },
          end: {
            line: 16,
            column: 15
          }
        },
        loc: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 19,
            column: 22
          }
        },
        loc: {
          start: {
            line: 19,
            column: 32
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 22,
            column: 20
          }
        },
        loc: {
          start: {
            line: 22,
            column: 30
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 33
          }
        },
        loc: {
          start: {
            line: 29,
            column: 47
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 33,
            column: 39
          },
          end: {
            line: 33,
            column: 40
          }
        },
        loc: {
          start: {
            line: 33,
            column: 61
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "7": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 34
          }
        },
        loc: {
          start: {
            line: 37,
            column: 53
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 37
      },
      "8": {
        name: "errorReducer",
        decl: {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 77,
            column: 21
          }
        },
        loc: {
          start: {
            line: 77,
            column: 37
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 77
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 92,
            column: 54
          },
          end: {
            line: 92,
            column: 55
          }
        },
        loc: {
          start: {
            line: 92,
            column: 71
          },
          end: {
            line: 92,
            column: 201
          }
        },
        line: 92
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 110,
            column: 45
          },
          end: {
            line: 110,
            column: 46
          }
        },
        loc: {
          start: {
            line: 110,
            column: 54
          },
          end: {
            line: 113,
            column: 33
          }
        },
        line: 110
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 120,
            column: 45
          },
          end: {
            line: 120,
            column: 46
          }
        },
        loc: {
          start: {
            line: 120,
            column: 54
          },
          end: {
            line: 123,
            column: 33
          }
        },
        line: 120
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 136,
            column: 57
          },
          end: {
            line: 136,
            column: 58
          }
        },
        loc: {
          start: {
            line: 136,
            column: 66
          },
          end: {
            line: 136,
            column: 82
          }
        },
        line: 136
      },
      "13": {
        name: "ErrorProvider",
        decl: {
          start: {
            line: 156,
            column: 9
          },
          end: {
            line: 156,
            column: 22
          }
        },
        loc: {
          start: {
            line: 156,
            column: 101
          },
          end: {
            line: 330,
            column: 1
          }
        },
        line: 156
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 159,
            column: 26
          },
          end: {
            line: 159,
            column: 27
          }
        },
        loc: {
          start: {
            line: 159,
            column: 30
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 159
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 161,
            column: 29
          },
          end: {
            line: 161,
            column: 30
          }
        },
        loc: {
          start: {
            line: 161,
            column: 43
          },
          end: {
            line: 173,
            column: 9
          }
        },
        line: 161
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 163,
            column: 41
          },
          end: {
            line: 163,
            column: 42
          }
        },
        loc: {
          start: {
            line: 163,
            column: 45
          },
          end: {
            line: 170,
            column: 17
          }
        },
        line: 163
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 174,
            column: 15
          },
          end: {
            line: 174,
            column: 16
          }
        },
        loc: {
          start: {
            line: 174,
            column: 19
          },
          end: {
            line: 176,
            column: 9
          }
        },
        line: 174
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 175,
            column: 27
          },
          end: {
            line: 175,
            column: 28
          }
        },
        loc: {
          start: {
            line: 175,
            column: 36
          },
          end: {
            line: 175,
            column: 55
          }
        },
        line: 175
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 181,
            column: 26
          },
          end: {
            line: 181,
            column: 27
          }
        },
        loc: {
          start: {
            line: 181,
            column: 30
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 181
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 185,
            column: 33
          },
          end: {
            line: 185,
            column: 34
          }
        },
        loc: {
          start: {
            line: 185,
            column: 42
          },
          end: {
            line: 192,
            column: 13
          }
        },
        line: 185
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 199,
            column: 45
          },
          end: {
            line: 199,
            column: 46
          }
        },
        loc: {
          start: {
            line: 199,
            column: 73
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 199
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 232,
            column: 49
          },
          end: {
            line: 232,
            column: 50
          }
        },
        loc: {
          start: {
            line: 232,
            column: 55
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 232
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 241,
            column: 51
          },
          end: {
            line: 241,
            column: 52
          }
        },
        loc: {
          start: {
            line: 241,
            column: 55
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 241
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 247,
            column: 57
          },
          end: {
            line: 247,
            column: 58
          }
        },
        loc: {
          start: {
            line: 247,
            column: 61
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 247
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 253,
            column: 47
          },
          end: {
            line: 253,
            column: 48
          }
        },
        loc: {
          start: {
            line: 253,
            column: 60
          },
          end: {
            line: 260,
            column: 5
          }
        },
        line: 253
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 262,
            column: 46
          },
          end: {
            line: 262,
            column: 47
          }
        },
        loc: {
          start: {
            line: 262,
            column: 138
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 262
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 268,
            column: 53
          },
          end: {
            line: 268,
            column: 54
          }
        },
        loc: {
          start: {
            line: 268,
            column: 85
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 268
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 273,
            column: 56
          },
          end: {
            line: 273,
            column: 57
          }
        },
        loc: {
          start: {
            line: 273,
            column: 67
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 273
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 278,
            column: 52
          },
          end: {
            line: 278,
            column: 53
          }
        },
        loc: {
          start: {
            line: 278,
            column: 100
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 278
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 284,
            column: 52
          },
          end: {
            line: 284,
            column: 53
          }
        },
        loc: {
          start: {
            line: 284,
            column: 56
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 284
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 285,
            column: 35
          },
          end: {
            line: 285,
            column: 36
          }
        },
        loc: {
          start: {
            line: 285,
            column: 44
          },
          end: {
            line: 285,
            column: 60
          }
        },
        line: 285
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 289,
            column: 56
          },
          end: {
            line: 289,
            column: 57
          }
        },
        loc: {
          start: {
            line: 289,
            column: 68
          },
          end: {
            line: 291,
            column: 5
          }
        },
        line: 289
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 290,
            column: 35
          },
          end: {
            line: 290,
            column: 36
          }
        },
        loc: {
          start: {
            line: 290,
            column: 44
          },
          end: {
            line: 290,
            column: 97
          }
        },
        line: 290
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 294,
            column: 56
          },
          end: {
            line: 294,
            column: 57
          }
        },
        loc: {
          start: {
            line: 294,
            column: 68
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 294
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 295,
            column: 35
          },
          end: {
            line: 295,
            column: 36
          }
        },
        loc: {
          start: {
            line: 295,
            column: 44
          },
          end: {
            line: 295,
            column: 97
          }
        },
        line: 295
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 299,
            column: 46
          },
          end: {
            line: 299,
            column: 47
          }
        },
        loc: {
          start: {
            line: 299,
            column: 50
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 299
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 300,
            column: 33
          },
          end: {
            line: 300,
            column: 34
          }
        },
        loc: {
          start: {
            line: 300,
            column: 42
          },
          end: {
            line: 300,
            column: 58
          }
        },
        line: 300
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 304,
            column: 56
          },
          end: {
            line: 304,
            column: 57
          }
        },
        loc: {
          start: {
            line: 304,
            column: 68
          },
          end: {
            line: 306,
            column: 5
          }
        },
        line: 304
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 305,
            column: 33
          },
          end: {
            line: 305,
            column: 34
          }
        },
        loc: {
          start: {
            line: 305,
            column: 42
          },
          end: {
            line: 305,
            column: 95
          }
        },
        line: 305
      },
      "40": {
        name: "useError",
        decl: {
          start: {
            line: 331,
            column: 9
          },
          end: {
            line: 331,
            column: 17
          }
        },
        loc: {
          start: {
            line: 331,
            column: 20
          },
          end: {
            line: 337,
            column: 1
          }
        },
        line: 331
      },
      "41": {
        name: "useErrorHandler",
        decl: {
          start: {
            line: 338,
            column: 9
          },
          end: {
            line: 338,
            column: 24
          }
        },
        loc: {
          start: {
            line: 338,
            column: 27
          },
          end: {
            line: 347,
            column: 1
          }
        },
        line: 338
      },
      "42": {
        name: "useErrorState",
        decl: {
          start: {
            line: 348,
            column: 9
          },
          end: {
            line: 348,
            column: 22
          }
        },
        loc: {
          start: {
            line: 348,
            column: 25
          },
          end: {
            line: 360,
            column: 1
          }
        },
        line: 348
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 34,
            column: 45
          }
        }, {
          start: {
            line: 34,
            column: 48
          },
          end: {
            line: 34,
            column: 65
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 20
          }
        }, {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 27
          }
        }, {
          start: {
            line: 38,
            column: 31
          },
          end: {
            line: 38,
            column: 45
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 47
          }
        }, {
          start: {
            line: 41,
            column: 51
          },
          end: {
            line: 41,
            column: 76
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "7": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 31
          }
        }],
        line: 47
      },
      "8": {
        loc: {
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 53
          }
        }, {
          start: {
            line: 53,
            column: 57
          },
          end: {
            line: 53,
            column: 88
          }
        }],
        line: 53
      },
      "9": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "10": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 29
          }
        }, {
          start: {
            line: 55,
            column: 33
          },
          end: {
            line: 55,
            column: 79
          }
        }],
        line: 55
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 56,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 56,
            column: 88
          }
        }, {
          start: {
            line: 56,
            column: 91
          },
          end: {
            line: 56,
            column: 95
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        }, {
          start: {
            line: 59,
            column: 19
          },
          end: {
            line: 61,
            column: 13
          }
        }],
        line: 57
      },
      "13": {
        loc: {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 20
          }
        }, {
          start: {
            line: 57,
            column: 25
          },
          end: {
            line: 57,
            column: 33
          }
        }, {
          start: {
            line: 57,
            column: 37
          },
          end: {
            line: 57,
            column: 45
          }
        }],
        line: 57
      },
      "14": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "15": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 105,
            column: 13
          }
        }, {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 125,
            column: 13
          }
        }, {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 133,
            column: 13
          }
        }, {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 142,
            column: 13
          }
        }, {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 149,
            column: 13
          }
        }, {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 151,
            column: 25
          }
        }],
        line: 78
      },
      "16": {
        loc: {
          start: {
            line: 81,
            column: 31
          },
          end: {
            line: 81,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 81,
            column: 42
          },
          end: {
            line: 81,
            column: 46
          }
        }],
        line: 81
      },
      "17": {
        loc: {
          start: {
            line: 81,
            column: 48
          },
          end: {
            line: 81,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 81,
            column: 59
          },
          end: {
            line: 81,
            column: 63
          }
        }],
        line: 81
      },
      "18": {
        loc: {
          start: {
            line: 92,
            column: 71
          },
          end: {
            line: 92,
            column: 201
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 71
          },
          end: {
            line: 92,
            column: 95
          }
        }, {
          start: {
            line: 92,
            column: 99
          },
          end: {
            line: 92,
            column: 144
          }
        }, {
          start: {
            line: 92,
            column: 148
          },
          end: {
            line: 92,
            column: 201
          }
        }],
        line: 92
      },
      "19": {
        loc: {
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 96,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 96,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "20": {
        loc: {
          start: {
            line: 110,
            column: 54
          },
          end: {
            line: 113,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 87
          },
          end: {
            line: 113,
            column: 25
          }
        }, {
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 113,
            column: 33
          }
        }],
        line: 110
      },
      "21": {
        loc: {
          start: {
            line: 120,
            column: 54
          },
          end: {
            line: 123,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 120,
            column: 87
          },
          end: {
            line: 123,
            column: 25
          }
        }, {
          start: {
            line: 123,
            column: 28
          },
          end: {
            line: 123,
            column: 33
          }
        }],
        line: 120
      },
      "22": {
        loc: {
          start: {
            line: 140,
            column: 31
          },
          end: {
            line: 140,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 57
          },
          end: {
            line: 140,
            column: 94
          }
        }, {
          start: {
            line: 140,
            column: 97
          },
          end: {
            line: 140,
            column: 101
          }
        }],
        line: 140
      },
      "23": {
        loc: {
          start: {
            line: 156,
            column: 35
          },
          end: {
            line: 156,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 156,
            column: 47
          },
          end: {
            line: 156,
            column: 49
          }
        }],
        line: 156
      },
      "24": {
        loc: {
          start: {
            line: 156,
            column: 51
          },
          end: {
            line: 156,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 156,
            column: 69
          },
          end: {
            line: 156,
            column: 73
          }
        }],
        line: 156
      },
      "25": {
        loc: {
          start: {
            line: 156,
            column: 75
          },
          end: {
            line: 156,
            column: 97
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 156,
            column: 93
          },
          end: {
            line: 156,
            column: 97
          }
        }],
        line: 156
      },
      "26": {
        loc: {
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "27": {
        loc: {
          start: {
            line: 162,
            column: 16
          },
          end: {
            line: 162,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 16
          },
          end: {
            line: 162,
            column: 35
          }
        }, {
          start: {
            line: 162,
            column: 39
          },
          end: {
            line: 162,
            column: 60
          }
        }, {
          start: {
            line: 162,
            column: 64
          },
          end: {
            line: 162,
            column: 83
          }
        }],
        line: 162
      },
      "28": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "29": {
        loc: {
          start: {
            line: 199,
            column: 58
          },
          end: {
            line: 199,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 199,
            column: 68
          },
          end: {
            line: 199,
            column: 70
          }
        }],
        line: 199
      },
      "30": {
        loc: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: 203,
            column: 15
          },
          end: {
            line: 209,
            column: 9
          }
        }],
        line: 201
      },
      "31": {
        loc: {
          start: {
            line: 203,
            column: 15
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 15
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: 207,
            column: 15
          },
          end: {
            line: 209,
            column: 9
          }
        }],
        line: 203
      },
      "32": {
        loc: {
          start: {
            line: 222,
            column: 26
          },
          end: {
            line: 222,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 26
          },
          end: {
            line: 222,
            column: 42
          }
        }, {
          start: {
            line: 222,
            column: 46
          },
          end: {
            line: 222,
            column: 61
          }
        }],
        line: 222
      },
      "33": {
        loc: {
          start: {
            line: 223,
            column: 26
          },
          end: {
            line: 223,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 26
          },
          end: {
            line: 223,
            column: 42
          }
        }, {
          start: {
            line: 223,
            column: 46
          },
          end: {
            line: 223,
            column: 61
          }
        }],
        line: 223
      },
      "34": {
        loc: {
          start: {
            line: 262,
            column: 56
          },
          end: {
            line: 262,
            column: 95
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 262,
            column: 67
          },
          end: {
            line: 262,
            column: 95
          }
        }],
        line: 262
      },
      "35": {
        loc: {
          start: {
            line: 262,
            column: 97
          },
          end: {
            line: 262,
            column: 135
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 262,
            column: 108
          },
          end: {
            line: 262,
            column: 135
          }
        }],
        line: 262
      },
      "36": {
        loc: {
          start: {
            line: 268,
            column: 54
          },
          end: {
            line: 268,
            column: 82
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 268,
            column: 64
          },
          end: {
            line: 268,
            column: 82
          }
        }],
        line: 268
      },
      "37": {
        loc: {
          start: {
            line: 278,
            column: 53
          },
          end: {
            line: 278,
            column: 97
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 278,
            column: 63
          },
          end: {
            line: 278,
            column: 97
          }
        }],
        line: 278
      },
      "38": {
        loc: {
          start: {
            line: 290,
            column: 44
          },
          end: {
            line: 290,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 44
          },
          end: {
            line: 290,
            column: 60
          }
        }, {
          start: {
            line: 290,
            column: 64
          },
          end: {
            line: 290,
            column: 97
          }
        }],
        line: 290
      },
      "39": {
        loc: {
          start: {
            line: 295,
            column: 44
          },
          end: {
            line: 295,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 44
          },
          end: {
            line: 295,
            column: 60
          }
        }, {
          start: {
            line: 295,
            column: 64
          },
          end: {
            line: 295,
            column: 97
          }
        }],
        line: 295
      },
      "40": {
        loc: {
          start: {
            line: 305,
            column: 42
          },
          end: {
            line: 305,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 42
          },
          end: {
            line: 305,
            column: 58
          }
        }, {
          start: {
            line: 305,
            column: 62
          },
          end: {
            line: 305,
            column: 95
          }
        }],
        line: 305
      },
      "41": {
        loc: {
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0, 0, 0, 0, 0, 0],
      "16": [0],
      "17": [0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0],
      "24": [0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0],
      "35": [0],
      "36": [0],
      "37": [0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/contexts/ErrorContext.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { createContext, useContext, useReducer, useCallback, useEffect } from 'react';\nimport { AppError, ErrorCategory, ErrorSeverity } from '@/utils/error';\nimport { logger } from '@/utils/logger';\n\n// \uC5D0\uB7EC \uC0C1\uD0DC \uD0C0\uC785 \uC815\uC758\nexport interface ErrorState {\n  id: string;\n  error: AppError;\n  timestamp: Date;\n  dismissed: boolean;\n  autoHide: boolean;\n  duration?: number;\n}\n\nexport interface GlobalErrorState {\n  errors: ErrorState[];\n  isLoading: boolean;\n  lastError: ErrorState | null;\n}\n\n// \uC561\uC158 \uD0C0\uC785 \uC815\uC758\ntype ErrorAction =\n  | { type: 'ADD_ERROR'; payload: { error: AppError; autoHide?: boolean; duration?: number } }\n  | { type: 'DISMISS_ERROR'; payload: { id: string } }\n  | { type: 'CLEAR_ALL_ERRORS' }\n  | { type: 'CLEAR_DISMISSED_ERRORS' }\n  | { type: 'SET_LOADING'; payload: { isLoading: boolean } }\n  | { type: 'AUTO_DISMISS_ERROR'; payload: { id: string } };\n\n// \uCD08\uAE30 \uC0C1\uD0DC\nconst initialState: GlobalErrorState = {\n  errors: [],\n  isLoading: false,\n  lastError: null,\n};\n\n// \uB9AC\uB4C0\uC11C \uD568\uC218\nfunction errorReducer(state: GlobalErrorState, action: ErrorAction): GlobalErrorState {\n  switch (action.type) {\n    case 'ADD_ERROR': {\n      const { error, autoHide = true, duration = 5000 } = action.payload;\n      const id = `error-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      \n      const newErrorState: ErrorState = {\n        id,\n        error,\n        timestamp: new Date(),\n        dismissed: false,\n        autoHide,\n        duration,\n      };\n\n      // \uC911\uBCF5 \uC5D0\uB7EC \uBC29\uC9C0 (\uAC19\uC740 \uBA54\uC2DC\uC9C0\uC758 \uC5D0\uB7EC\uAC00 \uC774\uBBF8 \uC788\uC73C\uBA74 \uCD94\uAC00\uD558\uC9C0 \uC54A\uC74C)\n      const isDuplicate = state.errors.some(\n        existingError => \n          !existingError.dismissed && \n          existingError.error.message === error.message &&\n          Date.now() - existingError.timestamp.getTime() < 1000 // 1\uCD08 \uB0B4 \uC911\uBCF5 \uBC29\uC9C0\n      );\n\n      if (isDuplicate) {\n        return state;\n      }\n\n      return {\n        ...state,\n        errors: [...state.errors, newErrorState],\n        lastError: newErrorState,\n      };\n    }\n\n    case 'DISMISS_ERROR': {\n      return {\n        ...state,\n        errors: state.errors.map(error =>\n          error.id === action.payload.id\n            ? { ...error, dismissed: true }\n            : error\n        ),\n      };\n    }\n\n    case 'AUTO_DISMISS_ERROR': {\n      return {\n        ...state,\n        errors: state.errors.map(error =>\n          error.id === action.payload.id\n            ? { ...error, dismissed: true }\n            : error\n        ),\n      };\n    }\n\n    case 'CLEAR_ALL_ERRORS': {\n      return {\n        ...state,\n        errors: [],\n        lastError: null,\n      };\n    }\n\n    case 'CLEAR_DISMISSED_ERRORS': {\n      const activeErrors = state.errors.filter(error => !error.dismissed);\n      return {\n        ...state,\n        errors: activeErrors,\n        lastError: activeErrors.length > 0 ? activeErrors[activeErrors.length - 1] : null,\n      };\n    }\n\n    case 'SET_LOADING': {\n      return {\n        ...state,\n        isLoading: action.payload.isLoading,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\n// Context \uD0C0\uC785 \uC815\uC758\ninterface ErrorContextType {\n  state: GlobalErrorState;\n  addError: (error: AppError | Error | string, options?: { autoHide?: boolean; duration?: number }) => string;\n  dismissError: (id: string) => void;\n  clearAllErrors: () => void;\n  clearDismissedErrors: () => void;\n  setLoading: (isLoading: boolean) => void;\n  // \uD3B8\uC758 \uBA54\uC11C\uB4DC\uB4E4\n  showError: (message: string, category?: ErrorCategory, severity?: ErrorSeverity) => string;\n  showNetworkError: (message?: string) => string;\n  showValidationError: (message: string) => string;\n  showServerError: (message?: string) => string;\n  // \uC0C1\uD0DC \uC870\uD68C \uBA54\uC11C\uB4DC\uB4E4\n  getActiveErrors: () => ErrorState[];\n  getErrorsByCategory: (category: ErrorCategory) => ErrorState[];\n  getErrorsBySeverity: (severity: ErrorSeverity) => ErrorState[];\n  hasErrors: () => boolean;\n  hasErrorsOfCategory: (category: ErrorCategory) => boolean;\n}\n\n// Context \uC0DD\uC131\nconst ErrorContext = createContext<ErrorContextType | undefined>(undefined);\n\n// Provider \uCEF4\uD3EC\uB10C\uD2B8\ninterface ErrorProviderProps {\n  children: React.ReactNode;\n  maxErrors?: number; // \uCD5C\uB300 \uC5D0\uB7EC \uAC1C\uC218 (\uAE30\uBCF8\uAC12: 10)\n  defaultAutoHide?: boolean; // \uAE30\uBCF8 \uC790\uB3D9 \uC228\uAE40 \uC124\uC815\n  defaultDuration?: number; // \uAE30\uBCF8 \uD45C\uC2DC \uC2DC\uAC04 (ms)\n}\n\nexport function ErrorProvider({ \n  children, \n  maxErrors = 10,\n  defaultAutoHide = true,\n  defaultDuration = 5000 \n}: ErrorProviderProps) {\n  const [state, dispatch] = useReducer(errorReducer, initialState);\n\n  // \uC790\uB3D9 \uC5D0\uB7EC \uD574\uC81C\uB97C \uC704\uD55C \uD0C0\uC774\uBA38 \uAD00\uB9AC\n  useEffect(() => {\n    const timers: NodeJS.Timeout[] = [];\n\n    state.errors.forEach(errorState => {\n      if (errorState.autoHide && !errorState.dismissed && errorState.duration) {\n        const timer = setTimeout(() => {\n          dispatch({ type: 'AUTO_DISMISS_ERROR', payload: { id: errorState.id } });\n        }, errorState.duration);\n        \n        timers.push(timer);\n      }\n    });\n\n    return () => {\n      timers.forEach(timer => clearTimeout(timer));\n    };\n  }, [state.errors]);\n\n  // \uCD5C\uB300 \uC5D0\uB7EC \uAC1C\uC218 \uC81C\uD55C\n  useEffect(() => {\n    if (state.errors.length > maxErrors) {\n      const excessCount = state.errors.length - maxErrors;\n      const oldestErrors = state.errors.slice(0, excessCount);\n      \n      oldestErrors.forEach(error => {\n        dispatch({ type: 'DISMISS_ERROR', payload: { id: error.id } });\n      });\n    }\n  }, [state.errors.length, maxErrors]);\n\n  // \uC5D0\uB7EC \uCD94\uAC00 \uD568\uC218\n  const addError = useCallback((\n    errorInput: AppError | Error | string,\n    options: { autoHide?: boolean; duration?: number } = {}\n  ): string => {\n    let appError: AppError;\n\n    if (errorInput instanceof AppError) {\n      appError = errorInput;\n    } else if (errorInput instanceof Error) {\n      appError = new AppError(\n        errorInput.message,\n        ErrorCategory.UNKNOWN,\n        ErrorSeverity.MEDIUM,\n        500,\n        { originalError: errorInput }\n      );\n    } else {\n      appError = new AppError(\n        errorInput,\n        ErrorCategory.UNKNOWN,\n        ErrorSeverity.MEDIUM,\n        500\n      );\n    }\n\n    // \uB85C\uAE45\n    console.log('Error added to context:', {\n      message: appError.message,\n      category: appError.category,\n      severity: appError.severity,\n      context: appError.context,\n    });\n\n    const id = `error-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    \n    dispatch({\n      type: 'ADD_ERROR',\n      payload: {\n        error: appError,\n        autoHide: options.autoHide ?? defaultAutoHide,\n        duration: options.duration ?? defaultDuration,\n      },\n    });\n\n    return id;\n  }, [defaultAutoHide, defaultDuration]);\n\n  // \uC5D0\uB7EC \uD574\uC81C \uD568\uC218\n  const dismissError = useCallback((id: string) => {\n    dispatch({ type: 'DISMISS_ERROR', payload: { id } });\n  }, []);\n\n  // \uBAA8\uB4E0 \uC5D0\uB7EC \uD074\uB9AC\uC5B4\n  const clearAllErrors = useCallback(() => {\n    dispatch({ type: 'CLEAR_ALL_ERRORS' });\n  }, []);\n\n  // \uD574\uC81C\uB41C \uC5D0\uB7EC\uB4E4\uB9CC \uD074\uB9AC\uC5B4\n  const clearDismissedErrors = useCallback(() => {\n    dispatch({ type: 'CLEAR_DISMISSED_ERRORS' });\n  }, []);\n\n  // \uB85C\uB529 \uC0C1\uD0DC \uC124\uC815\n  const setLoading = useCallback((isLoading: boolean) => {\n    dispatch({ type: 'SET_LOADING', payload: { isLoading } });\n  }, []);\n\n  // \uD3B8\uC758 \uBA54\uC11C\uB4DC\uB4E4\n  const showError = useCallback((\n    message: string, \n    category: ErrorCategory = ErrorCategory.UNKNOWN,\n    severity: ErrorSeverity = ErrorSeverity.MEDIUM\n  ): string => {\n    const error = new AppError(message, category, severity);\n    return addError(error);\n  }, [addError]);\n\n  const showNetworkError = useCallback((message = '\uB124\uD2B8\uC6CC\uD06C \uC5F0\uACB0\uC744 \uD655\uC778\uD574\uC8FC\uC138\uC694.'): string => {\n    return showError(message, ErrorCategory.NETWORK, ErrorSeverity.MEDIUM);\n  }, [showError]);\n\n  const showValidationError = useCallback((message: string): string => {\n    return showError(message, ErrorCategory.VALIDATION, ErrorSeverity.LOW);\n  }, [showError]);\n\n  const showServerError = useCallback((message = '\uC11C\uBC84\uC5D0\uC11C \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. \uC7A0\uC2DC \uD6C4 \uB2E4\uC2DC \uC2DC\uB3C4\uD574\uC8FC\uC138\uC694.'): string => {\n    return showError(message, ErrorCategory.SERVER, ErrorSeverity.HIGH);\n  }, [showError]);\n\n  // \uC0C1\uD0DC \uC870\uD68C \uBA54\uC11C\uB4DC\uB4E4\n  const getActiveErrors = useCallback((): ErrorState[] => {\n    return state.errors.filter(error => !error.dismissed);\n  }, [state.errors]);\n\n  const getErrorsByCategory = useCallback((category: ErrorCategory): ErrorState[] => {\n    return state.errors.filter(error => !error.dismissed && error.error.category === category);\n  }, [state.errors]);\n\n  const getErrorsBySeverity = useCallback((severity: ErrorSeverity): ErrorState[] => {\n    return state.errors.filter(error => !error.dismissed && error.error.severity === severity);\n  }, [state.errors]);\n\n  const hasErrors = useCallback((): boolean => {\n    return state.errors.some(error => !error.dismissed);\n  }, [state.errors]);\n\n  const hasErrorsOfCategory = useCallback((category: ErrorCategory): boolean => {\n    return state.errors.some(error => !error.dismissed && error.error.category === category);\n  }, [state.errors]);\n\n  const contextValue: ErrorContextType = {\n    state,\n    addError,\n    dismissError,\n    clearAllErrors,\n    clearDismissedErrors,\n    setLoading,\n    showError,\n    showNetworkError,\n    showValidationError,\n    showServerError,\n    getActiveErrors,\n    getErrorsByCategory,\n    getErrorsBySeverity,\n    hasErrors,\n    hasErrorsOfCategory,\n  };\n\n  return (\n    <ErrorContext.Provider value={contextValue}>\n      {children}\n    </ErrorContext.Provider>\n  );\n}\n\n// Hook for using the error context\nexport function useError(): ErrorContextType {\n  const context = useContext(ErrorContext);\n  if (context === undefined) {\n    throw new Error('useError must be used within an ErrorProvider');\n  }\n  return context;\n}\n\n// \uD3B8\uC758 \uD6C5\uB4E4\nexport function useErrorHandler() {\n  const { addError, showError, showNetworkError, showValidationError, showServerError } = useError();\n  \n  return {\n    handleError: addError,\n    showError,\n    showNetworkError,\n    showValidationError,\n    showServerError,\n  };\n}\n\nexport function useErrorState() {\n  const { state, getActiveErrors, hasErrors, hasErrorsOfCategory } = useError();\n  \n  return {\n    errors: state.errors,\n    activeErrors: getActiveErrors(),\n    isLoading: state.isLoading,\n    lastError: state.lastError,\n    hasErrors: hasErrors(),\n    hasNetworkErrors: hasErrorsOfCategory(ErrorCategory.NETWORK),\n    hasValidationErrors: hasErrorsOfCategory(ErrorCategory.VALIDATION),\n    hasServerErrors: hasErrorsOfCategory(ErrorCategory.SERVER),\n  };\n} "],
      names: ["ErrorProvider", "useError", "useErrorHandler", "useErrorState", "initialState", "errors", "isLoading", "lastError", "errorReducer", "state", "action", "type", "error", "autoHide", "duration", "payload", "id", "Date", "now", "Math", "random", "toString", "substr", "newErrorState", "timestamp", "dismissed", "isDuplicate", "some", "existingError", "message", "getTime", "map", "activeErrors", "filter", "length", "ErrorContext", "createContext", "undefined", "children", "maxErrors", "defaultAutoHide", "defaultDuration", "dispatch", "useReducer", "useEffect", "timers", "forEach", "errorState", "timer", "setTimeout", "push", "clearTimeout", "excessCount", "oldestErrors", "slice", "addError", "useCallback", "errorInput", "options", "appError", "AppError", "Error", "ErrorCategory", "UNKNOWN", "ErrorSeverity", "MEDIUM", "originalError", "console", "log", "category", "severity", "context", "dismissError", "clearAllErrors", "clearDismissedErrors", "setLoading", "showError", "showNetworkError", "NETWORK", "showValidationError", "VALIDATION", "LOW", "showServerError", "SERVER", "HIGH", "getActiveErrors", "getErrorsByCategory", "getErrorsBySeverity", "hasErrors", "hasErrorsOfCategory", "contextValue", "Provider", "value", "useContext", "handleError", "hasNetworkErrors", "hasValidationErrors", "hasServerErrors"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "70c5970d9029fcbb5145e6745776b70c3e57f811"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7uugmurm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7uugmurm();
cov_7uugmurm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_7uugmurm().f[0]++;
  cov_7uugmurm().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_7uugmurm().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_7uugmurm().s[3]++;
_export(exports, {
  ErrorProvider: function () {
    /* istanbul ignore next */
    cov_7uugmurm().f[1]++;
    cov_7uugmurm().s[4]++;
    return ErrorProvider;
  },
  useError: function () {
    /* istanbul ignore next */
    cov_7uugmurm().f[2]++;
    cov_7uugmurm().s[5]++;
    return useError;
  },
  useErrorHandler: function () {
    /* istanbul ignore next */
    cov_7uugmurm().f[3]++;
    cov_7uugmurm().s[6]++;
    return useErrorHandler;
  },
  useErrorState: function () {
    /* istanbul ignore next */
    cov_7uugmurm().f[4]++;
    cov_7uugmurm().s[7]++;
    return useErrorState;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_7uugmurm().s[8]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_7uugmurm().s[9]++, _interop_require_wildcard(require("react")));
const _error =
/* istanbul ignore next */
(cov_7uugmurm().s[10]++, require("../utils/error"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_7uugmurm().f[5]++;
  cov_7uugmurm().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_7uugmurm().b[0][0]++;
    cov_7uugmurm().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_7uugmurm().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_7uugmurm().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_7uugmurm().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_7uugmurm().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_7uugmurm().f[6]++;
    cov_7uugmurm().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_7uugmurm().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_7uugmurm().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_7uugmurm().f[7]++;
  cov_7uugmurm().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_7uugmurm().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_7uugmurm().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_7uugmurm().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_7uugmurm().b[2][0]++;
    cov_7uugmurm().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_7uugmurm().b[2][1]++;
  }
  cov_7uugmurm().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_7uugmurm().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_7uugmurm().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_7uugmurm().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_7uugmurm().b[4][0]++;
    cov_7uugmurm().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_7uugmurm().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_7uugmurm().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_7uugmurm().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_7uugmurm().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_7uugmurm().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_7uugmurm().b[6][0]++;
    cov_7uugmurm().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_7uugmurm().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_7uugmurm().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_7uugmurm().s[25]++,
  /* istanbul ignore next */
  (cov_7uugmurm().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_7uugmurm().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_7uugmurm().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_7uugmurm().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_7uugmurm().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_7uugmurm().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_7uugmurm().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_7uugmurm().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_7uugmurm().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_7uugmurm().b[11][1]++, null));
      /* istanbul ignore next */
      cov_7uugmurm().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_7uugmurm().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_7uugmurm().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_7uugmurm().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_7uugmurm().b[12][0]++;
        cov_7uugmurm().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_7uugmurm().b[12][1]++;
        cov_7uugmurm().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_7uugmurm().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_7uugmurm().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_7uugmurm().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_7uugmurm().b[14][0]++;
    cov_7uugmurm().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_7uugmurm().b[14][1]++;
  }
  cov_7uugmurm().s[35]++;
  return newObj;
}
// 초기 상태
const initialState =
/* istanbul ignore next */
(cov_7uugmurm().s[36]++, {
  errors: [],
  isLoading: false,
  lastError: null
});
// 리듀서 함수
function errorReducer(state, action) {
  /* istanbul ignore next */
  cov_7uugmurm().f[8]++;
  cov_7uugmurm().s[37]++;
  switch (action.type) {
    case 'ADD_ERROR':
      /* istanbul ignore next */
      cov_7uugmurm().b[15][0]++;
      {
        const {
          error,
          autoHide =
          /* istanbul ignore next */
          (cov_7uugmurm().b[16][0]++, true),
          duration =
          /* istanbul ignore next */
          (cov_7uugmurm().b[17][0]++, 5000)
        } =
        /* istanbul ignore next */
        (cov_7uugmurm().s[38]++, action.payload);
        const id =
        /* istanbul ignore next */
        (cov_7uugmurm().s[39]++, `error-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`);
        const newErrorState =
        /* istanbul ignore next */
        (cov_7uugmurm().s[40]++, {
          id,
          error,
          timestamp: new Date(),
          dismissed: false,
          autoHide,
          duration
        });
        // 중복 에러 방지 (같은 메시지의 에러가 이미 있으면 추가하지 않음)
        const isDuplicate =
        /* istanbul ignore next */
        (cov_7uugmurm().s[41]++, state.errors.some(existingError => {
          /* istanbul ignore next */
          cov_7uugmurm().f[9]++;
          cov_7uugmurm().s[42]++;
          return /* istanbul ignore next */(cov_7uugmurm().b[18][0]++, !existingError.dismissed) &&
          /* istanbul ignore next */
          (cov_7uugmurm().b[18][1]++, existingError.error.message === error.message) &&
          /* istanbul ignore next */
          (cov_7uugmurm().b[18][2]++, Date.now() - existingError.timestamp.getTime() < 1000);
        } // 1초 내 중복 방지
        ));
        /* istanbul ignore next */
        cov_7uugmurm().s[43]++;
        if (isDuplicate) {
          /* istanbul ignore next */
          cov_7uugmurm().b[19][0]++;
          cov_7uugmurm().s[44]++;
          return state;
        } else
        /* istanbul ignore next */
        {
          cov_7uugmurm().b[19][1]++;
        }
        cov_7uugmurm().s[45]++;
        return {
          ...state,
          errors: [...state.errors, newErrorState],
          lastError: newErrorState
        };
      }
    case 'DISMISS_ERROR':
      /* istanbul ignore next */
      cov_7uugmurm().b[15][1]++;
      {
        /* istanbul ignore next */
        cov_7uugmurm().s[46]++;
        return {
          ...state,
          errors: state.errors.map(error => {
            /* istanbul ignore next */
            cov_7uugmurm().f[10]++;
            cov_7uugmurm().s[47]++;
            return error.id === action.payload.id ?
            /* istanbul ignore next */
            (cov_7uugmurm().b[20][0]++, {
              ...error,
              dismissed: true
            }) :
            /* istanbul ignore next */
            (cov_7uugmurm().b[20][1]++, error);
          })
        };
      }
    case 'AUTO_DISMISS_ERROR':
      /* istanbul ignore next */
      cov_7uugmurm().b[15][2]++;
      {
        /* istanbul ignore next */
        cov_7uugmurm().s[48]++;
        return {
          ...state,
          errors: state.errors.map(error => {
            /* istanbul ignore next */
            cov_7uugmurm().f[11]++;
            cov_7uugmurm().s[49]++;
            return error.id === action.payload.id ?
            /* istanbul ignore next */
            (cov_7uugmurm().b[21][0]++, {
              ...error,
              dismissed: true
            }) :
            /* istanbul ignore next */
            (cov_7uugmurm().b[21][1]++, error);
          })
        };
      }
    case 'CLEAR_ALL_ERRORS':
      /* istanbul ignore next */
      cov_7uugmurm().b[15][3]++;
      {
        /* istanbul ignore next */
        cov_7uugmurm().s[50]++;
        return {
          ...state,
          errors: [],
          lastError: null
        };
      }
    case 'CLEAR_DISMISSED_ERRORS':
      /* istanbul ignore next */
      cov_7uugmurm().b[15][4]++;
      {
        const activeErrors =
        /* istanbul ignore next */
        (cov_7uugmurm().s[51]++, state.errors.filter(error => {
          /* istanbul ignore next */
          cov_7uugmurm().f[12]++;
          cov_7uugmurm().s[52]++;
          return !error.dismissed;
        }));
        /* istanbul ignore next */
        cov_7uugmurm().s[53]++;
        return {
          ...state,
          errors: activeErrors,
          lastError: activeErrors.length > 0 ?
          /* istanbul ignore next */
          (cov_7uugmurm().b[22][0]++, activeErrors[activeErrors.length - 1]) :
          /* istanbul ignore next */
          (cov_7uugmurm().b[22][1]++, null)
        };
      }
    case 'SET_LOADING':
      /* istanbul ignore next */
      cov_7uugmurm().b[15][5]++;
      {
        /* istanbul ignore next */
        cov_7uugmurm().s[54]++;
        return {
          ...state,
          isLoading: action.payload.isLoading
        };
      }
    default:
      /* istanbul ignore next */
      cov_7uugmurm().b[15][6]++;
      cov_7uugmurm().s[55]++;
      return state;
  }
}
// Context 생성
const ErrorContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_7uugmurm().s[56]++, (0, _react.createContext)(undefined));
function ErrorProvider({
  children,
  maxErrors =
  /* istanbul ignore next */
  (cov_7uugmurm().b[23][0]++, 10),
  defaultAutoHide =
  /* istanbul ignore next */
  (cov_7uugmurm().b[24][0]++, true),
  defaultDuration =
  /* istanbul ignore next */
  (cov_7uugmurm().b[25][0]++, 5000)
}) {
  /* istanbul ignore next */
  cov_7uugmurm().f[13]++;
  const [state, dispatch] =
  /* istanbul ignore next */
  (cov_7uugmurm().s[57]++, (0, _react.useReducer)(errorReducer, initialState));
  // 자동 에러 해제를 위한 타이머 관리
  /* istanbul ignore next */
  cov_7uugmurm().s[58]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_7uugmurm().f[14]++;
    const timers =
    /* istanbul ignore next */
    (cov_7uugmurm().s[59]++, []);
    /* istanbul ignore next */
    cov_7uugmurm().s[60]++;
    state.errors.forEach(errorState => {
      /* istanbul ignore next */
      cov_7uugmurm().f[15]++;
      cov_7uugmurm().s[61]++;
      if (
      /* istanbul ignore next */
      (cov_7uugmurm().b[27][0]++, errorState.autoHide) &&
      /* istanbul ignore next */
      (cov_7uugmurm().b[27][1]++, !errorState.dismissed) &&
      /* istanbul ignore next */
      (cov_7uugmurm().b[27][2]++, errorState.duration)) {
        /* istanbul ignore next */
        cov_7uugmurm().b[26][0]++;
        const timer =
        /* istanbul ignore next */
        (cov_7uugmurm().s[62]++, setTimeout(() => {
          /* istanbul ignore next */
          cov_7uugmurm().f[16]++;
          cov_7uugmurm().s[63]++;
          dispatch({
            type: 'AUTO_DISMISS_ERROR',
            payload: {
              id: errorState.id
            }
          });
        }, errorState.duration));
        /* istanbul ignore next */
        cov_7uugmurm().s[64]++;
        timers.push(timer);
      } else
      /* istanbul ignore next */
      {
        cov_7uugmurm().b[26][1]++;
      }
    });
    /* istanbul ignore next */
    cov_7uugmurm().s[65]++;
    return () => {
      /* istanbul ignore next */
      cov_7uugmurm().f[17]++;
      cov_7uugmurm().s[66]++;
      timers.forEach(timer => {
        /* istanbul ignore next */
        cov_7uugmurm().f[18]++;
        cov_7uugmurm().s[67]++;
        return clearTimeout(timer);
      });
    };
  }, [state.errors]);
  // 최대 에러 개수 제한
  /* istanbul ignore next */
  cov_7uugmurm().s[68]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_7uugmurm().f[19]++;
    cov_7uugmurm().s[69]++;
    if (state.errors.length > maxErrors) {
      /* istanbul ignore next */
      cov_7uugmurm().b[28][0]++;
      const excessCount =
      /* istanbul ignore next */
      (cov_7uugmurm().s[70]++, state.errors.length - maxErrors);
      const oldestErrors =
      /* istanbul ignore next */
      (cov_7uugmurm().s[71]++, state.errors.slice(0, excessCount));
      /* istanbul ignore next */
      cov_7uugmurm().s[72]++;
      oldestErrors.forEach(error => {
        /* istanbul ignore next */
        cov_7uugmurm().f[20]++;
        cov_7uugmurm().s[73]++;
        dispatch({
          type: 'DISMISS_ERROR',
          payload: {
            id: error.id
          }
        });
      });
    } else
    /* istanbul ignore next */
    {
      cov_7uugmurm().b[28][1]++;
    }
  }, [state.errors.length, maxErrors]);
  // 에러 추가 함수
  const addError =
  /* istanbul ignore next */
  (cov_7uugmurm().s[74]++, (0, _react.useCallback)((errorInput, options =
  /* istanbul ignore next */
  (cov_7uugmurm().b[29][0]++, {})) => {
    /* istanbul ignore next */
    cov_7uugmurm().f[21]++;
    let appError;
    /* istanbul ignore next */
    cov_7uugmurm().s[75]++;
    if (errorInput instanceof _error.AppError) {
      /* istanbul ignore next */
      cov_7uugmurm().b[30][0]++;
      cov_7uugmurm().s[76]++;
      appError = errorInput;
    } else {
      /* istanbul ignore next */
      cov_7uugmurm().b[30][1]++;
      cov_7uugmurm().s[77]++;
      if (errorInput instanceof Error) {
        /* istanbul ignore next */
        cov_7uugmurm().b[31][0]++;
        cov_7uugmurm().s[78]++;
        appError = new _error.AppError(errorInput.message, _error.ErrorCategory.UNKNOWN, _error.ErrorSeverity.MEDIUM, 500, {
          originalError: errorInput
        });
      } else {
        /* istanbul ignore next */
        cov_7uugmurm().b[31][1]++;
        cov_7uugmurm().s[79]++;
        appError = new _error.AppError(errorInput, _error.ErrorCategory.UNKNOWN, _error.ErrorSeverity.MEDIUM, 500);
      }
    }
    // 로깅
    /* istanbul ignore next */
    cov_7uugmurm().s[80]++;
    console.log('Error added to context:', {
      message: appError.message,
      category: appError.category,
      severity: appError.severity,
      context: appError.context
    });
    const id =
    /* istanbul ignore next */
    (cov_7uugmurm().s[81]++, `error-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`);
    /* istanbul ignore next */
    cov_7uugmurm().s[82]++;
    dispatch({
      type: 'ADD_ERROR',
      payload: {
        error: appError,
        autoHide:
        /* istanbul ignore next */
        (cov_7uugmurm().b[32][0]++, options.autoHide) ??
        /* istanbul ignore next */
        (cov_7uugmurm().b[32][1]++, defaultAutoHide),
        duration:
        /* istanbul ignore next */
        (cov_7uugmurm().b[33][0]++, options.duration) ??
        /* istanbul ignore next */
        (cov_7uugmurm().b[33][1]++, defaultDuration)
      }
    });
    /* istanbul ignore next */
    cov_7uugmurm().s[83]++;
    return id;
  }, [defaultAutoHide, defaultDuration]));
  // 에러 해제 함수
  const dismissError =
  /* istanbul ignore next */
  (cov_7uugmurm().s[84]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_7uugmurm().f[22]++;
    cov_7uugmurm().s[85]++;
    dispatch({
      type: 'DISMISS_ERROR',
      payload: {
        id
      }
    });
  }, []));
  // 모든 에러 클리어
  const clearAllErrors =
  /* istanbul ignore next */
  (cov_7uugmurm().s[86]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_7uugmurm().f[23]++;
    cov_7uugmurm().s[87]++;
    dispatch({
      type: 'CLEAR_ALL_ERRORS'
    });
  }, []));
  // 해제된 에러들만 클리어
  const clearDismissedErrors =
  /* istanbul ignore next */
  (cov_7uugmurm().s[88]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_7uugmurm().f[24]++;
    cov_7uugmurm().s[89]++;
    dispatch({
      type: 'CLEAR_DISMISSED_ERRORS'
    });
  }, []));
  // 로딩 상태 설정
  const setLoading =
  /* istanbul ignore next */
  (cov_7uugmurm().s[90]++, (0, _react.useCallback)(isLoading => {
    /* istanbul ignore next */
    cov_7uugmurm().f[25]++;
    cov_7uugmurm().s[91]++;
    dispatch({
      type: 'SET_LOADING',
      payload: {
        isLoading
      }
    });
  }, []));
  // 편의 메서드들
  const showError =
  /* istanbul ignore next */
  (cov_7uugmurm().s[92]++, (0, _react.useCallback)((message, category =
  /* istanbul ignore next */
  (cov_7uugmurm().b[34][0]++, _error.ErrorCategory.UNKNOWN), severity =
  /* istanbul ignore next */
  (cov_7uugmurm().b[35][0]++, _error.ErrorSeverity.MEDIUM)) => {
    /* istanbul ignore next */
    cov_7uugmurm().f[26]++;
    const error =
    /* istanbul ignore next */
    (cov_7uugmurm().s[93]++, new _error.AppError(message, category, severity));
    /* istanbul ignore next */
    cov_7uugmurm().s[94]++;
    return addError(error);
  }, [addError]));
  const showNetworkError =
  /* istanbul ignore next */
  (cov_7uugmurm().s[95]++, (0, _react.useCallback)((message =
  /* istanbul ignore next */
  (cov_7uugmurm().b[36][0]++, '네트워크 연결을 확인해주세요.')) => {
    /* istanbul ignore next */
    cov_7uugmurm().f[27]++;
    cov_7uugmurm().s[96]++;
    return showError(message, _error.ErrorCategory.NETWORK, _error.ErrorSeverity.MEDIUM);
  }, [showError]));
  const showValidationError =
  /* istanbul ignore next */
  (cov_7uugmurm().s[97]++, (0, _react.useCallback)(message => {
    /* istanbul ignore next */
    cov_7uugmurm().f[28]++;
    cov_7uugmurm().s[98]++;
    return showError(message, _error.ErrorCategory.VALIDATION, _error.ErrorSeverity.LOW);
  }, [showError]));
  const showServerError =
  /* istanbul ignore next */
  (cov_7uugmurm().s[99]++, (0, _react.useCallback)((message =
  /* istanbul ignore next */
  (cov_7uugmurm().b[37][0]++, '서버에서 오류가 발생했습니다. 잠시 후 다시 시도해주세요.')) => {
    /* istanbul ignore next */
    cov_7uugmurm().f[29]++;
    cov_7uugmurm().s[100]++;
    return showError(message, _error.ErrorCategory.SERVER, _error.ErrorSeverity.HIGH);
  }, [showError]));
  // 상태 조회 메서드들
  const getActiveErrors =
  /* istanbul ignore next */
  (cov_7uugmurm().s[101]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_7uugmurm().f[30]++;
    cov_7uugmurm().s[102]++;
    return state.errors.filter(error => {
      /* istanbul ignore next */
      cov_7uugmurm().f[31]++;
      cov_7uugmurm().s[103]++;
      return !error.dismissed;
    });
  }, [state.errors]));
  const getErrorsByCategory =
  /* istanbul ignore next */
  (cov_7uugmurm().s[104]++, (0, _react.useCallback)(category => {
    /* istanbul ignore next */
    cov_7uugmurm().f[32]++;
    cov_7uugmurm().s[105]++;
    return state.errors.filter(error => {
      /* istanbul ignore next */
      cov_7uugmurm().f[33]++;
      cov_7uugmurm().s[106]++;
      return /* istanbul ignore next */(cov_7uugmurm().b[38][0]++, !error.dismissed) &&
      /* istanbul ignore next */
      (cov_7uugmurm().b[38][1]++, error.error.category === category);
    });
  }, [state.errors]));
  const getErrorsBySeverity =
  /* istanbul ignore next */
  (cov_7uugmurm().s[107]++, (0, _react.useCallback)(severity => {
    /* istanbul ignore next */
    cov_7uugmurm().f[34]++;
    cov_7uugmurm().s[108]++;
    return state.errors.filter(error => {
      /* istanbul ignore next */
      cov_7uugmurm().f[35]++;
      cov_7uugmurm().s[109]++;
      return /* istanbul ignore next */(cov_7uugmurm().b[39][0]++, !error.dismissed) &&
      /* istanbul ignore next */
      (cov_7uugmurm().b[39][1]++, error.error.severity === severity);
    });
  }, [state.errors]));
  const hasErrors =
  /* istanbul ignore next */
  (cov_7uugmurm().s[110]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_7uugmurm().f[36]++;
    cov_7uugmurm().s[111]++;
    return state.errors.some(error => {
      /* istanbul ignore next */
      cov_7uugmurm().f[37]++;
      cov_7uugmurm().s[112]++;
      return !error.dismissed;
    });
  }, [state.errors]));
  const hasErrorsOfCategory =
  /* istanbul ignore next */
  (cov_7uugmurm().s[113]++, (0, _react.useCallback)(category => {
    /* istanbul ignore next */
    cov_7uugmurm().f[38]++;
    cov_7uugmurm().s[114]++;
    return state.errors.some(error => {
      /* istanbul ignore next */
      cov_7uugmurm().f[39]++;
      cov_7uugmurm().s[115]++;
      return /* istanbul ignore next */(cov_7uugmurm().b[40][0]++, !error.dismissed) &&
      /* istanbul ignore next */
      (cov_7uugmurm().b[40][1]++, error.error.category === category);
    });
  }, [state.errors]));
  const contextValue =
  /* istanbul ignore next */
  (cov_7uugmurm().s[116]++, {
    state,
    addError,
    dismissError,
    clearAllErrors,
    clearDismissedErrors,
    setLoading,
    showError,
    showNetworkError,
    showValidationError,
    showServerError,
    getActiveErrors,
    getErrorsByCategory,
    getErrorsBySeverity,
    hasErrors,
    hasErrorsOfCategory
  });
  /* istanbul ignore next */
  cov_7uugmurm().s[117]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(ErrorContext.Provider, {
    value: contextValue,
    children: children
  });
}
function useError() {
  /* istanbul ignore next */
  cov_7uugmurm().f[40]++;
  const context =
  /* istanbul ignore next */
  (cov_7uugmurm().s[118]++, (0, _react.useContext)(ErrorContext));
  /* istanbul ignore next */
  cov_7uugmurm().s[119]++;
  if (context === undefined) {
    /* istanbul ignore next */
    cov_7uugmurm().b[41][0]++;
    cov_7uugmurm().s[120]++;
    throw new Error('useError must be used within an ErrorProvider');
  } else
  /* istanbul ignore next */
  {
    cov_7uugmurm().b[41][1]++;
  }
  cov_7uugmurm().s[121]++;
  return context;
}
function useErrorHandler() {
  /* istanbul ignore next */
  cov_7uugmurm().f[41]++;
  const {
    addError,
    showError,
    showNetworkError,
    showValidationError,
    showServerError
  } =
  /* istanbul ignore next */
  (cov_7uugmurm().s[122]++, useError());
  /* istanbul ignore next */
  cov_7uugmurm().s[123]++;
  return {
    handleError: addError,
    showError,
    showNetworkError,
    showValidationError,
    showServerError
  };
}
function useErrorState() {
  /* istanbul ignore next */
  cov_7uugmurm().f[42]++;
  const {
    state,
    getActiveErrors,
    hasErrors,
    hasErrorsOfCategory
  } =
  /* istanbul ignore next */
  (cov_7uugmurm().s[124]++, useError());
  /* istanbul ignore next */
  cov_7uugmurm().s[125]++;
  return {
    errors: state.errors,
    activeErrors: getActiveErrors(),
    isLoading: state.isLoading,
    lastError: state.lastError,
    hasErrors: hasErrors(),
    hasNetworkErrors: hasErrorsOfCategory(_error.ErrorCategory.NETWORK),
    hasValidationErrors: hasErrorsOfCategory(_error.ErrorCategory.VALIDATION),
    hasServerErrors: hasErrorsOfCategory(_error.ErrorCategory.SERVER)
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,