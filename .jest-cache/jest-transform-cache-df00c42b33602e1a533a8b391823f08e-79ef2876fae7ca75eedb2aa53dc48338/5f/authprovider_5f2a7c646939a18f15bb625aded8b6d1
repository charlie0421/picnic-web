c1b7eeeb822367d11811e782e0b30e46
'use client';
"use strict";

/* istanbul ignore next */
function cov_1rzpp6otys() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/lib/supabase/auth-provider.tsx";
  var hash = "5b9bd499457ee8703c633e439504a5e2aefd329d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/lib/supabase/auth-provider.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 28
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 35
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "10": {
        start: {
          line: 24,
          column: 39
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "11": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "12": {
        start: {
          line: 26,
          column: 27
        },
        end: {
          line: 26,
          column: 40
        }
      },
      "13": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 20
        }
      },
      "14": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "15": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "16": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 19
        }
      },
      "17": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "18": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 10
        }
      },
      "19": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 53
        }
      },
      "20": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "21": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "22": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "23": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 47,
          column: 88
        }
      },
      "24": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "25": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "26": {
        start: {
          line: 50,
          column: 23
        },
        end: {
          line: 50,
          column: 95
        }
      },
      "27": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "28": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 57
        }
      },
      "29": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 39
        }
      },
      "30": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 25
        }
      },
      "31": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "32": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 31
        }
      },
      "33": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 18
        }
      },
      "34": {
        start: {
          line: 64,
          column: 34
        },
        end: {
          line: 64,
          column: 70
        }
      },
      "35": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 29
        }
      },
      "36": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "37": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 49
        }
      },
      "38": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 34
        }
      },
      "39": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 35
        }
      },
      "40": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 35
        }
      },
      "41": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 88,
          column: 10
        }
      },
      "42": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 32
        }
      },
      "43": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "44": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "45": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 53
        }
      },
      "46": {
        start: {
          line: 94,
          column: 41
        },
        end: {
          line: 169,
          column: 17
        }
      },
      "47": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 168,
          column: 21
        }
      },
      "48": {
        start: {
          line: 97,
          column: 44
        },
        end: {
          line: 97,
          column: 80
        }
      },
      "49": {
        start: {
          line: 98,
          column: 24
        },
        end: {
          line: 98,
          column: 55
        }
      },
      "50": {
        start: {
          line: 98,
          column: 42
        },
        end: {
          line: 98,
          column: 55
        }
      },
      "51": {
        start: {
          line: 99,
          column: 41
        },
        end: {
          line: 99,
          column: 63
        }
      },
      "52": {
        start: {
          line: 100,
          column: 42
        },
        end: {
          line: 100,
          column: 70
        }
      },
      "53": {
        start: {
          line: 102,
          column: 49
        },
        end: {
          line: 117,
          column: 25
        }
      },
      "54": {
        start: {
          line: 103,
          column: 28
        },
        end: {
          line: 116,
          column: 29
        }
      },
      "55": {
        start: {
          line: 104,
          column: 48
        },
        end: {
          line: 104,
          column: 74
        }
      },
      "56": {
        start: {
          line: 105,
          column: 32
        },
        end: {
          line: 111,
          column: 33
        }
      },
      "57": {
        start: {
          line: 106,
          column: 58
        },
        end: {
          line: 106,
          column: 82
        }
      },
      "58": {
        start: {
          line: 107,
          column: 36
        },
        end: {
          line: 110,
          column: 37
        }
      },
      "59": {
        start: {
          line: 108,
          column: 40
        },
        end: {
          line: 108,
          column: 91
        }
      },
      "60": {
        start: {
          line: 109,
          column: 40
        },
        end: {
          line: 109,
          column: 52
        }
      },
      "61": {
        start: {
          line: 112,
          column: 32
        },
        end: {
          line: 112,
          column: 45
        }
      },
      "62": {
        start: {
          line: 114,
          column: 32
        },
        end: {
          line: 114,
          column: 85
        }
      },
      "63": {
        start: {
          line: 115,
          column: 32
        },
        end: {
          line: 115,
          column: 45
        }
      },
      "64": {
        start: {
          line: 118,
          column: 24
        },
        end: {
          line: 132,
          column: 25
        }
      },
      "65": {
        start: {
          line: 119,
          column: 44
        },
        end: {
          line: 119,
          column: 72
        }
      },
      "66": {
        start: {
          line: 121,
          column: 57
        },
        end: {
          line: 121,
          column: 86
        }
      },
      "67": {
        start: {
          line: 122,
          column: 28
        },
        end: {
          line: 122,
          column: 125
        }
      },
      "68": {
        start: {
          line: 124,
          column: 51
        },
        end: {
          line: 124,
          column: 78
        }
      },
      "69": {
        start: {
          line: 125,
          column: 48
        },
        end: {
          line: 125,
          column: 88
        }
      },
      "70": {
        start: {
          line: 126,
          column: 28
        },
        end: {
          line: 130,
          column: 31
        }
      },
      "71": {
        start: {
          line: 131,
          column: 28
        },
        end: {
          line: 131,
          column: 47
        }
      },
      "72": {
        start: {
          line: 134,
          column: 46
        },
        end: {
          line: 134,
          column: 51
        }
      },
      "73": {
        start: {
          line: 135,
          column: 24
        },
        end: {
          line: 142,
          column: 25
        }
      },
      "74": {
        start: {
          line: 135,
          column: 36
        },
        end: {
          line: 135,
          column: 37
        }
      },
      "75": {
        start: {
          line: 136,
          column: 40
        },
        end: {
          line: 136,
          column: 59
        }
      },
      "76": {
        start: {
          line: 137,
          column: 28
        },
        end: {
          line: 141,
          column: 29
        }
      },
      "77": {
        start: {
          line: 138,
          column: 49
        },
        end: {
          line: 138,
          column: 74
        }
      },
      "78": {
        start: {
          line: 139,
          column: 32
        },
        end: {
          line: 139,
          column: 113
        }
      },
      "79": {
        start: {
          line: 140,
          column: 32
        },
        end: {
          line: 140,
          column: 69
        }
      },
      "80": {
        start: {
          line: 140,
          column: 46
        },
        end: {
          line: 140,
          column: 69
        }
      },
      "81": {
        start: {
          line: 144,
          column: 40
        },
        end: {
          line: 144,
          column: 45
        }
      },
      "82": {
        start: {
          line: 145,
          column: 24
        },
        end: {
          line: 157,
          column: 25
        }
      },
      "83": {
        start: {
          line: 146,
          column: 44
        },
        end: {
          line: 146,
          column: 70
        }
      },
      "84": {
        start: {
          line: 147,
          column: 28
        },
        end: {
          line: 154,
          column: 29
        }
      },
      "85": {
        start: {
          line: 148,
          column: 54
        },
        end: {
          line: 148,
          column: 78
        }
      },
      "86": {
        start: {
          line: 149,
          column: 32
        },
        end: {
          line: 153,
          column: 33
        }
      },
      "87": {
        start: {
          line: 150,
          column: 36
        },
        end: {
          line: 150,
          column: 87
        }
      },
      "88": {
        start: {
          line: 151,
          column: 36
        },
        end: {
          line: 151,
          column: 53
        }
      },
      "89": {
        start: {
          line: 152,
          column: 36
        },
        end: {
          line: 152,
          column: 42
        }
      },
      "90": {
        start: {
          line: 156,
          column: 28
        },
        end: {
          line: 156,
          column: 81
        }
      },
      "91": {
        start: {
          line: 158,
          column: 44
        },
        end: {
          line: 158,
          column: 72
        }
      },
      "92": {
        start: {
          line: 159,
          column: 24
        },
        end: {
          line: 163,
          column: 27
        }
      },
      "93": {
        start: {
          line: 164,
          column: 24
        },
        end: {
          line: 164,
          column: 43
        }
      },
      "94": {
        start: {
          line: 166,
          column: 24
        },
        end: {
          line: 166,
          column: 74
        }
      },
      "95": {
        start: {
          line: 167,
          column: 24
        },
        end: {
          line: 167,
          column: 37
        }
      },
      "96": {
        start: {
          line: 170,
          column: 39
        },
        end: {
          line: 170,
          column: 57
        }
      },
      "97": {
        start: {
          line: 171,
          column: 36
        },
        end: {
          line: 171,
          column: 79
        }
      },
      "98": {
        start: {
          line: 172,
          column: 39
        },
        end: {
          line: 172,
          column: 85
        }
      },
      "99": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 178,
          column: 19
        }
      },
      "100": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 197,
          column: 17
        }
      },
      "101": {
        start: {
          line: 181,
          column: 20
        },
        end: {
          line: 184,
          column: 23
        }
      },
      "102": {
        start: {
          line: 186,
          column: 20
        },
        end: {
          line: 195,
          column: 23
        }
      },
      "103": {
        start: {
          line: 196,
          column: 20
        },
        end: {
          line: 196,
          column: 27
        }
      },
      "104": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 205,
          column: 17
        }
      },
      "105": {
        start: {
          line: 200,
          column: 20
        },
        end: {
          line: 200,
          column: 86
        }
      },
      "106": {
        start: {
          line: 201,
          column: 20
        },
        end: {
          line: 201,
          column: 85
        }
      },
      "107": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 203,
          column: 50
        }
      },
      "108": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 27
        }
      },
      "109": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 220,
          column: 17
        }
      },
      "110": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 208,
          column: 99
        }
      },
      "111": {
        start: {
          line: 209,
          column: 20
        },
        end: {
          line: 218,
          column: 23
        }
      },
      "112": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 219,
          column: 27
        }
      },
      "113": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 235,
          column: 17
        }
      },
      "114": {
        start: {
          line: 223,
          column: 20
        },
        end: {
          line: 223,
          column: 75
        }
      },
      "115": {
        start: {
          line: 224,
          column: 20
        },
        end: {
          line: 233,
          column: 23
        }
      },
      "116": {
        start: {
          line: 234,
          column: 20
        },
        end: {
          line: 234,
          column: 27
        }
      },
      "117": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 81
        }
      },
      "118": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 53
        }
      },
      "119": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 76
        }
      },
      "120": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 250,
          column: 19
        }
      },
      "121": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 58
        }
      },
      "122": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 264,
          column: 15
        }
      },
      "123": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "124": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 74
        }
      },
      "125": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 274,
          column: 15
        }
      },
      "126": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 19
        }
      },
      "127": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "128": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 60
        }
      },
      "129": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 19
        }
      },
      "130": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "131": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 71
        }
      },
      "132": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 48
        }
      },
      "133": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 67
        }
      },
      "134": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 58
        }
      },
      "135": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 293,
          column: 15
        }
      },
      "136": {
        start: {
          line: 299,
          column: 26
        },
        end: {
          line: 299,
          column: 36
        }
      },
      "137": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 30
        }
      },
      "138": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "139": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 319,
          column: 15
        }
      },
      "140": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 321,
          column: 63
        }
      },
      "141": {
        start: {
          line: 321,
          column: 43
        },
        end: {
          line: 321,
          column: 61
        }
      },
      "142": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 37
        }
      },
      "143": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 29
        }
      },
      "144": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 329,
          column: 10
        }
      },
      "145": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 44
        }
      },
      "146": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 26
        }
      },
      "147": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 337,
          column: 9
        }
      },
      "148": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 35
        }
      },
      "149": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 340,
          column: 41
        }
      },
      "150": {
        start: {
          line: 340,
          column: 34
        },
        end: {
          line: 340,
          column: 41
        }
      },
      "151": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 351,
          column: 9
        }
      },
      "152": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 50
        }
      },
      "153": {
        start: {
          line: 343,
          column: 30
        },
        end: {
          line: 343,
          column: 70
        }
      },
      "154": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 348,
          column: 13
        }
      },
      "155": {
        start: {
          line: 345,
          column: 16
        },
        end: {
          line: 345,
          column: 63
        }
      },
      "156": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 347,
          column: 53
        }
      },
      "157": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 59
        }
      },
      "158": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 493,
          column: 9
        }
      },
      "159": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 81
        }
      },
      "160": {
        start: {
          line: 356,
          column: 30
        },
        end: {
          line: 356,
          column: 47
        }
      },
      "161": {
        start: {
          line: 358,
          column: 87
        },
        end: {
          line: 358,
          column: 195
        }
      },
      "162": {
        start: {
          line: 358,
          column: 134
        },
        end: {
          line: 358,
          column: 194
        }
      },
      "163": {
        start: {
          line: 359,
          column: 25
        },
        end: {
          line: 359,
          column: 52
        }
      },
      "164": {
        start: {
          line: 360,
          column: 32
        },
        end: {
          line: 360,
          column: 48
        }
      },
      "165": {
        start: {
          line: 361,
          column: 33
        },
        end: {
          line: 361,
          column: 54
        }
      },
      "166": {
        start: {
          line: 362,
          column: 28
        },
        end: {
          line: 362,
          column: 45
        }
      },
      "167": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 370,
          column: 15
        }
      },
      "168": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 385,
          column: 13
        }
      },
      "169": {
        start: {
          line: 372,
          column: 16
        },
        end: {
          line: 372,
          column: 66
        }
      },
      "170": {
        start: {
          line: 374,
          column: 16
        },
        end: {
          line: 383,
          column: 19
        }
      },
      "171": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 384,
          column: 23
        }
      },
      "172": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 392,
          column: 15
        }
      },
      "173": {
        start: {
          line: 394,
          column: 35
        },
        end: {
          line: 400,
          column: 13
        }
      },
      "174": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 58
        }
      },
      "175": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 411,
          column: 15
        }
      },
      "176": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 74
        }
      },
      "177": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 416,
          column: 13
        }
      },
      "178": {
        start: {
          line: 415,
          column: 16
        },
        end: {
          line: 415,
          column: 50
        }
      },
      "179": {
        start: {
          line: 418,
          column: 38
        },
        end: {
          line: 418,
          column: 103
        }
      },
      "180": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 451,
          column: 13
        }
      },
      "181": {
        start: {
          line: 420,
          column: 16
        },
        end: {
          line: 426,
          column: 19
        }
      },
      "182": {
        start: {
          line: 427,
          column: 16
        },
        end: {
          line: 442,
          column: 19
        }
      },
      "183": {
        start: {
          line: 428,
          column: 20
        },
        end: {
          line: 439,
          column: 21
        }
      },
      "184": {
        start: {
          line: 429,
          column: 24
        },
        end: {
          line: 432,
          column: 27
        }
      },
      "185": {
        start: {
          line: 433,
          column: 24
        },
        end: {
          line: 436,
          column: 27
        }
      },
      "186": {
        start: {
          line: 438,
          column: 24
        },
        end: {
          line: 438,
          column: 76
        }
      },
      "187": {
        start: {
          line: 441,
          column: 20
        },
        end: {
          line: 441,
          column: 73
        }
      },
      "188": {
        start: {
          line: 444,
          column: 16
        },
        end: {
          line: 450,
          column: 19
        }
      },
      "189": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 456,
          column: 13
        }
      },
      "190": {
        start: {
          line: 454,
          column: 16
        },
        end: {
          line: 454,
          column: 82
        }
      },
      "191": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 475,
          column: 15
        }
      },
      "192": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 472,
          column: 17
        }
      },
      "193": {
        start: {
          line: 461,
          column: 20
        },
        end: {
          line: 461,
          column: 67
        }
      },
      "194": {
        start: {
          line: 462,
          column: 20
        },
        end: {
          line: 471,
          column: 23
        }
      },
      "195": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 480,
          column: 15
        }
      },
      "196": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 491,
          column: 15
        }
      },
      "197": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 492,
          column: 62
        }
      },
      "198": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 528,
          column: 9
        }
      },
      "199": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 497,
          column: 57
        }
      },
      "200": {
        start: {
          line: 499,
          column: 66
        },
        end: {
          line: 499,
          column: 174
        }
      },
      "201": {
        start: {
          line: 499,
          column: 113
        },
        end: {
          line: 499,
          column: 173
        }
      },
      "202": {
        start: {
          line: 500,
          column: 25
        },
        end: {
          line: 500,
          column: 52
        }
      },
      "203": {
        start: {
          line: 501,
          column: 32
        },
        end: {
          line: 501,
          column: 48
        }
      },
      "204": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 512,
          column: 13
        }
      },
      "205": {
        start: {
          line: 503,
          column: 16
        },
        end: {
          line: 503,
          column: 76
        }
      },
      "206": {
        start: {
          line: 504,
          column: 16
        },
        end: {
          line: 510,
          column: 19
        }
      },
      "207": {
        start: {
          line: 511,
          column: 16
        },
        end: {
          line: 511,
          column: 23
        }
      },
      "208": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 524,
          column: 13
        }
      },
      "209": {
        start: {
          line: 515,
          column: 16
        },
        end: {
          line: 515,
          column: 69
        }
      },
      "210": {
        start: {
          line: 516,
          column: 16
        },
        end: {
          line: 522,
          column: 19
        }
      },
      "211": {
        start: {
          line: 523,
          column: 16
        },
        end: {
          line: 523,
          column: 23
        }
      },
      "212": {
        start: {
          line: 525,
          column: 12
        },
        end: {
          line: 525,
          column: 65
        }
      },
      "213": {
        start: {
          line: 527,
          column: 12
        },
        end: {
          line: 527,
          column: 68
        }
      },
      "214": {
        start: {
          line: 531,
          column: 8
        },
        end: {
          line: 629,
          column: 9
        }
      },
      "215": {
        start: {
          line: 532,
          column: 12
        },
        end: {
          line: 534,
          column: 15
        }
      },
      "216": {
        start: {
          line: 536,
          column: 29
        },
        end: {
          line: 542,
          column: 14
        }
      },
      "217": {
        start: {
          line: 543,
          column: 12
        },
        end: {
          line: 555,
          column: 13
        }
      },
      "218": {
        start: {
          line: 544,
          column: 34
        },
        end: {
          line: 544,
          column: 55
        }
      },
      "219": {
        start: {
          line: 545,
          column: 16
        },
        end: {
          line: 549,
          column: 19
        }
      },
      "220": {
        start: {
          line: 551,
          column: 16
        },
        end: {
          line: 553,
          column: 17
        }
      },
      "221": {
        start: {
          line: 552,
          column: 20
        },
        end: {
          line: 552,
          column: 32
        }
      },
      "222": {
        start: {
          line: 554,
          column: 16
        },
        end: {
          line: 554,
          column: 88
        }
      },
      "223": {
        start: {
          line: 556,
          column: 25
        },
        end: {
          line: 556,
          column: 46
        }
      },
      "224": {
        start: {
          line: 557,
          column: 12
        },
        end: {
          line: 560,
          column: 13
        }
      },
      "225": {
        start: {
          line: 558,
          column: 16
        },
        end: {
          line: 558,
          column: 73
        }
      },
      "226": {
        start: {
          line: 559,
          column: 16
        },
        end: {
          line: 559,
          column: 28
        }
      },
      "227": {
        start: {
          line: 562,
          column: 32
        },
        end: {
          line: 580,
          column: 13
        }
      },
      "228": {
        start: {
          line: 581,
          column: 12
        },
        end: {
          line: 589,
          column: 15
        }
      },
      "229": {
        start: {
          line: 590,
          column: 12
        },
        end: {
          line: 590,
          column: 31
        }
      },
      "230": {
        start: {
          line: 592,
          column: 12
        },
        end: {
          line: 592,
          column: 65
        }
      },
      "231": {
        start: {
          line: 594,
          column: 12
        },
        end: {
          line: 627,
          column: 13
        }
      },
      "232": {
        start: {
          line: 595,
          column: 16
        },
        end: {
          line: 595,
          column: 69
        }
      },
      "233": {
        start: {
          line: 597,
          column: 56
        },
        end: {
          line: 601,
          column: 17
        }
      },
      "234": {
        start: {
          line: 602,
          column: 16
        },
        end: {
          line: 626,
          column: 17
        }
      },
      "235": {
        start: {
          line: 603,
          column: 44
        },
        end: {
          line: 620,
          column: 21
        }
      },
      "236": {
        start: {
          line: 621,
          column: 20
        },
        end: {
          line: 624,
          column: 23
        }
      },
      "237": {
        start: {
          line: 625,
          column: 20
        },
        end: {
          line: 625,
          column: 43
        }
      },
      "238": {
        start: {
          line: 628,
          column: 12
        },
        end: {
          line: 628,
          column: 24
        }
      },
      "239": {
        start: {
          line: 633,
          column: 44
        },
        end: {
          line: 668,
          column: 2
        }
      },
      "240": {
        start: {
          line: 634,
          column: 4
        },
        end: {
          line: 634,
          column: 51
        }
      },
      "241": {
        start: {
          line: 635,
          column: 44
        },
        end: {
          line: 637,
          column: 6
        }
      },
      "242": {
        start: {
          line: 636,
          column: 8
        },
        end: {
          line: 636,
          column: 50
        }
      },
      "243": {
        start: {
          line: 638,
          column: 4
        },
        end: {
          line: 663,
          column: 11
        }
      },
      "244": {
        start: {
          line: 639,
          column: 26
        },
        end: {
          line: 639,
          column: 49
        }
      },
      "245": {
        start: {
          line: 641,
          column: 39
        },
        end: {
          line: 648,
          column: 9
        }
      },
      "246": {
        start: {
          line: 642,
          column: 12
        },
        end: {
          line: 647,
          column: 13
        }
      },
      "247": {
        start: {
          line: 643,
          column: 16
        },
        end: {
          line: 643,
          column: 56
        }
      },
      "248": {
        start: {
          line: 644,
          column: 16
        },
        end: {
          line: 644,
          column: 61
        }
      },
      "249": {
        start: {
          line: 646,
          column: 16
        },
        end: {
          line: 646,
          column: 70
        }
      },
      "250": {
        start: {
          line: 649,
          column: 8
        },
        end: {
          line: 649,
          column: 33
        }
      },
      "251": {
        start: {
          line: 651,
          column: 28
        },
        end: {
          line: 661,
          column: 10
        }
      },
      "252": {
        start: {
          line: 652,
          column: 12
        },
        end: {
          line: 659,
          column: 15
        }
      },
      "253": {
        start: {
          line: 660,
          column: 12
        },
        end: {
          line: 660,
          column: 38
        }
      },
      "254": {
        start: {
          line: 662,
          column: 8
        },
        end: {
          line: 662,
          column: 27
        }
      },
      "255": {
        start: {
          line: 664,
          column: 4
        },
        end: {
          line: 667,
          column: 7
        }
      },
      "256": {
        start: {
          line: 669,
          column: 21
        },
        end: {
          line: 669,
          column: 42
        }
      },
      "257": {
        start: {
          line: 671,
          column: 20
        },
        end: {
          line: 671,
          column: 55
        }
      },
      "258": {
        start: {
          line: 672,
          column: 4
        },
        end: {
          line: 674,
          column: 5
        }
      },
      "259": {
        start: {
          line: 673,
          column: 8
        },
        end: {
          line: 673,
          column: 71
        }
      },
      "260": {
        start: {
          line: 675,
          column: 4
        },
        end: {
          line: 675,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 13,
            column: 19
          }
        },
        loc: {
          start: {
            line: 13,
            column: 29
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 47
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 27,
            column: 40
          }
        },
        loc: {
          start: {
            line: 27,
            column: 61
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 34
          }
        },
        loc: {
          start: {
            line: 31,
            column: 53
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 31
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 25
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 70
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 17
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 76
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 94,
            column: 41
          },
          end: {
            line: 94,
            column: 42
          }
        },
        loc: {
          start: {
            line: 94,
            column: 45
          },
          end: {
            line: 169,
            column: 17
          }
        },
        line: 94
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 102,
            column: 49
          },
          end: {
            line: 102,
            column: 50
          }
        },
        loc: {
          start: {
            line: 102,
            column: 62
          },
          end: {
            line: 117,
            column: 25
          }
        },
        line: 102
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 23
          },
          end: {
            line: 295,
            column: 5
          }
        },
        line: 267
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        },
        loc: {
          start: {
            line: 298,
            column: 26
          },
          end: {
            line: 322,
            column: 5
          }
        },
        line: 298
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 321,
            column: 31
          },
          end: {
            line: 321,
            column: 32
          }
        },
        loc: {
          start: {
            line: 321,
            column: 43
          },
          end: {
            line: 321,
            column: 61
          }
        },
        line: 321
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        loc: {
          start: {
            line: 323,
            column: 24
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 323
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 327,
            column: 15
          },
          end: {
            line: 327,
            column: 16
          }
        },
        loc: {
          start: {
            line: 327,
            column: 19
          },
          end: {
            line: 329,
            column: 9
          }
        },
        line: 327
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 5
          }
        },
        loc: {
          start: {
            line: 331,
            column: 15
          },
          end: {
            line: 333,
            column: 5
          }
        },
        line: 331
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 334,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        loc: {
          start: {
            line: 334,
            column: 34
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 334
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 339,
            column: 5
          }
        },
        loc: {
          start: {
            line: 339,
            column: 20
          },
          end: {
            line: 352,
            column: 5
          }
        },
        line: 339
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 353,
            column: 4
          },
          end: {
            line: 353,
            column: 5
          }
        },
        loc: {
          start: {
            line: 353,
            column: 35
          },
          end: {
            line: 494,
            column: 5
          }
        },
        line: 353
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 358,
            column: 116
          },
          end: {
            line: 358,
            column: 117
          }
        },
        loc: {
          start: {
            line: 358,
            column: 134
          },
          end: {
            line: 358,
            column: 194
          }
        },
        line: 358
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 427,
            column: 51
          },
          end: {
            line: 427,
            column: 52
          }
        },
        loc: {
          start: {
            line: 427,
            column: 62
          },
          end: {
            line: 440,
            column: 17
          }
        },
        line: 427
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 440,
            column: 25
          },
          end: {
            line: 440,
            column: 26
          }
        },
        loc: {
          start: {
            line: 440,
            column: 34
          },
          end: {
            line: 442,
            column: 17
          }
        },
        line: 440
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 458,
            column: 55
          },
          end: {
            line: 458,
            column: 56
          }
        },
        loc: {
          start: {
            line: 458,
            column: 79
          },
          end: {
            line: 475,
            column: 13
          }
        },
        line: 458
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 495,
            column: 4
          },
          end: {
            line: 495,
            column: 5
          }
        },
        loc: {
          start: {
            line: 495,
            column: 40
          },
          end: {
            line: 529,
            column: 5
          }
        },
        line: 495
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 499,
            column: 95
          },
          end: {
            line: 499,
            column: 96
          }
        },
        loc: {
          start: {
            line: 499,
            column: 113
          },
          end: {
            line: 499,
            column: 173
          }
        },
        line: 499
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 530,
            column: 4
          },
          end: {
            line: 530,
            column: 5
          }
        },
        loc: {
          start: {
            line: 530,
            column: 34
          },
          end: {
            line: 630,
            column: 5
          }
        },
        line: 530
      },
      "26": {
        name: "AuthProviderInternal",
        decl: {
          start: {
            line: 633,
            column: 70
          },
          end: {
            line: 633,
            column: 90
          }
        },
        loc: {
          start: {
            line: 633,
            column: 105
          },
          end: {
            line: 668,
            column: 1
          }
        },
        line: 633
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 635,
            column: 65
          },
          end: {
            line: 635,
            column: 66
          }
        },
        loc: {
          start: {
            line: 635,
            column: 69
          },
          end: {
            line: 637,
            column: 5
          }
        },
        line: 635
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 638,
            column: 26
          },
          end: {
            line: 638,
            column: 27
          }
        },
        loc: {
          start: {
            line: 638,
            column: 30
          },
          end: {
            line: 663,
            column: 5
          }
        },
        line: 638
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 641,
            column: 39
          },
          end: {
            line: 641,
            column: 40
          }
        },
        loc: {
          start: {
            line: 641,
            column: 49
          },
          end: {
            line: 648,
            column: 9
          }
        },
        line: 641
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 651,
            column: 48
          },
          end: {
            line: 651,
            column: 49
          }
        },
        loc: {
          start: {
            line: 651,
            column: 60
          },
          end: {
            line: 661,
            column: 9
          }
        },
        line: 651
      },
      "31": {
        name: "useAuth",
        decl: {
          start: {
            line: 670,
            column: 9
          },
          end: {
            line: 670,
            column: 16
          }
        },
        loc: {
          start: {
            line: 670,
            column: 19
          },
          end: {
            line: 676,
            column: 1
          }
        },
        line: 670
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 28,
            column: 45
          }
        }, {
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 28,
            column: 65
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 20
          }
        }, {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 27
          }
        }, {
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 45
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 47
          }
        }, {
          start: {
            line: 35,
            column: 51
          },
          end: {
            line: 35,
            column: 76
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: 41,
            column: 17
          },
          end: {
            line: 41,
            column: 31
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 53
          }
        }, {
          start: {
            line: 47,
            column: 57
          },
          end: {
            line: 47,
            column: 88
          }
        }],
        line: 47
      },
      "9": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "10": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 29
          }
        }, {
          start: {
            line: 49,
            column: 33
          },
          end: {
            line: 49,
            column: 79
          }
        }],
        line: 49
      },
      "11": {
        loc: {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 47
          },
          end: {
            line: 50,
            column: 88
          }
        }, {
          start: {
            line: 50,
            column: 91
          },
          end: {
            line: 50,
            column: 95
          }
        }],
        line: 50
      },
      "12": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 55,
            column: 13
          }
        }],
        line: 51
      },
      "13": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 20
          }
        }, {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 51,
            column: 33
          }
        }, {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 51,
            column: 45
          }
        }],
        line: 51
      },
      "14": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "15": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "16": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: 252,
            column: 15
          },
          end: {
            line: 265,
            column: 9
          }
        }],
        line: 90
      },
      "17": {
        loc: {
          start: {
            line: 98,
            column: 24
          },
          end: {
            line: 98,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 24
          },
          end: {
            line: 98,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "18": {
        loc: {
          start: {
            line: 107,
            column: 36
          },
          end: {
            line: 110,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 36
          },
          end: {
            line: 110,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "19": {
        loc: {
          start: {
            line: 107,
            column: 40
          },
          end: {
            line: 107,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 40
          },
          end: {
            line: 107,
            column: 44
          }
        }, {
          start: {
            line: 107,
            column: 48
          },
          end: {
            line: 107,
            column: 93
          }
        }, {
          start: {
            line: 107,
            column: 97
          },
          end: {
            line: 107,
            column: 102
          }
        }],
        line: 107
      },
      "20": {
        loc: {
          start: {
            line: 118,
            column: 24
          },
          end: {
            line: 132,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 24
          },
          end: {
            line: 132,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "21": {
        loc: {
          start: {
            line: 122,
            column: 89
          },
          end: {
            line: 122,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 112
          },
          end: {
            line: 122,
            column: 116
          }
        }, {
          start: {
            line: 122,
            column: 119
          },
          end: {
            line: 122,
            column: 123
          }
        }],
        line: 122
      },
      "22": {
        loc: {
          start: {
            line: 125,
            column: 48
          },
          end: {
            line: 125,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 48
          },
          end: {
            line: 125,
            column: 70
          }
        }, {
          start: {
            line: 125,
            column: 74
          },
          end: {
            line: 125,
            column: 88
          }
        }],
        line: 125
      },
      "23": {
        loc: {
          start: {
            line: 137,
            column: 28
          },
          end: {
            line: 141,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 28
          },
          end: {
            line: 141,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "24": {
        loc: {
          start: {
            line: 137,
            column: 32
          },
          end: {
            line: 137,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 32
          },
          end: {
            line: 137,
            column: 35
          }
        }, {
          start: {
            line: 137,
            column: 39
          },
          end: {
            line: 137,
            column: 60
          }
        }, {
          start: {
            line: 137,
            column: 64
          },
          end: {
            line: 137,
            column: 91
          }
        }],
        line: 137
      },
      "25": {
        loc: {
          start: {
            line: 139,
            column: 89
          },
          end: {
            line: 139,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 100
          },
          end: {
            line: 139,
            column: 104
          }
        }, {
          start: {
            line: 139,
            column: 107
          },
          end: {
            line: 139,
            column: 111
          }
        }],
        line: 139
      },
      "26": {
        loc: {
          start: {
            line: 140,
            column: 32
          },
          end: {
            line: 140,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 32
          },
          end: {
            line: 140,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "27": {
        loc: {
          start: {
            line: 149,
            column: 32
          },
          end: {
            line: 153,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 32
          },
          end: {
            line: 153,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "28": {
        loc: {
          start: {
            line: 149,
            column: 36
          },
          end: {
            line: 149,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 36
          },
          end: {
            line: 149,
            column: 40
          }
        }, {
          start: {
            line: 149,
            column: 44
          },
          end: {
            line: 149,
            column: 66
          }
        }, {
          start: {
            line: 149,
            column: 70
          },
          end: {
            line: 149,
            column: 97
          }
        }, {
          start: {
            line: 149,
            column: 101
          },
          end: {
            line: 149,
            column: 106
          }
        }],
        line: 149
      },
      "29": {
        loc: {
          start: {
            line: 158,
            column: 44
          },
          end: {
            line: 158,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 44
          },
          end: {
            line: 158,
            column: 59
          }
        }, {
          start: {
            line: 158,
            column: 63
          },
          end: {
            line: 158,
            column: 72
          }
        }],
        line: 158
      },
      "30": {
        loc: {
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 197,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 197,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "31": {
        loc: {
          start: {
            line: 180,
            column: 20
          },
          end: {
            line: 180,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 20
          },
          end: {
            line: 180,
            column: 57
          }
        }, {
          start: {
            line: 180,
            column: 61
          },
          end: {
            line: 180,
            column: 103
          }
        }],
        line: 180
      },
      "32": {
        loc: {
          start: {
            line: 199,
            column: 16
          },
          end: {
            line: 205,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 16
          },
          end: {
            line: 205,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "33": {
        loc: {
          start: {
            line: 207,
            column: 16
          },
          end: {
            line: 220,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 16
          },
          end: {
            line: 220,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "34": {
        loc: {
          start: {
            line: 207,
            column: 20
          },
          end: {
            line: 207,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 20
          },
          end: {
            line: 207,
            column: 35
          }
        }, {
          start: {
            line: 207,
            column: 39
          },
          end: {
            line: 207,
            column: 50
          }
        }],
        line: 207
      },
      "35": {
        loc: {
          start: {
            line: 222,
            column: 16
          },
          end: {
            line: 235,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 16
          },
          end: {
            line: 235,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "36": {
        loc: {
          start: {
            line: 222,
            column: 20
          },
          end: {
            line: 222,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 20
          },
          end: {
            line: 222,
            column: 35
          }
        }, {
          start: {
            line: 222,
            column: 39
          },
          end: {
            line: 222,
            column: 54
          }
        }],
        line: 222
      },
      "37": {
        loc: {
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "38": {
        loc: {
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "39": {
        loc: {
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "40": {
        loc: {
          start: {
            line: 335,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "41": {
        loc: {
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 340,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 340,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "42": {
        loc: {
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 348,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 348,
            column: 13
          }
        }, {
          start: {
            line: 346,
            column: 19
          },
          end: {
            line: 348,
            column: 13
          }
        }],
        line: 344
      },
      "43": {
        loc: {
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 385,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 385,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 371
      },
      "44": {
        loc: {
          start: {
            line: 398,
            column: 28
          },
          end: {
            line: 398,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 398,
            column: 42
          },
          end: {
            line: 398,
            column: 82
          }
        }, {
          start: {
            line: 398,
            column: 85
          },
          end: {
            line: 398,
            column: 89
          }
        }],
        line: 398
      },
      "45": {
        loc: {
          start: {
            line: 414,
            column: 12
          },
          end: {
            line: 416,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 414,
            column: 12
          },
          end: {
            line: 416,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 414
      },
      "46": {
        loc: {
          start: {
            line: 418,
            column: 38
          },
          end: {
            line: 418,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 418,
            column: 38
          },
          end: {
            line: 418,
            column: 61
          }
        }, {
          start: {
            line: 418,
            column: 65
          },
          end: {
            line: 418,
            column: 103
          }
        }],
        line: 418
      },
      "47": {
        loc: {
          start: {
            line: 419,
            column: 12
          },
          end: {
            line: 451,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 12
          },
          end: {
            line: 451,
            column: 13
          }
        }, {
          start: {
            line: 443,
            column: 19
          },
          end: {
            line: 451,
            column: 13
          }
        }],
        line: 419
      },
      "48": {
        loc: {
          start: {
            line: 424,
            column: 28
          },
          end: {
            line: 424,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 424,
            column: 54
          },
          end: {
            line: 424,
            column: 74
          }
        }, {
          start: {
            line: 424,
            column: 77
          },
          end: {
            line: 424,
            column: 91
          }
        }],
        line: 424
      },
      "49": {
        loc: {
          start: {
            line: 425,
            column: 36
          },
          end: {
            line: 425,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 425,
            column: 36
          },
          end: {
            line: 425,
            column: 87
          }
        }, {
          start: {
            line: 425,
            column: 91
          },
          end: {
            line: 425,
            column: 97
          }
        }],
        line: 425
      },
      "50": {
        loc: {
          start: {
            line: 428,
            column: 20
          },
          end: {
            line: 439,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 20
          },
          end: {
            line: 439,
            column: 21
          }
        }, {
          start: {
            line: 437,
            column: 27
          },
          end: {
            line: 439,
            column: 21
          }
        }],
        line: 428
      },
      "51": {
        loc: {
          start: {
            line: 453,
            column: 12
          },
          end: {
            line: 456,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 453,
            column: 12
          },
          end: {
            line: 456,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 453
      },
      "52": {
        loc: {
          start: {
            line: 460,
            column: 16
          },
          end: {
            line: 472,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 460,
            column: 16
          },
          end: {
            line: 472,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 460
      },
      "53": {
        loc: {
          start: {
            line: 460,
            column: 20
          },
          end: {
            line: 460,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 460,
            column: 20
          },
          end: {
            line: 460,
            column: 42
          }
        }, {
          start: {
            line: 460,
            column: 46
          },
          end: {
            line: 460,
            column: 54
          }
        }],
        line: 460
      },
      "54": {
        loc: {
          start: {
            line: 478,
            column: 23
          },
          end: {
            line: 478,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 478,
            column: 48
          },
          end: {
            line: 478,
            column: 61
          }
        }, {
          start: {
            line: 478,
            column: 64
          },
          end: {
            line: 478,
            column: 77
          }
        }],
        line: 478
      },
      "55": {
        loc: {
          start: {
            line: 479,
            column: 23
          },
          end: {
            line: 479,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 479,
            column: 48
          },
          end: {
            line: 479,
            column: 78
          }
        }, {
          start: {
            line: 479,
            column: 81
          },
          end: {
            line: 479,
            column: 90
          }
        }],
        line: 479
      },
      "56": {
        loc: {
          start: {
            line: 502,
            column: 12
          },
          end: {
            line: 512,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 502,
            column: 12
          },
          end: {
            line: 512,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 502
      },
      "57": {
        loc: {
          start: {
            line: 514,
            column: 12
          },
          end: {
            line: 524,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 514,
            column: 12
          },
          end: {
            line: 524,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 514
      },
      "58": {
        loc: {
          start: {
            line: 514,
            column: 16
          },
          end: {
            line: 514,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 514,
            column: 16
          },
          end: {
            line: 514,
            column: 27
          }
        }, {
          start: {
            line: 514,
            column: 31
          },
          end: {
            line: 514,
            column: 56
          }
        }],
        line: 514
      },
      "59": {
        loc: {
          start: {
            line: 543,
            column: 12
          },
          end: {
            line: 555,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 543,
            column: 12
          },
          end: {
            line: 555,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 543
      },
      "60": {
        loc: {
          start: {
            line: 551,
            column: 16
          },
          end: {
            line: 553,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 551,
            column: 16
          },
          end: {
            line: 553,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 551
      },
      "61": {
        loc: {
          start: {
            line: 551,
            column: 20
          },
          end: {
            line: 551,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 551,
            column: 20
          },
          end: {
            line: 551,
            column: 43
          }
        }, {
          start: {
            line: 551,
            column: 47
          },
          end: {
            line: 551,
            column: 70
          }
        }],
        line: 551
      },
      "62": {
        loc: {
          start: {
            line: 557,
            column: 12
          },
          end: {
            line: 560,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 557,
            column: 12
          },
          end: {
            line: 560,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 557
      },
      "63": {
        loc: {
          start: {
            line: 557,
            column: 16
          },
          end: {
            line: 557,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 557,
            column: 16
          },
          end: {
            line: 557,
            column: 29
          }
        }, {
          start: {
            line: 557,
            column: 33
          },
          end: {
            line: 557,
            column: 43
          }
        }],
        line: 557
      },
      "64": {
        loc: {
          start: {
            line: 567,
            column: 28
          },
          end: {
            line: 567,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 567,
            column: 28
          },
          end: {
            line: 567,
            column: 48
          }
        }, {
          start: {
            line: 567,
            column: 52
          },
          end: {
            line: 567,
            column: 53
          }
        }],
        line: 567
      },
      "65": {
        loc: {
          start: {
            line: 568,
            column: 34
          },
          end: {
            line: 568,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 568,
            column: 34
          },
          end: {
            line: 568,
            column: 60
          }
        }, {
          start: {
            line: 568,
            column: 64
          },
          end: {
            line: 568,
            column: 65
          }
        }],
        line: 568
      },
      "66": {
        loc: {
          start: {
            line: 569,
            column: 26
          },
          end: {
            line: 569,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 569,
            column: 26
          },
          end: {
            line: 569,
            column: 44
          }
        }, {
          start: {
            line: 569,
            column: 48
          },
          end: {
            line: 569,
            column: 53
          }
        }],
        line: 569
      },
      "67": {
        loc: {
          start: {
            line: 570,
            column: 32
          },
          end: {
            line: 570,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 570,
            column: 32
          },
          end: {
            line: 570,
            column: 56
          }
        }, {
          start: {
            line: 570,
            column: 60
          },
          end: {
            line: 570,
            column: 65
          }
        }],
        line: 570
      },
      "68": {
        loc: {
          start: {
            line: 594,
            column: 12
          },
          end: {
            line: 627,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 594,
            column: 12
          },
          end: {
            line: 627,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 594
      },
      "69": {
        loc: {
          start: {
            line: 597,
            column: 56
          },
          end: {
            line: 601,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 597,
            column: 56
          },
          end: {
            line: 597,
            column: 97
          }
        }, {
          start: {
            line: 597,
            column: 101
          },
          end: {
            line: 601,
            column: 17
          }
        }],
        line: 597
      },
      "70": {
        loc: {
          start: {
            line: 602,
            column: 16
          },
          end: {
            line: 626,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 602,
            column: 16
          },
          end: {
            line: 626,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 602
      },
      "71": {
        loc: {
          start: {
            line: 602,
            column: 20
          },
          end: {
            line: 602,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 602,
            column: 20
          },
          end: {
            line: 602,
            column: 31
          }
        }, {
          start: {
            line: 602,
            column: 35
          },
          end: {
            line: 602,
            column: 60
          }
        }],
        line: 602
      },
      "72": {
        loc: {
          start: {
            line: 605,
            column: 31
          },
          end: {
            line: 605,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 605,
            column: 31
          },
          end: {
            line: 605,
            column: 48
          }
        }, {
          start: {
            line: 605,
            column: 52
          },
          end: {
            line: 605,
            column: 56
          }
        }],
        line: 605
      },
      "73": {
        loc: {
          start: {
            line: 606,
            column: 34
          },
          end: {
            line: 606,
            column: 151
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 606,
            column: 34
          },
          end: {
            line: 606,
            column: 65
          }
        }, {
          start: {
            line: 606,
            column: 69
          },
          end: {
            line: 606,
            column: 105
          }
        }, {
          start: {
            line: 606,
            column: 109
          },
          end: {
            line: 606,
            column: 141
          }
        }, {
          start: {
            line: 606,
            column: 145
          },
          end: {
            line: 606,
            column: 151
          }
        }],
        line: 606
      },
      "74": {
        loc: {
          start: {
            line: 672,
            column: 4
          },
          end: {
            line: 674,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 672,
            column: 4
          },
          end: {
            line: 674,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 672
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0, 0, 0],
      "74": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/lib/supabase/auth-provider.tsx"],
      sourcesContent: ["'use client';\n\nimport React, {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  ReactNode,\n  useRef,\n  useCallback,\n  memo,\n} from 'react';\nimport { Session, User } from '@supabase/supabase-js';\nimport { createBrowserSupabaseClient } from './client';\n\n// \uD83C\uDFAF \uC644\uC804 \uCFE0\uD0A4 \uAE30\uBC18 \uC778\uC99D: \uB124\uD2B8\uC6CC\uD06C \uC694\uCCAD \uC5C6\uB294 \uC989\uC2DC JWT \uD30C\uC2F1\n// \u2705 getSession() \uC81C\uAC70\uB428 - \uD0C0\uC784\uC544\uC6C3 \uBB38\uC81C \uD574\uACB0\n// \u2705 getUser() \uC81C\uAC70\uB428 - \uB124\uD2B8\uC6CC\uD06C \uC9C0\uC5F0 \uC644\uC804 \uC81C\uAC70  \n// \u2705 \uC21C\uC218 JWT \uD30C\uC2F1 - \uCFE0\uD0A4\uC5D0\uC11C \uC9C1\uC811 \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uCD94\uCD9C\n// \u26A1 \uB85C\uB529 \uC2DC\uAC04: 0.1\uCD08 \uBBF8\uB9CC (\uAE30\uC874 5-8\uCD08 \u2192 \uAC70\uC758 \uC989\uC2DC)\nimport { extractAvatarFromProvider } from '@/utils/image-utils';\nimport { UserProfiles } from '@/types/interfaces';\nimport { handleAuthError } from '@/utils/auth-error-handler';\n\ninterface AuthContextType {\n  session: Session | null;\n  user: User | null;\n  userProfile: UserProfiles | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  isInitialized: boolean;\n  signOut: () => Promise<void>;\n  loadUserProfile: (userId: string) => Promise<UserProfiles | null>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\n// \uC804\uC5ED \uC0C1\uD0DC \uAD00\uB9AC\uB97C \uC704\uD55C \uC2F1\uAE00\uD1A4 \uD328\uD134\nclass AuthStore {\n  private static instance: AuthStore | null = null;\n  private supabaseClient: any = null;\n  private listeners: Set<(state: AuthContextType) => void> = new Set();\n  private state: AuthContextType = {\n    session: null,\n    user: null,\n    userProfile: null as UserProfiles | null,\n    isAuthenticated: false,\n    isLoading: true,\n    isInitialized: false,\n    signOut: this.signOut.bind(this),\n    loadUserProfile: this.loadUserProfile.bind(this),\n  };\n  private initPromise: Promise<void> | null = null;\n\n  static getInstance(): AuthStore {\n    if (!AuthStore.instance) {\n      AuthStore.instance = new AuthStore();\n    }\n    return AuthStore.instance;\n  }\n\n  private constructor() {\n    if (typeof window !== 'undefined') {\n      try {\n        console.log('\uD83D\uDD04 [AuthStore] \uCD08\uAE30\uD654 \uC2DC\uC791');\n        \n        // localStorage\uC5D0\uC11C Supabase Auth \uD1A0\uD070 \uCCB4\uD06C (\uB3D9\uC801 \uD0A4 \uD655\uC778)\n        const checkStoredToken = () => {\n          try {\n            // Supabase \uD504\uB85C\uC81D\uD2B8 URL\uC5D0\uC11C \uD504\uB85C\uC81D\uD2B8 ID \uCD94\uCD9C\n            const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\n            if (!supabaseUrl) return false;\n            \n            const urlParts = supabaseUrl.split('.');\n            const projectId = urlParts[0]?.split('://')[1];\n            \n            // \uD83C\uDF6A \uCFE0\uD0A4\uC5D0\uC11C \uD1A0\uD070 \uD655\uC778\uD558\uB294 \uD568\uC218\n            const checkCookieToken = (projectId: string) => {\n              try {\n                const cookies = document.cookie.split(';');\n                for (let cookie of cookies) {\n                  const [name, value] = cookie.trim().split('=');\n                  if (name && name.startsWith(`sb-${projectId}-auth-token`) && value) {\n                    console.log(`\uD83C\uDF6A [AuthStore] \uCFE0\uD0A4\uC5D0 \uD1A0\uD070 (${name}): \uC788\uC74C`);\n                    return true;\n                  }\n                }\n                return false;\n              } catch (error) {\n                console.warn('\u26A0\uFE0F [AuthStore] \uCFE0\uD0A4 \uD1A0\uD070 \uCCB4\uD06C \uC911 \uC624\uB958:', error);\n                return false;\n              }\n            };\n            \n            if (projectId) {\n              const authKey = `sb-${projectId}-auth-token`;\n              \n              // 1\uB2E8\uACC4: localStorage \uD655\uC778\n              const hasLocalStorageToken = localStorage.getItem(authKey);\n              console.log(`\uD83D\uDD0D [AuthStore] localStorage\uC5D0 \uD1A0\uD070 (${authKey}):`, hasLocalStorageToken ? '\uC788\uC74C' : '\uC5C6\uC74C');\n              \n              // 2\uB2E8\uACC4: \uCFE0\uD0A4 \uD655\uC778\n              const hasCookieToken = checkCookieToken(projectId);\n              \n              const hasAnyToken = !!hasLocalStorageToken || hasCookieToken;\n              console.log(`\uD83D\uDD0D [AuthStore] \uD1A0\uD070 \uCD1D\uD569:`, {\n                localStorage: !!hasLocalStorageToken,\n                cookie: hasCookieToken,\n                hasAnyToken\n              });\n              \n              return hasAnyToken;\n            }\n            \n            // \uD504\uB85C\uC81D\uD2B8 ID\uB97C \uCD94\uCD9C\uD560 \uC218 \uC5C6\uB294 \uACBD\uC6B0 \uBAA8\uB4E0 Supabase \uD0A4 \uD655\uC778\n            let hasLocalStorage = false;\n            for (let i = 0; i < localStorage.length; i++) {\n              const key = localStorage.key(i);\n              if (key && key.startsWith('sb-') && key.endsWith('-auth-token')) {\n                const hasToken = localStorage.getItem(key);\n                console.log(`\uD83D\uDD0D [AuthStore] localStorage\uC5D0 \uD1A0\uD070 (${key}):`, hasToken ? '\uC788\uC74C' : '\uC5C6\uC74C');\n                if (hasToken) hasLocalStorage = true;\n              }\n            }\n            \n            // \uC77C\uBC18\uC801\uC778 \uCFE0\uD0A4 \uD328\uD134 \uD655\uC778\n            let hasCookie = false;\n            try {\n              const cookies = document.cookie.split(';');\n              for (let cookie of cookies) {\n                const [name, value] = cookie.trim().split('=');\n                if (name && name.startsWith('sb-') && name.includes('auth-token') && value) {\n                  console.log(`\uD83C\uDF6A [AuthStore] \uCFE0\uD0A4\uC5D0 \uD1A0\uD070 (${name}): \uC788\uC74C`);\n                  hasCookie = true;\n                  break;\n                }\n              }\n            } catch (error) {\n              console.warn('\u26A0\uFE0F [AuthStore] \uC77C\uBC18 \uCFE0\uD0A4 \uD655\uC778 \uC911 \uC624\uB958:', error);\n            }\n            \n            const hasAnyToken = hasLocalStorage || hasCookie;\n            console.log(`\uD83D\uDD0D [AuthStore] \uC804\uCCB4 \uD1A0\uD070 \uC0C1\uD0DC:`, {\n              localStorage: hasLocalStorage,\n              cookie: hasCookie,\n              hasAnyToken\n            });\n            \n            return hasAnyToken;\n          } catch (error) {\n            console.warn('\u26A0\uFE0F [AuthStore] \uD1A0\uD070 \uCCB4\uD06C \uC911 \uC624\uB958:', error);\n            return false;\n          }\n        };\n        \n        const hasStoredToken = checkStoredToken();\n        const isLoginPage = window.location.pathname.includes('/login');\n        const isCallbackPage = window.location.pathname.includes('/callback');\n        \n        console.log('\uD83D\uDD0D [AuthStore] \uCD08\uAE30\uD654 \uCEE8\uD14D\uC2A4\uD2B8:', {\n          hasStoredToken,\n          isLoginPage,\n          isCallbackPage,\n          pathname: window.location.pathname\n        });\n        \n        // \uD658\uACBD \uBCC0\uC218 \uD655\uC778 \uBC0F \uC548\uC804\uD55C \uD074\uB77C\uC774\uC5B8\uD2B8 \uC0DD\uC131\n        if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n          console.error('\u274C [AuthStore] Supabase \uD658\uACBD \uBCC0\uC218\uAC00 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.', {\n            hasUrl: !!process.env.NEXT_PUBLIC_SUPABASE_URL,\n            hasKey: !!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n          });\n          \n          // \uD658\uACBD \uBCC0\uC218\uAC00 \uC5C6\uC5B4\uB3C4 \uAE30\uBCF8 \uC0C1\uD0DC\uB85C \uCD08\uAE30\uD654\n          this.updateState({\n            session: null,\n            user: null,\n            userProfile: null,\n            isAuthenticated: false,\n            isLoading: false,\n            isInitialized: true,\n            signOut: this.signOut.bind(this),\n            loadUserProfile: this.loadUserProfile.bind(this),\n          });\n          return;\n        }\n\n        // \uD83D\uDE80 \uC21C\uC218 getUser() \uAE30\uBC18 \uBE60\uB978 \uC778\uC99D: getSession \uC644\uC804\uD788 \uC6B0\uD68C\n        if (hasStoredToken) {\n          console.log('\uD83D\uDE80 [AuthStore] \uCFE0\uD0A4 \uD1A0\uD070 \uC874\uC7AC \u2192 \uC21C\uC218 getUser() \uAE30\uBC18 \uBE60\uB978 \uC778\uC99D \uCC98\uB9AC');\n          this.supabaseClient = createBrowserSupabaseClient();\n          \n          // getUser()\uB85C \uC9C1\uC811 \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uD655\uC778 (\uB9E4\uC6B0 \uBE60\uB974\uACE0 \uC548\uC815\uC801)\n          this.performInstantUserAuth();\n          return; // getSession \uC644\uC804\uD788 \uC6B0\uD68C\n        }\n        \n        // \uD83D\uDE80 \uB85C\uADF8\uC778 \uD398\uC774\uC9C0 \uC131\uB2A5 \uCD5C\uC801\uD654: \uD1A0\uD070\uC774 \uC5C6\uC73C\uBA74 \uC989\uC2DC \uB85C\uADF8\uC544\uC6C3 \uC0C1\uD0DC \uCC98\uB9AC\n        if (!hasStoredToken && isLoginPage) {\n          console.log('\u26A1 [AuthStore] \uB85C\uADF8\uC778 \uD398\uC774\uC9C0\uC5D0\uC11C \uD1A0\uD070 \uC5C6\uC74C \u2192 \uC989\uC2DC \uB85C\uADF8\uC544\uC6C3 \uC0C1\uD0DC \uCC98\uB9AC (getSession \uAC74\uB108\uB6F0\uAE30)');\n          this.updateState({\n            session: null,\n            user: null,\n            userProfile: null,\n            isAuthenticated: false,\n            isLoading: false,\n            isInitialized: true,\n            signOut: this.signOut.bind(this),\n            loadUserProfile: this.loadUserProfile.bind(this),\n          });\n          return;\n        }\n        \n        // \uC800\uC7A5\uB41C \uD1A0\uD070\uC774 \uC5C6\uACE0 \uC77C\uBC18 \uD398\uC774\uC9C0\uC5D0\uC11C\uB3C4 \uBE60\uB978 \uCD08\uAE30\uD654\n        if (!hasStoredToken && !isCallbackPage) {\n          console.log('\u26A1 [AuthStore] \uC800\uC7A5\uB41C \uD1A0\uD070 \uC5C6\uC74C \u2192 \uBE60\uB978 \uB85C\uADF8\uC544\uC6C3 \uC0C1\uD0DC \uCC98\uB9AC');\n          this.updateState({\n            session: null,\n            user: null,\n            userProfile: null,\n            isAuthenticated: false,\n            isLoading: false,\n            isInitialized: true,\n            signOut: this.signOut.bind(this),\n            loadUserProfile: this.loadUserProfile.bind(this),\n          });\n          return;\n        }\n\n        this.supabaseClient = createBrowserSupabaseClient();\n        this.initPromise = this.initialize();\n      } catch (error) {\n        console.error('\u274C [AuthStore] Supabase \uD074\uB77C\uC774\uC5B8\uD2B8 \uC0DD\uC131 \uC2E4\uD328:', error);\n        \n        // \uD074\uB77C\uC774\uC5B8\uD2B8 \uC0DD\uC131 \uC2E4\uD328 \uC2DC\uC5D0\uB3C4 \uAE30\uBCF8 \uC0C1\uD0DC\uB85C \uCD08\uAE30\uD654\n        this.updateState({\n          session: null,\n          user: null,\n          userProfile: null,\n          isAuthenticated: false,\n          isLoading: false,\n          isInitialized: true,\n          signOut: this.signOut.bind(this),\n          loadUserProfile: this.loadUserProfile.bind(this),\n        });\n      }\n    } else {\n      // SSR \uD658\uACBD\uC5D0\uC11C\uB294 \uAE30\uBCF8 \uC0C1\uD0DC\uB85C \uCD08\uAE30\uD654\n      console.log('\uD83C\uDF10 [AuthStore] SSR \uD658\uACBD\uC5D0\uC11C \uAE30\uBCF8 \uCD08\uAE30\uD654');\n      this.updateState({\n        session: null,\n        user: null,\n        userProfile: null,\n        isAuthenticated: false,\n        isLoading: false,\n        isInitialized: true,\n        signOut: this.signOut.bind(this),\n        loadUserProfile: this.loadUserProfile.bind(this),\n      });\n    }\n  }\n\n  private async initialize() {\n    if (!this.supabaseClient) {\n      console.warn('\u26A0\uFE0F [AuthStore] Supabase \uD074\uB77C\uC774\uC5B8\uD2B8\uAC00 \uC5C6\uC5B4 \uCD08\uAE30\uD654\uB97C \uAC74\uB108\uB701\uB2C8\uB2E4.');\n      this.updateState({\n        ...this.state,\n        isLoading: false,\n        isInitialized: true,\n      });\n      return;\n    }\n\n    // \uC774\uBBF8 \uCD08\uAE30\uD654\uB41C \uACBD\uC6B0 \uC7AC\uCD08\uAE30\uD654 \uBC29\uC9C0\n    if (this.state.isInitialized) {\n      console.log('\u2705 [AuthStore] \uC774\uBBF8 \uCD08\uAE30\uD654\uB428 - \uC7AC\uCD08\uAE30\uD654 \uAC74\uB108\uB700');\n      return;\n    }\n\n    try {\n      console.log('\uD83D\uDE80 [AuthStore] \uC644\uC804 \uCFE0\uD0A4 \uAE30\uBC18 \uCD08\uAE30\uD654 \uC2DC\uC791 (\uB124\uD2B8\uC6CC\uD06C \uC694\uCCAD 0\uAC1C)');\n      \n      // \uD83C\uDFAF \uC644\uC804\uD788 \uCFE0\uD0A4 \uAE30\uBC18: JWT \uD30C\uC2F1\uB9CC \uC0AC\uC6A9, getUser() \uBC0F getSession() \uC644\uC804 \uC81C\uAC70\n      await this.performInstantUserAuth();\n      \n      console.log('\u2705 [AuthStore] \uCFE0\uD0A4 \uAE30\uBC18 \uCD08\uAE30\uD654 \uC644\uB8CC (\uB124\uD2B8\uC6CC\uD06C \uC694\uCCAD \uC5C6\uC74C)');\n    } catch (error) {\n      console.error('\u274C [AuthStore] \uCD08\uAE30\uD654 \uC5D0\uB7EC:', error);\n      this.updateState({\n        ...this.state,\n        isLoading: false,\n        isInitialized: true,\n      });\n    }\n  }\n\n  // updateAuthState \uBA54\uC18C\uB4DC \uC81C\uAC70\uB428 - \uC644\uC804\uD788 \uCFE0\uD0A4 \uAE30\uBC18\uC73C\uB85C \uBCC0\uACBD\n  // \uBAA8\uB4E0 \uC778\uC99D \uC0C1\uD0DC\uB294 JWT \uD30C\uC2F1\uC73C\uB85C\uB9CC \uCC98\uB9AC\uD558\uBA70 \uB124\uD2B8\uC6CC\uD06C \uC694\uCCAD \uC5C6\uC74C\n\n  private updateState(newState: AuthContextType) {\n    const prevState = this.state;\n    this.state = newState;\n    \n    // \uB514\uBC84\uAE45: \uC0C1\uD0DC \uBCC0\uACBD \uB85C\uADF8\n    if (process.env.NODE_ENV === 'development') {\n      console.log('\uD83D\uDD04 [AuthStore] \uC0C1\uD0DC \uBCC0\uACBD:', {\n        \uBCC0\uACBD\uC804: {\n          isAuthenticated: prevState.isAuthenticated,\n          isLoading: prevState.isLoading,\n          isInitialized: prevState.isInitialized,\n          hasUser: !!prevState.user,\n          hasSession: !!prevState.session\n        },\n        \uBCC0\uACBD\uD6C4: {\n          isAuthenticated: newState.isAuthenticated,\n          isLoading: newState.isLoading,\n          isInitialized: newState.isInitialized,\n          hasUser: !!newState.user,\n          hasSession: !!newState.session\n        },\n        listeners\uAC1C\uC218: this.listeners.size\n      });\n    }\n    \n    this.listeners.forEach(listener => listener(newState));\n  }\n\n  public subscribe(listener: (state: AuthContextType) => void): () => void {\n    this.listeners.add(listener);\n    // \uAD6C\uB3C5 \uC989\uC2DC \uD604\uC7AC \uC0C1\uD0DC \uC804\uB2EC\n    listener(this.state);\n    \n    return () => {\n      this.listeners.delete(listener);\n    };\n  }\n\n  public getState(): AuthContextType {\n    return this.state;\n  }\n\n  public async waitForInitialization(): Promise<void> {\n    if (this.initPromise) {\n      await this.initPromise;\n    }\n  }\n\n  private async signOut(): Promise<void> {\n    if (!this.supabaseClient) return;\n\n    try {\n      console.log('\uD83D\uDD04 [AuthStore] \uB85C\uADF8\uC544\uC6C3 \uC2DC\uC791');\n      const { error } = await this.supabaseClient.auth.signOut();\n      \n      if (error) {\n        console.error('\u274C [AuthStore] \uB85C\uADF8\uC544\uC6C3 \uC5D0\uB7EC:', error);\n      } else {\n        console.log('\u2705 [AuthStore] \uB85C\uADF8\uC544\uC6C3 \uC644\uB8CC');\n      }\n    } catch (error) {\n      console.error('\u274C [AuthStore] \uB85C\uADF8\uC544\uC6C3 \uC608\uC678:', error);\n    }\n  }\n\n  private async performInstantUserAuth(): Promise<void> {\n    try {\n      console.log('\uD83D\uDE80 [AuthStore] performInstantUserAuth \uC2DC\uC791 (\uB124\uD2B8\uC6CC\uD06C \uC694\uCCAD \uC5C6\uC74C)');\n      const startTime = performance.now();\n      \n      // \uD83C\uDFAF \uCFE0\uD0A4\uC5D0\uC11C \uC989\uC2DC JWT \uD30C\uC2F1 (\uB124\uD2B8\uC6CC\uD06C \uC694\uCCAD \uC5C6\uC74C!)\n      const { getInstantUserFromCookies, getTokenExpiry, isTokenExpiringSoon } = await import('@/utils/jwt-parser');\n      \n      const user = getInstantUserFromCookies();\n      const tokenExpiry = getTokenExpiry();\n      const expiringSoon = isTokenExpiringSoon();\n      \n      const endTime = performance.now();\n      \n      console.log('\u2705 [AuthStore] JWT \uD30C\uC2F1 \uC644\uB8CC:', {\n        duration: `${(endTime - startTime).toFixed(2)}ms`,\n        hasUser: !!user,\n        userEmail: user?.email,\n        userId: user?.id?.substring(0, 8) + '...',\n        tokenExpiry: tokenExpiry?.toISOString(),\n        expiringSoon\n      });\n\n      if (!user) {\n        console.warn('\u26A0\uFE0F [AuthStore] \uCFE0\uD0A4\uC5D0\uC11C \uC720\uD6A8\uD55C \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uC5C6\uC74C');\n        \n        // \uD1A0\uD070\uC774 \uC5C6\uAC70\uB098 \uB9CC\uB8CC\uB428\n        this.updateState({\n          session: null,\n          user: null,\n          userProfile: null,\n          isAuthenticated: false,\n          isLoading: false,\n          isInitialized: true,\n          signOut: this.signOut.bind(this),\n          loadUserProfile: this.loadUserProfile.bind(this),\n        });\n        return;\n      }\n\n      // \uC0AC\uC6A9\uC790\uAC00 \uC788\uC73C\uBA74 \uC989\uC2DC \uC778\uC99D\uB41C \uC0C1\uD0DC\uB85C \uC124\uC815\n      console.log('\u2705 [AuthStore] JWT\uC5D0\uC11C \uC0AC\uC6A9\uC790 \uD655\uC778 \uC131\uACF5:', {\n        userId: user.id?.substring(0, 8) + '...',\n        email: user.email,\n        provider: user.app_metadata?.provider,\n        createdAt: user.created_at\n      });\n\n      // \uC138\uC158 \uAC1D\uCCB4 \uC0DD\uC131 (JWT \uAE30\uBC18)\n      const instantSession = {\n        user: user,\n        access_token: 'token-from-jwt', // \uC2E4\uC81C \uD1A0\uD070\uC740 JWT\uC5D0\uC11C \uD30C\uC2F1\uB428\n        refresh_token: null,\n        expires_at: tokenExpiry ? Math.floor(tokenExpiry.getTime() / 1000) : null,\n        token_type: 'bearer'\n      };\n\n      console.log('\uD83D\uDD04 [AuthStore] \uC778\uC99D \uC0C1\uD0DC \uC5C5\uB370\uC774\uD2B8 \uC911...');\n      this.updateState({\n        user: user,\n        session: instantSession as any,\n        userProfile: null,\n        isLoading: false, // \uC989\uC2DC \uB85C\uB529 \uC644\uB8CC\n        isInitialized: true,\n        isAuthenticated: true,\n        signOut: this.signOut.bind(this),\n        loadUserProfile: this.loadUserProfile.bind(this),\n      });\n      \n      console.log('\uD83C\uDF89 [AuthStore] \uC778\uC99D \uC0C1\uD0DC \uC5C5\uB370\uC774\uD2B8 \uC644\uB8CC - \uB85C\uB529 \uD574\uC81C\uB428 (JWT \uBC29\uC2DD)');\n\n      // \uD83D\uDD27 \uAC1C\uBC1C \uD658\uACBD\uC5D0\uC11C userProfile \uB85C\uB529 \uC2DC\uAC04 \uCD94\uC801\n      if (process.env.NODE_ENV === 'development') {\n        (window as any).authStartTime = Date.now();\n      }\n\n      // \uD504\uB85C\uD544 \uCE90\uC2F1 \uB85C\uC9C1: \uD504\uB85C\uD544\uC774 \uC5C6\uAC70\uB098 \uC0AC\uC6A9\uC790\uAC00 \uBCC0\uACBD\uB41C \uACBD\uC6B0\uC5D0\uB9CC \uB85C\uB4DC\n      const shouldLoadProfile = !this.state.userProfile || \n                               (this.state.userProfile?.id !== user.id);\n      \n      if (shouldLoadProfile) {\n        console.log('\uD83D\uDD04 [AuthStore] \uC0AC\uC6A9\uC790 \uD504\uB85C\uD544 \uB85C\uB4DC \uC2DC\uC791:', {\n          userId: user.id?.substring(0, 8) + '...',\n          hasUserId: !!user.id,\n          userEmail: user.email,\n          reason: !this.state.userProfile ? 'profile_not_cached' : 'user_changed',\n          previousUserId: this.state.userProfile?.id?.substring(0, 8) + '...' || 'none'\n        });\n        \n        this.loadUserProfile(user.id).then(profile => {\n          if (profile) {\n            console.log('\u2705 [AuthStore] \uC0AC\uC6A9\uC790 \uD504\uB85C\uD544 \uB85C\uB4DC \uC131\uACF5:', {\n              is_admin: profile.is_admin,\n              is_super_admin: profile.is_super_admin\n            });\n            this.updateState({\n              ...this.state,\n              userProfile: profile,\n            });\n          } else {\n            console.warn('\u26A0\uFE0F [AuthStore] \uC0AC\uC6A9\uC790 \uD504\uB85C\uD544 \uB85C\uB4DC \uACB0\uACFC\uAC00 null\uC784');\n          }\n        }).catch(error => {\n          console.warn('\u26A0\uFE0F [AuthStore] \uC0AC\uC6A9\uC790 \uD504\uB85C\uD544 \uB85C\uB4DC \uC2E4\uD328:', error);\n        });\n      } else {\n          console.log('\u2705 [AuthStore] \uB3D9\uC77C \uC0AC\uC6A9\uC790 \uD504\uB85C\uD544\uC774 \uC774\uBBF8 \uCE90\uC2DC\uB428 - \uC7AC\uB85C\uB529 \uAC74\uB108\uB700:', {\n            userId: user.id?.substring(0, 8) + '...',\n            cachedProfile: {\n              nickname: this.state.userProfile?.nickname,\n              is_admin: this.state.userProfile?.is_admin\n            }\n          });\n        }\n\n      // \uD1A0\uD070 \uB9CC\uB8CC \uACBD\uACE0 (\uCFE0\uD0A4 \uAE30\uBC18)\n      if (expiringSoon) {\n        console.warn('\u26A0\uFE0F [AuthStore] \uD1A0\uD070\uC774 \uACE7 \uB9CC\uB8CC\uB428 (30\uBD84 \uC774\uB0B4) - \uC7AC\uB85C\uADF8\uC778 \uD544\uC694\uD560 \uC218 \uC788\uC74C');\n        // \uBC31\uADF8\uB77C\uC6B4\uB4DC \uB124\uD2B8\uC6CC\uD06C \uC694\uCCAD \uC5C6\uC774 \uACBD\uACE0\uB9CC \uD45C\uC2DC\n      }\n\n      // \uC778\uC99D \uC0C1\uD0DC \uBCC0\uACBD \uB9AC\uC2A4\uB108 \uB4F1\uB85D (\uCFE0\uD0A4 \uAE30\uBC18 \uBAA8\uB4DC)\n      this.supabaseClient.auth.onAuthStateChange(async (event: string, session: any) => {\n        // \uB85C\uADF8\uC544\uC6C3 \uC774\uBCA4\uD2B8\uB9CC \uCC98\uB9AC (\uB2E4\uB978 \uC774\uBCA4\uD2B8\uB294 \uCFE0\uD0A4 \uAE30\uBC18\uC73C\uB85C \uC774\uBBF8 \uCC98\uB9AC\uB428)\n        if (event === 'SIGNED_OUT' || !session) {\n          console.log('\uD83D\uDEAA [AuthStore] \uB85C\uADF8\uC544\uC6C3 \uC774\uBCA4\uD2B8 - \uC0C1\uD0DC \uC815\uB9AC');\n          this.updateState({\n            session: null,\n            user: null,\n            userProfile: null,\n            isAuthenticated: false,\n            isLoading: false,\n            isInitialized: true,\n            signOut: this.signOut.bind(this),\n            loadUserProfile: this.loadUserProfile.bind(this),\n          });\n        }\n        // \uB2E4\uB978 \uC774\uBCA4\uD2B8(SIGNED_IN, TOKEN_REFRESHED \uB4F1)\uB294 \uC870\uC6A9\uD788 \uBB34\uC2DC\n        // \uCFE0\uD0A4 \uAE30\uBC18\uC73C\uB85C \uC774\uBBF8 \uCC98\uB9AC\uB418\uBBC0\uB85C \uCD94\uAC00 \uB85C\uADF8 \uC5C6\uC774 \uBB34\uC2DC\n      });\n\n    } catch (error) {\n      console.error('\u274C [AuthStore] performInstantUserAuth \uC608\uC678:', {\n        error: error instanceof Error ? error.message : String(error),\n        stack: error instanceof Error ? error.stack?.substring(0, 200) : undefined\n      });\n      \n      // \uC624\uB958 \uBC1C\uC0DD\uC2DC \uBE44\uC778\uC99D \uC0C1\uD0DC\uB85C \uC124\uC815\n      this.updateState({\n        session: null,\n        user: null,\n        userProfile: null,\n        isAuthenticated: false,\n        isLoading: false,\n        isInitialized: true,\n        signOut: this.signOut.bind(this),\n        loadUserProfile: this.loadUserProfile.bind(this),\n      });\n      \n      console.log('\uD83D\uDD04 [AuthStore] \uC624\uB958\uB85C \uC778\uD55C \uBE44\uC778\uC99D \uC0C1\uD0DC \uC124\uC815 \uC644\uB8CC');\n    }\n  }\n\n\n\n  private async checkTokenStatusFromCookies(): Promise<void> {\n    try {\n      console.log('\uD83D\uDD04 [AuthStore] \uCFE0\uD0A4 \uAE30\uBC18 \uD1A0\uD070 \uC0C1\uD0DC \uCCB4\uD06C');\n      \n      // \uC644\uC804\uD788 \uCFE0\uD0A4 \uAE30\uBC18 - \uB124\uD2B8\uC6CC\uD06C \uC694\uCCAD \uC5C6\uC74C\n      const { getInstantUserFromCookies, getTokenExpiry } = await import('@/utils/jwt-parser');\n      \n      const user = getInstantUserFromCookies();\n      const tokenExpiry = getTokenExpiry();\n      \n      if (!user) {\n        console.warn('\u26A0\uFE0F [AuthStore] \uCFE0\uD0A4\uC5D0\uC11C \uC720\uD6A8\uD55C \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uC5C6\uC74C - \uB85C\uADF8\uC544\uC6C3 \uCC98\uB9AC');\n        this.updateState({\n          ...this.state,\n          session: null,\n          user: null,\n          userProfile: null,\n          isAuthenticated: false,\n        });\n        return;\n      }\n\n      // \uD1A0\uD070 \uB9CC\uB8CC \uCCB4\uD06C (\uD074\uB77C\uC774\uC5B8\uD2B8 \uC0AC\uC774\uB4DC)\n      if (tokenExpiry && tokenExpiry <= new Date()) {\n        console.warn('\u26A0\uFE0F [AuthStore] JWT \uD1A0\uD070\uC774 \uB9CC\uB8CC\uB428 - \uB85C\uADF8\uC544\uC6C3 \uCC98\uB9AC');\n        this.updateState({\n          ...this.state,\n          session: null,\n          user: null,\n          userProfile: null,\n          isAuthenticated: false,\n        });\n        return;\n      }\n\n      console.log('\u2705 [AuthStore] \uCFE0\uD0A4 \uAE30\uBC18 \uD1A0\uD070 \uC0C1\uD0DC \uCCB4\uD06C \uC644\uB8CC - \uC720\uD6A8\uD568');\n    } catch (error) {\n      console.warn('\u26A0\uFE0F [AuthStore] \uCFE0\uD0A4 \uAE30\uBC18 \uD1A0\uD070 \uCCB4\uD06C \uC911 \uC624\uB958:', error);\n    }\n  }\n\n  private async loadUserProfile(userId: string): Promise<UserProfiles | null> {\n    try {\n      console.log('\uD83D\uDD0D [AuthStore] API\uB97C \uD1B5\uD55C \uD504\uB85C\uD544 \uC870\uD68C \uC2DC\uC791:', { userId: userId.substring(0, 8) + '...' });\n      \n      // \uD83D\uDE80 \uC11C\uBC84 API\uB97C \uD1B5\uD574 \uD504\uB85C\uD544 \uC870\uD68C (RLS \uC815\uCC45 \uC6B0\uD68C)\n      const response = await fetch('/api/user/profile', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include', // \uCFE0\uD0A4 \uD3EC\uD568\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.warn('\u26A0\uFE0F [AuthStore] API \uD504\uB85C\uD544 \uC870\uD68C \uC2E4\uD328:', {\n          status: response.status,\n          statusText: response.statusText,\n          error: errorData\n        });\n        \n        // 404\uB098 403 \uC5D0\uB7EC\uC778 \uACBD\uC6B0 null \uBC18\uD658 (\uD504\uB85C\uD544 \uC5C6\uC74C)\n        if (response.status === 404 || response.status === 403) {\n          return null;\n        }\n        \n        throw new Error(`API \uC751\uB2F5 \uC2E4\uD328: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      \n      if (!data.success || !data.user) {\n        console.warn('\u26A0\uFE0F [AuthStore] API \uC751\uB2F5\uC5D0\uC11C \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uC5C6\uC74C:', data);\n        return null;\n      }\n\n      // API \uC751\uB2F5\uC744 UserProfiles \uD615\uC2DD\uC73C\uB85C \uBCC0\uD658\n      const userProfile: UserProfiles = {\n        id: data.user.id,\n        email: data.user.email,\n        nickname: data.user.name,\n        avatar_url: data.user.avatar_url,\n        star_candy: data.user.star_candy || 0,\n        star_candy_bonus: data.user.star_candy_bonus || 0,\n        is_admin: data.user.is_admin || false,\n        is_super_admin: data.user.is_super_admin || false,\n        created_at: data.user.created_at,\n        updated_at: data.user.updated_at,\n        // \uAE30\uBCF8\uAC12 \uC124\uC815\n        birth_date: null,\n        birth_time: null,\n        deleted_at: null,\n        gender: null,\n        open_ages: false,\n        open_gender: false\n      };\n\n      console.log('\u2705 [AuthStore] API\uB97C \uD1B5\uD55C \uD504\uB85C\uD544 \uC870\uD68C \uC131\uACF5:', {\n        id: userProfile.id?.substring(0, 8) + '...',\n        nickname: userProfile.nickname,\n        email: userProfile.email,\n        hasAvatar: !!userProfile.avatar_url,\n        is_admin: userProfile.is_admin,\n        is_super_admin: userProfile.is_super_admin,\n        star_candy: userProfile.star_candy\n      });\n\n      return userProfile;\n\n    } catch (error) {\n      console.error('\u274C [AuthStore] API \uD504\uB85C\uD544 \uC870\uD68C \uC608\uC678:', error);\n      \n      // API \uD638\uCD9C \uC2E4\uD328\uC2DC fallback\uC73C\uB85C \uAE30\uBCF8 \uD504\uB85C\uD544 \uBC18\uD658 (\uAC1C\uBC1C \uD658\uACBD)\n      if (process.env.NODE_ENV === 'development') {\n        console.log('\uD83D\uDD27 [AuthStore] \uAC1C\uBC1C\uD658\uACBD - \uAE30\uBCF8 \uD504\uB85C\uD544 fallback');\n        \n        // \uD604\uC7AC \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uAC00\uC838\uC624\uAE30\n        const { data: { user: currentUser } } = await this.supabaseClient?.auth.getUser() || { data: { user: null } };\n        \n        if (currentUser && currentUser.id === userId) {\n          const fallbackProfile: UserProfiles = {\n            id: userId,\n            email: currentUser.email || null,\n            nickname: currentUser.user_metadata?.name || \n                     currentUser.user_metadata?.full_name || \n                     currentUser.email?.split('@')[0] || \n                     'User',\n            avatar_url: null, // JWT \uD1A0\uD070 \uC774\uBBF8\uC9C0\uB294 \uC0AC\uC6A9\uD558\uC9C0 \uC54A\uC74C\n            is_admin: true, // \uAC1C\uBC1C\uD658\uACBD\uC5D0\uC11C API \uC2E4\uD328\uC2DC \uC784\uC2DC \uAD00\uB9AC\uC790\n            is_super_admin: false,\n            star_candy: 0,\n            star_candy_bonus: 0,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n            birth_date: null,\n            birth_time: null,\n            deleted_at: null,\n            gender: null,\n            open_ages: false,\n            open_gender: false\n          };\n          \n          console.log('\uD83D\uDC1B [AuthStore] \uAC1C\uBC1C\uD658\uACBD fallback \uD504\uB85C\uD544 \uC0DD\uC131:', {\n            nickname: fallbackProfile.nickname,\n            is_admin: fallbackProfile.is_admin\n          });\n          \n          return fallbackProfile;\n        }\n      }\n      \n      return null;\n    }\n  }\n}\n\n// AuthProvider \uCEF4\uD3EC\uB10C\uD2B8\uB97C memo\uB85C \uAC10\uC2F8\uC11C \uC644\uC804\uD788 \uC548\uC815\uD654\nconst AuthProviderComponent = memo(function AuthProviderInternal({ children }: AuthProviderProps) {\n  console.log('\uD83C\uDFD7\uFE0F [AuthProvider] \uCEF4\uD3EC\uB10C\uD2B8 \uC0DD\uC131/\uC7AC\uB80C\uB354\uB9C1');\n  \n  const [contextValue, setContextValue] = useState<AuthContextType>(() => {\n    return AuthStore.getInstance().getState();\n  });\n\n  useEffect(() => {\n    const authStore = AuthStore.getInstance();\n    \n    // \uCD08\uAE30\uD654 \uB300\uAE30 (await \uCD94\uAC00)\n    const initializeAndSubscribe = async () => {\n      try {\n        await authStore.waitForInitialization();\n        console.log('\u2705 [AuthProvider] \uCD08\uAE30\uD654 \uC644\uB8CC \uB300\uAE30 \uC131\uACF5');\n      } catch (error) {\n        console.error('\u274C [AuthProvider] \uCD08\uAE30\uD654 \uB300\uAE30 \uC911 \uC624\uB958:', error);\n      }\n    };\n    \n    initializeAndSubscribe();\n    \n    // \uC0C1\uD0DC \uBCC0\uACBD \uAD6C\uB3C5\n    const unsubscribe = authStore.subscribe((newState) => {\n      console.log('\uD83D\uDD04 [AuthProvider] Context \uAC12 \uBCC0\uACBD:', {\n        isLoading: newState.isLoading,\n        isInitialized: newState.isInitialized,\n        isAuthenticated: newState.isAuthenticated,\n        hasSession: !!newState.session,\n        hasUser: !!newState.user,\n        hasUserProfile: !!newState.userProfile,\n      });\n      setContextValue(newState);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n});\n\n// AuthProvider\uB97C \uC644\uC804\uD788 \uC548\uC815\uD654\uB41C \uCEF4\uD3EC\uB10C\uD2B8\uB85C export\nexport const AuthProvider = AuthProviderComponent;\n\nexport function useAuth(): AuthContextType {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n} "],
      names: ["AuthProvider", "useAuth", "AuthContext", "createContext", "undefined", "AuthStore", "instance", "getInstance", "supabaseClient", "listeners", "Set", "state", "session", "user", "userProfile", "isAuthenticated", "isLoading", "isInitialized", "signOut", "bind", "loadUserProfile", "initPromise", "window", "console", "log", "checkStoredToken", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "urlParts", "split", "projectId", "checkCookieToken", "cookies", "document", "cookie", "name", "value", "trim", "startsWith", "error", "warn", "authKey", "hasLocalStorageToken", "localStorage", "getItem", "hasCookieToken", "hasAnyToken", "hasLocalStorage", "i", "length", "key", "endsWith", "hasToken", "hasCookie", "includes", "hasStoredToken", "isLoginPage", "location", "pathname", "isCallbackPage", "NEXT_PUBLIC_SUPABASE_ANON_KEY", "hasUrl", "hasKey", "updateState", "createBrowserSupabaseClient", "performInstantUserAuth", "initialize", "newState", "prevState", "NODE_ENV", "\uBCC0\uACBD\uC804", "hasUser", "hasSession", "\uBCC0\uACBD\uD6C4", "listeners\uAC1C\uC218", "size", "forEach", "listener", "subscribe", "add", "delete", "getState", "waitForInitialization", "auth", "startTime", "performance", "now", "getInstantUserFromCookies", "getTokenExpiry", "isTokenExpiringSoon", "tokenExpiry", "expiringSoon", "endTime", "duration", "toFixed", "userEmail", "email", "userId", "id", "substring", "toISOString", "provider", "app_metadata", "createdAt", "created_at", "instantSession", "access_token", "refresh_token", "expires_at", "Math", "floor", "getTime", "token_type", "authStartTime", "Date", "shouldLoadProfile", "hasUserId", "reason", "previousUserId", "then", "profile", "is_admin", "is_super_admin", "catch", "cachedProfile", "nickname", "onAuthStateChange", "event", "Error", "message", "String", "stack", "checkTokenStatusFromCookies", "response", "fetch", "method", "headers", "credentials", "ok", "errorData", "json", "status", "statusText", "data", "success", "avatar_url", "star_candy", "star_candy_bonus", "updated_at", "birth_date", "birth_time", "deleted_at", "gender", "open_ages", "open_gender", "hasAvatar", "currentUser", "getUser", "fallbackProfile", "user_metadata", "full_name", "AuthProviderComponent", "memo", "AuthProviderInternal", "children", "contextValue", "setContextValue", "useState", "useEffect", "authStore", "initializeAndSubscribe", "unsubscribe", "hasUserProfile", "Provider", "context", "useContext"],
      mappings: "AAAA;;;;;;;;;;;;IAiuBaA,YAAY;eAAZA;;IAEGC,OAAO;eAAPA;;;;+DAxtBT;wBAEqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsB5C,MAAMC,4BAAcC,IAAAA,oBAAa,EAA8BC;AAM/D,sBAAsB;AACtB,MAAMC;;aACWC,WAA6B;;IAe5C,OAAOC,cAAyB;QAC9B,IAAI,CAACF,UAAUC,QAAQ,EAAE;YACvBD,UAAUC,QAAQ,GAAG,IAAID;QAC3B;QACA,OAAOA,UAAUC,QAAQ;IAC3B;IAEA,aAAsB;aArBdE,iBAAsB;aACtBC,YAAmD,IAAIC;aACvDC,QAAyB;YAC/BC,SAAS;YACTC,MAAM;YACNC,aAAa;YACbC,iBAAiB;YACjBC,WAAW;YACXC,eAAe;YACfC,SAAS,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI;YAC/BC,iBAAiB,IAAI,CAACA,eAAe,CAACD,IAAI,CAAC,IAAI;QACjD;aACQE,cAAoC;QAU1C,IAAI,OAAOC,WAAW,aAAa;YACjC,IAAI;gBACFC,QAAQC,GAAG,CAAC;gBAEZ,+CAA+C;gBAC/C,MAAMC,mBAAmB;oBACvB,IAAI;wBACF,iCAAiC;wBACjC,MAAMC,cAAcC,QAAQC,GAAG,CAACC,wBAAwB;wBACxD,IAAI,CAACH,aAAa,OAAO;wBAEzB,MAAMI,WAAWJ,YAAYK,KAAK,CAAC;wBACnC,MAAMC,YAAYF,QAAQ,CAAC,EAAE,EAAEC,MAAM,MAAM,CAAC,EAAE;wBAE9C,qBAAqB;wBACrB,MAAME,mBAAmB,CAACD;4BACxB,IAAI;gCACF,MAAME,UAAUC,SAASC,MAAM,CAACL,KAAK,CAAC;gCACtC,KAAK,IAAIK,UAAUF,QAAS;oCAC1B,MAAM,CAACG,MAAMC,MAAM,GAAGF,OAAOG,IAAI,GAAGR,KAAK,CAAC;oCAC1C,IAAIM,QAAQA,KAAKG,UAAU,CAAC,CAAC,GAAG,EAAER,UAAU,WAAW,CAAC,KAAKM,OAAO;wCAClEf,QAAQC,GAAG,CAAC,CAAC,uBAAuB,EAAEa,KAAK,KAAK,CAAC;wCACjD,OAAO;oCACT;gCACF;gCACA,OAAO;4BACT,EAAE,OAAOI,OAAO;gCACdlB,QAAQmB,IAAI,CAAC,iCAAiCD;gCAC9C,OAAO;4BACT;wBACF;wBAEA,IAAIT,WAAW;4BACb,MAAMW,UAAU,CAAC,GAAG,EAAEX,UAAU,WAAW,CAAC;4BAE5C,uBAAuB;4BACvB,MAAMY,uBAAuBC,aAAaC,OAAO,CAACH;4BAClDpB,QAAQC,GAAG,CAAC,CAAC,iCAAiC,EAAEmB,QAAQ,EAAE,CAAC,EAAEC,uBAAuB,OAAO;4BAE3F,aAAa;4BACb,MAAMG,iBAAiBd,iBAAiBD;4BAExC,MAAMgB,cAAc,CAAC,CAACJ,wBAAwBG;4BAC9CxB,QAAQC,GAAG,CAAC,CAAC,qBAAqB,CAAC,EAAE;gCACnCqB,cAAc,CAAC,CAACD;gCAChBR,QAAQW;gCACRC;4BACF;4BAEA,OAAOA;wBACT;wBAEA,wCAAwC;wBACxC,IAAIC,kBAAkB;wBACtB,IAAK,IAAIC,IAAI,GAAGA,IAAIL,aAAaM,MAAM,EAAED,IAAK;4BAC5C,MAAME,MAAMP,aAAaO,GAAG,CAACF;4BAC7B,IAAIE,OAAOA,IAAIZ,UAAU,CAAC,UAAUY,IAAIC,QAAQ,CAAC,gBAAgB;gCAC/D,MAAMC,WAAWT,aAAaC,OAAO,CAACM;gCACtC7B,QAAQC,GAAG,CAAC,CAAC,iCAAiC,EAAE4B,IAAI,EAAE,CAAC,EAAEE,WAAW,OAAO;gCAC3E,IAAIA,UAAUL,kBAAkB;4BAClC;wBACF;wBAEA,gBAAgB;wBAChB,IAAIM,YAAY;wBAChB,IAAI;4BACF,MAAMrB,UAAUC,SAASC,MAAM,CAACL,KAAK,CAAC;4BACtC,KAAK,IAAIK,UAAUF,QAAS;gCAC1B,MAAM,CAACG,MAAMC,MAAM,GAAGF,OAAOG,IAAI,GAAGR,KAAK,CAAC;gCAC1C,IAAIM,QAAQA,KAAKG,UAAU,CAAC,UAAUH,KAAKmB,QAAQ,CAAC,iBAAiBlB,OAAO;oCAC1Ef,QAAQC,GAAG,CAAC,CAAC,uBAAuB,EAAEa,KAAK,KAAK,CAAC;oCACjDkB,YAAY;oCACZ;gCACF;4BACF;wBACF,EAAE,OAAOd,OAAO;4BACdlB,QAAQmB,IAAI,CAAC,iCAAiCD;wBAChD;wBAEA,MAAMO,cAAcC,mBAAmBM;wBACvChC,QAAQC,GAAG,CAAC,CAAC,wBAAwB,CAAC,EAAE;4BACtCqB,cAAcI;4BACdb,QAAQmB;4BACRP;wBACF;wBAEA,OAAOA;oBACT,EAAE,OAAOP,OAAO;wBACdlB,QAAQmB,IAAI,CAAC,8BAA8BD;wBAC3C,OAAO;oBACT;gBACF;gBAEA,MAAMgB,iBAAiBhC;gBACvB,MAAMiC,cAAcpC,OAAOqC,QAAQ,CAACC,QAAQ,CAACJ,QAAQ,CAAC;gBACtD,MAAMK,iBAAiBvC,OAAOqC,QAAQ,CAACC,QAAQ,CAACJ,QAAQ,CAAC;gBAEzDjC,QAAQC,GAAG,CAAC,4BAA4B;oBACtCiC;oBACAC;oBACAG;oBACAD,UAAUtC,OAAOqC,QAAQ,CAACC,QAAQ;gBACpC;gBAEA,0BAA0B;gBAC1B,IAAI,CAACjC,QAAQC,GAAG,CAACC,wBAAwB,IAAI,CAACF,QAAQC,GAAG,CAACkC,6BAA6B,EAAE;oBACvFvC,QAAQkB,KAAK,CAAC,6CAA6C;wBACzDsB,QAAQ,CAAC,CAACpC,QAAQC,GAAG,CAACC,wBAAwB;wBAC9CmC,QAAQ,CAAC,CAACrC,QAAQC,GAAG,CAACkC,6BAA6B;oBACrD;oBAEA,wBAAwB;oBACxB,IAAI,CAACG,WAAW,CAAC;wBACfrD,SAAS;wBACTC,MAAM;wBACNC,aAAa;wBACbC,iBAAiB;wBACjBC,WAAW;wBACXC,eAAe;wBACfC,SAAS,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI;wBAC/BC,iBAAiB,IAAI,CAACA,eAAe,CAACD,IAAI,CAAC,IAAI;oBACjD;oBACA;gBACF;gBAEA,8CAA8C;gBAC9C,IAAIsC,gBAAgB;oBAClBlC,QAAQC,GAAG,CAAC;oBACZ,IAAI,CAAChB,cAAc,GAAG0D,IAAAA,mCAA2B;oBAEjD,uCAAuC;oBACvC,IAAI,CAACC,sBAAsB;oBAC3B,QAAQ,oBAAoB;gBAC9B;gBAEA,2CAA2C;gBAC3C,IAAI,CAACV,kBAAkBC,aAAa;oBAClCnC,QAAQC,GAAG,CAAC;oBACZ,IAAI,CAACyC,WAAW,CAAC;wBACfrD,SAAS;wBACTC,MAAM;wBACNC,aAAa;wBACbC,iBAAiB;wBACjBC,WAAW;wBACXC,eAAe;wBACfC,SAAS,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI;wBAC/BC,iBAAiB,IAAI,CAACA,eAAe,CAACD,IAAI,CAAC,IAAI;oBACjD;oBACA;gBACF;gBAEA,8BAA8B;gBAC9B,IAAI,CAACsC,kBAAkB,CAACI,gBAAgB;oBACtCtC,QAAQC,GAAG,CAAC;oBACZ,IAAI,CAACyC,WAAW,CAAC;wBACfrD,SAAS;wBACTC,MAAM;wBACNC,aAAa;wBACbC,iBAAiB;wBACjBC,WAAW;wBACXC,eAAe;wBACfC,SAAS,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI;wBAC/BC,iBAAiB,IAAI,CAACA,eAAe,CAACD,IAAI,CAAC,IAAI;oBACjD;oBACA;gBACF;gBAEA,IAAI,CAACX,cAAc,GAAG0D,IAAAA,mCAA2B;gBACjD,IAAI,CAAC7C,WAAW,GAAG,IAAI,CAAC+C,UAAU;YACpC,EAAE,OAAO3B,OAAO;gBACdlB,QAAQkB,KAAK,CAAC,uCAAuCA;gBAErD,6BAA6B;gBAC7B,IAAI,CAACwB,WAAW,CAAC;oBACfrD,SAAS;oBACTC,MAAM;oBACNC,aAAa;oBACbC,iBAAiB;oBACjBC,WAAW;oBACXC,eAAe;oBACfC,SAAS,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI;oBAC/BC,iBAAiB,IAAI,CAACA,eAAe,CAACD,IAAI,CAAC,IAAI;gBACjD;YACF;QACF,OAAO;YACL,uBAAuB;YACvBI,QAAQC,GAAG,CAAC;YACZ,IAAI,CAACyC,WAAW,CAAC;gBACfrD,SAAS;gBACTC,MAAM;gBACNC,aAAa;gBACbC,iBAAiB;gBACjBC,WAAW;gBACXC,eAAe;gBACfC,SAAS,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI;gBAC/BC,iBAAiB,IAAI,CAACA,eAAe,CAACD,IAAI,CAAC,IAAI;YACjD;QACF;IACF;IAEA,MAAciD,aAAa;QACzB,IAAI,CAAC,IAAI,CAAC5D,cAAc,EAAE;YACxBe,QAAQmB,IAAI,CAAC;YACb,IAAI,CAACuB,WAAW,CAAC;gBACf,GAAG,IAAI,CAACtD,KAAK;gBACbK,WAAW;gBACXC,eAAe;YACjB;YACA;QACF;QAEA,qBAAqB;QACrB,IAAI,IAAI,CAACN,KAAK,CAACM,aAAa,EAAE;YAC5BM,QAAQC,GAAG,CAAC;YACZ;QACF;QAEA,IAAI;YACFD,QAAQC,GAAG,CAAC;YAEZ,2DAA2D;YAC3D,MAAM,IAAI,CAAC2C,sBAAsB;YAEjC5C,QAAQC,GAAG,CAAC;QACd,EAAE,OAAOiB,OAAO;YACdlB,QAAQkB,KAAK,CAAC,yBAAyBA;YACvC,IAAI,CAACwB,WAAW,CAAC;gBACf,GAAG,IAAI,CAACtD,KAAK;gBACbK,WAAW;gBACXC,eAAe;YACjB;QACF;IACF;IAEA,2CAA2C;IAC3C,sCAAsC;IAE9BgD,YAAYI,QAAyB,EAAE;QAC7C,MAAMC,YAAY,IAAI,CAAC3D,KAAK;QAC5B,IAAI,CAACA,KAAK,GAAG0D;QAEb,gBAAgB;QAChB,IAAI1C,QAAQC,GAAG,CAAC2C,QAAQ,KAAK,eAAe;YAC1ChD,QAAQC,GAAG,CAAC,yBAAyB;gBACnCgD,KAAK;oBACHzD,iBAAiBuD,UAAUvD,eAAe;oBAC1CC,WAAWsD,UAAUtD,SAAS;oBAC9BC,eAAeqD,UAAUrD,aAAa;oBACtCwD,SAAS,CAAC,CAACH,UAAUzD,IAAI;oBACzB6D,YAAY,CAAC,CAACJ,UAAU1D,OAAO;gBACjC;gBACA+D,KAAK;oBACH5D,iBAAiBsD,SAAStD,eAAe;oBACzCC,WAAWqD,SAASrD,SAAS;oBAC7BC,eAAeoD,SAASpD,aAAa;oBACrCwD,SAAS,CAAC,CAACJ,SAASxD,IAAI;oBACxB6D,YAAY,CAAC,CAACL,SAASzD,OAAO;gBAChC;gBACAgE,aAAa,IAAI,CAACnE,SAAS,CAACoE,IAAI;YAClC;QACF;QAEA,IAAI,CAACpE,SAAS,CAACqE,OAAO,CAACC,CAAAA,WAAYA,SAASV;IAC9C;IAEOW,UAAUD,QAA0C,EAAc;QACvE,IAAI,CAACtE,SAAS,CAACwE,GAAG,CAACF;QACnB,iBAAiB;QACjBA,SAAS,IAAI,CAACpE,KAAK;QAEnB,OAAO;YACL,IAAI,CAACF,SAAS,CAACyE,MAAM,CAACH;QACxB;IACF;IAEOI,WAA4B;QACjC,OAAO,IAAI,CAACxE,KAAK;IACnB;IAEA,MAAayE,wBAAuC;QAClD,IAAI,IAAI,CAAC/D,WAAW,EAAE;YACpB,MAAM,IAAI,CAACA,WAAW;QACxB;IACF;IAEA,MAAcH,UAAyB;QACrC,IAAI,CAAC,IAAI,CAACV,cAAc,EAAE;QAE1B,IAAI;YACFe,QAAQC,GAAG,CAAC;YACZ,MAAM,EAAEiB,KAAK,EAAE,GAAG,MAAM,IAAI,CAACjC,cAAc,CAAC6E,IAAI,CAACnE,OAAO;YAExD,IAAIuB,OAAO;gBACTlB,QAAQkB,KAAK,CAAC,0BAA0BA;YAC1C,OAAO;gBACLlB,QAAQC,GAAG,CAAC;YACd;QACF,EAAE,OAAOiB,OAAO;YACdlB,QAAQkB,KAAK,CAAC,0BAA0BA;QAC1C;IACF;IAEA,MAAc0B,yBAAwC;QACpD,IAAI;YACF5C,QAAQC,GAAG,CAAC;YACZ,MAAM8D,YAAYC,YAAYC,GAAG;YAEjC,kCAAkC;YAClC,MAAM,EAAEC,yBAAyB,EAAEC,cAAc,EAAEC,mBAAmB,EAAE,GAAG,MAAM,mEAAA,QAAO;YAExF,MAAM9E,OAAO4E;YACb,MAAMG,cAAcF;YACpB,MAAMG,eAAeF;YAErB,MAAMG,UAAUP,YAAYC,GAAG;YAE/BjE,QAAQC,GAAG,CAAC,4BAA4B;gBACtCuE,UAAU,GAAG,AAACD,CAAAA,UAAUR,SAAQ,EAAGU,OAAO,CAAC,GAAG,EAAE,CAAC;gBACjDvB,SAAS,CAAC,CAAC5D;gBACXoF,WAAWpF,MAAMqF;gBACjBC,QAAQtF,MAAMuF,IAAIC,UAAU,GAAG,KAAK;gBACpCT,aAAaA,aAAaU;gBAC1BT;YACF;YAEA,IAAI,CAAChF,MAAM;gBACTU,QAAQmB,IAAI,CAAC;gBAEb,cAAc;gBACd,IAAI,CAACuB,WAAW,CAAC;oBACfrD,SAAS;oBACTC,MAAM;oBACNC,aAAa;oBACbC,iBAAiB;oBACjBC,WAAW;oBACXC,eAAe;oBACfC,SAAS,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI;oBAC/BC,iBAAiB,IAAI,CAACA,eAAe,CAACD,IAAI,CAAC,IAAI;gBACjD;gBACA;YACF;YAEA,yBAAyB;YACzBI,QAAQC,GAAG,CAAC,kCAAkC;gBAC5C2E,QAAQtF,KAAKuF,EAAE,EAAEC,UAAU,GAAG,KAAK;gBACnCH,OAAOrF,KAAKqF,KAAK;gBACjBK,UAAU1F,KAAK2F,YAAY,EAAED;gBAC7BE,WAAW5F,KAAK6F,UAAU;YAC5B;YAEA,oBAAoB;YACpB,MAAMC,iBAAiB;gBACrB9F,MAAMA;gBACN+F,cAAc;gBACdC,eAAe;gBACfC,YAAYlB,cAAcmB,KAAKC,KAAK,CAACpB,YAAYqB,OAAO,KAAK,QAAQ;gBACrEC,YAAY;YACd;YAEA3F,QAAQC,GAAG,CAAC;YACZ,IAAI,CAACyC,WAAW,CAAC;gBACfpD,MAAMA;gBACND,SAAS+F;gBACT7F,aAAa;gBACbE,WAAW;gBACXC,eAAe;gBACfF,iBAAiB;gBACjBG,SAAS,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI;gBAC/BC,iBAAiB,IAAI,CAACA,eAAe,CAACD,IAAI,CAAC,IAAI;YACjD;YAEAI,QAAQC,GAAG,CAAC;YAEZ,kCAAkC;YAClC,IAAIG,QAAQC,GAAG,CAAC2C,QAAQ,KAAK,eAAe;gBACzCjD,OAAe6F,aAAa,GAAGC,KAAK5B,GAAG;YAC1C;YAEA,uCAAuC;YACvC,MAAM6B,oBAAoB,CAAC,IAAI,CAAC1G,KAAK,CAACG,WAAW,IACvB,IAAI,CAACH,KAAK,CAACG,WAAW,EAAEsF,OAAOvF,KAAKuF,EAAE;YAEhE,IAAIiB,mBAAmB;gBACrB9F,QAAQC,GAAG,CAAC,iCAAiC;oBAC3C2E,QAAQtF,KAAKuF,EAAE,EAAEC,UAAU,GAAG,KAAK;oBACnCiB,WAAW,CAAC,CAACzG,KAAKuF,EAAE;oBACpBH,WAAWpF,KAAKqF,KAAK;oBACrBqB,QAAQ,CAAC,IAAI,CAAC5G,KAAK,CAACG,WAAW,GAAG,uBAAuB;oBACzD0G,gBAAgB,IAAI,CAAC7G,KAAK,CAACG,WAAW,EAAEsF,IAAIC,UAAU,GAAG,KAAK,SAAS;gBACzE;gBAEA,IAAI,CAACjF,eAAe,CAACP,KAAKuF,EAAE,EAAEqB,IAAI,CAACC,CAAAA;oBACjC,IAAIA,SAAS;wBACXnG,QAAQC,GAAG,CAAC,gCAAgC;4BAC1CmG,UAAUD,QAAQC,QAAQ;4BAC1BC,gBAAgBF,QAAQE,cAAc;wBACxC;wBACA,IAAI,CAAC3D,WAAW,CAAC;4BACf,GAAG,IAAI,CAACtD,KAAK;4BACbG,aAAa4G;wBACf;oBACF,OAAO;wBACLnG,QAAQmB,IAAI,CAAC;oBACf;gBACF,GAAGmF,KAAK,CAACpF,CAAAA;oBACPlB,QAAQmB,IAAI,CAAC,iCAAiCD;gBAChD;YACF,OAAO;gBACHlB,QAAQC,GAAG,CAAC,+CAA+C;oBACzD2E,QAAQtF,KAAKuF,EAAE,EAAEC,UAAU,GAAG,KAAK;oBACnCyB,eAAe;wBACbC,UAAU,IAAI,CAACpH,KAAK,CAACG,WAAW,EAAEiH;wBAClCJ,UAAU,IAAI,CAAChH,KAAK,CAACG,WAAW,EAAE6G;oBACpC;gBACF;YACF;YAEF,mBAAmB;YACnB,IAAI9B,cAAc;gBAChBtE,QAAQmB,IAAI,CAAC;YACb,0BAA0B;YAC5B;YAEA,6BAA6B;YAC7B,IAAI,CAAClC,cAAc,CAAC6E,IAAI,CAAC2C,iBAAiB,CAAC,OAAOC,OAAerH;gBAC/D,wCAAwC;gBACxC,IAAIqH,UAAU,gBAAgB,CAACrH,SAAS;oBACtCW,QAAQC,GAAG,CAAC;oBACZ,IAAI,CAACyC,WAAW,CAAC;wBACfrD,SAAS;wBACTC,MAAM;wBACNC,aAAa;wBACbC,iBAAiB;wBACjBC,WAAW;wBACXC,eAAe;wBACfC,SAAS,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI;wBAC/BC,iBAAiB,IAAI,CAACA,eAAe,CAACD,IAAI,CAAC,IAAI;oBACjD;gBACF;YACA,+CAA+C;YAC/C,+BAA+B;YACjC;QAEF,EAAE,OAAOsB,OAAO;YACdlB,QAAQkB,KAAK,CAAC,4CAA4C;gBACxDA,OAAOA,iBAAiByF,QAAQzF,MAAM0F,OAAO,GAAGC,OAAO3F;gBACvD4F,OAAO5F,iBAAiByF,QAAQzF,MAAM4F,KAAK,EAAEhC,UAAU,GAAG,OAAOjG;YACnE;YAEA,oBAAoB;YACpB,IAAI,CAAC6D,WAAW,CAAC;gBACfrD,SAAS;gBACTC,MAAM;gBACNC,aAAa;gBACbC,iBAAiB;gBACjBC,WAAW;gBACXC,eAAe;gBACfC,SAAS,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI;gBAC/BC,iBAAiB,IAAI,CAACA,eAAe,CAACD,IAAI,CAAC,IAAI;YACjD;YAEAI,QAAQC,GAAG,CAAC;QACd;IACF;IAIA,MAAc8G,8BAA6C;QACzD,IAAI;YACF/G,QAAQC,GAAG,CAAC;YAEZ,yBAAyB;YACzB,MAAM,EAAEiE,yBAAyB,EAAEC,cAAc,EAAE,GAAG,MAAM,mEAAA,QAAO;YAEnE,MAAM7E,OAAO4E;YACb,MAAMG,cAAcF;YAEpB,IAAI,CAAC7E,MAAM;gBACTU,QAAQmB,IAAI,CAAC;gBACb,IAAI,CAACuB,WAAW,CAAC;oBACf,GAAG,IAAI,CAACtD,KAAK;oBACbC,SAAS;oBACTC,MAAM;oBACNC,aAAa;oBACbC,iBAAiB;gBACnB;gBACA;YACF;YAEA,uBAAuB;YACvB,IAAI6E,eAAeA,eAAe,IAAIwB,QAAQ;gBAC5C7F,QAAQmB,IAAI,CAAC;gBACb,IAAI,CAACuB,WAAW,CAAC;oBACf,GAAG,IAAI,CAACtD,KAAK;oBACbC,SAAS;oBACTC,MAAM;oBACNC,aAAa;oBACbC,iBAAiB;gBACnB;gBACA;YACF;YAEAQ,QAAQC,GAAG,CAAC;QACd,EAAE,OAAOiB,OAAO;YACdlB,QAAQmB,IAAI,CAAC,oCAAoCD;QACnD;IACF;IAEA,MAAcrB,gBAAgB+E,MAAc,EAAgC;QAC1E,IAAI;YACF5E,QAAQC,GAAG,CAAC,qCAAqC;gBAAE2E,QAAQA,OAAOE,SAAS,CAAC,GAAG,KAAK;YAAM;YAE1F,mCAAmC;YACnC,MAAMkC,WAAW,MAAMC,MAAM,qBAAqB;gBAChDC,QAAQ;gBACRC,SAAS;oBACP,gBAAgB;gBAClB;gBACAC,aAAa;YACf;YAEA,IAAI,CAACJ,SAASK,EAAE,EAAE;gBAChB,MAAMC,YAAY,MAAMN,SAASO,IAAI;gBACrCvH,QAAQmB,IAAI,CAAC,iCAAiC;oBAC5CqG,QAAQR,SAASQ,MAAM;oBACvBC,YAAYT,SAASS,UAAU;oBAC/BvG,OAAOoG;gBACT;gBAEA,mCAAmC;gBACnC,IAAIN,SAASQ,MAAM,KAAK,OAAOR,SAASQ,MAAM,KAAK,KAAK;oBACtD,OAAO;gBACT;gBAEA,MAAM,IAAIb,MAAM,CAAC,WAAW,EAAEK,SAASQ,MAAM,CAAC,CAAC,EAAER,SAASS,UAAU,EAAE;YACxE;YAEA,MAAMC,OAAO,MAAMV,SAASO,IAAI;YAEhC,IAAI,CAACG,KAAKC,OAAO,IAAI,CAACD,KAAKpI,IAAI,EAAE;gBAC/BU,QAAQmB,IAAI,CAAC,sCAAsCuG;gBACnD,OAAO;YACT;YAEA,+BAA+B;YAC/B,MAAMnI,cAA4B;gBAChCsF,IAAI6C,KAAKpI,IAAI,CAACuF,EAAE;gBAChBF,OAAO+C,KAAKpI,IAAI,CAACqF,KAAK;gBACtB6B,UAAUkB,KAAKpI,IAAI,CAACwB,IAAI;gBACxB8G,YAAYF,KAAKpI,IAAI,CAACsI,UAAU;gBAChCC,YAAYH,KAAKpI,IAAI,CAACuI,UAAU,IAAI;gBACpCC,kBAAkBJ,KAAKpI,IAAI,CAACwI,gBAAgB,IAAI;gBAChD1B,UAAUsB,KAAKpI,IAAI,CAAC8G,QAAQ,IAAI;gBAChCC,gBAAgBqB,KAAKpI,IAAI,CAAC+G,cAAc,IAAI;gBAC5ClB,YAAYuC,KAAKpI,IAAI,CAAC6F,UAAU;gBAChC4C,YAAYL,KAAKpI,IAAI,CAACyI,UAAU;gBAChC,SAAS;gBACTC,YAAY;gBACZC,YAAY;gBACZC,YAAY;gBACZC,QAAQ;gBACRC,WAAW;gBACXC,aAAa;YACf;YAEArI,QAAQC,GAAG,CAAC,oCAAoC;gBAC9C4E,IAAItF,YAAYsF,EAAE,EAAEC,UAAU,GAAG,KAAK;gBACtC0B,UAAUjH,YAAYiH,QAAQ;gBAC9B7B,OAAOpF,YAAYoF,KAAK;gBACxB2D,WAAW,CAAC,CAAC/I,YAAYqI,UAAU;gBACnCxB,UAAU7G,YAAY6G,QAAQ;gBAC9BC,gBAAgB9G,YAAY8G,cAAc;gBAC1CwB,YAAYtI,YAAYsI,UAAU;YACpC;YAEA,OAAOtI;QAET,EAAE,OAAO2B,OAAO;YACdlB,QAAQkB,KAAK,CAAC,gCAAgCA;YAE9C,0CAA0C;YAC1C,IAAId,QAAQC,GAAG,CAAC2C,QAAQ,KAAK,eAAe;gBAC1ChD,QAAQC,GAAG,CAAC;gBAEZ,iBAAiB;gBACjB,MAAM,EAAEyH,MAAM,EAAEpI,MAAMiJ,WAAW,EAAE,EAAE,GAAG,MAAM,IAAI,CAACtJ,cAAc,EAAE6E,KAAK0E,aAAa;oBAAEd,MAAM;wBAAEpI,MAAM;oBAAK;gBAAE;gBAE5G,IAAIiJ,eAAeA,YAAY1D,EAAE,KAAKD,QAAQ;oBAC5C,MAAM6D,kBAAgC;wBACpC5D,IAAID;wBACJD,OAAO4D,YAAY5D,KAAK,IAAI;wBAC5B6B,UAAU+B,YAAYG,aAAa,EAAE5H,QAC5ByH,YAAYG,aAAa,EAAEC,aAC3BJ,YAAY5D,KAAK,EAAEnE,MAAM,IAAI,CAAC,EAAE,IAChC;wBACToH,YAAY;wBACZxB,UAAU;wBACVC,gBAAgB;wBAChBwB,YAAY;wBACZC,kBAAkB;wBAClB3C,YAAY,IAAIU,OAAOd,WAAW;wBAClCgD,YAAY,IAAIlC,OAAOd,WAAW;wBAClCiD,YAAY;wBACZC,YAAY;wBACZC,YAAY;wBACZC,QAAQ;wBACRC,WAAW;wBACXC,aAAa;oBACf;oBAEArI,QAAQC,GAAG,CAAC,wCAAwC;wBAClDuG,UAAUiC,gBAAgBjC,QAAQ;wBAClCJ,UAAUqC,gBAAgBrC,QAAQ;oBACpC;oBAEA,OAAOqC;gBACT;YACF;YAEA,OAAO;QACT;IACF;AACF;AAEA,uCAAuC;AACvC,MAAMG,sCAAwBC,IAAAA,WAAI,EAAC,SAASC,qBAAqB,EAAEC,QAAQ,EAAqB;IAC9F/I,QAAQC,GAAG,CAAC;IAEZ,MAAM,CAAC+I,cAAcC,gBAAgB,GAAGC,IAAAA,eAAQ,EAAkB;QAChE,OAAOpK,UAAUE,WAAW,GAAG4E,QAAQ;IACzC;IAEAuF,IAAAA,gBAAS,EAAC;QACR,MAAMC,YAAYtK,UAAUE,WAAW;QAEvC,oBAAoB;QACpB,MAAMqK,yBAAyB;YAC7B,IAAI;gBACF,MAAMD,UAAUvF,qBAAqB;gBACrC7D,QAAQC,GAAG,CAAC;YACd,EAAE,OAAOiB,OAAO;gBACdlB,QAAQkB,KAAK,CAAC,iCAAiCA;YACjD;QACF;QAEAmI;QAEA,WAAW;QACX,MAAMC,cAAcF,UAAU3F,SAAS,CAAC,CAACX;YACvC9C,QAAQC,GAAG,CAAC,mCAAmC;gBAC7CR,WAAWqD,SAASrD,SAAS;gBAC7BC,eAAeoD,SAASpD,aAAa;gBACrCF,iBAAiBsD,SAAStD,eAAe;gBACzC2D,YAAY,CAAC,CAACL,SAASzD,OAAO;gBAC9B6D,SAAS,CAAC,CAACJ,SAASxD,IAAI;gBACxBiK,gBAAgB,CAAC,CAACzG,SAASvD,WAAW;YACxC;YACA0J,gBAAgBnG;QAClB;QAEA,OAAOwG;IACT,GAAG,EAAE;IAEL,qBACE,qBAAC3K,YAAY6K,QAAQ;QAACzI,OAAOiI;kBAC1BD;;AAGP;AAGO,MAAMtK,eAAemK;AAErB,SAASlK;IACd,MAAM+K,UAAUC,IAAAA,iBAAU,EAAC/K;IAC3B,IAAI8K,YAAY5K,WAAW;QACzB,MAAM,IAAI8H,MAAM;IAClB;IACA,OAAO8C;AACT"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5b9bd499457ee8703c633e439504a5e2aefd329d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1rzpp6otys = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1rzpp6otys();
cov_1rzpp6otys().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1rzpp6otys().f[0]++;
  cov_1rzpp6otys().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1rzpp6otys().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1rzpp6otys().s[3]++;
_export(exports, {
  AuthProvider: function () {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[1]++;
    cov_1rzpp6otys().s[4]++;
    return AuthProvider;
  },
  useAuth: function () {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[2]++;
    cov_1rzpp6otys().s[5]++;
    return useAuth;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1rzpp6otys().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1rzpp6otys().s[7]++, _interop_require_wildcard(require("react")));
const _client =
/* istanbul ignore next */
(cov_1rzpp6otys().s[8]++, require("./client"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1rzpp6otys().f[3]++;
  cov_1rzpp6otys().s[9]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1rzpp6otys().b[0][0]++;
    cov_1rzpp6otys().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1rzpp6otys().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1rzpp6otys().s[11]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1rzpp6otys().s[12]++, new WeakMap());
  /* istanbul ignore next */
  cov_1rzpp6otys().s[13]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[4]++;
    cov_1rzpp6otys().s[14]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1rzpp6otys().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1rzpp6otys().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1rzpp6otys().f[5]++;
  cov_1rzpp6otys().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_1rzpp6otys().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1rzpp6otys().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1rzpp6otys().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1rzpp6otys().b[2][0]++;
    cov_1rzpp6otys().s[16]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1rzpp6otys().b[2][1]++;
  }
  cov_1rzpp6otys().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_1rzpp6otys().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1rzpp6otys().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1rzpp6otys().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1rzpp6otys().b[4][0]++;
    cov_1rzpp6otys().s[18]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1rzpp6otys().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1rzpp6otys().s[19]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1rzpp6otys().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_1rzpp6otys().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1rzpp6otys().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1rzpp6otys().b[6][0]++;
    cov_1rzpp6otys().s[21]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1rzpp6otys().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1rzpp6otys().s[22]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1rzpp6otys().s[23]++,
  /* istanbul ignore next */
  (cov_1rzpp6otys().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1rzpp6otys().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1rzpp6otys().s[24]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1rzpp6otys().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_1rzpp6otys().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1rzpp6otys().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1rzpp6otys().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[26]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1rzpp6otys().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1rzpp6otys().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1rzpp6otys().s[27]++;
      if (
      /* istanbul ignore next */
      (cov_1rzpp6otys().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1rzpp6otys().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1rzpp6otys().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1rzpp6otys().b[12][0]++;
        cov_1rzpp6otys().s[28]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1rzpp6otys().b[12][1]++;
        cov_1rzpp6otys().s[29]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1rzpp6otys().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1rzpp6otys().s[30]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1rzpp6otys().s[31]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1rzpp6otys().b[14][0]++;
    cov_1rzpp6otys().s[32]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1rzpp6otys().b[14][1]++;
  }
  cov_1rzpp6otys().s[33]++;
  return newObj;
}
const AuthContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_1rzpp6otys().s[34]++, (0, _react.createContext)(undefined));
// 전역 상태 관리를 위한 싱글톤 패턴
class AuthStore {
  static {
    /* istanbul ignore next */
    cov_1rzpp6otys().s[35]++;
    this.instance = null;
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[6]++;
    cov_1rzpp6otys().s[36]++;
    if (!AuthStore.instance) {
      /* istanbul ignore next */
      cov_1rzpp6otys().b[15][0]++;
      cov_1rzpp6otys().s[37]++;
      AuthStore.instance = new AuthStore();
    } else
    /* istanbul ignore next */
    {
      cov_1rzpp6otys().b[15][1]++;
    }
    cov_1rzpp6otys().s[38]++;
    return AuthStore.instance;
  }
  constructor() {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[7]++;
    cov_1rzpp6otys().s[39]++;
    this.supabaseClient = null;
    /* istanbul ignore next */
    cov_1rzpp6otys().s[40]++;
    this.listeners = new Set();
    /* istanbul ignore next */
    cov_1rzpp6otys().s[41]++;
    this.state = {
      session: null,
      user: null,
      userProfile: null,
      isAuthenticated: false,
      isLoading: true,
      isInitialized: false,
      signOut: this.signOut.bind(this),
      loadUserProfile: this.loadUserProfile.bind(this)
    };
    /* istanbul ignore next */
    cov_1rzpp6otys().s[42]++;
    this.initPromise = null;
    /* istanbul ignore next */
    cov_1rzpp6otys().s[43]++;
    if (typeof window !== 'undefined') {
      /* istanbul ignore next */
      cov_1rzpp6otys().b[16][0]++;
      cov_1rzpp6otys().s[44]++;
      try {
        /* istanbul ignore next */
        cov_1rzpp6otys().s[45]++;
        console.log('🔄 [AuthStore] 초기화 시작');
        // localStorage에서 Supabase Auth 토큰 체크 (동적 키 확인)
        /* istanbul ignore next */
        cov_1rzpp6otys().s[46]++;
        const checkStoredToken = () => {
          /* istanbul ignore next */
          cov_1rzpp6otys().f[8]++;
          cov_1rzpp6otys().s[47]++;
          try {
            // Supabase 프로젝트 URL에서 프로젝트 ID 추출
            const supabaseUrl =
            /* istanbul ignore next */
            (cov_1rzpp6otys().s[48]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
            /* istanbul ignore next */
            cov_1rzpp6otys().s[49]++;
            if (!supabaseUrl) {
              /* istanbul ignore next */
              cov_1rzpp6otys().b[17][0]++;
              cov_1rzpp6otys().s[50]++;
              return false;
            } else
            /* istanbul ignore next */
            {
              cov_1rzpp6otys().b[17][1]++;
            }
            const urlParts =
            /* istanbul ignore next */
            (cov_1rzpp6otys().s[51]++, supabaseUrl.split('.'));
            const projectId =
            /* istanbul ignore next */
            (cov_1rzpp6otys().s[52]++, urlParts[0]?.split('://')[1]);
            // 🍪 쿠키에서 토큰 확인하는 함수
            /* istanbul ignore next */
            cov_1rzpp6otys().s[53]++;
            const checkCookieToken = projectId => {
              /* istanbul ignore next */
              cov_1rzpp6otys().f[9]++;
              cov_1rzpp6otys().s[54]++;
              try {
                const cookies =
                /* istanbul ignore next */
                (cov_1rzpp6otys().s[55]++, document.cookie.split(';'));
                /* istanbul ignore next */
                cov_1rzpp6otys().s[56]++;
                for (let cookie of cookies) {
                  const [name, value] =
                  /* istanbul ignore next */
                  (cov_1rzpp6otys().s[57]++, cookie.trim().split('='));
                  /* istanbul ignore next */
                  cov_1rzpp6otys().s[58]++;
                  if (
                  /* istanbul ignore next */
                  (cov_1rzpp6otys().b[19][0]++, name) &&
                  /* istanbul ignore next */
                  (cov_1rzpp6otys().b[19][1]++, name.startsWith(`sb-${projectId}-auth-token`)) &&
                  /* istanbul ignore next */
                  (cov_1rzpp6otys().b[19][2]++, value)) {
                    /* istanbul ignore next */
                    cov_1rzpp6otys().b[18][0]++;
                    cov_1rzpp6otys().s[59]++;
                    console.log(`🍪 [AuthStore] 쿠키에 토큰 (${name}): 있음`);
                    /* istanbul ignore next */
                    cov_1rzpp6otys().s[60]++;
                    return true;
                  } else
                  /* istanbul ignore next */
                  {
                    cov_1rzpp6otys().b[18][1]++;
                  }
                }
                /* istanbul ignore next */
                cov_1rzpp6otys().s[61]++;
                return false;
              } catch (error) {
                /* istanbul ignore next */
                cov_1rzpp6otys().s[62]++;
                console.warn('⚠️ [AuthStore] 쿠키 토큰 체크 중 오류:', error);
                /* istanbul ignore next */
                cov_1rzpp6otys().s[63]++;
                return false;
              }
            };
            /* istanbul ignore next */
            cov_1rzpp6otys().s[64]++;
            if (projectId) {
              /* istanbul ignore next */
              cov_1rzpp6otys().b[20][0]++;
              const authKey =
              /* istanbul ignore next */
              (cov_1rzpp6otys().s[65]++, `sb-${projectId}-auth-token`);
              // 1단계: localStorage 확인
              const hasLocalStorageToken =
              /* istanbul ignore next */
              (cov_1rzpp6otys().s[66]++, localStorage.getItem(authKey));
              /* istanbul ignore next */
              cov_1rzpp6otys().s[67]++;
              console.log(`🔍 [AuthStore] localStorage에 토큰 (${authKey}):`, hasLocalStorageToken ?
              /* istanbul ignore next */
              (cov_1rzpp6otys().b[21][0]++, '있음') :
              /* istanbul ignore next */
              (cov_1rzpp6otys().b[21][1]++, '없음'));
              // 2단계: 쿠키 확인
              const hasCookieToken =
              /* istanbul ignore next */
              (cov_1rzpp6otys().s[68]++, checkCookieToken(projectId));
              const hasAnyToken =
              /* istanbul ignore next */
              (cov_1rzpp6otys().s[69]++,
              /* istanbul ignore next */
              (cov_1rzpp6otys().b[22][0]++, !!hasLocalStorageToken) ||
              /* istanbul ignore next */
              (cov_1rzpp6otys().b[22][1]++, hasCookieToken));
              /* istanbul ignore next */
              cov_1rzpp6otys().s[70]++;
              console.log(`🔍 [AuthStore] 토큰 총합:`, {
                localStorage: !!hasLocalStorageToken,
                cookie: hasCookieToken,
                hasAnyToken
              });
              /* istanbul ignore next */
              cov_1rzpp6otys().s[71]++;
              return hasAnyToken;
            } else
            /* istanbul ignore next */
            {
              cov_1rzpp6otys().b[20][1]++;
            }
            // 프로젝트 ID를 추출할 수 없는 경우 모든 Supabase 키 확인
            let hasLocalStorage =
            /* istanbul ignore next */
            (cov_1rzpp6otys().s[72]++, false);
            /* istanbul ignore next */
            cov_1rzpp6otys().s[73]++;
            for (let i =
            /* istanbul ignore next */
            (cov_1rzpp6otys().s[74]++, 0); i < localStorage.length; i++) {
              const key =
              /* istanbul ignore next */
              (cov_1rzpp6otys().s[75]++, localStorage.key(i));
              /* istanbul ignore next */
              cov_1rzpp6otys().s[76]++;
              if (
              /* istanbul ignore next */
              (cov_1rzpp6otys().b[24][0]++, key) &&
              /* istanbul ignore next */
              (cov_1rzpp6otys().b[24][1]++, key.startsWith('sb-')) &&
              /* istanbul ignore next */
              (cov_1rzpp6otys().b[24][2]++, key.endsWith('-auth-token'))) {
                /* istanbul ignore next */
                cov_1rzpp6otys().b[23][0]++;
                const hasToken =
                /* istanbul ignore next */
                (cov_1rzpp6otys().s[77]++, localStorage.getItem(key));
                /* istanbul ignore next */
                cov_1rzpp6otys().s[78]++;
                console.log(`🔍 [AuthStore] localStorage에 토큰 (${key}):`, hasToken ?
                /* istanbul ignore next */
                (cov_1rzpp6otys().b[25][0]++, '있음') :
                /* istanbul ignore next */
                (cov_1rzpp6otys().b[25][1]++, '없음'));
                /* istanbul ignore next */
                cov_1rzpp6otys().s[79]++;
                if (hasToken) {
                  /* istanbul ignore next */
                  cov_1rzpp6otys().b[26][0]++;
                  cov_1rzpp6otys().s[80]++;
                  hasLocalStorage = true;
                } else
                /* istanbul ignore next */
                {
                  cov_1rzpp6otys().b[26][1]++;
                }
              } else
              /* istanbul ignore next */
              {
                cov_1rzpp6otys().b[23][1]++;
              }
            }
            // 일반적인 쿠키 패턴 확인
            let hasCookie =
            /* istanbul ignore next */
            (cov_1rzpp6otys().s[81]++, false);
            /* istanbul ignore next */
            cov_1rzpp6otys().s[82]++;
            try {
              const cookies =
              /* istanbul ignore next */
              (cov_1rzpp6otys().s[83]++, document.cookie.split(';'));
              /* istanbul ignore next */
              cov_1rzpp6otys().s[84]++;
              for (let cookie of cookies) {
                const [name, value] =
                /* istanbul ignore next */
                (cov_1rzpp6otys().s[85]++, cookie.trim().split('='));
                /* istanbul ignore next */
                cov_1rzpp6otys().s[86]++;
                if (
                /* istanbul ignore next */
                (cov_1rzpp6otys().b[28][0]++, name) &&
                /* istanbul ignore next */
                (cov_1rzpp6otys().b[28][1]++, name.startsWith('sb-')) &&
                /* istanbul ignore next */
                (cov_1rzpp6otys().b[28][2]++, name.includes('auth-token')) &&
                /* istanbul ignore next */
                (cov_1rzpp6otys().b[28][3]++, value)) {
                  /* istanbul ignore next */
                  cov_1rzpp6otys().b[27][0]++;
                  cov_1rzpp6otys().s[87]++;
                  console.log(`🍪 [AuthStore] 쿠키에 토큰 (${name}): 있음`);
                  /* istanbul ignore next */
                  cov_1rzpp6otys().s[88]++;
                  hasCookie = true;
                  /* istanbul ignore next */
                  cov_1rzpp6otys().s[89]++;
                  break;
                } else
                /* istanbul ignore next */
                {
                  cov_1rzpp6otys().b[27][1]++;
                }
              }
            } catch (error) {
              /* istanbul ignore next */
              cov_1rzpp6otys().s[90]++;
              console.warn('⚠️ [AuthStore] 일반 쿠키 확인 중 오류:', error);
            }
            const hasAnyToken =
            /* istanbul ignore next */
            (cov_1rzpp6otys().s[91]++,
            /* istanbul ignore next */
            (cov_1rzpp6otys().b[29][0]++, hasLocalStorage) ||
            /* istanbul ignore next */
            (cov_1rzpp6otys().b[29][1]++, hasCookie));
            /* istanbul ignore next */
            cov_1rzpp6otys().s[92]++;
            console.log(`🔍 [AuthStore] 전체 토큰 상태:`, {
              localStorage: hasLocalStorage,
              cookie: hasCookie,
              hasAnyToken
            });
            /* istanbul ignore next */
            cov_1rzpp6otys().s[93]++;
            return hasAnyToken;
          } catch (error) {
            /* istanbul ignore next */
            cov_1rzpp6otys().s[94]++;
            console.warn('⚠️ [AuthStore] 토큰 체크 중 오류:', error);
            /* istanbul ignore next */
            cov_1rzpp6otys().s[95]++;
            return false;
          }
        };
        const hasStoredToken =
        /* istanbul ignore next */
        (cov_1rzpp6otys().s[96]++, checkStoredToken());
        const isLoginPage =
        /* istanbul ignore next */
        (cov_1rzpp6otys().s[97]++, window.location.pathname.includes('/login'));
        const isCallbackPage =
        /* istanbul ignore next */
        (cov_1rzpp6otys().s[98]++, window.location.pathname.includes('/callback'));
        /* istanbul ignore next */
        cov_1rzpp6otys().s[99]++;
        console.log('🔍 [AuthStore] 초기화 컨텍스트:', {
          hasStoredToken,
          isLoginPage,
          isCallbackPage,
          pathname: window.location.pathname
        });
        // 환경 변수 확인 및 안전한 클라이언트 생성
        /* istanbul ignore next */
        cov_1rzpp6otys().s[100]++;
        if (
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[31][0]++, !process.env.NEXT_PUBLIC_SUPABASE_URL) ||
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[31][1]++, !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY)) {
          /* istanbul ignore next */
          cov_1rzpp6otys().b[30][0]++;
          cov_1rzpp6otys().s[101]++;
          console.error('❌ [AuthStore] Supabase 환경 변수가 설정되지 않았습니다.', {
            hasUrl: !!process.env.NEXT_PUBLIC_SUPABASE_URL,
            hasKey: !!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
          });
          // 환경 변수가 없어도 기본 상태로 초기화
          /* istanbul ignore next */
          cov_1rzpp6otys().s[102]++;
          this.updateState({
            session: null,
            user: null,
            userProfile: null,
            isAuthenticated: false,
            isLoading: false,
            isInitialized: true,
            signOut: this.signOut.bind(this),
            loadUserProfile: this.loadUserProfile.bind(this)
          });
          /* istanbul ignore next */
          cov_1rzpp6otys().s[103]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1rzpp6otys().b[30][1]++;
        }
        // 🚀 순수 getUser() 기반 빠른 인증: getSession 완전히 우회
        cov_1rzpp6otys().s[104]++;
        if (hasStoredToken) {
          /* istanbul ignore next */
          cov_1rzpp6otys().b[32][0]++;
          cov_1rzpp6otys().s[105]++;
          console.log('🚀 [AuthStore] 쿠키 토큰 존재 → 순수 getUser() 기반 빠른 인증 처리');
          /* istanbul ignore next */
          cov_1rzpp6otys().s[106]++;
          this.supabaseClient = (0, _client.createBrowserSupabaseClient)();
          // getUser()로 직접 사용자 정보 확인 (매우 빠르고 안정적)
          /* istanbul ignore next */
          cov_1rzpp6otys().s[107]++;
          this.performInstantUserAuth();
          /* istanbul ignore next */
          cov_1rzpp6otys().s[108]++;
          return; // getSession 완전히 우회
        } else
        /* istanbul ignore next */
        {
          cov_1rzpp6otys().b[32][1]++;
        }
        // 🚀 로그인 페이지 성능 최적화: 토큰이 없으면 즉시 로그아웃 상태 처리
        cov_1rzpp6otys().s[109]++;
        if (
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[34][0]++, !hasStoredToken) &&
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[34][1]++, isLoginPage)) {
          /* istanbul ignore next */
          cov_1rzpp6otys().b[33][0]++;
          cov_1rzpp6otys().s[110]++;
          console.log('⚡ [AuthStore] 로그인 페이지에서 토큰 없음 → 즉시 로그아웃 상태 처리 (getSession 건너뛰기)');
          /* istanbul ignore next */
          cov_1rzpp6otys().s[111]++;
          this.updateState({
            session: null,
            user: null,
            userProfile: null,
            isAuthenticated: false,
            isLoading: false,
            isInitialized: true,
            signOut: this.signOut.bind(this),
            loadUserProfile: this.loadUserProfile.bind(this)
          });
          /* istanbul ignore next */
          cov_1rzpp6otys().s[112]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1rzpp6otys().b[33][1]++;
        }
        // 저장된 토큰이 없고 일반 페이지에서도 빠른 초기화
        cov_1rzpp6otys().s[113]++;
        if (
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[36][0]++, !hasStoredToken) &&
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[36][1]++, !isCallbackPage)) {
          /* istanbul ignore next */
          cov_1rzpp6otys().b[35][0]++;
          cov_1rzpp6otys().s[114]++;
          console.log('⚡ [AuthStore] 저장된 토큰 없음 → 빠른 로그아웃 상태 처리');
          /* istanbul ignore next */
          cov_1rzpp6otys().s[115]++;
          this.updateState({
            session: null,
            user: null,
            userProfile: null,
            isAuthenticated: false,
            isLoading: false,
            isInitialized: true,
            signOut: this.signOut.bind(this),
            loadUserProfile: this.loadUserProfile.bind(this)
          });
          /* istanbul ignore next */
          cov_1rzpp6otys().s[116]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1rzpp6otys().b[35][1]++;
        }
        cov_1rzpp6otys().s[117]++;
        this.supabaseClient = (0, _client.createBrowserSupabaseClient)();
        /* istanbul ignore next */
        cov_1rzpp6otys().s[118]++;
        this.initPromise = this.initialize();
      } catch (error) {
        /* istanbul ignore next */
        cov_1rzpp6otys().s[119]++;
        console.error('❌ [AuthStore] Supabase 클라이언트 생성 실패:', error);
        // 클라이언트 생성 실패 시에도 기본 상태로 초기화
        /* istanbul ignore next */
        cov_1rzpp6otys().s[120]++;
        this.updateState({
          session: null,
          user: null,
          userProfile: null,
          isAuthenticated: false,
          isLoading: false,
          isInitialized: true,
          signOut: this.signOut.bind(this),
          loadUserProfile: this.loadUserProfile.bind(this)
        });
      }
    } else {
      /* istanbul ignore next */
      cov_1rzpp6otys().b[16][1]++;
      cov_1rzpp6otys().s[121]++;
      // SSR 환경에서는 기본 상태로 초기화
      console.log('🌐 [AuthStore] SSR 환경에서 기본 초기화');
      /* istanbul ignore next */
      cov_1rzpp6otys().s[122]++;
      this.updateState({
        session: null,
        user: null,
        userProfile: null,
        isAuthenticated: false,
        isLoading: false,
        isInitialized: true,
        signOut: this.signOut.bind(this),
        loadUserProfile: this.loadUserProfile.bind(this)
      });
    }
  }
  async initialize() {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[10]++;
    cov_1rzpp6otys().s[123]++;
    if (!this.supabaseClient) {
      /* istanbul ignore next */
      cov_1rzpp6otys().b[37][0]++;
      cov_1rzpp6otys().s[124]++;
      console.warn('⚠️ [AuthStore] Supabase 클라이언트가 없어 초기화를 건너뜁니다.');
      /* istanbul ignore next */
      cov_1rzpp6otys().s[125]++;
      this.updateState({
        ...this.state,
        isLoading: false,
        isInitialized: true
      });
      /* istanbul ignore next */
      cov_1rzpp6otys().s[126]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1rzpp6otys().b[37][1]++;
    }
    // 이미 초기화된 경우 재초기화 방지
    cov_1rzpp6otys().s[127]++;
    if (this.state.isInitialized) {
      /* istanbul ignore next */
      cov_1rzpp6otys().b[38][0]++;
      cov_1rzpp6otys().s[128]++;
      console.log('✅ [AuthStore] 이미 초기화됨 - 재초기화 건너뜀');
      /* istanbul ignore next */
      cov_1rzpp6otys().s[129]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1rzpp6otys().b[38][1]++;
    }
    cov_1rzpp6otys().s[130]++;
    try {
      /* istanbul ignore next */
      cov_1rzpp6otys().s[131]++;
      console.log('🚀 [AuthStore] 완전 쿠키 기반 초기화 시작 (네트워크 요청 0개)');
      // 🎯 완전히 쿠키 기반: JWT 파싱만 사용, getUser() 및 getSession() 완전 제거
      /* istanbul ignore next */
      cov_1rzpp6otys().s[132]++;
      await this.performInstantUserAuth();
      /* istanbul ignore next */
      cov_1rzpp6otys().s[133]++;
      console.log('✅ [AuthStore] 쿠키 기반 초기화 완료 (네트워크 요청 없음)');
    } catch (error) {
      /* istanbul ignore next */
      cov_1rzpp6otys().s[134]++;
      console.error('❌ [AuthStore] 초기화 에러:', error);
      /* istanbul ignore next */
      cov_1rzpp6otys().s[135]++;
      this.updateState({
        ...this.state,
        isLoading: false,
        isInitialized: true
      });
    }
  }
  // updateAuthState 메소드 제거됨 - 완전히 쿠키 기반으로 변경
  // 모든 인증 상태는 JWT 파싱으로만 처리하며 네트워크 요청 없음
  updateState(newState) {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[11]++;
    const prevState =
    /* istanbul ignore next */
    (cov_1rzpp6otys().s[136]++, this.state);
    /* istanbul ignore next */
    cov_1rzpp6otys().s[137]++;
    this.state = newState;
    // 디버깅: 상태 변경 로그
    /* istanbul ignore next */
    cov_1rzpp6otys().s[138]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_1rzpp6otys().b[39][0]++;
      cov_1rzpp6otys().s[139]++;
      console.log('🔄 [AuthStore] 상태 변경:', {
        변경전: {
          isAuthenticated: prevState.isAuthenticated,
          isLoading: prevState.isLoading,
          isInitialized: prevState.isInitialized,
          hasUser: !!prevState.user,
          hasSession: !!prevState.session
        },
        변경후: {
          isAuthenticated: newState.isAuthenticated,
          isLoading: newState.isLoading,
          isInitialized: newState.isInitialized,
          hasUser: !!newState.user,
          hasSession: !!newState.session
        },
        listeners개수: this.listeners.size
      });
    } else
    /* istanbul ignore next */
    {
      cov_1rzpp6otys().b[39][1]++;
    }
    cov_1rzpp6otys().s[140]++;
    this.listeners.forEach(listener => {
      /* istanbul ignore next */
      cov_1rzpp6otys().f[12]++;
      cov_1rzpp6otys().s[141]++;
      return listener(newState);
    });
  }
  subscribe(listener) {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[13]++;
    cov_1rzpp6otys().s[142]++;
    this.listeners.add(listener);
    // 구독 즉시 현재 상태 전달
    /* istanbul ignore next */
    cov_1rzpp6otys().s[143]++;
    listener(this.state);
    /* istanbul ignore next */
    cov_1rzpp6otys().s[144]++;
    return () => {
      /* istanbul ignore next */
      cov_1rzpp6otys().f[14]++;
      cov_1rzpp6otys().s[145]++;
      this.listeners.delete(listener);
    };
  }
  getState() {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[15]++;
    cov_1rzpp6otys().s[146]++;
    return this.state;
  }
  async waitForInitialization() {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[16]++;
    cov_1rzpp6otys().s[147]++;
    if (this.initPromise) {
      /* istanbul ignore next */
      cov_1rzpp6otys().b[40][0]++;
      cov_1rzpp6otys().s[148]++;
      await this.initPromise;
    } else
    /* istanbul ignore next */
    {
      cov_1rzpp6otys().b[40][1]++;
    }
  }
  async signOut() {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[17]++;
    cov_1rzpp6otys().s[149]++;
    if (!this.supabaseClient) {
      /* istanbul ignore next */
      cov_1rzpp6otys().b[41][0]++;
      cov_1rzpp6otys().s[150]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1rzpp6otys().b[41][1]++;
    }
    cov_1rzpp6otys().s[151]++;
    try {
      /* istanbul ignore next */
      cov_1rzpp6otys().s[152]++;
      console.log('🔄 [AuthStore] 로그아웃 시작');
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[153]++, await this.supabaseClient.auth.signOut());
      /* istanbul ignore next */
      cov_1rzpp6otys().s[154]++;
      if (error) {
        /* istanbul ignore next */
        cov_1rzpp6otys().b[42][0]++;
        cov_1rzpp6otys().s[155]++;
        console.error('❌ [AuthStore] 로그아웃 에러:', error);
      } else {
        /* istanbul ignore next */
        cov_1rzpp6otys().b[42][1]++;
        cov_1rzpp6otys().s[156]++;
        console.log('✅ [AuthStore] 로그아웃 완료');
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1rzpp6otys().s[157]++;
      console.error('❌ [AuthStore] 로그아웃 예외:', error);
    }
  }
  async performInstantUserAuth() {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[18]++;
    cov_1rzpp6otys().s[158]++;
    try {
      /* istanbul ignore next */
      cov_1rzpp6otys().s[159]++;
      console.log('🚀 [AuthStore] performInstantUserAuth 시작 (네트워크 요청 없음)');
      const startTime =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[160]++, performance.now());
      // 🎯 쿠키에서 즉시 JWT 파싱 (네트워크 요청 없음!)
      const {
        getInstantUserFromCookies,
        getTokenExpiry,
        isTokenExpiringSoon
      } =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[161]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_1rzpp6otys().f[19]++;
        cov_1rzpp6otys().s[162]++;
        return /*#__PURE__*/_interop_require_wildcard(require("../../utils/jwt-parser"));
      }));
      const user =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[163]++, getInstantUserFromCookies());
      const tokenExpiry =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[164]++, getTokenExpiry());
      const expiringSoon =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[165]++, isTokenExpiringSoon());
      const endTime =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[166]++, performance.now());
      /* istanbul ignore next */
      cov_1rzpp6otys().s[167]++;
      console.log('✅ [AuthStore] JWT 파싱 완료:', {
        duration: `${(endTime - startTime).toFixed(2)}ms`,
        hasUser: !!user,
        userEmail: user?.email,
        userId: user?.id?.substring(0, 8) + '...',
        tokenExpiry: tokenExpiry?.toISOString(),
        expiringSoon
      });
      /* istanbul ignore next */
      cov_1rzpp6otys().s[168]++;
      if (!user) {
        /* istanbul ignore next */
        cov_1rzpp6otys().b[43][0]++;
        cov_1rzpp6otys().s[169]++;
        console.warn('⚠️ [AuthStore] 쿠키에서 유효한 사용자 정보 없음');
        // 토큰이 없거나 만료됨
        /* istanbul ignore next */
        cov_1rzpp6otys().s[170]++;
        this.updateState({
          session: null,
          user: null,
          userProfile: null,
          isAuthenticated: false,
          isLoading: false,
          isInitialized: true,
          signOut: this.signOut.bind(this),
          loadUserProfile: this.loadUserProfile.bind(this)
        });
        /* istanbul ignore next */
        cov_1rzpp6otys().s[171]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1rzpp6otys().b[43][1]++;
      }
      // 사용자가 있으면 즉시 인증된 상태로 설정
      cov_1rzpp6otys().s[172]++;
      console.log('✅ [AuthStore] JWT에서 사용자 확인 성공:', {
        userId: user.id?.substring(0, 8) + '...',
        email: user.email,
        provider: user.app_metadata?.provider,
        createdAt: user.created_at
      });
      // 세션 객체 생성 (JWT 기반)
      const instantSession =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[173]++, {
        user: user,
        access_token: 'token-from-jwt',
        refresh_token: null,
        expires_at: tokenExpiry ?
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[44][0]++, Math.floor(tokenExpiry.getTime() / 1000)) :
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[44][1]++, null),
        token_type: 'bearer'
      });
      /* istanbul ignore next */
      cov_1rzpp6otys().s[174]++;
      console.log('🔄 [AuthStore] 인증 상태 업데이트 중...');
      /* istanbul ignore next */
      cov_1rzpp6otys().s[175]++;
      this.updateState({
        user: user,
        session: instantSession,
        userProfile: null,
        isLoading: false,
        isInitialized: true,
        isAuthenticated: true,
        signOut: this.signOut.bind(this),
        loadUserProfile: this.loadUserProfile.bind(this)
      });
      /* istanbul ignore next */
      cov_1rzpp6otys().s[176]++;
      console.log('🎉 [AuthStore] 인증 상태 업데이트 완료 - 로딩 해제됨 (JWT 방식)');
      // 🔧 개발 환경에서 userProfile 로딩 시간 추적
      /* istanbul ignore next */
      cov_1rzpp6otys().s[177]++;
      if (process.env.NODE_ENV === 'development') {
        /* istanbul ignore next */
        cov_1rzpp6otys().b[45][0]++;
        cov_1rzpp6otys().s[178]++;
        window.authStartTime = Date.now();
      } else
      /* istanbul ignore next */
      {
        cov_1rzpp6otys().b[45][1]++;
      }
      // 프로필 캐싱 로직: 프로필이 없거나 사용자가 변경된 경우에만 로드
      const shouldLoadProfile =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[179]++,
      /* istanbul ignore next */
      (cov_1rzpp6otys().b[46][0]++, !this.state.userProfile) ||
      /* istanbul ignore next */
      (cov_1rzpp6otys().b[46][1]++, this.state.userProfile?.id !== user.id));
      /* istanbul ignore next */
      cov_1rzpp6otys().s[180]++;
      if (shouldLoadProfile) {
        /* istanbul ignore next */
        cov_1rzpp6otys().b[47][0]++;
        cov_1rzpp6otys().s[181]++;
        console.log('🔄 [AuthStore] 사용자 프로필 로드 시작:', {
          userId: user.id?.substring(0, 8) + '...',
          hasUserId: !!user.id,
          userEmail: user.email,
          reason: !this.state.userProfile ?
          /* istanbul ignore next */
          (cov_1rzpp6otys().b[48][0]++, 'profile_not_cached') :
          /* istanbul ignore next */
          (cov_1rzpp6otys().b[48][1]++, 'user_changed'),
          previousUserId:
          /* istanbul ignore next */
          (cov_1rzpp6otys().b[49][0]++, this.state.userProfile?.id?.substring(0, 8) + '...') ||
          /* istanbul ignore next */
          (cov_1rzpp6otys().b[49][1]++, 'none')
        });
        /* istanbul ignore next */
        cov_1rzpp6otys().s[182]++;
        this.loadUserProfile(user.id).then(profile => {
          /* istanbul ignore next */
          cov_1rzpp6otys().f[20]++;
          cov_1rzpp6otys().s[183]++;
          if (profile) {
            /* istanbul ignore next */
            cov_1rzpp6otys().b[50][0]++;
            cov_1rzpp6otys().s[184]++;
            console.log('✅ [AuthStore] 사용자 프로필 로드 성공:', {
              is_admin: profile.is_admin,
              is_super_admin: profile.is_super_admin
            });
            /* istanbul ignore next */
            cov_1rzpp6otys().s[185]++;
            this.updateState({
              ...this.state,
              userProfile: profile
            });
          } else {
            /* istanbul ignore next */
            cov_1rzpp6otys().b[50][1]++;
            cov_1rzpp6otys().s[186]++;
            console.warn('⚠️ [AuthStore] 사용자 프로필 로드 결과가 null임');
          }
        }).catch(error => {
          /* istanbul ignore next */
          cov_1rzpp6otys().f[21]++;
          cov_1rzpp6otys().s[187]++;
          console.warn('⚠️ [AuthStore] 사용자 프로필 로드 실패:', error);
        });
      } else {
        /* istanbul ignore next */
        cov_1rzpp6otys().b[47][1]++;
        cov_1rzpp6otys().s[188]++;
        console.log('✅ [AuthStore] 동일 사용자 프로필이 이미 캐시됨 - 재로딩 건너뜀:', {
          userId: user.id?.substring(0, 8) + '...',
          cachedProfile: {
            nickname: this.state.userProfile?.nickname,
            is_admin: this.state.userProfile?.is_admin
          }
        });
      }
      // 토큰 만료 경고 (쿠키 기반)
      /* istanbul ignore next */
      cov_1rzpp6otys().s[189]++;
      if (expiringSoon) {
        /* istanbul ignore next */
        cov_1rzpp6otys().b[51][0]++;
        cov_1rzpp6otys().s[190]++;
        console.warn('⚠️ [AuthStore] 토큰이 곧 만료됨 (30분 이내) - 재로그인 필요할 수 있음');
        // 백그라운드 네트워크 요청 없이 경고만 표시
      } else
      /* istanbul ignore next */
      {
        cov_1rzpp6otys().b[51][1]++;
      }
      // 인증 상태 변경 리스너 등록 (쿠키 기반 모드)
      cov_1rzpp6otys().s[191]++;
      this.supabaseClient.auth.onAuthStateChange(async (event, session) => {
        /* istanbul ignore next */
        cov_1rzpp6otys().f[22]++;
        cov_1rzpp6otys().s[192]++;
        // 로그아웃 이벤트만 처리 (다른 이벤트는 쿠키 기반으로 이미 처리됨)
        if (
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[53][0]++, event === 'SIGNED_OUT') ||
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[53][1]++, !session)) {
          /* istanbul ignore next */
          cov_1rzpp6otys().b[52][0]++;
          cov_1rzpp6otys().s[193]++;
          console.log('🚪 [AuthStore] 로그아웃 이벤트 - 상태 정리');
          /* istanbul ignore next */
          cov_1rzpp6otys().s[194]++;
          this.updateState({
            session: null,
            user: null,
            userProfile: null,
            isAuthenticated: false,
            isLoading: false,
            isInitialized: true,
            signOut: this.signOut.bind(this),
            loadUserProfile: this.loadUserProfile.bind(this)
          });
        } else
        /* istanbul ignore next */
        {
          cov_1rzpp6otys().b[52][1]++;
        }
        // 다른 이벤트(SIGNED_IN, TOKEN_REFRESHED 등)는 조용히 무시
        // 쿠키 기반으로 이미 처리되므로 추가 로그 없이 무시
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1rzpp6otys().s[195]++;
      console.error('❌ [AuthStore] performInstantUserAuth 예외:', {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[54][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[54][1]++, String(error)),
        stack: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[55][0]++, error.stack?.substring(0, 200)) :
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[55][1]++, undefined)
      });
      // 오류 발생시 비인증 상태로 설정
      /* istanbul ignore next */
      cov_1rzpp6otys().s[196]++;
      this.updateState({
        session: null,
        user: null,
        userProfile: null,
        isAuthenticated: false,
        isLoading: false,
        isInitialized: true,
        signOut: this.signOut.bind(this),
        loadUserProfile: this.loadUserProfile.bind(this)
      });
      /* istanbul ignore next */
      cov_1rzpp6otys().s[197]++;
      console.log('🔄 [AuthStore] 오류로 인한 비인증 상태 설정 완료');
    }
  }
  async checkTokenStatusFromCookies() {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[23]++;
    cov_1rzpp6otys().s[198]++;
    try {
      /* istanbul ignore next */
      cov_1rzpp6otys().s[199]++;
      console.log('🔄 [AuthStore] 쿠키 기반 토큰 상태 체크');
      // 완전히 쿠키 기반 - 네트워크 요청 없음
      const {
        getInstantUserFromCookies,
        getTokenExpiry
      } =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[200]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_1rzpp6otys().f[24]++;
        cov_1rzpp6otys().s[201]++;
        return /*#__PURE__*/_interop_require_wildcard(require("../../utils/jwt-parser"));
      }));
      const user =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[202]++, getInstantUserFromCookies());
      const tokenExpiry =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[203]++, getTokenExpiry());
      /* istanbul ignore next */
      cov_1rzpp6otys().s[204]++;
      if (!user) {
        /* istanbul ignore next */
        cov_1rzpp6otys().b[56][0]++;
        cov_1rzpp6otys().s[205]++;
        console.warn('⚠️ [AuthStore] 쿠키에서 유효한 사용자 정보 없음 - 로그아웃 처리');
        /* istanbul ignore next */
        cov_1rzpp6otys().s[206]++;
        this.updateState({
          ...this.state,
          session: null,
          user: null,
          userProfile: null,
          isAuthenticated: false
        });
        /* istanbul ignore next */
        cov_1rzpp6otys().s[207]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1rzpp6otys().b[56][1]++;
      }
      // 토큰 만료 체크 (클라이언트 사이드)
      cov_1rzpp6otys().s[208]++;
      if (
      /* istanbul ignore next */
      (cov_1rzpp6otys().b[58][0]++, tokenExpiry) &&
      /* istanbul ignore next */
      (cov_1rzpp6otys().b[58][1]++, tokenExpiry <= new Date())) {
        /* istanbul ignore next */
        cov_1rzpp6otys().b[57][0]++;
        cov_1rzpp6otys().s[209]++;
        console.warn('⚠️ [AuthStore] JWT 토큰이 만료됨 - 로그아웃 처리');
        /* istanbul ignore next */
        cov_1rzpp6otys().s[210]++;
        this.updateState({
          ...this.state,
          session: null,
          user: null,
          userProfile: null,
          isAuthenticated: false
        });
        /* istanbul ignore next */
        cov_1rzpp6otys().s[211]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1rzpp6otys().b[57][1]++;
      }
      cov_1rzpp6otys().s[212]++;
      console.log('✅ [AuthStore] 쿠키 기반 토큰 상태 체크 완료 - 유효함');
    } catch (error) {
      /* istanbul ignore next */
      cov_1rzpp6otys().s[213]++;
      console.warn('⚠️ [AuthStore] 쿠키 기반 토큰 체크 중 오류:', error);
    }
  }
  async loadUserProfile(userId) {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[25]++;
    cov_1rzpp6otys().s[214]++;
    try {
      /* istanbul ignore next */
      cov_1rzpp6otys().s[215]++;
      console.log('🔍 [AuthStore] API를 통한 프로필 조회 시작:', {
        userId: userId.substring(0, 8) + '...'
      });
      // 🚀 서버 API를 통해 프로필 조회 (RLS 정책 우회)
      const response =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[216]++, await fetch('/api/user/profile', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        },
        credentials: 'include'
      }));
      /* istanbul ignore next */
      cov_1rzpp6otys().s[217]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1rzpp6otys().b[59][0]++;
        const errorData =
        /* istanbul ignore next */
        (cov_1rzpp6otys().s[218]++, await response.json());
        /* istanbul ignore next */
        cov_1rzpp6otys().s[219]++;
        console.warn('⚠️ [AuthStore] API 프로필 조회 실패:', {
          status: response.status,
          statusText: response.statusText,
          error: errorData
        });
        // 404나 403 에러인 경우 null 반환 (프로필 없음)
        /* istanbul ignore next */
        cov_1rzpp6otys().s[220]++;
        if (
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[61][0]++, response.status === 404) ||
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[61][1]++, response.status === 403)) {
          /* istanbul ignore next */
          cov_1rzpp6otys().b[60][0]++;
          cov_1rzpp6otys().s[221]++;
          return null;
        } else
        /* istanbul ignore next */
        {
          cov_1rzpp6otys().b[60][1]++;
        }
        cov_1rzpp6otys().s[222]++;
        throw new Error(`API 응답 실패: ${response.status} ${response.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_1rzpp6otys().b[59][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[223]++, await response.json());
      /* istanbul ignore next */
      cov_1rzpp6otys().s[224]++;
      if (
      /* istanbul ignore next */
      (cov_1rzpp6otys().b[63][0]++, !data.success) ||
      /* istanbul ignore next */
      (cov_1rzpp6otys().b[63][1]++, !data.user)) {
        /* istanbul ignore next */
        cov_1rzpp6otys().b[62][0]++;
        cov_1rzpp6otys().s[225]++;
        console.warn('⚠️ [AuthStore] API 응답에서 사용자 정보 없음:', data);
        /* istanbul ignore next */
        cov_1rzpp6otys().s[226]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_1rzpp6otys().b[62][1]++;
      }
      // API 응답을 UserProfiles 형식으로 변환
      const userProfile =
      /* istanbul ignore next */
      (cov_1rzpp6otys().s[227]++, {
        id: data.user.id,
        email: data.user.email,
        nickname: data.user.name,
        avatar_url: data.user.avatar_url,
        star_candy:
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[64][0]++, data.user.star_candy) ||
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[64][1]++, 0),
        star_candy_bonus:
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[65][0]++, data.user.star_candy_bonus) ||
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[65][1]++, 0),
        is_admin:
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[66][0]++, data.user.is_admin) ||
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[66][1]++, false),
        is_super_admin:
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[67][0]++, data.user.is_super_admin) ||
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[67][1]++, false),
        created_at: data.user.created_at,
        updated_at: data.user.updated_at,
        // 기본값 설정
        birth_date: null,
        birth_time: null,
        deleted_at: null,
        gender: null,
        open_ages: false,
        open_gender: false
      });
      /* istanbul ignore next */
      cov_1rzpp6otys().s[228]++;
      console.log('✅ [AuthStore] API를 통한 프로필 조회 성공:', {
        id: userProfile.id?.substring(0, 8) + '...',
        nickname: userProfile.nickname,
        email: userProfile.email,
        hasAvatar: !!userProfile.avatar_url,
        is_admin: userProfile.is_admin,
        is_super_admin: userProfile.is_super_admin,
        star_candy: userProfile.star_candy
      });
      /* istanbul ignore next */
      cov_1rzpp6otys().s[229]++;
      return userProfile;
    } catch (error) {
      /* istanbul ignore next */
      cov_1rzpp6otys().s[230]++;
      console.error('❌ [AuthStore] API 프로필 조회 예외:', error);
      // API 호출 실패시 fallback으로 기본 프로필 반환 (개발 환경)
      /* istanbul ignore next */
      cov_1rzpp6otys().s[231]++;
      if (process.env.NODE_ENV === 'development') {
        /* istanbul ignore next */
        cov_1rzpp6otys().b[68][0]++;
        cov_1rzpp6otys().s[232]++;
        console.log('🔧 [AuthStore] 개발환경 - 기본 프로필 fallback');
        // 현재 사용자 정보 가져오기
        const {
          data: {
            user: currentUser
          }
        } =
        /* istanbul ignore next */
        (cov_1rzpp6otys().s[233]++,
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[69][0]++, await this.supabaseClient?.auth.getUser()) ||
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[69][1]++, {
          data: {
            user: null
          }
        }));
        /* istanbul ignore next */
        cov_1rzpp6otys().s[234]++;
        if (
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[71][0]++, currentUser) &&
        /* istanbul ignore next */
        (cov_1rzpp6otys().b[71][1]++, currentUser.id === userId)) {
          /* istanbul ignore next */
          cov_1rzpp6otys().b[70][0]++;
          const fallbackProfile =
          /* istanbul ignore next */
          (cov_1rzpp6otys().s[235]++, {
            id: userId,
            email:
            /* istanbul ignore next */
            (cov_1rzpp6otys().b[72][0]++, currentUser.email) ||
            /* istanbul ignore next */
            (cov_1rzpp6otys().b[72][1]++, null),
            nickname:
            /* istanbul ignore next */
            (cov_1rzpp6otys().b[73][0]++, currentUser.user_metadata?.name) ||
            /* istanbul ignore next */
            (cov_1rzpp6otys().b[73][1]++, currentUser.user_metadata?.full_name) ||
            /* istanbul ignore next */
            (cov_1rzpp6otys().b[73][2]++, currentUser.email?.split('@')[0]) ||
            /* istanbul ignore next */
            (cov_1rzpp6otys().b[73][3]++, 'User'),
            avatar_url: null,
            is_admin: true,
            is_super_admin: false,
            star_candy: 0,
            star_candy_bonus: 0,
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString(),
            birth_date: null,
            birth_time: null,
            deleted_at: null,
            gender: null,
            open_ages: false,
            open_gender: false
          });
          /* istanbul ignore next */
          cov_1rzpp6otys().s[236]++;
          console.log('🐛 [AuthStore] 개발환경 fallback 프로필 생성:', {
            nickname: fallbackProfile.nickname,
            is_admin: fallbackProfile.is_admin
          });
          /* istanbul ignore next */
          cov_1rzpp6otys().s[237]++;
          return fallbackProfile;
        } else
        /* istanbul ignore next */
        {
          cov_1rzpp6otys().b[70][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1rzpp6otys().b[68][1]++;
      }
      cov_1rzpp6otys().s[238]++;
      return null;
    }
  }
}
// AuthProvider 컴포넌트를 memo로 감싸서 완전히 안정화
const AuthProviderComponent =
/* istanbul ignore next */
(/*#__PURE__*/cov_1rzpp6otys().s[239]++, (0, _react.memo)(function AuthProviderInternal({
  children
}) {
  /* istanbul ignore next */
  cov_1rzpp6otys().f[26]++;
  cov_1rzpp6otys().s[240]++;
  console.log('🏗️ [AuthProvider] 컴포넌트 생성/재렌더링');
  const [contextValue, setContextValue] =
  /* istanbul ignore next */
  (cov_1rzpp6otys().s[241]++, (0, _react.useState)(() => {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[27]++;
    cov_1rzpp6otys().s[242]++;
    return AuthStore.getInstance().getState();
  }));
  /* istanbul ignore next */
  cov_1rzpp6otys().s[243]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1rzpp6otys().f[28]++;
    const authStore =
    /* istanbul ignore next */
    (cov_1rzpp6otys().s[244]++, AuthStore.getInstance());
    // 초기화 대기 (await 추가)
    /* istanbul ignore next */
    cov_1rzpp6otys().s[245]++;
    const initializeAndSubscribe = async () => {
      /* istanbul ignore next */
      cov_1rzpp6otys().f[29]++;
      cov_1rzpp6otys().s[246]++;
      try {
        /* istanbul ignore next */
        cov_1rzpp6otys().s[247]++;
        await authStore.waitForInitialization();
        /* istanbul ignore next */
        cov_1rzpp6otys().s[248]++;
        console.log('✅ [AuthProvider] 초기화 완료 대기 성공');
      } catch (error) {
        /* istanbul ignore next */
        cov_1rzpp6otys().s[249]++;
        console.error('❌ [AuthProvider] 초기화 대기 중 오류:', error);
      }
    };
    /* istanbul ignore next */
    cov_1rzpp6otys().s[250]++;
    initializeAndSubscribe();
    // 상태 변경 구독
    const unsubscribe =
    /* istanbul ignore next */
    (cov_1rzpp6otys().s[251]++, authStore.subscribe(newState => {
      /* istanbul ignore next */
      cov_1rzpp6otys().f[30]++;
      cov_1rzpp6otys().s[252]++;
      console.log('🔄 [AuthProvider] Context 값 변경:', {
        isLoading: newState.isLoading,
        isInitialized: newState.isInitialized,
        isAuthenticated: newState.isAuthenticated,
        hasSession: !!newState.session,
        hasUser: !!newState.user,
        hasUserProfile: !!newState.userProfile
      });
      /* istanbul ignore next */
      cov_1rzpp6otys().s[253]++;
      setContextValue(newState);
    }));
    /* istanbul ignore next */
    cov_1rzpp6otys().s[254]++;
    return unsubscribe;
  }, []);
  /* istanbul ignore next */
  cov_1rzpp6otys().s[255]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(AuthContext.Provider, {
    value: contextValue,
    children: children
  });
}));
const AuthProvider =
/* istanbul ignore next */
(cov_1rzpp6otys().s[256]++, AuthProviderComponent);
function useAuth() {
  /* istanbul ignore next */
  cov_1rzpp6otys().f[31]++;
  const context =
  /* istanbul ignore next */
  (cov_1rzpp6otys().s[257]++, (0, _react.useContext)(AuthContext));
  /* istanbul ignore next */
  cov_1rzpp6otys().s[258]++;
  if (context === undefined) {
    /* istanbul ignore next */
    cov_1rzpp6otys().b[74][0]++;
    cov_1rzpp6otys().s[259]++;
    throw new Error('useAuth must be used within an AuthProvider');
  } else
  /* istanbul ignore next */
  {
    cov_1rzpp6otys().b[74][1]++;
  }
  cov_1rzpp6otys().s[260]++;
  return context;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,