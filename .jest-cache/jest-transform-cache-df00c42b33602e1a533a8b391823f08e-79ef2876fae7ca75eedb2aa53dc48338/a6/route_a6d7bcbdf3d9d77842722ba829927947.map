{"version":3,"names":["cov_1c25xeyr1o","actualCoverage","s","POST","request","f","body","json","id_token","user","state","b","_server","NextResponse","error","status","console","log","tokenPayload","_apple","parseAppleIdentityToken","sub","email","email_verified","hasUserData","userProfile","normalizeAppleProfile","success","message","profile","id","name","avatar","verified","provider"],"sources":["/Users/cheolhyun/Repositories/picnic-web/app/api/auth/apple/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { createClient } from '@supabase/supabase-js';\nimport { parseAppleIdentityToken, normalizeAppleProfile } from '@/lib/supabase/social/apple';\n\ninterface AppleAuthRequest {\n  id_token: string;\n  user?: any; // AppleÏóêÏÑú Ï≤´ Î°úÍ∑∏Ïù∏ Ïãú Ï†úÍ≥µÌïòÎäî ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥\n  state?: string;\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body: AppleAuthRequest = await request.json();\n    const { id_token, user, state } = body;\n\n    if (!id_token) {\n      return NextResponse.json(\n        { error: 'Apple ID ÌÜ†ÌÅ∞Ïù¥ ÌïÑÏöîÌï©ÎãàÎã§' },\n        { status: 400 }\n      );\n    }\n\n    console.log('üçé [Apple API] ID ÌÜ†ÌÅ∞ Ï≤òÎ¶¨ ÏãúÏûë');\n\n    // Apple ID ÌÜ†ÌÅ∞ ÌååÏã±\n    const tokenPayload = parseAppleIdentityToken(id_token);\n    \n    if (!tokenPayload || !tokenPayload.sub) {\n      console.error('üçé [Apple API] ID ÌÜ†ÌÅ∞ ÌååÏã± Ïã§Ìå®');\n      return NextResponse.json(\n        { error: 'Apple ID ÌÜ†ÌÅ∞ ÌååÏã± Ïã§Ìå®' },\n        { status: 400 }\n      );\n    }\n\n    console.log('üçé [Apple API] ID ÌÜ†ÌÅ∞ ÌååÏã± ÏÑ±Í≥µ:', {\n      sub: tokenPayload.sub,\n      email: tokenPayload.email,\n      email_verified: tokenPayload.email_verified,\n      hasUserData: !!user\n    });\n\n    // Apple ÌîÑÎ°úÌïÑ Ï†ïÎ≥¥ Ï†ïÍ∑úÌôî\n    const userProfile = normalizeAppleProfile(tokenPayload, user);\n\n    console.log('üçé [Apple API] ÌîÑÎ°úÌïÑ Ï†ïÍ∑úÌôî ÏôÑÎ£å:', userProfile);\n\n    return NextResponse.json({\n      success: true,\n      message: 'Apple ID ÌÜ†ÌÅ∞ Í≤ÄÏ¶ù ÏÑ±Í≥µ',\n      profile: {\n        id: userProfile.id,\n        name: userProfile.name || '',\n        email: userProfile.email || '',\n        avatar: null, // AppleÏùÄ ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄ Ï†úÍ≥µ ÏïàÌï®\n        verified: userProfile.email_verified || false,\n        provider: 'apple'\n      }\n    });\n  } catch (error) {\n    console.error('üçé [Apple API] ÏóêÎü¨:', error);\n    return NextResponse.json(\n      { error: 'ÏÑúÎ≤Ñ ÎÇ¥Î∂Ä Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§' },\n      { status: 500 }\n    );\n  }\n}"],"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","ignoreList":[]}