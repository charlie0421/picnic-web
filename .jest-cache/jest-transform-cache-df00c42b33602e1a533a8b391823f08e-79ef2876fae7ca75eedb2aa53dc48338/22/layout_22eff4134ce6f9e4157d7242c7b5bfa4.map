{"version":3,"names":["MainLayout","MainContent","children","cov_6y8c3o9ic","f","setCurrentPortalType","navigationState","s","_NavigationContext","useNavigation","pathname","_navigation","usePathname","hasSetPortalType","_react","useRef","useEffect","b","current","portalType","_navigation1","getPortalTypeFromPath","currentPortalType","_jsxruntime","jsxs","className","jsx","_Header","default","_ExclusiveOpenBadge","_Footer"],"sources":["/Users/cheolhyun/Repositories/picnic-web/app/[lang]/(mypage)/layout.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useRef } from 'react';\nimport { usePathname } from 'next/navigation';\nimport { useNavigation } from '@/contexts/NavigationContext';\nimport Footer from '../Footer';\nimport ExclusiveOpenBadge from '@/components/layouts/ExclusiveOpenBadge';\nimport { getPortalTypeFromPath } from '@/config/navigation';\nimport Header from '@/components/layouts/Header';\n\nconst MainContent = ({ children }: { children: React.ReactNode }) => {\n  const { setCurrentPortalType, navigationState } = useNavigation();\n  const pathname = usePathname();\n  const hasSetPortalType = useRef(false);\n\n  useEffect(() => {\n    // 이미 설정되었거나 pathname이 없으면 실행하지 않음\n    if (!pathname || hasSetPortalType.current) {\n      return;\n    }\n\n    const portalType = getPortalTypeFromPath(pathname);\n\n    // 현재 설정된 포털 타입과 다를 때만 업데이트\n    if (navigationState.currentPortalType !== portalType) {\n      setCurrentPortalType(portalType);\n    }\n\n    // 포털 타입을 설정했음을 표시\n    hasSetPortalType.current = true;\n  }, [pathname, navigationState.currentPortalType, setCurrentPortalType]);\n\n  return (\n    <div className='bg-gradient-to-b from-blue-50 to-white relative'>\n      <div className='max-w-6xl mx-auto bg-white shadow-md'>\n        <Header />\n        <main className='container mx-auto px-2 py-0 min-h-screen'>\n          <div className='flex flex-col'>\n            <div className='w-full'>\n              {/* 배타 오픈 뱃지 */}\n              <div className='flex justify-center py-1 sm:py-2'>\n                <ExclusiveOpenBadge />\n              </div>\n              {/* 메인 콘텐츠 */}\n              {children}\n            </div>\n          </div>\n        </main>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default function MainLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return <MainContent>{children}</MainContent>;\n}\n"],"mappingssDA;;;;;;WAAwBA,UAAA;;;;;;;;wEApDiB;;;iCACb;;;iCACE;;;uEACX;;;uEACY;;;iCACO;;;wEACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEnB,MAAMC,WAAA,GAAcA,CAAC;EAAEC;AAAQ,CAAiC;EAAA;EAAAC,aAAA,GAAAC,CAAA;EAC9D,MAAM;IAAEC,oBAAoB;IAAEC;EAAe,CAAE;EAAA;EAAA,CAAAH,aAAA,GAAAI,CAAA,QAAG,IAAAC,kBAAA,CAAAC,aAAa;EAC/D,MAAMC,QAAA;EAAA;EAAA,CAAAP,aAAA,GAAAI,CAAA,QAAW,IAAAI,WAAA,CAAAC,WAAW;EAC5B,MAAMC,gBAAA;EAAA;EAAA,CAAAV,aAAA,GAAAI,CAAA,QAAmB,IAAAO,MAAA,CAAAC,MAAM,EAAC;EAAA;EAAAZ,aAAA,GAAAI,CAAA;EAEhC,IAAAO,MAAA,CAAAE,SAAS,EAAC;IAAA;IAAAb,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IACR;IACA;IAAI;IAAA,CAAAJ,aAAA,GAAAc,CAAA,YAACP,QAAA;IAAA;IAAA,CAAAP,aAAA,GAAAc,CAAA,WAAYJ,gBAAA,CAAiBK,OAAO,GAAE;MAAA;MAAAf,aAAA,GAAAc,CAAA;MAAAd,aAAA,GAAAI,CAAA;MACzC;IACF;IAAA;IAAA;MAAAJ,aAAA,GAAAc,CAAA;IAAA;IAEA,MAAME,UAAA;IAAA;IAAA,CAAAhB,aAAA,GAAAI,CAAA,QAAa,IAAAa,YAAA,CAAAC,qBAAqB,EAACX,QAAA;IAEzC;IAAA;IAAAP,aAAA,GAAAI,CAAA;IACA,IAAID,eAAA,CAAgBgB,iBAAiB,KAAKH,UAAA,EAAY;MAAA;MAAAhB,aAAA,GAAAc,CAAA;MAAAd,aAAA,GAAAI,CAAA;MACpDF,oBAAA,CAAqBc,UAAA;IACvB;IAAA;IAAA;MAAAhB,aAAA,GAAAc,CAAA;IAAA;IAEA;IAAAd,aAAA,GAAAI,CAAA;IACAM,gBAAA,CAAiBK,OAAO,GAAG;EAC7B,GAAG,CAACR,QAAA,EAAUJ,eAAA,CAAgBgB,iBAAiB,EAAEjB,oBAAA,CAAqB;EAAA;EAAAF,aAAA,GAAAI,CAAA;EAEtE,oBACE,IAAAgB,WAAA,CAAAC,IAAA,EAAC;IAAIC,SAAA,EAAU;4BACb,IAAAF,WAAA,CAAAC,IAAA,EAAC;MAAIC,SAAA,EAAU;8BACb,IAAAF,WAAA,CAAAG,GAAA,EAACC,OAAA,CAAAC,OAAM,O,aACP,IAAAL,WAAA,CAAAG,GAAA,EAAC;QAAKD,SAAA,EAAU;kBACd,iBAAAF,WAAA,CAAAG,GAAA,EAAC;UAAID,SAAA,EAAU;oBACb,iBAAAF,WAAA,CAAAC,IAAA,EAAC;YAAIC,SAAA,EAAU;oCAEb,IAAAF,WAAA,CAAAG,GAAA,EAAC;cAAID,SAAA,EAAU;wBACb,iBAAAF,WAAA,CAAAG,GAAA,EAACG,mBAAA,CAAAD,OAAkB;gBAGpB1B,QAAA;;;;qBAKT,IAAAqB,WAAA,CAAAG,GAAA,EAACI,OAAA,CAAAF,OAAM;;AAGb;AAEe,SAAS5B,WAAW;EACjCE;AAAQ,CAGT;EAAA;EAAAC,aAAA,GAAAC,CAAA;EAAAD,aAAA,GAAAI,CAAA;EACC,oBAAO,IAAAgB,WAAA,CAAAG,GAAA,EAACzB,WAAA;cAAaC;;AACvB","ignoreList":[]}