604e3a0fe8d2d59247ca69e2d360d431
'use client';
"use strict";

/* istanbul ignore next */
function cov_lh00act() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/components/client/vote/common/VoteButton.tsx";
  var hash = "b1d94be940d22465b44fd7b20895c97437c29ac5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/components/client/vote/common/VoteButton.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 26
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "6": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 15,
          column: 63
        }
      },
      "7": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 66
        }
      },
      "8": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 78,
          column: 1
        }
      },
      "9": {
        start: {
          line: 18,
          column: 36
        },
        end: {
          line: 18,
          column: 63
        }
      },
      "10": {
        start: {
          line: 19,
          column: 30
        },
        end: {
          line: 19,
          column: 56
        }
      },
      "11": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 56
        }
      },
      "12": {
        start: {
          line: 21,
          column: 42
        },
        end: {
          line: 31,
          column: 6
        }
      },
      "13": {
        start: {
          line: 32,
          column: 23
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "14": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "15": {
        start: {
          line: 33,
          column: 46
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "16": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 47,
          column: 11
        }
      },
      "17": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 30
        }
      },
      "18": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 27
        }
      },
      "19": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "20": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 49
        }
      },
      "21": {
        start: {
          line: 41,
          column: 37
        },
        end: {
          line: 41,
          column: 60
        }
      },
      "22": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 39
        }
      },
      "23": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 50
        }
      },
      "24": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 35
        }
      },
      "25": {
        start: {
          line: 49,
          column: 26
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "26": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "27": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 46
        }
      },
      "28": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "29": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 43
        }
      },
      "30": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "31": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 41
        }
      },
      "32": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 46
        }
      },
      "33": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 77,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 19
          },
          end: {
            line: 17,
            column: 20
          }
        },
        loc: {
          start: {
            line: 17,
            column: 112
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 23
          },
          end: {
            line: 32,
            column: 24
          }
        },
        loc: {
          start: {
            line: 32,
            column: 33
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 24
          }
        },
        loc: {
          start: {
            line: 35,
            column: 33
          },
          end: {
            line: 47,
            column: 9
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 49,
            column: 26
          },
          end: {
            line: 49,
            column: 27
          }
        },
        loc: {
          start: {
            line: 49,
            column: 30
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 49
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 50
          },
          end: {
            line: 17,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 61
          },
          end: {
            line: 17,
            column: 66
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 68
          },
          end: {
            line: 17,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 79
          },
          end: {
            line: 17,
            column: 84
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 27,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 38
          },
          end: {
            line: 27,
            column: 14
          }
        }, {
          start: {
            line: 27,
            column: 17
          },
          end: {
            line: 27,
            column: 53
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 32
          }
        }, {
          start: {
            line: 33,
            column: 36
          },
          end: {
            line: 33,
            column: 44
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "8": {
        loc: {
          start: {
            line: 66,
            column: 26
          },
          end: {
            line: 66,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 26
          },
          end: {
            line: 66,
            column: 34
          }
        }, {
          start: {
            line: 66,
            column: 38
          },
          end: {
            line: 66,
            column: 46
          }
        }, {
          start: {
            line: 66,
            column: 50
          },
          end: {
            line: 66,
            column: 58
          }
        }],
        line: 66
      },
      "9": {
        loc: {
          start: {
            line: 68,
            column: 25
          },
          end: {
            line: 68,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 36
          },
          end: {
            line: 68,
            column: 47
          }
        }, {
          start: {
            line: 68,
            column: 50
          },
          end: {
            line: 68,
            column: 59
          }
        }],
        line: 68
      },
      "10": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 75,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 72,
            column: 17
          }
        }, {
          start: {
            line: 72,
            column: 35
          },
          end: {
            line: 75,
            column: 14
          }
        }],
        line: 72
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/components/client/vote/common/VoteButton.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport { Button } from '@/components/common';\nimport { useRequireAuth } from '@/hooks/useAuthGuard';\nimport { useLanguageStore } from '@/stores/languageStore';\n\nexport interface VoteButtonProps {\n  voteId: string;\n  voteItemId: string;\n  onVote: (voteId: string, voteItemId: string) => Promise<void>;\n  disabled?: boolean;\n  hasVoted?: boolean;\n  className?: string;\n  artistName?: string; // \uD22C\uD45C \uB300\uC0C1 \uC544\uD2F0\uC2A4\uD2B8 \uC774\uB984 (\uB2E4\uC774\uC5BC\uB85C\uADF8\uC5D0\uC11C \uC0AC\uC6A9)\n}\n\nexport const VoteButton = ({\n  voteId,\n  voteItemId,\n  onVote,\n  disabled = false,\n  hasVoted = false,\n  className,\n  artistName,\n}: VoteButtonProps) => {\n  const [isVoting, setIsVoting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { t } = useLanguageStore();\n\n  const { withAuth, isAuthenticated } = useRequireAuth({\n    // \uCEE4\uC2A4\uD140 \uB85C\uADF8\uC778 \uB2E4\uC774\uC5BC\uB85C\uADF8 \uBA54\uC2DC\uC9C0\n    customLoginMessage: {\n      title: t('vote_login_required_title'),\n      description: artistName\n        ? t('vote_login_required_description_with_artist', { artistName })\n        : t('vote_login_required_description'),\n      loginText: t('button_login'),\n      cancelText: t('button_cancel'),\n    },\n  });\n\n  const handleVote = async () => {\n    if (disabled || hasVoted || isVoting) return;\n\n    // \uC778\uC99D\uC774 \uD544\uC694\uD55C \uD22C\uD45C \uC561\uC158\uC744 \uC2E4\uD589\n    await withAuth(async () => {\n      setIsVoting(true);\n      setError(null);\n\n      try {\n        await onVote(voteId, voteItemId);\n      } catch (err) {\n        const errorMessage = t('vote_error_general');\n        setError(errorMessage);\n        console.error('Vote error:', err);\n      } finally {\n        setIsVoting(false);\n      }\n    });\n  };\n\n  const getButtonText = () => {\n    if (hasVoted) {\n      return t('vote_button_completed');\n    }\n    if (isVoting) {\n      return t('vote_button_voting');\n    }\n    if (isAuthenticated) {\n      return t('vote_button_vote');\n    }\n    return t('vote_button_login_to_vote');\n  };\n\n  return (\n    <div className={className}>\n      <Button\n        onClick={handleVote}\n        disabled={disabled || hasVoted || isVoting}\n        loading={isVoting}\n        variant={hasVoted ? 'secondary' : 'primary'}\n        fullWidth\n      >\n        {getButtonText()}\n      </Button>\n\n      {error && (\n        <p className='mt-2 text-sm text-red-600 text-center'>{error}</p>\n      )}\n    </div>\n  );\n};\n"],
      names: ["VoteButton", "voteId", "voteItemId", "onVote", "disabled", "hasVoted", "className", "artistName", "isVoting", "setIsVoting", "useState", "error", "setError", "t", "useLanguageStore", "withAuth", "isAuthenticated", "useRequireAuth", "customLoginMessage", "title", "description", "loginText", "cancelText", "handleVote", "err", "errorMessage", "console", "getButtonText", "div", "Button", "onClick", "loading", "variant", "fullWidth", "p"],
      mappings: "AAAA;;;;;+BAiBaA;;;eAAAA;;;;uBAfY;wBACF;8BACQ;+BACE;AAY1B,MAAMA,aAAa,CAAC,EACzBC,MAAM,EACNC,UAAU,EACVC,MAAM,EACNC,WAAW,KAAK,EAChBC,WAAW,KAAK,EAChBC,SAAS,EACTC,UAAU,EACM;IAChB,MAAM,CAACC,UAAUC,YAAY,GAAGC,IAAAA,eAAQ,EAAC;IACzC,MAAM,CAACC,OAAOC,SAAS,GAAGF,IAAAA,eAAQ,EAAgB;IAClD,MAAM,EAAEG,CAAC,EAAE,GAAGC,IAAAA,+BAAgB;IAE9B,MAAM,EAAEC,QAAQ,EAAEC,eAAe,EAAE,GAAGC,IAAAA,4BAAc,EAAC;QACnD,oBAAoB;QACpBC,oBAAoB;YAClBC,OAAON,EAAE;YACTO,aAAab,aACTM,EAAE,+CAA+C;gBAAEN;YAAW,KAC9DM,EAAE;YACNQ,WAAWR,EAAE;YACbS,YAAYT,EAAE;QAChB;IACF;IAEA,MAAMU,aAAa;QACjB,IAAInB,YAAYC,YAAYG,UAAU;QAEtC,oBAAoB;QACpB,MAAMO,SAAS;YACbN,YAAY;YACZG,SAAS;YAET,IAAI;gBACF,MAAMT,OAAOF,QAAQC;YACvB,EAAE,OAAOsB,KAAK;gBACZ,MAAMC,eAAeZ,EAAE;gBACvBD,SAASa;gBACTC,QAAQf,KAAK,CAAC,eAAea;YAC/B,SAAU;gBACRf,YAAY;YACd;QACF;IACF;IAEA,MAAMkB,gBAAgB;QACpB,IAAItB,UAAU;YACZ,OAAOQ,EAAE;QACX;QACA,IAAIL,UAAU;YACZ,OAAOK,EAAE;QACX;QACA,IAAIG,iBAAiB;YACnB,OAAOH,EAAE;QACX;QACA,OAAOA,EAAE;IACX;IAEA,qBACE,sBAACe;QAAItB,WAAWA;;0BACd,qBAACuB,cAAM;gBACLC,SAASP;gBACTnB,UAAUA,YAAYC,YAAYG;gBAClCuB,SAASvB;gBACTwB,SAAS3B,WAAW,cAAc;gBAClC4B,SAAS;0BAERN;;YAGFhB,uBACC,qBAACuB;gBAAE5B,WAAU;0BAAyCK;;;;AAI9D"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b1d94be940d22465b44fd7b20895c97437c29ac5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_lh00act = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_lh00act();
cov_lh00act().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_lh00act().s[1]++;
Object.defineProperty(exports, "VoteButton", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_lh00act().f[0]++;
    cov_lh00act().s[2]++;
    return VoteButton;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_lh00act().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_lh00act().s[4]++, require("react"));
const _common =
/* istanbul ignore next */
(cov_lh00act().s[5]++, require("../../../common"));
const _useAuthGuard =
/* istanbul ignore next */
(cov_lh00act().s[6]++, require("../../../../hooks/useAuthGuard"));
const _languageStore =
/* istanbul ignore next */
(cov_lh00act().s[7]++, require("../../../../stores/languageStore"));
/* istanbul ignore next */
cov_lh00act().s[8]++;
const VoteButton = ({
  voteId,
  voteItemId,
  onVote,
  disabled =
  /* istanbul ignore next */
  (cov_lh00act().b[0][0]++, false),
  hasVoted =
  /* istanbul ignore next */
  (cov_lh00act().b[1][0]++, false),
  className,
  artistName
}) => {
  /* istanbul ignore next */
  cov_lh00act().f[1]++;
  const [isVoting, setIsVoting] =
  /* istanbul ignore next */
  (cov_lh00act().s[9]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_lh00act().s[10]++, (0, _react.useState)(null));
  const {
    t
  } =
  /* istanbul ignore next */
  (cov_lh00act().s[11]++, (0, _languageStore.useLanguageStore)());
  const {
    withAuth,
    isAuthenticated
  } =
  /* istanbul ignore next */
  (cov_lh00act().s[12]++, (0, _useAuthGuard.useRequireAuth)({
    // 커스텀 로그인 다이얼로그 메시지
    customLoginMessage: {
      title: t('vote_login_required_title'),
      description: artistName ?
      /* istanbul ignore next */
      (cov_lh00act().b[2][0]++, t('vote_login_required_description_with_artist', {
        artistName
      })) :
      /* istanbul ignore next */
      (cov_lh00act().b[2][1]++, t('vote_login_required_description')),
      loginText: t('button_login'),
      cancelText: t('button_cancel')
    }
  }));
  /* istanbul ignore next */
  cov_lh00act().s[13]++;
  const handleVote = async () => {
    /* istanbul ignore next */
    cov_lh00act().f[2]++;
    cov_lh00act().s[14]++;
    if (
    /* istanbul ignore next */
    (cov_lh00act().b[4][0]++, disabled) ||
    /* istanbul ignore next */
    (cov_lh00act().b[4][1]++, hasVoted) ||
    /* istanbul ignore next */
    (cov_lh00act().b[4][2]++, isVoting)) {
      /* istanbul ignore next */
      cov_lh00act().b[3][0]++;
      cov_lh00act().s[15]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_lh00act().b[3][1]++;
    }
    // 인증이 필요한 투표 액션을 실행
    cov_lh00act().s[16]++;
    await withAuth(async () => {
      /* istanbul ignore next */
      cov_lh00act().f[3]++;
      cov_lh00act().s[17]++;
      setIsVoting(true);
      /* istanbul ignore next */
      cov_lh00act().s[18]++;
      setError(null);
      /* istanbul ignore next */
      cov_lh00act().s[19]++;
      try {
        /* istanbul ignore next */
        cov_lh00act().s[20]++;
        await onVote(voteId, voteItemId);
      } catch (err) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_lh00act().s[21]++, t('vote_error_general'));
        /* istanbul ignore next */
        cov_lh00act().s[22]++;
        setError(errorMessage);
        /* istanbul ignore next */
        cov_lh00act().s[23]++;
        console.error('Vote error:', err);
      } finally {
        /* istanbul ignore next */
        cov_lh00act().s[24]++;
        setIsVoting(false);
      }
    });
  };
  /* istanbul ignore next */
  cov_lh00act().s[25]++;
  const getButtonText = () => {
    /* istanbul ignore next */
    cov_lh00act().f[4]++;
    cov_lh00act().s[26]++;
    if (hasVoted) {
      /* istanbul ignore next */
      cov_lh00act().b[5][0]++;
      cov_lh00act().s[27]++;
      return t('vote_button_completed');
    } else
    /* istanbul ignore next */
    {
      cov_lh00act().b[5][1]++;
    }
    cov_lh00act().s[28]++;
    if (isVoting) {
      /* istanbul ignore next */
      cov_lh00act().b[6][0]++;
      cov_lh00act().s[29]++;
      return t('vote_button_voting');
    } else
    /* istanbul ignore next */
    {
      cov_lh00act().b[6][1]++;
    }
    cov_lh00act().s[30]++;
    if (isAuthenticated) {
      /* istanbul ignore next */
      cov_lh00act().b[7][0]++;
      cov_lh00act().s[31]++;
      return t('vote_button_vote');
    } else
    /* istanbul ignore next */
    {
      cov_lh00act().b[7][1]++;
    }
    cov_lh00act().s[32]++;
    return t('vote_button_login_to_vote');
  };
  /* istanbul ignore next */
  cov_lh00act().s[33]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: className,
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_common.Button, {
      onClick: handleVote,
      disabled:
      /* istanbul ignore next */
      (cov_lh00act().b[8][0]++, disabled) ||
      /* istanbul ignore next */
      (cov_lh00act().b[8][1]++, hasVoted) ||
      /* istanbul ignore next */
      (cov_lh00act().b[8][2]++, isVoting),
      loading: isVoting,
      variant: hasVoted ?
      /* istanbul ignore next */
      (cov_lh00act().b[9][0]++, 'secondary') :
      /* istanbul ignore next */
      (cov_lh00act().b[9][1]++, 'primary'),
      fullWidth: true,
      children: getButtonText()
    }),
    /* istanbul ignore next */
    (cov_lh00act().b[10][0]++, error) &&
    /* istanbul ignore next */
    (cov_lh00act().b[10][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
      className: "mt-2 text-sm text-red-600 text-center",
      children: error
    }))]
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,