cd0b43f7eb78f1bff02aa8f1312e8bf2
"use strict";

/* istanbul ignore next */
function cov_2pm1syorki() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/app/api/proxy-image/route.ts";
  var hash = "fbdb2e37293b3f36e84ef742fb9dcebabf713ebf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/app/api/proxy-image/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 23
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "8": {
        start: {
          line: 22,
          column: 33
        },
        end: {
          line: 22,
          column: 53
        }
      },
      "9": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "10": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "11": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 29,
          column: 15
        }
      },
      "12": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "13": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 41
        }
      },
      "14": {
        start: {
          line: 35,
          column: 35
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "15": {
        start: {
          line: 43,
          column: 30
        },
        end: {
          line: 43,
          column: 90
        }
      },
      "16": {
        start: {
          line: 43,
          column: 60
        },
        end: {
          line: 43,
          column: 89
        }
      },
      "17": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "18": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 49,
          column: 19
        }
      },
      "19": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "20": {
        start: {
          line: 59,
          column: 25
        },
        end: {
          line: 67,
          column: 10
        }
      },
      "21": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "22": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 114
        }
      },
      "23": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "24": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "25": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 84,
          column: 15
        }
      },
      "26": {
        start: {
          line: 86,
          column: 28
        },
        end: {
          line: 86,
          column: 80
        }
      },
      "27": {
        start: {
          line: 87,
          column: 28
        },
        end: {
          line: 87,
          column: 56
        }
      },
      "28": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 98,
          column: 11
        }
      },
      "29": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 57
        }
      },
      "30": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "31": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 107,
          column: 15
        }
      },
      "32": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 113,
          column: 11
        }
      },
      "33": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 124,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 10
          }
        },
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 14
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 18
          }
        },
        loc: {
          start: {
            line: 20,
            column: 28
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 43,
            column: 50
          },
          end: {
            line: 43,
            column: 51
          }
        },
        loc: {
          start: {
            line: 43,
            column: 60
          },
          end: {
            line: 43,
            column: 89
          }
        },
        line: 43
      },
      "5": {
        name: "OPTIONS",
        decl: {
          start: {
            line: 116,
            column: 15
          },
          end: {
            line: 116,
            column: 22
          }
        },
        loc: {
          start: {
            line: 116,
            column: 25
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 116
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "3": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "4": {
        loc: {
          start: {
            line: 75,
            column: 32
          },
          end: {
            line: 75,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 32
          },
          end: {
            line: 75,
            column: 67
          }
        }, {
          start: {
            line: 75,
            column: 71
          },
          end: {
            line: 75,
            column: 76
          }
        }],
        line: 75
      },
      "5": {
        loc: {
          start: {
            line: 86,
            column: 28
          },
          end: {
            line: 86,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 28
          },
          end: {
            line: 86,
            column: 64
          }
        }, {
          start: {
            line: 86,
            column: 68
          },
          end: {
            line: 86,
            column: 80
          }
        }],
        line: 86
      },
      "6": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "7": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 102,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 102,
            column: 34
          }
        }, {
          start: {
            line: 102,
            column: 38
          },
          end: {
            line: 102,
            column: 67
          }
        }],
        line: 102
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/app/api/proxy-image/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\n\n/**\n * \uC774\uBBF8\uC9C0 \uD504\uB85D\uC2DC API\n * Google \uC774\uBBF8\uC9C0 429 \uC5D0\uB7EC\uB97C \uC6B0\uD68C\uD558\uAE30 \uC704\uD574 \uC11C\uBC84\uC5D0\uC11C \uC774\uBBF8\uC9C0\uB97C \uD504\uB85D\uC2DC\uD569\uB2C8\uB2E4.\n */\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const imageUrl = searchParams.get('url');\n    \n    if (!imageUrl) {\n      return NextResponse.json(\n        { error: '\uC774\uBBF8\uC9C0 URL\uC774 \uD544\uC694\uD569\uB2C8\uB2E4.' },\n        { status: 400 }\n      );\n    }\n    \n    // URL \uAC80\uC99D\n    try {\n      const url = new URL(imageUrl);\n      \n      // \uD5C8\uC6A9\uB41C \uB3C4\uBA54\uC778\uB9CC \uD504\uB85D\uC2DC\n      const allowedDomains = [\n        'googleusercontent.com',\n        'lh3.googleusercontent.com',\n        'graph.facebook.com',\n        'pbs.twimg.com',\n        'cdn.discordapp.com',\n        'avatars.githubusercontent.com'\n      ];\n      \n      const isAllowed = allowedDomains.some(domain => \n        url.hostname.includes(domain)\n      );\n      \n      if (!isAllowed) {\n        return NextResponse.json(\n          { error: '\uD5C8\uC6A9\uB418\uC9C0 \uC54A\uC740 \uB3C4\uBA54\uC778\uC785\uB2C8\uB2E4.' },\n          { status: 403 }\n        );\n      }\n    } catch (error) {\n      return NextResponse.json(\n        { error: '\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 URL\uC785\uB2C8\uB2E4.' },\n        { status: 400 }\n      );\n    }\n    \n    // \uC774\uBBF8\uC9C0 \uAC00\uC838\uC624\uAE30\n    const response = await fetch(imageUrl, {\n      headers: {\n        'User-Agent': 'Mozilla/5.0 (compatible; PicnicBot/1.0)',\n        'Accept': 'image/*',\n        'Cache-Control': 'no-cache'\n      },\n      // \uD0C0\uC784\uC544\uC6C3 \uC124\uC815\n      signal: AbortSignal.timeout(10000) // 10\uCD08\n    });\n    \n    if (!response.ok) {\n      console.warn(`\uD83D\uDDBC\uFE0F [ImageProxy] \uC774\uBBF8\uC9C0 \uB85C\uB529 \uC2E4\uD328: ${response.status} ${response.statusText} for ${imageUrl}`);\n      \n      // 429 \uC5D0\uB7EC\uC778 \uACBD\uC6B0 \uD2B9\uBCC4 \uCC98\uB9AC\n      if (response.status === 429) {\n        return NextResponse.json(\n          { \n            error: 'Too Many Requests', \n            message: '\uC774\uBBF8\uC9C0 \uC11C\uBC84\uC5D0\uC11C \uC694\uCCAD \uC81C\uD55C\uC774 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.',\n            retryAfter: response.headers.get('Retry-After') || '300'\n          },\n          { status: 429 }\n        );\n      }\n      \n      return NextResponse.json(\n        { error: `\uC774\uBBF8\uC9C0 \uB85C\uB529 \uC2E4\uD328: ${response.status}` },\n        { status: response.status }\n      );\n    }\n    \n    const contentType = response.headers.get('content-type') || 'image/jpeg';\n    const imageBuffer = await response.arrayBuffer();\n    \n    // \uC774\uBBF8\uC9C0 \uC751\uB2F5 \uBC18\uD658\n    return new NextResponse(imageBuffer, {\n      status: 200,\n      headers: {\n        'Content-Type': contentType,\n        'Cache-Control': 'public, max-age=3600, s-maxage=86400', // 1\uC2DC\uAC04 \uBE0C\uB77C\uC6B0\uC800 \uCE90\uC2DC, 1\uC77C CDN \uCE90\uC2DC\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET',\n        'Access-Control-Allow-Headers': 'Content-Type'\n      }\n    });\n    \n  } catch (error) {\n    console.error('\uD83D\uDDBC\uFE0F [ImageProxy] \uD504\uB85D\uC2DC \uC5D0\uB7EC:', error);\n    \n    // \uD0C0\uC784\uC544\uC6C3 \uC5D0\uB7EC\n    if (error instanceof Error && error.name === 'TimeoutError') {\n      return NextResponse.json(\n        { error: '\uC774\uBBF8\uC9C0 \uB85C\uB529 \uC2DC\uAC04 \uCD08\uACFC' },\n        { status: 504 }\n      );\n    }\n    \n    return NextResponse.json(\n      { error: '\uC774\uBBF8\uC9C0 \uD504\uB85D\uC2DC \uCC98\uB9AC \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.' },\n      { status: 500 }\n    );\n  }\n}\n\n// OPTIONS \uC694\uCCAD \uCC98\uB9AC (CORS)\nexport async function OPTIONS() {\n  return new NextResponse(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type'\n    }\n  });\n} "],
      names: ["GET", "OPTIONS", "request", "searchParams", "URL", "url", "imageUrl", "get", "NextResponse", "json", "error", "status", "allowedDomains", "isAllowed", "some", "domain", "hostname", "includes", "response", "fetch", "headers", "signal", "AbortSignal", "timeout", "ok", "console", "warn", "statusText", "message", "retryAfter", "contentType", "imageBuffer", "arrayBuffer", "Error", "name"],
      mappings: ";;;;;;;;;;;IAMsBA,GAAG;eAAHA;;IA6GAC,OAAO;eAAPA;;;wBAnHoB;AAMnC,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAEC,YAAY,EAAE,GAAG,IAAIC,IAAIF,QAAQG,GAAG;QAC5C,MAAMC,WAAWH,aAAaI,GAAG,CAAC;QAElC,IAAI,CAACD,UAAU;YACb,OAAOE,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAkB,GAC3B;gBAAEC,QAAQ;YAAI;QAElB;QAEA,SAAS;QACT,IAAI;YACF,MAAMN,MAAM,IAAID,IAAIE;YAEpB,eAAe;YACf,MAAMM,iBAAiB;gBACrB;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YAED,MAAMC,YAAYD,eAAeE,IAAI,CAACC,CAAAA,SACpCV,IAAIW,QAAQ,CAACC,QAAQ,CAACF;YAGxB,IAAI,CAACF,WAAW;gBACd,OAAOL,oBAAY,CAACC,IAAI,CACtB;oBAAEC,OAAO;gBAAkB,GAC3B;oBAAEC,QAAQ;gBAAI;YAElB;QACF,EAAE,OAAOD,OAAO;YACd,OAAOF,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAkB,GAC3B;gBAAEC,QAAQ;YAAI;QAElB;QAEA,WAAW;QACX,MAAMO,WAAW,MAAMC,MAAMb,UAAU;YACrCc,SAAS;gBACP,cAAc;gBACd,UAAU;gBACV,iBAAiB;YACnB;YACA,UAAU;YACVC,QAAQC,YAAYC,OAAO,CAAC,OAAO,MAAM;QAC3C;QAEA,IAAI,CAACL,SAASM,EAAE,EAAE;YAChBC,QAAQC,IAAI,CAAC,CAAC,4BAA4B,EAAER,SAASP,MAAM,CAAC,CAAC,EAAEO,SAASS,UAAU,CAAC,KAAK,EAAErB,UAAU;YAEpG,mBAAmB;YACnB,IAAIY,SAASP,MAAM,KAAK,KAAK;gBAC3B,OAAOH,oBAAY,CAACC,IAAI,CACtB;oBACEC,OAAO;oBACPkB,SAAS;oBACTC,YAAYX,SAASE,OAAO,CAACb,GAAG,CAAC,kBAAkB;gBACrD,GACA;oBAAEI,QAAQ;gBAAI;YAElB;YAEA,OAAOH,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO,CAAC,WAAW,EAAEQ,SAASP,MAAM,EAAE;YAAC,GACzC;gBAAEA,QAAQO,SAASP,MAAM;YAAC;QAE9B;QAEA,MAAMmB,cAAcZ,SAASE,OAAO,CAACb,GAAG,CAAC,mBAAmB;QAC5D,MAAMwB,cAAc,MAAMb,SAASc,WAAW;QAE9C,YAAY;QACZ,OAAO,IAAIxB,oBAAY,CAACuB,aAAa;YACnCpB,QAAQ;YACRS,SAAS;gBACP,gBAAgBU;gBAChB,iBAAiB;gBACjB,+BAA+B;gBAC/B,gCAAgC;gBAChC,gCAAgC;YAClC;QACF;IAEF,EAAE,OAAOpB,OAAO;QACde,QAAQf,KAAK,CAAC,4BAA4BA;QAE1C,UAAU;QACV,IAAIA,iBAAiBuB,SAASvB,MAAMwB,IAAI,KAAK,gBAAgB;YAC3D,OAAO1B,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAe,GACxB;gBAAEC,QAAQ;YAAI;QAElB;QAEA,OAAOH,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAA2B,GACpC;YAAEC,QAAQ;QAAI;IAElB;AACF;AAGO,eAAeV;IACpB,OAAO,IAAIO,oBAAY,CAAC,MAAM;QAC5BG,QAAQ;QACRS,SAAS;YACP,+BAA+B;YAC/B,gCAAgC;YAChC,gCAAgC;QAClC;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fbdb2e37293b3f36e84ef742fb9dcebabf713ebf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2pm1syorki = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2pm1syorki();
cov_2pm1syorki().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2pm1syorki().f[0]++;
  cov_2pm1syorki().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2pm1syorki().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2pm1syorki().s[3]++;
_export(exports, {
  GET: function () {
    /* istanbul ignore next */
    cov_2pm1syorki().f[1]++;
    cov_2pm1syorki().s[4]++;
    return GET;
  },
  OPTIONS: function () {
    /* istanbul ignore next */
    cov_2pm1syorki().f[2]++;
    cov_2pm1syorki().s[5]++;
    return OPTIONS;
  }
});
const _server =
/* istanbul ignore next */
(cov_2pm1syorki().s[6]++, require("next/server"));
async function GET(request) {
  /* istanbul ignore next */
  cov_2pm1syorki().f[3]++;
  cov_2pm1syorki().s[7]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2pm1syorki().s[8]++, new URL(request.url));
    const imageUrl =
    /* istanbul ignore next */
    (cov_2pm1syorki().s[9]++, searchParams.get('url'));
    /* istanbul ignore next */
    cov_2pm1syorki().s[10]++;
    if (!imageUrl) {
      /* istanbul ignore next */
      cov_2pm1syorki().b[0][0]++;
      cov_2pm1syorki().s[11]++;
      return _server.NextResponse.json({
        error: '이미지 URL이 필요합니다.'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2pm1syorki().b[0][1]++;
    }
    // URL 검증
    cov_2pm1syorki().s[12]++;
    try {
      const url =
      /* istanbul ignore next */
      (cov_2pm1syorki().s[13]++, new URL(imageUrl));
      // 허용된 도메인만 프록시
      const allowedDomains =
      /* istanbul ignore next */
      (cov_2pm1syorki().s[14]++, ['googleusercontent.com', 'lh3.googleusercontent.com', 'graph.facebook.com', 'pbs.twimg.com', 'cdn.discordapp.com', 'avatars.githubusercontent.com']);
      const isAllowed =
      /* istanbul ignore next */
      (cov_2pm1syorki().s[15]++, allowedDomains.some(domain => {
        /* istanbul ignore next */
        cov_2pm1syorki().f[4]++;
        cov_2pm1syorki().s[16]++;
        return url.hostname.includes(domain);
      }));
      /* istanbul ignore next */
      cov_2pm1syorki().s[17]++;
      if (!isAllowed) {
        /* istanbul ignore next */
        cov_2pm1syorki().b[1][0]++;
        cov_2pm1syorki().s[18]++;
        return _server.NextResponse.json({
          error: '허용되지 않은 도메인입니다.'
        }, {
          status: 403
        });
      } else
      /* istanbul ignore next */
      {
        cov_2pm1syorki().b[1][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2pm1syorki().s[19]++;
      return _server.NextResponse.json({
        error: '유효하지 않은 URL입니다.'
      }, {
        status: 400
      });
    }
    // 이미지 가져오기
    const response =
    /* istanbul ignore next */
    (cov_2pm1syorki().s[20]++, await fetch(imageUrl, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (compatible; PicnicBot/1.0)',
        'Accept': 'image/*',
        'Cache-Control': 'no-cache'
      },
      // 타임아웃 설정
      signal: AbortSignal.timeout(10000) // 10초
    }));
    /* istanbul ignore next */
    cov_2pm1syorki().s[21]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2pm1syorki().b[2][0]++;
      cov_2pm1syorki().s[22]++;
      console.warn(`🖼️ [ImageProxy] 이미지 로딩 실패: ${response.status} ${response.statusText} for ${imageUrl}`);
      // 429 에러인 경우 특별 처리
      /* istanbul ignore next */
      cov_2pm1syorki().s[23]++;
      if (response.status === 429) {
        /* istanbul ignore next */
        cov_2pm1syorki().b[3][0]++;
        cov_2pm1syorki().s[24]++;
        return _server.NextResponse.json({
          error: 'Too Many Requests',
          message: '이미지 서버에서 요청 제한이 발생했습니다.',
          retryAfter:
          /* istanbul ignore next */
          (cov_2pm1syorki().b[4][0]++, response.headers.get('Retry-After')) ||
          /* istanbul ignore next */
          (cov_2pm1syorki().b[4][1]++, '300')
        }, {
          status: 429
        });
      } else
      /* istanbul ignore next */
      {
        cov_2pm1syorki().b[3][1]++;
      }
      cov_2pm1syorki().s[25]++;
      return _server.NextResponse.json({
        error: `이미지 로딩 실패: ${response.status}`
      }, {
        status: response.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_2pm1syorki().b[2][1]++;
    }
    const contentType =
    /* istanbul ignore next */
    (cov_2pm1syorki().s[26]++,
    /* istanbul ignore next */
    (cov_2pm1syorki().b[5][0]++, response.headers.get('content-type')) ||
    /* istanbul ignore next */
    (cov_2pm1syorki().b[5][1]++, 'image/jpeg'));
    const imageBuffer =
    /* istanbul ignore next */
    (cov_2pm1syorki().s[27]++, await response.arrayBuffer());
    // 이미지 응답 반환
    /* istanbul ignore next */
    cov_2pm1syorki().s[28]++;
    return new _server.NextResponse(imageBuffer, {
      status: 200,
      headers: {
        'Content-Type': contentType,
        'Cache-Control': 'public, max-age=3600, s-maxage=86400',
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'GET',
        'Access-Control-Allow-Headers': 'Content-Type'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2pm1syorki().s[29]++;
    console.error('🖼️ [ImageProxy] 프록시 에러:', error);
    // 타임아웃 에러
    /* istanbul ignore next */
    cov_2pm1syorki().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_2pm1syorki().b[7][0]++, error instanceof Error) &&
    /* istanbul ignore next */
    (cov_2pm1syorki().b[7][1]++, error.name === 'TimeoutError')) {
      /* istanbul ignore next */
      cov_2pm1syorki().b[6][0]++;
      cov_2pm1syorki().s[31]++;
      return _server.NextResponse.json({
        error: '이미지 로딩 시간 초과'
      }, {
        status: 504
      });
    } else
    /* istanbul ignore next */
    {
      cov_2pm1syorki().b[6][1]++;
    }
    cov_2pm1syorki().s[32]++;
    return _server.NextResponse.json({
      error: '이미지 프록시 처리 중 오류가 발생했습니다.'
    }, {
      status: 500
    });
  }
}
async function OPTIONS() {
  /* istanbul ignore next */
  cov_2pm1syorki().f[5]++;
  cov_2pm1syorki().s[33]++;
  return new _server.NextResponse(null, {
    status: 200,
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type'
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,