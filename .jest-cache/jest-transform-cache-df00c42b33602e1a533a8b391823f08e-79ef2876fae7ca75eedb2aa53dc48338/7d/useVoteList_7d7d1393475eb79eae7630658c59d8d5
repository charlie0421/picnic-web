fcfeab8d852a14ad938b10bb502768bb
'use client';
"use strict";

/* istanbul ignore next */
function cov_1g6bsm8lgm() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/hooks/useVoteList.ts";
  var hash = "de138de096caec8bd569dd7a6cdcdd6a3e185c22";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/hooks/useVoteList.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 27
        }
      },
      "3": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "4": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 49
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 65
        }
      },
      "6": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 63
        }
      },
      "7": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 17,
          column: 64
        }
      },
      "8": {
        start: {
          line: 18,
          column: 38
        },
        end: {
          line: 18,
          column: 65
        }
      },
      "9": {
        start: {
          line: 19,
          column: 30
        },
        end: {
          line: 19,
          column: 56
        }
      },
      "10": {
        start: {
          line: 20,
          column: 23
        },
        end: {
          line: 37,
          column: 6
        }
      },
      "11": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "12": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "13": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "14": {
        start: {
          line: 24,
          column: 25
        },
        end: {
          line: 24,
          column: 87
        }
      },
      "15": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 27
        }
      },
      "16": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 48
        }
      },
      "17": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 26
        }
      },
      "18": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 25
        }
      },
      "19": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "20": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 46,
          column: 7
        }
      },
      "21": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "22": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 25
        }
      },
      "23": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 52,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "useVoteList",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 20
          }
        },
        loc: {
          start: {
            line: 15,
            column: 58
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 47
          },
          end: {
            line: 20,
            column: 48
          }
        },
        loc: {
          start: {
            line: 20,
            column: 57
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 39,
            column: 26
          },
          end: {
            line: 39,
            column: 27
          }
        },
        loc: {
          start: {
            line: 39,
            column: 30
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 39
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 37
          },
          end: {
            line: 15,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 52
          },
          end: {
            line: 15,
            column: 54
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/hooks/useVoteList.ts"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { createBrowserSupabaseClient } from '@/lib/supabase/client';\nimport { Vote } from '@/types/interfaces';\nimport { VoteStatus, VoteArea } from '@/stores/voteFilterStore';\nimport { getVotesClient } from '@/lib/data-fetching/vote-service';\n\ninterface UseVoteListParams {\n  status?: VoteStatus;\n  area?: VoteArea;\n  initialVotes?: Vote[];\n}\n\ninterface UseVoteListReturn {\n  votes: Vote[];\n  isLoading: boolean;\n  error: Error | null;\n  refetch: () => Promise<void>;\n}\n\n/**\n * \uD22C\uD45C \uB9AC\uC2A4\uD2B8\uB97C \uAD00\uB9AC\uD558\uB294 \uB2E8\uC21C\uD654\uB41C \uD6C5\n */\nexport function useVoteList({ \n  status, \n  area, \n  initialVotes = [] \n}: UseVoteListParams): UseVoteListReturn {\n  const supabase = createBrowserSupabaseClient();\n  const [votes, setVotes] = useState<Vote[]>(initialVotes);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  const fetchVotes = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const data = await getVotesClient(supabase, status, area);\n      setVotes(data);\n    } catch (err) {\n      console.error('\uD22C\uD45C \uB370\uC774\uD130 \uB85C\uB4DC \uC624\uB958:', err);\n      setError(err as Error);\n      setVotes([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [supabase, status, area]);\n\n  // \uCD08\uAE30 \uB85C\uB4DC \uBC0F \uD544\uD130 \uBCC0\uACBD \uC2DC \uB370\uC774\uD130 \uD398\uCE6D\n  useEffect(() => {\n    if (initialVotes.length === 0) {\n      fetchVotes();\n    }\n  }, [fetchVotes, initialVotes.length]);\n\n  return {\n    votes,\n    isLoading,\n    error,\n    refetch: fetchVotes,\n  };\n} "],
      names: ["useVoteList", "status", "area", "initialVotes", "supabase", "createBrowserSupabaseClient", "votes", "setVotes", "useState", "isLoading", "setIsLoading", "error", "setError", "fetchVotes", "useCallback", "data", "getVotesClient", "err", "console", "useEffect", "length", "refetch"],
      mappings: "AAAA;;;;;+BAwBgBA;;;eAAAA;;;uBAtBiC;wBACL;6BAGb;AAkBxB,SAASA,YAAY,EAC1BC,MAAM,EACNC,IAAI,EACJC,eAAe,EAAE,EACC;IAClB,MAAMC,WAAWC,IAAAA,mCAA2B;IAC5C,MAAM,CAACC,OAAOC,SAAS,GAAGC,IAAAA,eAAQ,EAASL;IAC3C,MAAM,CAACM,WAAWC,aAAa,GAAGF,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAe;IAEjD,MAAMK,aAAaC,IAAAA,kBAAW,EAAC;QAC7B,IAAI;YACFJ,aAAa;YACbE,SAAS;YAET,MAAMG,OAAO,MAAMC,IAAAA,2BAAc,EAACZ,UAAUH,QAAQC;YACpDK,SAASQ;QACX,EAAE,OAAOE,KAAK;YACZC,QAAQP,KAAK,CAAC,iBAAiBM;YAC/BL,SAASK;YACTV,SAAS,EAAE;QACb,SAAU;YACRG,aAAa;QACf;IACF,GAAG;QAACN;QAAUH;QAAQC;KAAK;IAE3B,yBAAyB;IACzBiB,IAAAA,gBAAS,EAAC;QACR,IAAIhB,aAAaiB,MAAM,KAAK,GAAG;YAC7BP;QACF;IACF,GAAG;QAACA;QAAYV,aAAaiB,MAAM;KAAC;IAEpC,OAAO;QACLd;QACAG;QACAE;QACAU,SAASR;IACX;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "de138de096caec8bd569dd7a6cdcdd6a3e185c22"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1g6bsm8lgm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1g6bsm8lgm();
cov_1g6bsm8lgm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1g6bsm8lgm().s[1]++;
Object.defineProperty(exports, "useVoteList", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1g6bsm8lgm().f[0]++;
    cov_1g6bsm8lgm().s[2]++;
    return useVoteList;
  }
});
const _react =
/* istanbul ignore next */
(cov_1g6bsm8lgm().s[3]++, require("react"));
const _client =
/* istanbul ignore next */
(cov_1g6bsm8lgm().s[4]++, require("../lib/supabase/client"));
const _voteservice =
/* istanbul ignore next */
(cov_1g6bsm8lgm().s[5]++, require("../lib/data-fetching/vote-service"));
function useVoteList({
  status,
  area,
  initialVotes =
  /* istanbul ignore next */
  (cov_1g6bsm8lgm().b[0][0]++, [])
}) {
  /* istanbul ignore next */
  cov_1g6bsm8lgm().f[1]++;
  const supabase =
  /* istanbul ignore next */
  (cov_1g6bsm8lgm().s[6]++, (0, _client.createBrowserSupabaseClient)());
  const [votes, setVotes] =
  /* istanbul ignore next */
  (cov_1g6bsm8lgm().s[7]++, (0, _react.useState)(initialVotes));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1g6bsm8lgm().s[8]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1g6bsm8lgm().s[9]++, (0, _react.useState)(null));
  const fetchVotes =
  /* istanbul ignore next */
  (cov_1g6bsm8lgm().s[10]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1g6bsm8lgm().f[2]++;
    cov_1g6bsm8lgm().s[11]++;
    try {
      /* istanbul ignore next */
      cov_1g6bsm8lgm().s[12]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_1g6bsm8lgm().s[13]++;
      setError(null);
      const data =
      /* istanbul ignore next */
      (cov_1g6bsm8lgm().s[14]++, await (0, _voteservice.getVotesClient)(supabase, status, area));
      /* istanbul ignore next */
      cov_1g6bsm8lgm().s[15]++;
      setVotes(data);
    } catch (err) {
      /* istanbul ignore next */
      cov_1g6bsm8lgm().s[16]++;
      console.error('투표 데이터 로드 오류:', err);
      /* istanbul ignore next */
      cov_1g6bsm8lgm().s[17]++;
      setError(err);
      /* istanbul ignore next */
      cov_1g6bsm8lgm().s[18]++;
      setVotes([]);
    } finally {
      /* istanbul ignore next */
      cov_1g6bsm8lgm().s[19]++;
      setIsLoading(false);
    }
  }, [supabase, status, area]));
  // 초기 로드 및 필터 변경 시 데이터 페칭
  /* istanbul ignore next */
  cov_1g6bsm8lgm().s[20]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1g6bsm8lgm().f[3]++;
    cov_1g6bsm8lgm().s[21]++;
    if (initialVotes.length === 0) {
      /* istanbul ignore next */
      cov_1g6bsm8lgm().b[1][0]++;
      cov_1g6bsm8lgm().s[22]++;
      fetchVotes();
    } else
    /* istanbul ignore next */
    {
      cov_1g6bsm8lgm().b[1][1]++;
    }
  }, [fetchVotes, initialVotes.length]);
  /* istanbul ignore next */
  cov_1g6bsm8lgm().s[23]++;
  return {
    votes,
    isLoading,
    error,
    refetch: fetchVotes
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWc2YnNtOGxnbSIsImFjdHVhbENvdmVyYWdlIiwicyIsInVzZVZvdGVMaXN0Iiwic3RhdHVzIiwiYXJlYSIsImluaXRpYWxWb3RlcyIsImIiLCJmIiwic3VwYWJhc2UiLCJfY2xpZW50IiwiY3JlYXRlQnJvd3NlclN1cGFiYXNlQ2xpZW50Iiwidm90ZXMiLCJzZXRWb3RlcyIsIl9yZWFjdCIsInVzZVN0YXRlIiwiaXNMb2FkaW5nIiwic2V0SXNMb2FkaW5nIiwiZXJyb3IiLCJzZXRFcnJvciIsImZldGNoVm90ZXMiLCJ1c2VDYWxsYmFjayIsImRhdGEiLCJfdm90ZXNlcnZpY2UiLCJnZXRWb3Rlc0NsaWVudCIsImVyciIsImNvbnNvbGUiLCJ1c2VFZmZlY3QiLCJsZW5ndGgiLCJyZWZldGNoIl0sInNvdXJjZXMiOlsiL1VzZXJzL2NoZW9saHl1bi9SZXBvc2l0b3JpZXMvcGljbmljLXdlYi9ob29rcy91c2VWb3RlTGlzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3NlclN1cGFiYXNlQ2xpZW50IH0gZnJvbSAnQC9saWIvc3VwYWJhc2UvY2xpZW50JztcbmltcG9ydCB7IFZvdGUgfSBmcm9tICdAL3R5cGVzL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgVm90ZVN0YXR1cywgVm90ZUFyZWEgfSBmcm9tICdAL3N0b3Jlcy92b3RlRmlsdGVyU3RvcmUnO1xuaW1wb3J0IHsgZ2V0Vm90ZXNDbGllbnQgfSBmcm9tICdAL2xpYi9kYXRhLWZldGNoaW5nL3ZvdGUtc2VydmljZSc7XG5cbmludGVyZmFjZSBVc2VWb3RlTGlzdFBhcmFtcyB7XG4gIHN0YXR1cz86IFZvdGVTdGF0dXM7XG4gIGFyZWE/OiBWb3RlQXJlYTtcbiAgaW5pdGlhbFZvdGVzPzogVm90ZVtdO1xufVxuXG5pbnRlcmZhY2UgVXNlVm90ZUxpc3RSZXR1cm4ge1xuICB2b3RlczogVm90ZVtdO1xuICBpc0xvYWRpbmc6IGJvb2xlYW47XG4gIGVycm9yOiBFcnJvciB8IG51bGw7XG4gIHJlZmV0Y2g6ICgpID0+IFByb21pc2U8dm9pZD47XG59XG5cbi8qKlxuICog7Yis7ZGcIOumrOyKpO2KuOulvCDqtIDrpqztlZjripQg64uo7Iic7ZmU65CcIO2bhVxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlVm90ZUxpc3QoeyBcbiAgc3RhdHVzLCBcbiAgYXJlYSwgXG4gIGluaXRpYWxWb3RlcyA9IFtdIFxufTogVXNlVm90ZUxpc3RQYXJhbXMpOiBVc2VWb3RlTGlzdFJldHVybiB7XG4gIGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQnJvd3NlclN1cGFiYXNlQ2xpZW50KCk7XG4gIGNvbnN0IFt2b3Rlcywgc2V0Vm90ZXNdID0gdXNlU3RhdGU8Vm90ZVtdPihpbml0aWFsVm90ZXMpO1xuICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlPEVycm9yIHwgbnVsbD4obnVsbCk7XG5cbiAgY29uc3QgZmV0Y2hWb3RlcyA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgc2V0SXNMb2FkaW5nKHRydWUpO1xuICAgICAgc2V0RXJyb3IobnVsbCk7XG5cbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBnZXRWb3Rlc0NsaWVudChzdXBhYmFzZSwgc3RhdHVzLCBhcmVhKTtcbiAgICAgIHNldFZvdGVzKGRhdGEpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcign7Yis7ZGcIOuNsOydtO2EsCDroZzrk5wg7Jik66WYOicsIGVycik7XG4gICAgICBzZXRFcnJvcihlcnIgYXMgRXJyb3IpO1xuICAgICAgc2V0Vm90ZXMoW10pO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfSwgW3N1cGFiYXNlLCBzdGF0dXMsIGFyZWFdKTtcblxuICAvLyDstIjquLAg66Gc65OcIOuwjyDtlYTthLAg67OA6rK9IOyLnCDrjbDsnbTthLAg7Y6Y7LmtXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGluaXRpYWxWb3Rlcy5sZW5ndGggPT09IDApIHtcbiAgICAgIGZldGNoVm90ZXMoKTtcbiAgICB9XG4gIH0sIFtmZXRjaFZvdGVzLCBpbml0aWFsVm90ZXMubGVuZ3RoXSk7XG5cbiAgcmV0dXJuIHtcbiAgICB2b3RlcyxcbiAgICBpc0xvYWRpbmcsXG4gICAgZXJyb3IsXG4gICAgcmVmZXRjaDogZmV0Y2hWb3RlcyxcbiAgfTtcbn0gIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBNkJRO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7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