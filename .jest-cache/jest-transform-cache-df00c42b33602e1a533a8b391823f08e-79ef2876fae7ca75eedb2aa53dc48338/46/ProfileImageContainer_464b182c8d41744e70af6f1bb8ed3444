99cd8fe41c124b3442dfcbd051b7c9e5
"use strict";

/* istanbul ignore next */
function cov_11yya0pg7a() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/components/layouts/ProfileImageContainer.tsx";
  var hash = "ea6a110687f07f63206ae01b7b47577addff1227";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/components/layouts/ProfileImageContainer.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "5": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 76
        }
      },
      "6": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "8": {
        start: {
          line: 20,
          column: 30
        },
        end: {
          line: 31,
          column: 1
        }
      },
      "9": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 30,
          column: 7
        }
      },
      "10": {
        start: {
          line: 32,
          column: 17
        },
        end: {
          line: 32,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 30
          },
          end: {
            line: 20,
            column: 31
          }
        },
        loc: {
          start: {
            line: 20,
            column: 59
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 20
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 38
          }
        }, {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 18,
            column: 5
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 14
          }
        }, {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 32
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 43
          },
          end: {
            line: 20,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 20,
            column: 50
          },
          end: {
            line: 20,
            column: 54
          }
        }],
        line: 20
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/components/layouts/ProfileImageContainer.tsx"],
      sourcesContent: ["import React from 'react';\nimport Image from 'next/image';\nimport {settings} from '@/config/settings';\n\ninterface ProfileImageContainerProps {\n  src: string;\n  alt: string;\n  size?: 'sm' | 'md' | 'lg';\n}\n\nconst ProfileImageContainer: React.FC<ProfileImageContainerProps> = ({\n  src,\n  alt,\n  size = 'md',\n}) => {\n  return (\n    <div className={`relative rounded-full overflow-hidden ${settings.layout.profileImage.sizes[size]}`}>\n      <Image\n        src={src}\n        alt={alt}\n        fill\n        sizes=\"100px\"\n        className=\"object-cover\"\n      />\n    </div>\n  );\n};\n\nexport default ProfileImageContainer;\n"],
      names: ["ProfileImageContainer", "src", "alt", "size", "div", "className", "settings", "layout", "profileImage", "sizes", "Image", "fill"],
      mappings: ";;;;+BA4BA;;;eAAA;;;;8DA5BkB;8DACA;0BACK;;;;;;AAQvB,MAAMA,wBAA8D,CAAC,EACnEC,GAAG,EACHC,GAAG,EACHC,OAAO,IAAI,EACZ;IACC,qBACE,qBAACC;QAAIC,WAAW,CAAC,sCAAsC,EAAEC,kBAAQ,CAACC,MAAM,CAACC,YAAY,CAACC,KAAK,CAACN,KAAK,EAAE;kBACjG,cAAA,qBAACO,cAAK;YACJT,KAAKA;YACLC,KAAKA;YACLS,IAAI;YACJF,OAAM;YACNJ,WAAU;;;AAIlB;MAEA,WAAeL"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ea6a110687f07f63206ae01b7b47577addff1227"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11yya0pg7a = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11yya0pg7a();
cov_11yya0pg7a().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_11yya0pg7a().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_11yya0pg7a().f[0]++;
    cov_11yya0pg7a().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_11yya0pg7a().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_11yya0pg7a().s[4]++, _interop_require_default(require("react")));
const _image =
/* istanbul ignore next */
(/*#__PURE__*/cov_11yya0pg7a().s[5]++, _interop_require_default(require("next/image")));
const _settings =
/* istanbul ignore next */
(cov_11yya0pg7a().s[6]++, require("../../config/settings"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_11yya0pg7a().f[1]++;
  cov_11yya0pg7a().s[7]++;
  return /* istanbul ignore next */(cov_11yya0pg7a().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_11yya0pg7a().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_11yya0pg7a().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_11yya0pg7a().b[0][1]++, {
    default: obj
  });
}
/* istanbul ignore next */
cov_11yya0pg7a().s[8]++;
const ProfileImageContainer = ({
  src,
  alt,
  size =
  /* istanbul ignore next */
  (cov_11yya0pg7a().b[2][0]++, 'md')
}) => {
  /* istanbul ignore next */
  cov_11yya0pg7a().f[2]++;
  cov_11yya0pg7a().s[9]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: `relative rounded-full overflow-hidden ${_settings.settings.layout.profileImage.sizes[size]}`,
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_image.default, {
      src: src,
      alt: alt,
      fill: true,
      sizes: "100px",
      className: "object-cover"
    })
  });
};
const _default =
/* istanbul ignore next */
(cov_11yya0pg7a().s[10]++, ProfileImageContainer);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsIlByb2ZpbGVJbWFnZUNvbnRhaW5lciIsInNyYyIsImFsdCIsInNpemUiLCJjb3ZfMTF5eWEwcGc3YSIsImIiLCJmIiwicyIsIl9qc3hydW50aW1lIiwianN4IiwiY2xhc3NOYW1lIiwiX3NldHRpbmdzIiwic2V0dGluZ3MiLCJsYXlvdXQiLCJwcm9maWxlSW1hZ2UiLCJzaXplcyIsIl9pbWFnZSIsImRlZmF1bHQiLCJmaWxsIl0sInNvdXJjZXMiOlsiL1VzZXJzL2NoZW9saHl1bi9SZXBvc2l0b3JpZXMvcGljbmljLXdlYi9jb21wb25lbnRzL2xheW91dHMvUHJvZmlsZUltYWdlQ29udGFpbmVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEltYWdlIGZyb20gJ25leHQvaW1hZ2UnO1xuaW1wb3J0IHtzZXR0aW5nc30gZnJvbSAnQC9jb25maWcvc2V0dGluZ3MnO1xuXG5pbnRlcmZhY2UgUHJvZmlsZUltYWdlQ29udGFpbmVyUHJvcHMge1xuICBzcmM6IHN0cmluZztcbiAgYWx0OiBzdHJpbmc7XG4gIHNpemU/OiAnc20nIHwgJ21kJyB8ICdsZyc7XG59XG5cbmNvbnN0IFByb2ZpbGVJbWFnZUNvbnRhaW5lcjogUmVhY3QuRkM8UHJvZmlsZUltYWdlQ29udGFpbmVyUHJvcHM+ID0gKHtcbiAgc3JjLFxuICBhbHQsXG4gIHNpemUgPSAnbWQnLFxufSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtgcmVsYXRpdmUgcm91bmRlZC1mdWxsIG92ZXJmbG93LWhpZGRlbiAke3NldHRpbmdzLmxheW91dC5wcm9maWxlSW1hZ2Uuc2l6ZXNbc2l6ZV19YH0+XG4gICAgICA8SW1hZ2VcbiAgICAgICAgc3JjPXtzcmN9XG4gICAgICAgIGFsdD17YWx0fVxuICAgICAgICBmaWxsXG4gICAgICAgIHNpemVzPVwiMTAwcHhcIlxuICAgICAgICBjbGFzc05hbWU9XCJvYmplY3QtY292ZXJcIlxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFByb2ZpbGVJbWFnZUNvbnRhaW5lcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBNEJBOzs7Ozs7V0FBQUEsUUFBQTs7Ozs7Ozs7d0VBNUJrQjs7O3dFQUNBOzs7a0NBQ0s7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUXZCLE1BQU1DLHFCQUFBLEdBQThEQSxDQUFDO0VBQ25FQyxHQUFHO0VBQ0hDLEdBQUc7RUFDSEMsSUFBQTtFQUFBO0VBQUEsQ0FBQUMsY0FBQSxHQUFBQyxDQUFBLFVBQU8sSUFBSTtBQUFBLENBQ1o7RUFBQTtFQUFBRCxjQUFBLEdBQUFFLENBQUE7RUFBQUYsY0FBQSxHQUFBRyxDQUFBO0VBQ0Msb0JBQ0UsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUM7SUFBSUMsU0FBQSxFQUFXLHlDQUF5Q0MsU0FBQSxDQUFBQyxRQUFRLENBQUNDLE1BQU0sQ0FBQ0MsWUFBWSxDQUFDQyxLQUFLLENBQUNaLElBQUEsQ0FBSyxFQUFFO2NBQ2pHLGlCQUFBSyxXQUFBLENBQUFDLEdBQUEsRUFBQ08sTUFBQSxDQUFBQyxPQUFLO01BQ0poQixHQUFBLEVBQUtBLEdBQUE7TUFDTEMsR0FBQSxFQUFLQSxHQUFBO01BQ0xnQixJQUFJO01BQ0pILEtBQUEsRUFBTTtNQUNOTCxTQUFBLEVBQVU7OztBQUlsQjtNQUVBWCxRQUFBO0FBQUE7QUFBQSxDQUFBSyxjQUFBLEdBQUFHLENBQUEsUUFBZVAscUJBQUEiLCJpZ25vcmVMaXN0IjpbXX0=