{"version":3,"names":["getServerVoteById","cov_q6wgsqf6t","f","s","getServerVoteData","getServerVoteItems","getServerVoteRewards","id","supabase","_supabaseserverclient","createClient","data","voteData","error","voteError","from","select","eq","is","single","b","deletedAt","deleted_at","startAt","start_at","stopAt","stop_at","createdAt","created_at","updatedAt","updated_at","mainImage","main_image","resultImage","result_image","waitImage","wait_image","voteCategory","vote_category","voteContent","vote_content","voteSubCategory","vote_sub_category","visibleAt","visible_at","title","console","voteId","voteItemsData","voteItemsError","length","map","item","vote_id","artistId","artist_id","groupId","group_id","voteTotal","vote_total","artist","rewardsData","rewardsError","reward","filter","Boolean","vote","voteItems","rewards","Promise","all"],"sources":["/Users/cheolhyun/Repositories/picnic-web/utils/api/serverQueries.ts"],"sourcesContent":["import {createClient} from \"@/utils/supabase-server-client\";\nimport {Reward, Vote, VoteItem} from \"@/types/interfaces\";\n\n// 서버 컴포넌트에서 투표 상세 정보 가져오기\nexport const getServerVoteById = async (id: number): Promise<Vote | null> => {\n    try {\n        const supabase = await createClient();\n        const { data: voteData, error: voteError } = await supabase\n            .from(\"vote\")\n            .select(`\n        *\n      `)\n            .eq(\"id\", id)\n            .is(\"deleted_at\", null)\n            .single();\n\n        if (voteError) throw voteError;\n        if (!voteData) return null;\n\n        return {\n            ...voteData,\n            deletedAt: voteData.deleted_at,\n            startAt: voteData.start_at,\n            stopAt: voteData.stop_at,\n            createdAt: voteData.created_at,\n            updatedAt: voteData.updated_at,\n            mainImage: voteData.main_image,\n            resultImage: voteData.result_image,\n            waitImage: voteData.wait_image,\n            voteCategory: voteData.vote_category,\n            voteContent: voteData.vote_content,\n            voteSubCategory: voteData.vote_sub_category,\n            visibleAt: voteData.visible_at,\n            title: voteData.title || \"제목 없음\",\n        };\n    } catch (error) {\n        console.error(\n            \"서버: 투표 상세 정보를 가져오는 중 오류가 발생했습니다:\",\n            error,\n        );\n        return null;\n    }\n};\n\n// 서버 컴포넌트에서 투표 항목 데이터 가져오기\nexport const getServerVoteItems = async (\n    voteId: number,\n): Promise<VoteItem[]> => {\n    try {\n        const supabase = await createClient();\n        const { data: voteItemsData, error: voteItemsError } = await supabase\n            .from(\"vote_item\")\n            .select(`\n        *,\n        artist (\n          *,\n          artist_group (\n            *\n          )\n        )\n      `)\n            .eq(\"vote_id\", voteId)\n            .is(\"deleted_at\", null);\n\n        if (voteItemsError) throw voteItemsError;\n        if (!voteItemsData || voteItemsData.length === 0) return [];\n\n        return voteItemsData.map((item: any) => ({\n            ...item,\n            deletedAt: item.deleted_at,\n            createdAt: item.created_at,\n            updatedAt: item.updated_at,\n            voteId: item.vote_id,\n            artistId: item.artist_id,\n            groupId: item.group_id,\n            voteTotal: item.vote_total,\n            artist: item.artist,\n        }));\n    } catch (error) {\n        console.error(\n            \"서버: 투표 항목 데이터를 가져오는 중 오류가 발생했습니다:\",\n            error,\n        );\n        return [];\n    }\n};\n\n// 서버 컴포넌트에서 투표 리워드 데이터 가져오기\nexport const getServerVoteRewards = async (\n    voteId: number,\n): Promise<Reward[]> => {\n    try {\n        const supabase = await createClient();\n        const { data: rewardsData, error: rewardsError } = await supabase\n            .from(\"vote_reward\")\n            .select(`\n        reward:reward_id (*)\n      `)\n            .eq(\"vote_id\", voteId);\n\n        if (rewardsError) throw rewardsError;\n        if (!rewardsData || rewardsData.length === 0) return [];\n\n        return rewardsData\n            .map((item: any) => item.reward)\n            .filter(Boolean);\n    } catch (error) {\n        console.error(\n            \"서버: 투표 리워드 데이터를 가져오는 중 오류가 발생했습니다:\",\n            error,\n        );\n        return [];\n    }\n};\n\n// 투표 데이터, 아이템, 리워드를 한 번에 가져오는 함수\nexport const getServerVoteData = async (id: number) => {\n    try {\n        const [vote, voteItems, rewards] = await Promise.all([\n            getServerVoteById(id),\n            getServerVoteItems(id),\n            getServerVoteRewards(id),\n        ]);\n\n        return { vote, voteItems, rewards };\n    } catch (error) {\n        console.error(\n            \"서버: 투표 데이터를 가져오는 중 오류가 발생했습니다:\",\n            error,\n        );\n        return { vote: null, voteItems: [], rewards: [] };\n    }\n};\n"],"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","ignoreList":[]}