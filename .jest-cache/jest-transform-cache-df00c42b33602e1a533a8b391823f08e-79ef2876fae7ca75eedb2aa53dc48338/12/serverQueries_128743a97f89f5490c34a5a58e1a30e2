e543b8106ea31baaba49b50ac58552cc
"use strict";

/* istanbul ignore next */
function cov_q6wgsqf6t() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/utils/api/serverQueries.ts";
  var hash = "d580a9aa4034ec157564ffc1c79e4983e732e2d1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/utils/api/serverQueries.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 33
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "8": {
        start: {
          line: 25,
          column: 30
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "9": {
        start: {
          line: 26,
          column: 26
        },
        end: {
          line: 54,
          column: 1
        }
      },
      "10": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "11": {
        start: {
          line: 28,
          column: 25
        },
        end: {
          line: 28,
          column: 72
        }
      },
      "12": {
        start: {
          line: 29,
          column: 53
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "13": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 39
        }
      },
      "14": {
        start: {
          line: 32,
          column: 23
        },
        end: {
          line: 32,
          column: 39
        }
      },
      "15": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 35
        }
      },
      "16": {
        start: {
          line: 33,
          column: 23
        },
        end: {
          line: 33,
          column: 35
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "18": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 65
        }
      },
      "19": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 20
        }
      },
      "20": {
        start: {
          line: 55,
          column: 27
        },
        end: {
          line: 84,
          column: 1
        }
      },
      "21": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "22": {
        start: {
          line: 57,
          column: 25
        },
        end: {
          line: 57,
          column: 72
        }
      },
      "23": {
        start: {
          line: 58,
          column: 63
        },
        end: {
          line: 66,
          column: 53
        }
      },
      "24": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 49
        }
      },
      "25": {
        start: {
          line: 67,
          column: 28
        },
        end: {
          line: 67,
          column: 49
        }
      },
      "26": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 68
        }
      },
      "27": {
        start: {
          line: 68,
          column: 58
        },
        end: {
          line: 68,
          column: 68
        }
      },
      "28": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 79,
          column: 16
        }
      },
      "29": {
        start: {
          line: 69,
          column: 42
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "30": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 66
        }
      },
      "31": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 18
        }
      },
      "32": {
        start: {
          line: 85,
          column: 29
        },
        end: {
          line: 98,
          column: 1
        }
      },
      "33": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "34": {
        start: {
          line: 87,
          column: 25
        },
        end: {
          line: 87,
          column: 72
        }
      },
      "35": {
        start: {
          line: 88,
          column: 59
        },
        end: {
          line: 90,
          column: 30
        }
      },
      "36": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 45
        }
      },
      "37": {
        start: {
          line: 91,
          column: 26
        },
        end: {
          line: 91,
          column: 45
        }
      },
      "38": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 64
        }
      },
      "39": {
        start: {
          line: 92,
          column: 54
        },
        end: {
          line: 92,
          column: 64
        }
      },
      "40": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 68
        }
      },
      "41": {
        start: {
          line: 93,
          column: 39
        },
        end: {
          line: 93,
          column: 50
        }
      },
      "42": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 67
        }
      },
      "43": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 18
        }
      },
      "44": {
        start: {
          line: 99,
          column: 26
        },
        end: {
          line: 119,
          column: 1
        }
      },
      "45": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "46": {
        start: {
          line: 101,
          column: 43
        },
        end: {
          line: 105,
          column: 10
        }
      },
      "47": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "48": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 63
        }
      },
      "49": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 117,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 12,
            column: 24
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 15,
            column: 24
          }
        },
        loc: {
          start: {
            line: 15,
            column: 34
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 25
          }
        },
        loc: {
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 27
          }
        },
        loc: {
          start: {
            line: 21,
            column: 37
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 27
          }
        },
        loc: {
          start: {
            line: 26,
            column: 38
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 55,
            column: 27
          },
          end: {
            line: 55,
            column: 28
          }
        },
        loc: {
          start: {
            line: 55,
            column: 43
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 55
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 69,
            column: 33
          },
          end: {
            line: 69,
            column: 34
          }
        },
        loc: {
          start: {
            line: 69,
            column: 42
          },
          end: {
            line: 79,
            column: 13
          }
        },
        line: 69
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 85,
            column: 29
          },
          end: {
            line: 85,
            column: 30
          }
        },
        loc: {
          start: {
            line: 85,
            column: 45
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 85
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 93,
            column: 31
          },
          end: {
            line: 93,
            column: 32
          }
        },
        loc: {
          start: {
            line: 93,
            column: 39
          },
          end: {
            line: 93,
            column: 50
          }
        },
        line: 93
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 99,
            column: 26
          },
          end: {
            line: 99,
            column: 27
          }
        },
        loc: {
          start: {
            line: 99,
            column: 38
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 99
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 19
          },
          end: {
            line: 48,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 19
          },
          end: {
            line: 48,
            column: 33
          }
        }, {
          start: {
            line: 48,
            column: 37
          },
          end: {
            line: 48,
            column: 44
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 67,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 67,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 68
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 68,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 68,
            column: 26
          }
        }, {
          start: {
            line: 68,
            column: 30
          },
          end: {
            line: 68,
            column: 56
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "7": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 92,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 92,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "8": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 92,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 92,
            column: 24
          }
        }, {
          start: {
            line: 92,
            column: 28
          },
          end: {
            line: 92,
            column: 52
          }
        }],
        line: 92
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/utils/api/serverQueries.ts"],
      sourcesContent: ["import {createClient} from \"@/utils/supabase-server-client\";\nimport {Reward, Vote, VoteItem} from \"@/types/interfaces\";\n\n// \uC11C\uBC84 \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uD22C\uD45C \uC0C1\uC138 \uC815\uBCF4 \uAC00\uC838\uC624\uAE30\nexport const getServerVoteById = async (id: number): Promise<Vote | null> => {\n    try {\n        const supabase = await createClient();\n        const { data: voteData, error: voteError } = await supabase\n            .from(\"vote\")\n            .select(`\n        *\n      `)\n            .eq(\"id\", id)\n            .is(\"deleted_at\", null)\n            .single();\n\n        if (voteError) throw voteError;\n        if (!voteData) return null;\n\n        return {\n            ...voteData,\n            deletedAt: voteData.deleted_at,\n            startAt: voteData.start_at,\n            stopAt: voteData.stop_at,\n            createdAt: voteData.created_at,\n            updatedAt: voteData.updated_at,\n            mainImage: voteData.main_image,\n            resultImage: voteData.result_image,\n            waitImage: voteData.wait_image,\n            voteCategory: voteData.vote_category,\n            voteContent: voteData.vote_content,\n            voteSubCategory: voteData.vote_sub_category,\n            visibleAt: voteData.visible_at,\n            title: voteData.title || \"\uC81C\uBAA9 \uC5C6\uC74C\",\n        };\n    } catch (error) {\n        console.error(\n            \"\uC11C\uBC84: \uD22C\uD45C \uC0C1\uC138 \uC815\uBCF4\uB97C \uAC00\uC838\uC624\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4:\",\n            error,\n        );\n        return null;\n    }\n};\n\n// \uC11C\uBC84 \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uD22C\uD45C \uD56D\uBAA9 \uB370\uC774\uD130 \uAC00\uC838\uC624\uAE30\nexport const getServerVoteItems = async (\n    voteId: number,\n): Promise<VoteItem[]> => {\n    try {\n        const supabase = await createClient();\n        const { data: voteItemsData, error: voteItemsError } = await supabase\n            .from(\"vote_item\")\n            .select(`\n        *,\n        artist (\n          *,\n          artist_group (\n            *\n          )\n        )\n      `)\n            .eq(\"vote_id\", voteId)\n            .is(\"deleted_at\", null);\n\n        if (voteItemsError) throw voteItemsError;\n        if (!voteItemsData || voteItemsData.length === 0) return [];\n\n        return voteItemsData.map((item: any) => ({\n            ...item,\n            deletedAt: item.deleted_at,\n            createdAt: item.created_at,\n            updatedAt: item.updated_at,\n            voteId: item.vote_id,\n            artistId: item.artist_id,\n            groupId: item.group_id,\n            voteTotal: item.vote_total,\n            artist: item.artist,\n        }));\n    } catch (error) {\n        console.error(\n            \"\uC11C\uBC84: \uD22C\uD45C \uD56D\uBAA9 \uB370\uC774\uD130\uB97C \uAC00\uC838\uC624\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4:\",\n            error,\n        );\n        return [];\n    }\n};\n\n// \uC11C\uBC84 \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uD22C\uD45C \uB9AC\uC6CC\uB4DC \uB370\uC774\uD130 \uAC00\uC838\uC624\uAE30\nexport const getServerVoteRewards = async (\n    voteId: number,\n): Promise<Reward[]> => {\n    try {\n        const supabase = await createClient();\n        const { data: rewardsData, error: rewardsError } = await supabase\n            .from(\"vote_reward\")\n            .select(`\n        reward:reward_id (*)\n      `)\n            .eq(\"vote_id\", voteId);\n\n        if (rewardsError) throw rewardsError;\n        if (!rewardsData || rewardsData.length === 0) return [];\n\n        return rewardsData\n            .map((item: any) => item.reward)\n            .filter(Boolean);\n    } catch (error) {\n        console.error(\n            \"\uC11C\uBC84: \uD22C\uD45C \uB9AC\uC6CC\uB4DC \uB370\uC774\uD130\uB97C \uAC00\uC838\uC624\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4:\",\n            error,\n        );\n        return [];\n    }\n};\n\n// \uD22C\uD45C \uB370\uC774\uD130, \uC544\uC774\uD15C, \uB9AC\uC6CC\uB4DC\uB97C \uD55C \uBC88\uC5D0 \uAC00\uC838\uC624\uB294 \uD568\uC218\nexport const getServerVoteData = async (id: number) => {\n    try {\n        const [vote, voteItems, rewards] = await Promise.all([\n            getServerVoteById(id),\n            getServerVoteItems(id),\n            getServerVoteRewards(id),\n        ]);\n\n        return { vote, voteItems, rewards };\n    } catch (error) {\n        console.error(\n            \"\uC11C\uBC84: \uD22C\uD45C \uB370\uC774\uD130\uB97C \uAC00\uC838\uC624\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4:\",\n            error,\n        );\n        return { vote: null, voteItems: [], rewards: [] };\n    }\n};\n"],
      names: ["getServerVoteById", "getServerVoteData", "getServerVoteItems", "getServerVoteRewards", "id", "supabase", "createClient", "data", "voteData", "error", "voteError", "from", "select", "eq", "is", "single", "deletedAt", "deleted_at", "startAt", "start_at", "stopAt", "stop_at", "createdAt", "created_at", "updatedAt", "updated_at", "mainImage", "main_image", "resultImage", "result_image", "waitImage", "wait_image", "voteCategory", "vote_category", "voteContent", "vote_content", "voteSubCategory", "vote_sub_category", "visibleAt", "visible_at", "title", "console", "voteId", "voteItemsData", "voteItemsError", "length", "map", "item", "vote_id", "artistId", "artist_id", "groupId", "group_id", "voteTotal", "vote_total", "artist", "rewardsData", "rewardsError", "reward", "filter", "Boolean", "vote", "voteItems", "rewards", "Promise", "all"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d580a9aa4034ec157564ffc1c79e4983e732e2d1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_q6wgsqf6t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_q6wgsqf6t();
cov_q6wgsqf6t().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_q6wgsqf6t().f[0]++;
  cov_q6wgsqf6t().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_q6wgsqf6t().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_q6wgsqf6t().s[3]++;
_export(exports, {
  getServerVoteById: function () {
    /* istanbul ignore next */
    cov_q6wgsqf6t().f[1]++;
    cov_q6wgsqf6t().s[4]++;
    return getServerVoteById;
  },
  getServerVoteData: function () {
    /* istanbul ignore next */
    cov_q6wgsqf6t().f[2]++;
    cov_q6wgsqf6t().s[5]++;
    return getServerVoteData;
  },
  getServerVoteItems: function () {
    /* istanbul ignore next */
    cov_q6wgsqf6t().f[3]++;
    cov_q6wgsqf6t().s[6]++;
    return getServerVoteItems;
  },
  getServerVoteRewards: function () {
    /* istanbul ignore next */
    cov_q6wgsqf6t().f[4]++;
    cov_q6wgsqf6t().s[7]++;
    return getServerVoteRewards;
  }
});
const _supabaseserverclient =
/* istanbul ignore next */
(cov_q6wgsqf6t().s[8]++, require("../supabase-server-client"));
/* istanbul ignore next */
cov_q6wgsqf6t().s[9]++;
const getServerVoteById = async id => {
  /* istanbul ignore next */
  cov_q6wgsqf6t().f[5]++;
  cov_q6wgsqf6t().s[10]++;
  try {
    const supabase =
    /* istanbul ignore next */
    (cov_q6wgsqf6t().s[11]++, await (0, _supabaseserverclient.createClient)());
    const {
      data: voteData,
      error: voteError
    } =
    /* istanbul ignore next */
    (cov_q6wgsqf6t().s[12]++, await supabase.from("vote").select(`
        *
      `).eq("id", id).is("deleted_at", null).single());
    /* istanbul ignore next */
    cov_q6wgsqf6t().s[13]++;
    if (voteError) {
      /* istanbul ignore next */
      cov_q6wgsqf6t().b[0][0]++;
      cov_q6wgsqf6t().s[14]++;
      throw voteError;
    } else
    /* istanbul ignore next */
    {
      cov_q6wgsqf6t().b[0][1]++;
    }
    cov_q6wgsqf6t().s[15]++;
    if (!voteData) {
      /* istanbul ignore next */
      cov_q6wgsqf6t().b[1][0]++;
      cov_q6wgsqf6t().s[16]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_q6wgsqf6t().b[1][1]++;
    }
    cov_q6wgsqf6t().s[17]++;
    return {
      ...voteData,
      deletedAt: voteData.deleted_at,
      startAt: voteData.start_at,
      stopAt: voteData.stop_at,
      createdAt: voteData.created_at,
      updatedAt: voteData.updated_at,
      mainImage: voteData.main_image,
      resultImage: voteData.result_image,
      waitImage: voteData.wait_image,
      voteCategory: voteData.vote_category,
      voteContent: voteData.vote_content,
      voteSubCategory: voteData.vote_sub_category,
      visibleAt: voteData.visible_at,
      title:
      /* istanbul ignore next */
      (cov_q6wgsqf6t().b[2][0]++, voteData.title) ||
      /* istanbul ignore next */
      (cov_q6wgsqf6t().b[2][1]++, "제목 없음")
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_q6wgsqf6t().s[18]++;
    console.error("서버: 투표 상세 정보를 가져오는 중 오류가 발생했습니다:", error);
    /* istanbul ignore next */
    cov_q6wgsqf6t().s[19]++;
    return null;
  }
};
/* istanbul ignore next */
cov_q6wgsqf6t().s[20]++;
const getServerVoteItems = async voteId => {
  /* istanbul ignore next */
  cov_q6wgsqf6t().f[6]++;
  cov_q6wgsqf6t().s[21]++;
  try {
    const supabase =
    /* istanbul ignore next */
    (cov_q6wgsqf6t().s[22]++, await (0, _supabaseserverclient.createClient)());
    const {
      data: voteItemsData,
      error: voteItemsError
    } =
    /* istanbul ignore next */
    (cov_q6wgsqf6t().s[23]++, await supabase.from("vote_item").select(`
        *,
        artist (
          *,
          artist_group (
            *
          )
        )
      `).eq("vote_id", voteId).is("deleted_at", null));
    /* istanbul ignore next */
    cov_q6wgsqf6t().s[24]++;
    if (voteItemsError) {
      /* istanbul ignore next */
      cov_q6wgsqf6t().b[3][0]++;
      cov_q6wgsqf6t().s[25]++;
      throw voteItemsError;
    } else
    /* istanbul ignore next */
    {
      cov_q6wgsqf6t().b[3][1]++;
    }
    cov_q6wgsqf6t().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_q6wgsqf6t().b[5][0]++, !voteItemsData) ||
    /* istanbul ignore next */
    (cov_q6wgsqf6t().b[5][1]++, voteItemsData.length === 0)) {
      /* istanbul ignore next */
      cov_q6wgsqf6t().b[4][0]++;
      cov_q6wgsqf6t().s[27]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_q6wgsqf6t().b[4][1]++;
    }
    cov_q6wgsqf6t().s[28]++;
    return voteItemsData.map(item => {
      /* istanbul ignore next */
      cov_q6wgsqf6t().f[7]++;
      cov_q6wgsqf6t().s[29]++;
      return {
        ...item,
        deletedAt: item.deleted_at,
        createdAt: item.created_at,
        updatedAt: item.updated_at,
        voteId: item.vote_id,
        artistId: item.artist_id,
        groupId: item.group_id,
        voteTotal: item.vote_total,
        artist: item.artist
      };
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_q6wgsqf6t().s[30]++;
    console.error("서버: 투표 항목 데이터를 가져오는 중 오류가 발생했습니다:", error);
    /* istanbul ignore next */
    cov_q6wgsqf6t().s[31]++;
    return [];
  }
};
/* istanbul ignore next */
cov_q6wgsqf6t().s[32]++;
const getServerVoteRewards = async voteId => {
  /* istanbul ignore next */
  cov_q6wgsqf6t().f[8]++;
  cov_q6wgsqf6t().s[33]++;
  try {
    const supabase =
    /* istanbul ignore next */
    (cov_q6wgsqf6t().s[34]++, await (0, _supabaseserverclient.createClient)());
    const {
      data: rewardsData,
      error: rewardsError
    } =
    /* istanbul ignore next */
    (cov_q6wgsqf6t().s[35]++, await supabase.from("vote_reward").select(`
        reward:reward_id (*)
      `).eq("vote_id", voteId));
    /* istanbul ignore next */
    cov_q6wgsqf6t().s[36]++;
    if (rewardsError) {
      /* istanbul ignore next */
      cov_q6wgsqf6t().b[6][0]++;
      cov_q6wgsqf6t().s[37]++;
      throw rewardsError;
    } else
    /* istanbul ignore next */
    {
      cov_q6wgsqf6t().b[6][1]++;
    }
    cov_q6wgsqf6t().s[38]++;
    if (
    /* istanbul ignore next */
    (cov_q6wgsqf6t().b[8][0]++, !rewardsData) ||
    /* istanbul ignore next */
    (cov_q6wgsqf6t().b[8][1]++, rewardsData.length === 0)) {
      /* istanbul ignore next */
      cov_q6wgsqf6t().b[7][0]++;
      cov_q6wgsqf6t().s[39]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_q6wgsqf6t().b[7][1]++;
    }
    cov_q6wgsqf6t().s[40]++;
    return rewardsData.map(item => {
      /* istanbul ignore next */
      cov_q6wgsqf6t().f[9]++;
      cov_q6wgsqf6t().s[41]++;
      return item.reward;
    }).filter(Boolean);
  } catch (error) {
    /* istanbul ignore next */
    cov_q6wgsqf6t().s[42]++;
    console.error("서버: 투표 리워드 데이터를 가져오는 중 오류가 발생했습니다:", error);
    /* istanbul ignore next */
    cov_q6wgsqf6t().s[43]++;
    return [];
  }
};
/* istanbul ignore next */
cov_q6wgsqf6t().s[44]++;
const getServerVoteData = async id => {
  /* istanbul ignore next */
  cov_q6wgsqf6t().f[10]++;
  cov_q6wgsqf6t().s[45]++;
  try {
    const [vote, voteItems, rewards] =
    /* istanbul ignore next */
    (cov_q6wgsqf6t().s[46]++, await Promise.all([getServerVoteById(id), getServerVoteItems(id), getServerVoteRewards(id)]));
    /* istanbul ignore next */
    cov_q6wgsqf6t().s[47]++;
    return {
      vote,
      voteItems,
      rewards
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_q6wgsqf6t().s[48]++;
    console.error("서버: 투표 데이터를 가져오는 중 오류가 발생했습니다:", error);
    /* istanbul ignore next */
    cov_q6wgsqf6t().s[49]++;
    return {
      vote: null,
      voteItems: [],
      rewards: []
    };
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRTZXJ2ZXJWb3RlQnlJZCIsImNvdl9xNndnc3FmNnQiLCJmIiwicyIsImdldFNlcnZlclZvdGVEYXRhIiwiZ2V0U2VydmVyVm90ZUl0ZW1zIiwiZ2V0U2VydmVyVm90ZVJld2FyZHMiLCJpZCIsInN1cGFiYXNlIiwiX3N1cGFiYXNlc2VydmVyY2xpZW50IiwiY3JlYXRlQ2xpZW50IiwiZGF0YSIsInZvdGVEYXRhIiwiZXJyb3IiLCJ2b3RlRXJyb3IiLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJpcyIsInNpbmdsZSIsImIiLCJkZWxldGVkQXQiLCJkZWxldGVkX2F0Iiwic3RhcnRBdCIsInN0YXJ0X2F0Iiwic3RvcEF0Iiwic3RvcF9hdCIsImNyZWF0ZWRBdCIsImNyZWF0ZWRfYXQiLCJ1cGRhdGVkQXQiLCJ1cGRhdGVkX2F0IiwibWFpbkltYWdlIiwibWFpbl9pbWFnZSIsInJlc3VsdEltYWdlIiwicmVzdWx0X2ltYWdlIiwid2FpdEltYWdlIiwid2FpdF9pbWFnZSIsInZvdGVDYXRlZ29yeSIsInZvdGVfY2F0ZWdvcnkiLCJ2b3RlQ29udGVudCIsInZvdGVfY29udGVudCIsInZvdGVTdWJDYXRlZ29yeSIsInZvdGVfc3ViX2NhdGVnb3J5IiwidmlzaWJsZUF0IiwidmlzaWJsZV9hdCIsInRpdGxlIiwiY29uc29sZSIsInZvdGVJZCIsInZvdGVJdGVtc0RhdGEiLCJ2b3RlSXRlbXNFcnJvciIsImxlbmd0aCIsIm1hcCIsIml0ZW0iLCJ2b3RlX2lkIiwiYXJ0aXN0SWQiLCJhcnRpc3RfaWQiLCJncm91cElkIiwiZ3JvdXBfaWQiLCJ2b3RlVG90YWwiLCJ2b3RlX3RvdGFsIiwiYXJ0aXN0IiwicmV3YXJkc0RhdGEiLCJyZXdhcmRzRXJyb3IiLCJyZXdhcmQiLCJmaWx0ZXIiLCJCb29sZWFuIiwidm90ZSIsInZvdGVJdGVtcyIsInJld2FyZHMiLCJQcm9taXNlIiwiYWxsIl0sInNvdXJjZXMiOlsiL1VzZXJzL2NoZW9saHl1bi9SZXBvc2l0b3JpZXMvcGljbmljLXdlYi91dGlscy9hcGkvc2VydmVyUXVlcmllcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NyZWF0ZUNsaWVudH0gZnJvbSBcIkAvdXRpbHMvc3VwYWJhc2Utc2VydmVyLWNsaWVudFwiO1xuaW1wb3J0IHtSZXdhcmQsIFZvdGUsIFZvdGVJdGVtfSBmcm9tIFwiQC90eXBlcy9pbnRlcmZhY2VzXCI7XG5cbi8vIOyEnOuyhCDsu7Ttj6zrhIztirjsl5DshJwg7Yis7ZGcIOyDgeyEuCDsoJXrs7Qg6rCA7KC47Jik6riwXG5leHBvcnQgY29uc3QgZ2V0U2VydmVyVm90ZUJ5SWQgPSBhc3luYyAoaWQ6IG51bWJlcik6IFByb21pc2U8Vm90ZSB8IG51bGw+ID0+IHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBzdXBhYmFzZSA9IGF3YWl0IGNyZWF0ZUNsaWVudCgpO1xuICAgICAgICBjb25zdCB7IGRhdGE6IHZvdGVEYXRhLCBlcnJvcjogdm90ZUVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgICAgICAgLmZyb20oXCJ2b3RlXCIpXG4gICAgICAgICAgICAuc2VsZWN0KGBcbiAgICAgICAgKlxuICAgICAgYClcbiAgICAgICAgICAgIC5lcShcImlkXCIsIGlkKVxuICAgICAgICAgICAgLmlzKFwiZGVsZXRlZF9hdFwiLCBudWxsKVxuICAgICAgICAgICAgLnNpbmdsZSgpO1xuXG4gICAgICAgIGlmICh2b3RlRXJyb3IpIHRocm93IHZvdGVFcnJvcjtcbiAgICAgICAgaWYgKCF2b3RlRGF0YSkgcmV0dXJuIG51bGw7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnZvdGVEYXRhLFxuICAgICAgICAgICAgZGVsZXRlZEF0OiB2b3RlRGF0YS5kZWxldGVkX2F0LFxuICAgICAgICAgICAgc3RhcnRBdDogdm90ZURhdGEuc3RhcnRfYXQsXG4gICAgICAgICAgICBzdG9wQXQ6IHZvdGVEYXRhLnN0b3BfYXQsXG4gICAgICAgICAgICBjcmVhdGVkQXQ6IHZvdGVEYXRhLmNyZWF0ZWRfYXQsXG4gICAgICAgICAgICB1cGRhdGVkQXQ6IHZvdGVEYXRhLnVwZGF0ZWRfYXQsXG4gICAgICAgICAgICBtYWluSW1hZ2U6IHZvdGVEYXRhLm1haW5faW1hZ2UsXG4gICAgICAgICAgICByZXN1bHRJbWFnZTogdm90ZURhdGEucmVzdWx0X2ltYWdlLFxuICAgICAgICAgICAgd2FpdEltYWdlOiB2b3RlRGF0YS53YWl0X2ltYWdlLFxuICAgICAgICAgICAgdm90ZUNhdGVnb3J5OiB2b3RlRGF0YS52b3RlX2NhdGVnb3J5LFxuICAgICAgICAgICAgdm90ZUNvbnRlbnQ6IHZvdGVEYXRhLnZvdGVfY29udGVudCxcbiAgICAgICAgICAgIHZvdGVTdWJDYXRlZ29yeTogdm90ZURhdGEudm90ZV9zdWJfY2F0ZWdvcnksXG4gICAgICAgICAgICB2aXNpYmxlQXQ6IHZvdGVEYXRhLnZpc2libGVfYXQsXG4gICAgICAgICAgICB0aXRsZTogdm90ZURhdGEudGl0bGUgfHwgXCLsoJzrqqkg7JeG7J2MXCIsXG4gICAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICAgIFwi7ISc67KEOiDtiKztkZwg7IOB7IS4IOygleuztOulvCDqsIDsoLjsmKTripQg7KSRIOyYpOulmOqwgCDrsJzsg53tlojsirXri4jri6Q6XCIsXG4gICAgICAgICAgICBlcnJvcixcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufTtcblxuLy8g7ISc67KEIOy7tO2PrOuEjO2KuOyXkOyEnCDtiKztkZwg7ZWt66qpIOuNsOydtO2EsCDqsIDsoLjsmKTquLBcbmV4cG9ydCBjb25zdCBnZXRTZXJ2ZXJWb3RlSXRlbXMgPSBhc3luYyAoXG4gICAgdm90ZUlkOiBudW1iZXIsXG4pOiBQcm9taXNlPFZvdGVJdGVtW10+ID0+IHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBzdXBhYmFzZSA9IGF3YWl0IGNyZWF0ZUNsaWVudCgpO1xuICAgICAgICBjb25zdCB7IGRhdGE6IHZvdGVJdGVtc0RhdGEsIGVycm9yOiB2b3RlSXRlbXNFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgICAgIC5mcm9tKFwidm90ZV9pdGVtXCIpXG4gICAgICAgICAgICAuc2VsZWN0KGBcbiAgICAgICAgKixcbiAgICAgICAgYXJ0aXN0IChcbiAgICAgICAgICAqLFxuICAgICAgICAgIGFydGlzdF9ncm91cCAoXG4gICAgICAgICAgICAqXG4gICAgICAgICAgKVxuICAgICAgICApXG4gICAgICBgKVxuICAgICAgICAgICAgLmVxKFwidm90ZV9pZFwiLCB2b3RlSWQpXG4gICAgICAgICAgICAuaXMoXCJkZWxldGVkX2F0XCIsIG51bGwpO1xuXG4gICAgICAgIGlmICh2b3RlSXRlbXNFcnJvcikgdGhyb3cgdm90ZUl0ZW1zRXJyb3I7XG4gICAgICAgIGlmICghdm90ZUl0ZW1zRGF0YSB8fCB2b3RlSXRlbXNEYXRhLmxlbmd0aCA9PT0gMCkgcmV0dXJuIFtdO1xuXG4gICAgICAgIHJldHVybiB2b3RlSXRlbXNEYXRhLm1hcCgoaXRlbTogYW55KSA9PiAoe1xuICAgICAgICAgICAgLi4uaXRlbSxcbiAgICAgICAgICAgIGRlbGV0ZWRBdDogaXRlbS5kZWxldGVkX2F0LFxuICAgICAgICAgICAgY3JlYXRlZEF0OiBpdGVtLmNyZWF0ZWRfYXQsXG4gICAgICAgICAgICB1cGRhdGVkQXQ6IGl0ZW0udXBkYXRlZF9hdCxcbiAgICAgICAgICAgIHZvdGVJZDogaXRlbS52b3RlX2lkLFxuICAgICAgICAgICAgYXJ0aXN0SWQ6IGl0ZW0uYXJ0aXN0X2lkLFxuICAgICAgICAgICAgZ3JvdXBJZDogaXRlbS5ncm91cF9pZCxcbiAgICAgICAgICAgIHZvdGVUb3RhbDogaXRlbS52b3RlX3RvdGFsLFxuICAgICAgICAgICAgYXJ0aXN0OiBpdGVtLmFydGlzdCxcbiAgICAgICAgfSkpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgICAgICBcIuyEnOuyhDog7Yis7ZGcIO2VreuqqSDrjbDsnbTthLDrpbwg6rCA7KC47Jik64qUIOykkSDsmKTrpZjqsIAg67Cc7IOd7ZaI7Iq164uI64ukOlwiLFxuICAgICAgICAgICAgZXJyb3IsXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG59O1xuXG4vLyDshJzrsoQg7Lu07Y+s64SM7Yq47JeQ7IScIO2IrO2RnCDrpqzsm4zrk5wg642w7J207YSwIOqwgOyguOyYpOq4sFxuZXhwb3J0IGNvbnN0IGdldFNlcnZlclZvdGVSZXdhcmRzID0gYXN5bmMgKFxuICAgIHZvdGVJZDogbnVtYmVyLFxuKTogUHJvbWlzZTxSZXdhcmRbXT4gPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHN1cGFiYXNlID0gYXdhaXQgY3JlYXRlQ2xpZW50KCk7XG4gICAgICAgIGNvbnN0IHsgZGF0YTogcmV3YXJkc0RhdGEsIGVycm9yOiByZXdhcmRzRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgICAgICAuZnJvbShcInZvdGVfcmV3YXJkXCIpXG4gICAgICAgICAgICAuc2VsZWN0KGBcbiAgICAgICAgcmV3YXJkOnJld2FyZF9pZCAoKilcbiAgICAgIGApXG4gICAgICAgICAgICAuZXEoXCJ2b3RlX2lkXCIsIHZvdGVJZCk7XG5cbiAgICAgICAgaWYgKHJld2FyZHNFcnJvcikgdGhyb3cgcmV3YXJkc0Vycm9yO1xuICAgICAgICBpZiAoIXJld2FyZHNEYXRhIHx8IHJld2FyZHNEYXRhLmxlbmd0aCA9PT0gMCkgcmV0dXJuIFtdO1xuXG4gICAgICAgIHJldHVybiByZXdhcmRzRGF0YVxuICAgICAgICAgICAgLm1hcCgoaXRlbTogYW55KSA9PiBpdGVtLnJld2FyZClcbiAgICAgICAgICAgIC5maWx0ZXIoQm9vbGVhbik7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICAgIFwi7ISc67KEOiDtiKztkZwg66as7JuM65OcIOuNsOydtO2EsOulvCDqsIDsoLjsmKTripQg7KSRIOyYpOulmOqwgCDrsJzsg53tlojsirXri4jri6Q6XCIsXG4gICAgICAgICAgICBlcnJvcixcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbn07XG5cbi8vIO2IrO2RnCDrjbDsnbTthLAsIOyVhOydtO2FnCwg66as7JuM65Oc66W8IO2VnCDrsojsl5Ag6rCA7KC47Jik64qUIO2VqOyImFxuZXhwb3J0IGNvbnN0IGdldFNlcnZlclZvdGVEYXRhID0gYXN5bmMgKGlkOiBudW1iZXIpID0+IHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBbdm90ZSwgdm90ZUl0ZW1zLCByZXdhcmRzXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgICAgIGdldFNlcnZlclZvdGVCeUlkKGlkKSxcbiAgICAgICAgICAgIGdldFNlcnZlclZvdGVJdGVtcyhpZCksXG4gICAgICAgICAgICBnZXRTZXJ2ZXJWb3RlUmV3YXJkcyhpZCksXG4gICAgICAgIF0pO1xuXG4gICAgICAgIHJldHVybiB7IHZvdGUsIHZvdGVJdGVtcywgcmV3YXJkcyB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgICAgICBcIuyEnOuyhDog7Yis7ZGcIOuNsOydtO2EsOulvCDqsIDsoLjsmKTripQg7KSRIOyYpOulmOqwgCDrsJzsg53tlojsirXri4jri6Q6XCIsXG4gICAgICAgICAgICBlcnJvcixcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHsgdm90ZTogbnVsbCwgdm90ZUl0ZW1zOiBbXSwgcmV3YXJkczogW10gfTtcbiAgICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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