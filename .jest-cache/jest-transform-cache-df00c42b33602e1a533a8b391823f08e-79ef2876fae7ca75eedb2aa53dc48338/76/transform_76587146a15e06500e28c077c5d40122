29113bb794c3d5a3e3fc97dc5d5eea08
/**
 * 데이터 변환 유틸리티
 * 
 * Supabase에서 반환되는 데이터의 필드명을 스네이크 케이스(snake_case)에서 
 * 카멜 케이스(camelCase)로 변환하는 유틸리티 함수를 제공합니다.
 */ /**
    * 스네이크 케이스 문자열을 카멜 케이스로 변환합니다.
    * 
    * @example
    * // 'hello_world' -> 'helloWorld'
    * snakeToCamelCase('hello_world');
    * 
    * @param str 변환할 스네이크 케이스 문자열
    * @returns 카멜 케이스로 변환된 문자열
    */"use strict";

/* istanbul ignore next */
function cov_1kf7xparld() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/utils/transform.ts";
  var hash = "643abd90c130ba75b556c150278c9c3ec4c19a4f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/utils/transform.ts",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "1": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 23,
          column: 7
        }
      },
      "2": {
        start: {
          line: 20,
          column: 24
        },
        end: {
          line: 23,
          column: 7
        }
      },
      "3": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "4": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 28
        }
      },
      "5": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 32
        }
      },
      "6": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 28
        }
      },
      "7": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 32
        }
      },
      "8": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 71
        }
      },
      "9": {
        start: {
          line: 40,
          column: 49
        },
        end: {
          line: 40,
          column: 69
        }
      },
      "10": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "11": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 19
        }
      },
      "12": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "13": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 37
        }
      },
      "14": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "15": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 19
        }
      },
      "16": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "17": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 19
        }
      },
      "18": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 63,
          column: 12
        }
      },
      "19": {
        start: {
          line: 60,
          column: 70
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "20": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 71
        }
      },
      "21": {
        start: {
          line: 66,
          column: 43
        },
        end: {
          line: 66,
          column: 69
        }
      },
      "22": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "23": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 19
        }
      },
      "24": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "25": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 37
        }
      },
      "26": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "27": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 19
        }
      },
      "28": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "29": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 19
        }
      },
      "30": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 89,
          column: 12
        }
      },
      "31": {
        start: {
          line: 86,
          column: 70
        },
        end: {
          line: 89,
          column: 9
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 16
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 19
          }
        },
        loc: {
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 22
          },
          end: {
            line: 29,
            column: 23
          }
        },
        loc: {
          start: {
            line: 29,
            column: 33
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 18
          },
          end: {
            line: 32,
            column: 19
          }
        },
        loc: {
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 35,
            column: 23
          }
        },
        loc: {
          start: {
            line: 35,
            column: 33
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "5": {
        name: "snakeToCamelCase",
        decl: {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 39,
            column: 25
          }
        },
        loc: {
          start: {
            line: 39,
            column: 31
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 39
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 40,
            column: 36
          },
          end: {
            line: 40,
            column: 37
          }
        },
        loc: {
          start: {
            line: 40,
            column: 49
          },
          end: {
            line: 40,
            column: 69
          }
        },
        line: 40
      },
      "7": {
        name: "snakeToCamel",
        decl: {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 42,
            column: 21
          }
        },
        loc: {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 42
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 60,
            column: 54
          },
          end: {
            line: 60,
            column: 55
          }
        },
        loc: {
          start: {
            line: 60,
            column: 70
          },
          end: {
            line: 63,
            column: 9
          }
        },
        line: 60
      },
      "9": {
        name: "camelToSnakeCase",
        decl: {
          start: {
            line: 65,
            column: 9
          },
          end: {
            line: 65,
            column: 25
          }
        },
        loc: {
          start: {
            line: 65,
            column: 31
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 65
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 66,
            column: 33
          },
          end: {
            line: 66,
            column: 34
          }
        },
        loc: {
          start: {
            line: 66,
            column: 43
          },
          end: {
            line: 66,
            column: 69
          }
        },
        line: 66
      },
      "11": {
        name: "camelToSnake",
        decl: {
          start: {
            line: 68,
            column: 9
          },
          end: {
            line: 68,
            column: 21
          }
        },
        loc: {
          start: {
            line: 68,
            column: 27
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 68
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 86,
            column: 54
          },
          end: {
            line: 86,
            column: 55
          }
        },
        loc: {
          start: {
            line: 86,
            column: 70
          },
          end: {
            line: 89,
            column: 9
          }
        },
        line: 86
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 24
          },
          end: {
            line: 44,
            column: 41
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 20
          }
        }, {
          start: {
            line: 70,
            column: 24
          },
          end: {
            line: 70,
            column: 41
          }
        }],
        line: 70
      },
      "7": {
        loc: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "9": {
        loc: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/utils/transform.ts"],
      sourcesContent: ["/**\n * \uB370\uC774\uD130 \uBCC0\uD658 \uC720\uD2F8\uB9AC\uD2F0\n * \n * Supabase\uC5D0\uC11C \uBC18\uD658\uB418\uB294 \uB370\uC774\uD130\uC758 \uD544\uB4DC\uBA85\uC744 \uC2A4\uB124\uC774\uD06C \uCF00\uC774\uC2A4(snake_case)\uC5D0\uC11C \n * \uCE74\uBA5C \uCF00\uC774\uC2A4(camelCase)\uB85C \uBCC0\uD658\uD558\uB294 \uC720\uD2F8\uB9AC\uD2F0 \uD568\uC218\uB97C \uC81C\uACF5\uD569\uB2C8\uB2E4.\n */\n\n/**\n * \uC2A4\uB124\uC774\uD06C \uCF00\uC774\uC2A4 \uBB38\uC790\uC5F4\uC744 \uCE74\uBA5C \uCF00\uC774\uC2A4\uB85C \uBCC0\uD658\uD569\uB2C8\uB2E4.\n * \n * @example\n * // 'hello_world' -> 'helloWorld'\n * snakeToCamelCase('hello_world');\n * \n * @param str \uBCC0\uD658\uD560 \uC2A4\uB124\uC774\uD06C \uCF00\uC774\uC2A4 \uBB38\uC790\uC5F4\n * @returns \uCE74\uBA5C \uCF00\uC774\uC2A4\uB85C \uBCC0\uD658\uB41C \uBB38\uC790\uC5F4\n */\nexport function snakeToCamelCase(str: string): string {\n  return str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());\n}\n\n/**\n * \uAC1D\uCCB4\uC758 \uBAA8\uB4E0 \uD0A4\uB97C \uC7AC\uADC0\uC801\uC73C\uB85C \uC2A4\uB124\uC774\uD06C \uCF00\uC774\uC2A4\uC5D0\uC11C \uCE74\uBA5C \uCF00\uC774\uC2A4\uB85C \uBCC0\uD658\uD569\uB2C8\uB2E4.\n * \n * @example\n * // { 'hello_world': { 'foo_bar': 'baz' } } -> { 'helloWorld': { 'fooBar': 'baz' } }\n * snakeToCamel({ 'hello_world': { 'foo_bar': 'baz' } });\n * \n * @param obj \uBCC0\uD658\uD560 \uAC1D\uCCB4 \uB610\uB294 \uBC30\uC5F4\n * @returns \uBAA8\uB4E0 \uD0A4\uAC00 \uCE74\uBA5C \uCF00\uC774\uC2A4\uB85C \uBCC0\uD658\uB41C \uC0C8 \uAC1D\uCCB4 \uB610\uB294 \uBC30\uC5F4\n */\nexport function snakeToCamel<T>(obj: T): any {\n  // null\uC774\uB098 undefined \uCC98\uB9AC\n  if (obj === null || obj === undefined) {\n    return obj;\n  }\n\n  // \uBC30\uC5F4 \uCC98\uB9AC\n  if (Array.isArray(obj)) {\n    return obj.map(snakeToCamel);\n  }\n\n  // \uAC1D\uCCB4\uAC00 \uC544\uB2CC \uACBD\uC6B0 (\uBB38\uC790\uC5F4, \uC22B\uC790, boolean \uB4F1)\n  if (typeof obj !== 'object') {\n    return obj;\n  }\n\n  // Date \uAC1D\uCCB4 \uCC98\uB9AC\n  if (obj instanceof Date) {\n    return obj;\n  }\n\n  // \uAC1D\uCCB4 \uCC98\uB9AC\n  return Object.fromEntries(\n    Object.entries(obj).map(([key, value]) => [\n      snakeToCamelCase(key),\n      snakeToCamel(value)\n    ])\n  );\n}\n\n/**\n * \uD0C0\uC785 \uBCC0\uD658\uC744 \uC704\uD55C \uC81C\uB124\uB9AD \uD0C0\uC785 \uC815\uC758\n * \uC2A4\uB124\uC774\uD06C \uCF00\uC774\uC2A4 \uBB38\uC790\uC5F4\uC744 \uCE74\uBA5C \uCF00\uC774\uC2A4\uB85C \uBCC0\uD658\uD558\uB294 \uD0C0\uC785\n */\nexport type SnakeToCamelCase<S extends string> = S extends `${infer T}_${infer U}`\n  ? `${T}${Capitalize<SnakeToCamelCase<U>>}`\n  : S;\n\n/**\n * \uAC1D\uCCB4\uC758 \uC2A4\uB124\uC774\uD06C \uCF00\uC774\uC2A4 \uD0A4\uB97C \uCE74\uBA5C \uCF00\uC774\uC2A4\uB85C \uBCC0\uD658\uD558\uB294 \uD0C0\uC785\n */\nexport type SnakeToCamel<T> = T extends Array<infer U>\n  ? Array<SnakeToCamel<U>>\n  : T extends object\n  ? {\n      [K in keyof T as K extends string ? SnakeToCamelCase<K> : K]: SnakeToCamel<T[K]>;\n    }\n  : T;\n\n/**\n * \uCE74\uBA5C \uCF00\uC774\uC2A4 \uBB38\uC790\uC5F4\uC744 \uC2A4\uB124\uC774\uD06C \uCF00\uC774\uC2A4\uB85C \uBCC0\uD658\uD569\uB2C8\uB2E4.\n * \n * @example\n * // 'helloWorld' -> 'hello_world'\n * camelToSnakeCase('helloWorld');\n * \n * @param str \uBCC0\uD658\uD560 \uCE74\uBA5C \uCF00\uC774\uC2A4 \uBB38\uC790\uC5F4\n * @returns \uC2A4\uB124\uC774\uD06C \uCF00\uC774\uC2A4\uB85C \uBCC0\uD658\uB41C \uBB38\uC790\uC5F4\n */\nexport function camelToSnakeCase(str: string): string {\n  return str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\n}\n\n/**\n * \uAC1D\uCCB4\uC758 \uBAA8\uB4E0 \uD0A4\uB97C \uC7AC\uADC0\uC801\uC73C\uB85C \uCE74\uBA5C \uCF00\uC774\uC2A4\uC5D0\uC11C \uC2A4\uB124\uC774\uD06C \uCF00\uC774\uC2A4\uB85C \uBCC0\uD658\uD569\uB2C8\uB2E4.\n * \n * @example\n * // { 'helloWorld': { 'fooBar': 'baz' } } -> { 'hello_world': { 'foo_bar': 'baz' } }\n * camelToSnake({ 'helloWorld': { 'fooBar': 'baz' } });\n * \n * @param obj \uBCC0\uD658\uD560 \uAC1D\uCCB4 \uB610\uB294 \uBC30\uC5F4\n * @returns \uBAA8\uB4E0 \uD0A4\uAC00 \uC2A4\uB124\uC774\uD06C \uCF00\uC774\uC2A4\uB85C \uBCC0\uD658\uB41C \uC0C8 \uAC1D\uCCB4 \uB610\uB294 \uBC30\uC5F4\n */\nexport function camelToSnake<T>(obj: T): any {\n  // null\uC774\uB098 undefined \uCC98\uB9AC\n  if (obj === null || obj === undefined) {\n    return obj;\n  }\n\n  // \uBC30\uC5F4 \uCC98\uB9AC\n  if (Array.isArray(obj)) {\n    return obj.map(camelToSnake);\n  }\n\n  // \uAC1D\uCCB4\uAC00 \uC544\uB2CC \uACBD\uC6B0 (\uBB38\uC790\uC5F4, \uC22B\uC790, boolean \uB4F1)\n  if (typeof obj !== 'object') {\n    return obj;\n  }\n\n  // Date \uAC1D\uCCB4 \uCC98\uB9AC\n  if (obj instanceof Date) {\n    return obj;\n  }\n\n  // \uAC1D\uCCB4 \uCC98\uB9AC\n  return Object.fromEntries(\n    Object.entries(obj).map(([key, value]) => [\n      camelToSnakeCase(key),\n      camelToSnake(value)\n    ])\n  );\n} "],
      names: ["camelToSnake", "camelToSnakeCase", "snakeToCamel", "snakeToCamelCase", "str", "replace", "_", "letter", "toUpperCase", "obj", "undefined", "Array", "isArray", "map", "Date", "Object", "fromEntries", "entries", "key", "value", "toLowerCase"],
      mappings: "AAAA;;;;;CAKC,GAED;;;;;;;;;CASC;;;;;;;;;;;IAwFeA,YAAY;eAAZA;;IAdAC,gBAAgB;eAAhBA;;IA3DAC,YAAY;eAAZA;;IAdAC,gBAAgB;eAAhBA;;;AAAT,SAASA,iBAAiBC,GAAW;IAC1C,OAAOA,IAAIC,OAAO,CAAC,aAAa,CAACC,GAAGC,SAAWA,OAAOC,WAAW;AACnE;AAYO,SAASN,aAAgBO,GAAM;IACpC,sBAAsB;IACtB,IAAIA,QAAQ,QAAQA,QAAQC,WAAW;QACrC,OAAOD;IACT;IAEA,QAAQ;IACR,IAAIE,MAAMC,OAAO,CAACH,MAAM;QACtB,OAAOA,IAAII,GAAG,CAACX;IACjB;IAEA,iCAAiC;IACjC,IAAI,OAAOO,QAAQ,UAAU;QAC3B,OAAOA;IACT;IAEA,aAAa;IACb,IAAIA,eAAeK,MAAM;QACvB,OAAOL;IACT;IAEA,QAAQ;IACR,OAAOM,OAAOC,WAAW,CACvBD,OAAOE,OAAO,CAACR,KAAKI,GAAG,CAAC,CAAC,CAACK,KAAKC,MAAM,GAAK;YACxChB,iBAAiBe;YACjBhB,aAAaiB;SACd;AAEL;AA+BO,SAASlB,iBAAiBG,GAAW;IAC1C,OAAOA,IAAIC,OAAO,CAAC,UAAUE,CAAAA,SAAU,CAAC,CAAC,EAAEA,OAAOa,WAAW,IAAI;AACnE;AAYO,SAASpB,aAAgBS,GAAM;IACpC,sBAAsB;IACtB,IAAIA,QAAQ,QAAQA,QAAQC,WAAW;QACrC,OAAOD;IACT;IAEA,QAAQ;IACR,IAAIE,MAAMC,OAAO,CAACH,MAAM;QACtB,OAAOA,IAAII,GAAG,CAACb;IACjB;IAEA,iCAAiC;IACjC,IAAI,OAAOS,QAAQ,UAAU;QAC3B,OAAOA;IACT;IAEA,aAAa;IACb,IAAIA,eAAeK,MAAM;QACvB,OAAOL;IACT;IAEA,QAAQ;IACR,OAAOM,OAAOC,WAAW,CACvBD,OAAOE,OAAO,CAACR,KAAKI,GAAG,CAAC,CAAC,CAACK,KAAKC,MAAM,GAAK;YACxClB,iBAAiBiB;YACjBlB,aAAamB;SACd;AAEL"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "643abd90c130ba75b556c150278c9c3ec4c19a4f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kf7xparld = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kf7xparld();
cov_1kf7xparld().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1kf7xparld().f[0]++;
  cov_1kf7xparld().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1kf7xparld().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1kf7xparld().s[3]++;
_export(exports, {
  camelToSnake: function () {
    /* istanbul ignore next */
    cov_1kf7xparld().f[1]++;
    cov_1kf7xparld().s[4]++;
    return camelToSnake;
  },
  camelToSnakeCase: function () {
    /* istanbul ignore next */
    cov_1kf7xparld().f[2]++;
    cov_1kf7xparld().s[5]++;
    return camelToSnakeCase;
  },
  snakeToCamel: function () {
    /* istanbul ignore next */
    cov_1kf7xparld().f[3]++;
    cov_1kf7xparld().s[6]++;
    return snakeToCamel;
  },
  snakeToCamelCase: function () {
    /* istanbul ignore next */
    cov_1kf7xparld().f[4]++;
    cov_1kf7xparld().s[7]++;
    return snakeToCamelCase;
  }
});
function snakeToCamelCase(str) {
  /* istanbul ignore next */
  cov_1kf7xparld().f[5]++;
  cov_1kf7xparld().s[8]++;
  return str.replace(/_([a-z])/g, (_, letter) => {
    /* istanbul ignore next */
    cov_1kf7xparld().f[6]++;
    cov_1kf7xparld().s[9]++;
    return letter.toUpperCase();
  });
}
function snakeToCamel(obj) {
  /* istanbul ignore next */
  cov_1kf7xparld().f[7]++;
  cov_1kf7xparld().s[10]++;
  // null이나 undefined 처리
  if (
  /* istanbul ignore next */
  (cov_1kf7xparld().b[1][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1kf7xparld().b[1][1]++, obj === undefined)) {
    /* istanbul ignore next */
    cov_1kf7xparld().b[0][0]++;
    cov_1kf7xparld().s[11]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1kf7xparld().b[0][1]++;
  }
  // 배열 처리
  cov_1kf7xparld().s[12]++;
  if (Array.isArray(obj)) {
    /* istanbul ignore next */
    cov_1kf7xparld().b[2][0]++;
    cov_1kf7xparld().s[13]++;
    return obj.map(snakeToCamel);
  } else
  /* istanbul ignore next */
  {
    cov_1kf7xparld().b[2][1]++;
  }
  // 객체가 아닌 경우 (문자열, 숫자, boolean 등)
  cov_1kf7xparld().s[14]++;
  if (typeof obj !== 'object') {
    /* istanbul ignore next */
    cov_1kf7xparld().b[3][0]++;
    cov_1kf7xparld().s[15]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1kf7xparld().b[3][1]++;
  }
  // Date 객체 처리
  cov_1kf7xparld().s[16]++;
  if (obj instanceof Date) {
    /* istanbul ignore next */
    cov_1kf7xparld().b[4][0]++;
    cov_1kf7xparld().s[17]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1kf7xparld().b[4][1]++;
  }
  // 객체 처리
  cov_1kf7xparld().s[18]++;
  return Object.fromEntries(Object.entries(obj).map(([key, value]) => {
    /* istanbul ignore next */
    cov_1kf7xparld().f[8]++;
    cov_1kf7xparld().s[19]++;
    return [snakeToCamelCase(key), snakeToCamel(value)];
  }));
}
function camelToSnakeCase(str) {
  /* istanbul ignore next */
  cov_1kf7xparld().f[9]++;
  cov_1kf7xparld().s[20]++;
  return str.replace(/[A-Z]/g, letter => {
    /* istanbul ignore next */
    cov_1kf7xparld().f[10]++;
    cov_1kf7xparld().s[21]++;
    return `_${letter.toLowerCase()}`;
  });
}
function camelToSnake(obj) {
  /* istanbul ignore next */
  cov_1kf7xparld().f[11]++;
  cov_1kf7xparld().s[22]++;
  // null이나 undefined 처리
  if (
  /* istanbul ignore next */
  (cov_1kf7xparld().b[6][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1kf7xparld().b[6][1]++, obj === undefined)) {
    /* istanbul ignore next */
    cov_1kf7xparld().b[5][0]++;
    cov_1kf7xparld().s[23]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1kf7xparld().b[5][1]++;
  }
  // 배열 처리
  cov_1kf7xparld().s[24]++;
  if (Array.isArray(obj)) {
    /* istanbul ignore next */
    cov_1kf7xparld().b[7][0]++;
    cov_1kf7xparld().s[25]++;
    return obj.map(camelToSnake);
  } else
  /* istanbul ignore next */
  {
    cov_1kf7xparld().b[7][1]++;
  }
  // 객체가 아닌 경우 (문자열, 숫자, boolean 등)
  cov_1kf7xparld().s[26]++;
  if (typeof obj !== 'object') {
    /* istanbul ignore next */
    cov_1kf7xparld().b[8][0]++;
    cov_1kf7xparld().s[27]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1kf7xparld().b[8][1]++;
  }
  // Date 객체 처리
  cov_1kf7xparld().s[28]++;
  if (obj instanceof Date) {
    /* istanbul ignore next */
    cov_1kf7xparld().b[9][0]++;
    cov_1kf7xparld().s[29]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1kf7xparld().b[9][1]++;
  }
  // 객체 처리
  cov_1kf7xparld().s[30]++;
  return Object.fromEntries(Object.entries(obj).map(([key, value]) => {
    /* istanbul ignore next */
    cov_1kf7xparld().f[12]++;
    cov_1kf7xparld().s[31]++;
    return [camelToSnakeCase(key), camelToSnake(value)];
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,