{"version":3,"names":["AsyncBoundary","children","fallback","cov_1qooi8cgv9","b","_jsxruntime","jsx","className","errorFallback","f","s","_react","Suspense","error","console","appError","_error","AppError","handleError","_ErrorState","default","message","toFriendlyMessage","code","status","retryLink"],"sources":["/Users/cheolhyun/Repositories/picnic-web/components/server/AsyncBoundary.tsx"],"sourcesContent":["import React, { ReactNode, Suspense } from 'react';\nimport { ErrorCode, AppError, handleError } from '@/lib/supabase/error';\nimport ErrorState from './ErrorState';\n\ninterface AsyncBoundaryProps {\n  children: ReactNode;\n  fallback?: ReactNode;\n  errorFallback?: (error: AppError) => ReactNode;\n}\n\n/**\n * 서버 컴포넌트에서 사용하는 비동기 에러 처리 컴포넌트\n * \n * 비동기 작업을 수행하는 서버 컴포넌트를 try/catch로 감싸고\n * Suspense를 통한 로딩 상태와 에러 상태를 처리합니다.\n * \n * @example\n * // 사용 예시:\n * async function DataComponent() {\n *   const data = await fetchData();\n *   return <div>{data.title}</div>;\n * }\n * \n * export default function Page() {\n *   return (\n *     <AsyncBoundary \n *       fallback={<div>로딩 중...</div>}\n *       errorFallback={(error) => (\n *         <ErrorState \n *           message={error.toFriendlyMessage()} \n *           code={error.status || 500} \n *           retryLink=\"/some-path\" \n *         />\n *       )}\n *     >\n *       <DataComponent />\n *     </AsyncBoundary>\n *   );\n * }\n */\nexport default async function AsyncBoundary({ \n  children, \n  fallback = <div className=\"p-4 flex justify-center items-center\">\n    <div className=\"animate-spin h-8 w-8 border-4 border-primary border-t-transparent rounded-full\"></div>\n  </div>,\n  errorFallback \n}: AsyncBoundaryProps) {\n  try {\n    return (\n      <Suspense fallback={fallback}>\n        {children}\n      </Suspense>\n    );\n  } catch (error) {\n    console.error('AsyncBoundary 에러:', error);\n    \n    // 에러를 애플리케이션 표준 에러로 변환\n    const appError = error instanceof AppError ? error : handleError(error);\n    \n    // 사용자 정의 에러 fallback이 있으면 사용\n    if (errorFallback) {\n      return errorFallback(appError);\n    }\n    \n    // 기본 에러 상태 컴포넌트 표시\n    return (\n      <ErrorState \n        message={appError.toFriendlyMessage()}\n        code={appError.status || 500}\n        retryLink=\"/\"\n      />\n    );\n  }\n} "],"mappingsaAAA;;;;;;;;yEAxCa;;;kCACM;;;wEAC1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCR,eAAeA,cAAc;EAC1CC,QAAQ;EACRC,QAAA;EAAA;EAAA,cAAAC,cAAA,GAAAC,CAAA,WAAW,IAAAC,WAAA,CAAAC,GAAA,EAAC;IAAIC,SAAA,EAAU;cACxB,iBAAAF,WAAA,CAAAC,GAAA,EAAC;MAAIC,SAAA,EAAU;;IACX;EACNC;AAAa,CACM;EAAA;EAAAL,cAAA,GAAAM,CAAA;EAAAN,cAAA,GAAAO,CAAA;EACnB,IAAI;IAAA;IAAAP,cAAA,GAAAO,CAAA;IACF,oBACE,IAAAL,WAAA,CAAAC,GAAA,EAACK,MAAA,CAAAC,QAAQ;MAACV,QAAA,EAAUA,QAAA;gBACjBD;;EAGP,EAAE,OAAOY,KAAA,EAAO;IAAA;IAAAV,cAAA,GAAAO,CAAA;IACdI,OAAA,CAAQD,KAAK,CAAC,qBAAqBA,KAAA;IAEnC;IACA,MAAME,QAAA;IAAA;IAAA,CAAAZ,cAAA,GAAAO,CAAA,QAAWG,KAAA,YAAiBG,MAAA,CAAAC,QAAQ;IAAA;IAAA,CAAAd,cAAA,GAAAC,CAAA,WAAGS,KAAA;IAAA;IAAA,CAAAV,cAAA,GAAAC,CAAA,WAAQ,IAAAY,MAAA,CAAAE,WAAW,EAACL,KAAA;IAEjE;IAAA;IAAAV,cAAA,GAAAO,CAAA;IACA,IAAIF,aAAA,EAAe;MAAA;MAAAL,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAO,CAAA;MACjB,OAAOF,aAAA,CAAcO,QAAA;IACvB;IAAA;IAAA;MAAAZ,cAAA,GAAAC,CAAA;IAAA;IAEA;IAAAD,cAAA,GAAAO,CAAA;IACA,oBACE,IAAAL,WAAA,CAAAC,GAAA,EAACa,WAAA,CAAAC,OAAU;MACTC,OAAA,EAASN,QAAA,CAASO,iBAAiB;MACnCC,IAAA;MAAM;MAAA,CAAApB,cAAA,GAAAC,CAAA,WAAAW,QAAA,CAASS,MAAM;MAAA;MAAA,CAAArB,cAAA,GAAAC,CAAA,WAAI;MACzBqB,SAAA,EAAU;;EAGhB;AACF","ignoreList":[]}