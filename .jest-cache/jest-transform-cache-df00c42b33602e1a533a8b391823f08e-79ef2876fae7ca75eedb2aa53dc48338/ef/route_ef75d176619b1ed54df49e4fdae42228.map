{"version":3,"names":["GET","cov_1ddaxey3cb","f","s","POST","request","body","json","voteId","voteItemId","amount","userId","totalBonusRemain","b","undefined","_server","NextResponse","error","status","supabase","_supabaseserverclient","createClient","data","canVoteResult","canVoteError","rpc","p_user_id","p_vote_amount","console","message","includes","log","canVoteException","p_vote_id","p_vote_item_id","p_amount","p_total_bonus_remain","success"],"sources":["/Users/cheolhyun/Repositories/picnic-web/app/api/vote/submit/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { createClient } from \"@/utils/supabase-server-client\";\n\ninterface VoteSubmissionRequest {\n    voteId: number;\n    voteItemId: number;\n    amount: number;\n    userId: string;\n    totalBonusRemain: number;\n}\n\nexport async function POST(request: NextRequest) {\n    try {\n        const body: VoteSubmissionRequest = await request.json();\n        const { voteId, voteItemId, amount, userId, totalBonusRemain } = body;\n\n        // 입력 검증\n        if (!voteId || !voteItemId || amount === undefined || !userId || totalBonusRemain === undefined) {\n            return NextResponse.json(\n                { error: \"필수 필드가 누락되었습니다.\" },\n                { status: 400 }\n            );\n        }\n\n        if (amount <= 0) {\n            return NextResponse.json(\n                { error: \"투표 금액은 0보다 커야 합니다.\" },\n                { status: 400 }\n            );\n        }\n\n        const supabase = await createClient();\n\n        // 1. 먼저 can_vote 함수로 투표 가능 여부 확인\n        try {\n            const { data: canVoteResult, error: canVoteError } = await supabase\n                .rpc(\"can_vote\", {\n                    p_user_id: userId,\n                    p_vote_amount: amount,\n                });\n\n            if (canVoteError) {\n                console.error(\"[Vote Submit] can_vote 검증 실패:\", canVoteError);\n\n                if (canVoteError.message.includes(\"Insufficient balance\")) {\n                    return NextResponse.json(\n                        { error: \"잔액이 부족합니다.\" },\n                        { status: 400 }\n                    );\n                }\n\n                if (canVoteError.message.includes(\"User not found\")) {\n                    return NextResponse.json(\n                        { error: \"사용자를 찾을 수 없습니다.\" },\n                        { status: 404 }\n                    );\n                }\n\n                return NextResponse.json(\n                    { error: `투표 자격 확인 실패: ${canVoteError.message}` },\n                    { status: 500 }\n                );\n            }\n\n            if (!canVoteResult) {\n                return NextResponse.json(\n                    { error: \"투표가 허용되지 않습니다.\" },\n                    { status: 400 }\n                );\n            }\n\n            console.log(\"[Vote Submit] can_vote 검증 통과:\", { userId, amount });\n\n        } catch (canVoteException: any) {\n            console.error(\"[Vote Submit] can_vote 예외:\", canVoteException);\n\n            if (canVoteException.message?.includes(\"Insufficient balance\")) {\n                return NextResponse.json(\n                    { error: \"잔액이 부족합니다.\" },\n                    { status: 400 }\n                );\n            }\n\n            if (canVoteException.message?.includes(\"User not found\")) {\n                return NextResponse.json(\n                    { error: \"사용자를 찾을 수 없습니다.\" },\n                    { status: 404 }\n                );\n            }\n\n            return NextResponse.json(\n                { error: `투표 자격 확인 중 오류: ${canVoteException.message}` },\n                { status: 500 }\n            );\n        }\n\n        // 2. can_vote 검증 통과 후 실제 투표 처리 (엣지 함수 사용)\n        const { data, error } = await supabase.rpc(\"perform_vote_transaction\", {\n            p_vote_id: voteId,\n            p_vote_item_id: voteItemId,\n            p_amount: amount,\n            p_user_id: userId,\n            p_total_bonus_remain: totalBonusRemain,\n        });\n\n        if (error) {\n            console.error(\"[Vote Submit] perform_vote_transaction 에러:\", error);\n            return NextResponse.json(\n                { error: `투표 처리 실패: ${error.message}` },\n                { status: 500 }\n            );\n        }\n\n        console.log(\"[Vote Submit] perform_vote_transaction 성공:\", data);\n\n        return NextResponse.json({\n            success: true,\n            data: data,\n            message: \"투표가 성공적으로 제출되었습니다.\",\n        });\n    } catch (error) {\n        console.error('투표 제출 처리 중 오류:', error);\n        return NextResponse.json(\n            { error: '서버 오류가 발생했습니다.' },\n            { status: 500 }\n        );\n    }\n}\n\nexport async function GET(request: NextRequest) {\n    return NextResponse.json(\n        { error: \"GET 메서드는 지원되지 않습니다.\" },\n        { status: 405 }\n    );\n}\n"],"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","ignoreList":[]}