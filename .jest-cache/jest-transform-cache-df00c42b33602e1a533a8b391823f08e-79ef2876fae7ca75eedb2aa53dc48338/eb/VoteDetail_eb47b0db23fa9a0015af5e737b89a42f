271ac8accc50c175cc1ad77717485fa4
"use strict";

/* istanbul ignore next */
function cov_hrmyjswgo() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/components/client/vote/VoteDetail/VoteDetail.tsx";
  var hash = "871421cef31e88def6e53692a0cf61264b58b811";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/components/client/vote/VoteDetail/VoteDetail.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 16,
          column: 3
        }
      },
      "2": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 26
        }
      },
      "3": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 48
        }
      },
      "4": {
        start: {
          line: 18,
          column: 29
        },
        end: {
          line: 18,
          column: 72
        }
      },
      "5": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 76
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 42
        }
      },
      "7": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "8": {
        start: {
          line: 22,
          column: 39
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "9": {
        start: {
          line: 23,
          column: 28
        },
        end: {
          line: 23,
          column: 41
        }
      },
      "10": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 40
        }
      },
      "11": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 20
        }
      },
      "12": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 66
        }
      },
      "13": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "15": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "16": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 10
        }
      },
      "17": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 53
        }
      },
      "18": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 30
        }
      },
      "20": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "21": {
        start: {
          line: 45,
          column: 32
        },
        end: {
          line: 45,
          column: 88
        }
      },
      "22": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "23": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "24": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 48,
          column: 95
        }
      },
      "25": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "26": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 57
        }
      },
      "27": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 39
        }
      },
      "28": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 25
        }
      },
      "29": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "30": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 31
        }
      },
      "31": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 18
        }
      },
      "32": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 70,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 10
          }
        },
        loc: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 33
          }
        },
        loc: {
          start: {
            line: 21,
            column: 47
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 25,
            column: 40
          }
        },
        loc: {
          start: {
            line: 25,
            column: 61
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 34
          }
        },
        loc: {
          start: {
            line: 29,
            column: 53
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 29
      },
      "4": {
        name: "VoteDetail",
        decl: {
          start: {
            line: 62,
            column: 9
          },
          end: {
            line: 62,
            column: 19
          }
        },
        loc: {
          start: {
            line: 62,
            column: 28
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 62
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 26,
            column: 45
          }
        }, {
          start: {
            line: 26,
            column: 48
          },
          end: {
            line: 26,
            column: 65
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 20
          }
        }, {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 27
          }
        }, {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 30,
            column: 45
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 47
          }
        }, {
          start: {
            line: 33,
            column: 51
          },
          end: {
            line: 33,
            column: 76
          }
        }],
        line: 33
      },
      "6": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "7": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 31
          }
        }],
        line: 39
      },
      "8": {
        loc: {
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 53
          }
        }, {
          start: {
            line: 45,
            column: 57
          },
          end: {
            line: 45,
            column: 88
          }
        }],
        line: 45
      },
      "9": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "10": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 29
          }
        }, {
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 47,
            column: 79
          }
        }],
        line: 47
      },
      "11": {
        loc: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 47
          },
          end: {
            line: 48,
            column: 88
          }
        }, {
          start: {
            line: 48,
            column: 91
          },
          end: {
            line: 48,
            column: 95
          }
        }],
        line: 48
      },
      "12": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: 51,
            column: 19
          },
          end: {
            line: 53,
            column: 13
          }
        }],
        line: 49
      },
      "13": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 20
          }
        }, {
          start: {
            line: 49,
            column: 25
          },
          end: {
            line: 49,
            column: 33
          }
        }, {
          start: {
            line: 49,
            column: 37
          },
          end: {
            line: 49,
            column: 45
          }
        }],
        line: 49
      },
      "14": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/components/client/vote/VoteDetail/VoteDetail.tsx"],
      sourcesContent: ["import React, { Suspense } from 'react';\nimport { VoteDetailFetcher } from '@/components/server/vote/VoteDetailFetcher';\nimport { LoadingState } from '@/components/server';\n\ninterface VoteDetailProps {\n  id: string;\n}\n\n/**\n * VoteDetail \uACF5\uC720 \uCEF4\uD3EC\uB10C\uD2B8\n * \n * \uC774 \uCEF4\uD3EC\uB10C\uD2B8\uB294 \uC11C\uBC84 \uCEF4\uD3EC\uB10C\uD2B8\uC640 \uD074\uB77C\uC774\uC5B8\uD2B8 \uCEF4\uD3EC\uB10C\uD2B8 \uC0AC\uC774\uC758 \uBE0C\uB9BF\uC9C0 \uC5ED\uD560\uC744 \uD569\uB2C8\uB2E4.\n * \uD398\uC774\uC9C0\uC5D0\uC11C\uB294 \uC774 \uCEF4\uD3EC\uB10C\uD2B8\uB97C \uC0AC\uC6A9\uD558\uC5EC \uD544\uC694\uD55C \uB370\uC774\uD130\uB97C \uC11C\uBC84\uC5D0\uC11C \uAC00\uC838\uC624\uACE0\n * \uD074\uB77C\uC774\uC5B8\uD2B8 \uCE21 \uC0C1\uD638\uC791\uC6A9\uC744 \uCC98\uB9AC\uD569\uB2C8\uB2E4.\n */\nexport default function VoteDetail({ id }: VoteDetailProps) {\n  return (\n    <Suspense \n      fallback={<LoadingState message=\"\uD22C\uD45C \uC815\uBCF4\uB97C \uBD88\uB7EC\uC624\uACE0 \uC788\uC2B5\uB2C8\uB2E4...\" />}\n    >\n      <VoteDetailFetcher voteId={id} />\n    </Suspense>\n  );\n} "],
      names: ["VoteDetail", "id", "Suspense", "fallback", "LoadingState", "message", "VoteDetailFetcher", "voteId"],
      mappings: ";;;;+BAQA;;;;;;CAMC,GACD;;;eAAwBA;;;;+DAfQ;mCACE;wBACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAad,SAASA,WAAW,EAAEC,EAAE,EAAmB;IACxD,qBACE,qBAACC,eAAQ;QACPC,wBAAU,qBAACC,oBAAY;YAACC,SAAQ;;kBAEhC,cAAA,qBAACC,oCAAiB;YAACC,QAAQN;;;AAGjC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "871421cef31e88def6e53692a0cf61264b58b811"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_hrmyjswgo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_hrmyjswgo();
cov_hrmyjswgo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_hrmyjswgo().s[1]++;
Object.defineProperty(exports,
/**
* VoteDetail 공유 컴포넌트
* 
* 이 컴포넌트는 서버 컴포넌트와 클라이언트 컴포넌트 사이의 브릿지 역할을 합니다.
* 페이지에서는 이 컴포넌트를 사용하여 필요한 데이터를 서버에서 가져오고
* 클라이언트 측 상호작용을 처리합니다.
*/
"default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_hrmyjswgo().f[0]++;
    cov_hrmyjswgo().s[2]++;
    return VoteDetail;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_hrmyjswgo().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_hrmyjswgo().s[4]++, _interop_require_wildcard(require("react")));
const _VoteDetailFetcher =
/* istanbul ignore next */
(cov_hrmyjswgo().s[5]++, require("../../../server/vote/VoteDetailFetcher"));
const _server =
/* istanbul ignore next */
(cov_hrmyjswgo().s[6]++, require("../../../server"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_hrmyjswgo().f[1]++;
  cov_hrmyjswgo().s[7]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_hrmyjswgo().b[0][0]++;
    cov_hrmyjswgo().s[8]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_hrmyjswgo().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_hrmyjswgo().s[9]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_hrmyjswgo().s[10]++, new WeakMap());
  /* istanbul ignore next */
  cov_hrmyjswgo().s[11]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_hrmyjswgo().f[2]++;
    cov_hrmyjswgo().s[12]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_hrmyjswgo().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_hrmyjswgo().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_hrmyjswgo().f[3]++;
  cov_hrmyjswgo().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_hrmyjswgo().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_hrmyjswgo().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_hrmyjswgo().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_hrmyjswgo().b[2][0]++;
    cov_hrmyjswgo().s[14]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_hrmyjswgo().b[2][1]++;
  }
  cov_hrmyjswgo().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_hrmyjswgo().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_hrmyjswgo().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_hrmyjswgo().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_hrmyjswgo().b[4][0]++;
    cov_hrmyjswgo().s[16]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_hrmyjswgo().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_hrmyjswgo().s[17]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_hrmyjswgo().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_hrmyjswgo().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_hrmyjswgo().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_hrmyjswgo().b[6][0]++;
    cov_hrmyjswgo().s[19]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_hrmyjswgo().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_hrmyjswgo().s[20]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_hrmyjswgo().s[21]++,
  /* istanbul ignore next */
  (cov_hrmyjswgo().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_hrmyjswgo().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_hrmyjswgo().s[22]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_hrmyjswgo().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_hrmyjswgo().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_hrmyjswgo().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_hrmyjswgo().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_hrmyjswgo().s[24]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_hrmyjswgo().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_hrmyjswgo().b[11][1]++, null));
      /* istanbul ignore next */
      cov_hrmyjswgo().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_hrmyjswgo().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_hrmyjswgo().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_hrmyjswgo().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_hrmyjswgo().b[12][0]++;
        cov_hrmyjswgo().s[26]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_hrmyjswgo().b[12][1]++;
        cov_hrmyjswgo().s[27]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_hrmyjswgo().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_hrmyjswgo().s[28]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_hrmyjswgo().s[29]++;
  if (cache) {
    /* istanbul ignore next */
    cov_hrmyjswgo().b[14][0]++;
    cov_hrmyjswgo().s[30]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_hrmyjswgo().b[14][1]++;
  }
  cov_hrmyjswgo().s[31]++;
  return newObj;
}
function VoteDetail({
  id
}) {
  /* istanbul ignore next */
  cov_hrmyjswgo().f[4]++;
  cov_hrmyjswgo().s[32]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
    fallback: /*#__PURE__*/(0, _jsxruntime.jsx)(_server.LoadingState, {
      message: "투표 정보를 불러오고 있습니다..."
    }),
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_VoteDetailFetcher.VoteDetailFetcher, {
      voteId: id
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWb3RlRGV0YWlsIiwiaWQiLCJjb3ZfaHJteWpzd2dvIiwiZiIsInMiLCJfanN4cnVudGltZSIsImpzeCIsIl9yZWFjdCIsIlN1c3BlbnNlIiwiZmFsbGJhY2siLCJfc2VydmVyIiwiTG9hZGluZ1N0YXRlIiwibWVzc2FnZSIsIl9Wb3RlRGV0YWlsRmV0Y2hlciIsIlZvdGVEZXRhaWxGZXRjaGVyIiwidm90ZUlkIl0sInNvdXJjZXMiOlsiL1VzZXJzL2NoZW9saHl1bi9SZXBvc2l0b3JpZXMvcGljbmljLXdlYi9jb21wb25lbnRzL2NsaWVudC92b3RlL1ZvdGVEZXRhaWwvVm90ZURldGFpbC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFN1c3BlbnNlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgVm90ZURldGFpbEZldGNoZXIgfSBmcm9tICdAL2NvbXBvbmVudHMvc2VydmVyL3ZvdGUvVm90ZURldGFpbEZldGNoZXInO1xuaW1wb3J0IHsgTG9hZGluZ1N0YXRlIH0gZnJvbSAnQC9jb21wb25lbnRzL3NlcnZlcic7XG5cbmludGVyZmFjZSBWb3RlRGV0YWlsUHJvcHMge1xuICBpZDogc3RyaW5nO1xufVxuXG4vKipcbiAqIFZvdGVEZXRhaWwg6rO17JygIOy7tO2PrOuEjO2KuFxuICogXG4gKiDsnbQg7Lu07Y+s64SM7Yq464qUIOyEnOuyhCDsu7Ttj6zrhIztirjsmYAg7YG065287J207Ja47Yq4IOy7tO2PrOuEjO2KuCDsgqzsnbTsnZgg67iM66a/7KeAIOyXre2VoOydhCDtlanri4jri6QuXG4gKiDtjpjsnbTsp4Dsl5DshJzripQg7J20IOy7tO2PrOuEjO2KuOulvCDsgqzsmqntlZjsl6wg7ZWE7JqU7ZWcIOuNsOydtO2EsOulvCDshJzrsoTsl5DshJwg6rCA7KC47Jik6rOgXG4gKiDtgbTrnbzsnbTslrjtirgg7LihIOyDge2YuOyekeyaqeydhCDsspjrpqztlanri4jri6QuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFZvdGVEZXRhaWwoeyBpZCB9OiBWb3RlRGV0YWlsUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8U3VzcGVuc2UgXG4gICAgICBmYWxsYmFjaz17PExvYWRpbmdTdGF0ZSBtZXNzYWdlPVwi7Yis7ZGcIOygleuztOulvCDrtojrn6zsmKTqs6Ag7J6I7Iq164uI64ukLi4uXCIgLz59XG4gICAgPlxuICAgICAgPFZvdGVEZXRhaWxGZXRjaGVyIHZvdGVJZD17aWR9IC8+XG4gICAgPC9TdXNwZW5zZT5cbiAgKTtcbn0gIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUUE7Ozs7Ozs7QUFPQTs7Ozs7O1dBQXdCQSxVQUFBOzs7Ozs7Ozt3RUFmUTs7O2lDQUNFOzs7aUNBQ0w7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFhZCxTQUFTQSxXQUFXO0VBQUVDO0FBQUUsQ0FBbUI7RUFBQTtFQUFBQyxhQUFBLEdBQUFDLENBQUE7RUFBQUQsYUFBQSxHQUFBRSxDQUFBO0VBQ3hELG9CQUNFLElBQUFDLFdBQUEsQ0FBQUMsR0FBQSxFQUFDQyxNQUFBLENBQUFDLFFBQVE7SUFDUEMsUUFBQSxlQUFVLElBQUFKLFdBQUEsQ0FBQUMsR0FBQSxFQUFDSSxPQUFBLENBQUFDLFlBQVk7TUFBQ0MsT0FBQSxFQUFROztjQUVoQyxpQkFBQVAsV0FBQSxDQUFBQyxHQUFBLEVBQUNPLGtCQUFBLENBQUFDLGlCQUFpQjtNQUFDQyxNQUFBLEVBQVFkOzs7QUFHakMiLCJpZ25vcmVMaXN0IjpbXX0=