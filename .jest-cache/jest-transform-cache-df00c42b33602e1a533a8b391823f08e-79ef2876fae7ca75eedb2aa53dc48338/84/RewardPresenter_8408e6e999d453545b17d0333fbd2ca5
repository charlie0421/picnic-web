e39a62342dc763cd7bd555ca0b975341
'use client';
"use strict";

/* istanbul ignore next */
function cov_2oamlgtf7k() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/components/client/reward/RewardPresenter.tsx";
  var hash = "073dd1936d35049f9bd33c39d57f2374f5e960ee";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/components/client/reward/RewardPresenter.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 35
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 74
        }
      },
      "6": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 76
        }
      },
      "7": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 54
        }
      },
      "9": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 6
        }
      },
      "10": {
        start: {
          line: 23,
          column: 28
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "11": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 64,
          column: 7
        }
      },
      "12": {
        start: {
          line: 33,
          column: 58
        },
        end: {
          line: 62,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 33
          }
        },
        loc: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 23,
            column: 29
          }
        },
        loc: {
          start: {
            line: 23,
            column: 43
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 34
          },
          end: {
            line: 33,
            column: 35
          }
        },
        loc: {
          start: {
            line: 33,
            column: 58
          },
          end: {
            line: 62,
            column: 29
          }
        },
        line: 33
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 35
          },
          end: {
            line: 19,
            column: 38
          }
        }, {
          start: {
            line: 19,
            column: 41
          },
          end: {
            line: 21,
            column: 5
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 19,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 19,
            column: 14
          }
        }, {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 32
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 63,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 55
          },
          end: {
            line: 31,
            column: 10
          }
        }, {
          start: {
            line: 31,
            column: 27
          },
          end: {
            line: 63,
            column: 10
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 38
          },
          end: {
            line: 52,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 71
          },
          end: {
            line: 46,
            column: 30
          }
        }, {
          start: {
            line: 46,
            column: 47
          },
          end: {
            line: 52,
            column: 30
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 37
          },
          end: {
            line: 41,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 72
          },
          end: {
            line: 41,
            column: 84
          }
        }, {
          start: {
            line: 41,
            column: 87
          },
          end: {
            line: 41,
            column: 92
          }
        }],
        line: 41
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/components/client/reward/RewardPresenter.tsx"],
      sourcesContent: ["'use client';\n\nimport React from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport {Reward} from '@/types/interfaces';\nimport {getCdnImageUrl} from '@/utils/api/image';\nimport {getLocalizedString} from '@/utils/api/strings';\n\ninterface RewardListProps {\n  rewards: Reward[];\n  showViewAllLink?: boolean;\n}\n\nexport const RewardListPresenter: React.FC<RewardListProps> = ({\n  rewards,\n}) => {\n  return (\n    <section>\n      {rewards.length === 0 ? (\n        <div className='bg-gray-100 p-6 rounded-lg text-center'>\n          <p className='text-gray-500'>\uD45C\uC2DC\uD560 \uB9AC\uC6CC\uB4DC\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.</p>\n        </div>\n      ) : (\n        <div className='grid grid-cols-2 md:grid-cols-4 gap-4'>\n          {rewards.map((reward) => (\n            <Link\n              key={reward.id}\n              href={`/rewards/${reward.id}`}\n              className='bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-all duration-200'\n            >\n              <div className='aspect-square bg-gray-200 relative'>\n                {reward.thumbnail ? (\n                  <Image\n                    src={getCdnImageUrl(reward.thumbnail, 320)}\n                    alt={\n                      typeof reward.title === 'string' ? reward.title : '\uB9AC\uC6CC\uB4DC'\n                    }\n                    width={320}\n                    height={320}\n                    className='w-full h-full object-cover'\n                    priority\n                  />\n                ) : (\n                  <div className='w-full h-full flex items-center justify-center'>\n                    <span className='text-gray-600'>\uB9AC\uC6CC\uB4DC \uC774\uBBF8\uC9C0</span>\n                  </div>\n                )}\n              </div>\n              <div className='p-3'>\n                <h3 className='font-medium mb-1 truncate text-gray-800'>\n                  {getLocalizedString(\n                    reward.title as { [key: string]: string } | null,\n                  )}\n                </h3>\n              </div>\n            </Link>\n          ))}\n        </div>\n      )}\n    </section>\n  );\n};\n\n"],
      names: ["RewardListPresenter", "rewards", "section", "length", "div", "className", "p", "map", "reward", "Link", "href", "id", "thumbnail", "Image", "src", "getCdnImageUrl", "alt", "title", "width", "height", "priority", "span", "h3", "getLocalizedString"],
      mappings: "AAAA;;;;;+BAcaA;;;eAAAA;;;;8DAZK;6DACD;8DACC;wBAEW;yBACI;;;;;;AAO1B,MAAMA,sBAAiD,CAAC,EAC7DC,OAAO,EACR;IACC,qBACE,qBAACC;kBACED,QAAQE,MAAM,KAAK,kBAClB,qBAACC;YAAIC,WAAU;sBACb,cAAA,qBAACC;gBAAED,WAAU;0BAAgB;;2BAG/B,qBAACD;YAAIC,WAAU;sBACZJ,QAAQM,GAAG,CAAC,CAACC,uBACZ,sBAACC,aAAI;oBAEHC,MAAM,CAAC,SAAS,EAAEF,OAAOG,EAAE,EAAE;oBAC7BN,WAAU;;sCAEV,qBAACD;4BAAIC,WAAU;sCACZG,OAAOI,SAAS,iBACf,qBAACC,cAAK;gCACJC,KAAKC,IAAAA,sBAAc,EAACP,OAAOI,SAAS,EAAE;gCACtCI,KACE,OAAOR,OAAOS,KAAK,KAAK,WAAWT,OAAOS,KAAK,GAAG;gCAEpDC,OAAO;gCACPC,QAAQ;gCACRd,WAAU;gCACVe,QAAQ;+CAGV,qBAAChB;gCAAIC,WAAU;0CACb,cAAA,qBAACgB;oCAAKhB,WAAU;8CAAgB;;;;sCAItC,qBAACD;4BAAIC,WAAU;sCACb,cAAA,qBAACiB;gCAAGjB,WAAU;0CACXkB,IAAAA,2BAAkB,EACjBf,OAAOS,KAAK;;;;mBAzBbT,OAAOG,EAAE;;;AAmC5B"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "073dd1936d35049f9bd33c39d57f2374f5e960ee"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2oamlgtf7k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2oamlgtf7k();
cov_2oamlgtf7k().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2oamlgtf7k().s[1]++;
Object.defineProperty(exports, "RewardListPresenter", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2oamlgtf7k().f[0]++;
    cov_2oamlgtf7k().s[2]++;
    return RewardListPresenter;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2oamlgtf7k().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2oamlgtf7k().s[4]++, _interop_require_default(require("react")));
const _link =
/* istanbul ignore next */
(/*#__PURE__*/cov_2oamlgtf7k().s[5]++, _interop_require_default(require("next/link")));
const _image =
/* istanbul ignore next */
(/*#__PURE__*/cov_2oamlgtf7k().s[6]++, _interop_require_default(require("next/image")));
const _image1 =
/* istanbul ignore next */
(cov_2oamlgtf7k().s[7]++, require("../../../utils/api/image"));
const _strings =
/* istanbul ignore next */
(cov_2oamlgtf7k().s[8]++, require("../../../utils/api/strings"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2oamlgtf7k().f[1]++;
  cov_2oamlgtf7k().s[9]++;
  return /* istanbul ignore next */(cov_2oamlgtf7k().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2oamlgtf7k().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2oamlgtf7k().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2oamlgtf7k().b[0][1]++, {
    default: obj
  });
}
/* istanbul ignore next */
cov_2oamlgtf7k().s[10]++;
const RewardListPresenter = ({
  rewards
}) => {
  /* istanbul ignore next */
  cov_2oamlgtf7k().f[2]++;
  cov_2oamlgtf7k().s[11]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("section", {
    children: rewards.length === 0 ?
    /* istanbul ignore next */
    (/*#__PURE__*/cov_2oamlgtf7k().b[2][0]++, (0, _jsxruntime.jsx)("div", {
      className: "bg-gray-100 p-6 rounded-lg text-center",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-gray-500",
        children: "표시할 리워드가 없습니다."
      })
    })) :
    /* istanbul ignore next */
    (/*#__PURE__*/cov_2oamlgtf7k().b[2][1]++, (0, _jsxruntime.jsx)("div", {
      className: "grid grid-cols-2 md:grid-cols-4 gap-4",
      children: rewards.map(reward => {
        /* istanbul ignore next */
        cov_2oamlgtf7k().f[3]++;
        cov_2oamlgtf7k().s[12]++;
        return /*#__PURE__*/(0, _jsxruntime.jsxs)(_link.default, {
          href: `/rewards/${reward.id}`,
          className: "bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-all duration-200",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "aspect-square bg-gray-200 relative",
            children: reward.thumbnail ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_2oamlgtf7k().b[3][0]++, (0, _jsxruntime.jsx)(_image.default, {
              src: (0, _image1.getCdnImageUrl)(reward.thumbnail, 320),
              alt: typeof reward.title === 'string' ?
              /* istanbul ignore next */
              (cov_2oamlgtf7k().b[4][0]++, reward.title) :
              /* istanbul ignore next */
              (cov_2oamlgtf7k().b[4][1]++, '리워드'),
              width: 320,
              height: 320,
              className: "w-full h-full object-cover",
              priority: true
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_2oamlgtf7k().b[3][1]++, (0, _jsxruntime.jsx)("div", {
              className: "w-full h-full flex items-center justify-center",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-gray-600",
                children: "리워드 이미지"
              })
            }))
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "p-3",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "font-medium mb-1 truncate text-gray-800",
              children: (0, _strings.getLocalizedString)(reward.title)
            })
          })]
        }, reward.id);
      })
    }))
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZXdhcmRMaXN0UHJlc2VudGVyIiwicmV3YXJkcyIsImNvdl8yb2FtbGd0ZjdrIiwiZiIsInMiLCJfanN4cnVudGltZSIsImpzeCIsImxlbmd0aCIsImIiLCJjbGFzc05hbWUiLCJtYXAiLCJyZXdhcmQiLCJqc3hzIiwiX2xpbmsiLCJkZWZhdWx0IiwiaHJlZiIsImlkIiwidGh1bWJuYWlsIiwiX2ltYWdlIiwic3JjIiwiX2ltYWdlMSIsImdldENkbkltYWdlVXJsIiwiYWx0IiwidGl0bGUiLCJ3aWR0aCIsImhlaWdodCIsInByaW9yaXR5IiwiX3N0cmluZ3MiLCJnZXRMb2NhbGl6ZWRTdHJpbmciXSwic291cmNlcyI6WyIvVXNlcnMvY2hlb2xoeXVuL1JlcG9zaXRvcmllcy9waWNuaWMtd2ViL2NvbXBvbmVudHMvY2xpZW50L3Jld2FyZC9SZXdhcmRQcmVzZW50ZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgSW1hZ2UgZnJvbSAnbmV4dC9pbWFnZSc7XG5pbXBvcnQge1Jld2FyZH0gZnJvbSAnQC90eXBlcy9pbnRlcmZhY2VzJztcbmltcG9ydCB7Z2V0Q2RuSW1hZ2VVcmx9IGZyb20gJ0AvdXRpbHMvYXBpL2ltYWdlJztcbmltcG9ydCB7Z2V0TG9jYWxpemVkU3RyaW5nfSBmcm9tICdAL3V0aWxzL2FwaS9zdHJpbmdzJztcblxuaW50ZXJmYWNlIFJld2FyZExpc3RQcm9wcyB7XG4gIHJld2FyZHM6IFJld2FyZFtdO1xuICBzaG93Vmlld0FsbExpbms/OiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgUmV3YXJkTGlzdFByZXNlbnRlcjogUmVhY3QuRkM8UmV3YXJkTGlzdFByb3BzPiA9ICh7XG4gIHJld2FyZHMsXG59KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPHNlY3Rpb24+XG4gICAgICB7cmV3YXJkcy5sZW5ndGggPT09IDAgPyAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdiZy1ncmF5LTEwMCBwLTYgcm91bmRlZC1sZyB0ZXh0LWNlbnRlcic+XG4gICAgICAgICAgPHAgY2xhc3NOYW1lPSd0ZXh0LWdyYXktNTAwJz7tkZzsi5ztlaAg66as7JuM65Oc6rCAIOyXhuyKteuLiOuLpC48L3A+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKSA6IChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J2dyaWQgZ3JpZC1jb2xzLTIgbWQ6Z3JpZC1jb2xzLTQgZ2FwLTQnPlxuICAgICAgICAgIHtyZXdhcmRzLm1hcCgocmV3YXJkKSA9PiAoXG4gICAgICAgICAgICA8TGlua1xuICAgICAgICAgICAgICBrZXk9e3Jld2FyZC5pZH1cbiAgICAgICAgICAgICAgaHJlZj17YC9yZXdhcmRzLyR7cmV3YXJkLmlkfWB9XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT0nYmctd2hpdGUgcm91bmRlZC1sZyBzaGFkb3ctbWQgb3ZlcmZsb3ctaGlkZGVuIGhvdmVyOnNoYWRvdy1sZyB0cmFuc2l0aW9uLWFsbCBkdXJhdGlvbi0yMDAnXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhc3BlY3Qtc3F1YXJlIGJnLWdyYXktMjAwIHJlbGF0aXZlJz5cbiAgICAgICAgICAgICAgICB7cmV3YXJkLnRodW1ibmFpbCA/IChcbiAgICAgICAgICAgICAgICAgIDxJbWFnZVxuICAgICAgICAgICAgICAgICAgICBzcmM9e2dldENkbkltYWdlVXJsKHJld2FyZC50aHVtYm5haWwsIDMyMCl9XG4gICAgICAgICAgICAgICAgICAgIGFsdD17XG4gICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHJld2FyZC50aXRsZSA9PT0gJ3N0cmluZycgPyByZXdhcmQudGl0bGUgOiAn66as7JuM65OcJ1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoPXszMjB9XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodD17MzIwfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J3ctZnVsbCBoLWZ1bGwgb2JqZWN0LWNvdmVyJ1xuICAgICAgICAgICAgICAgICAgICBwcmlvcml0eVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3ctZnVsbCBoLWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXInPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J3RleHQtZ3JheS02MDAnPuumrOybjOuTnCDsnbTrr7jsp4A8L3NwYW4+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3AtMyc+XG4gICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT0nZm9udC1tZWRpdW0gbWItMSB0cnVuY2F0ZSB0ZXh0LWdyYXktODAwJz5cbiAgICAgICAgICAgICAgICAgIHtnZXRMb2NhbGl6ZWRTdHJpbmcoXG4gICAgICAgICAgICAgICAgICAgIHJld2FyZC50aXRsZSBhcyB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9IHwgbnVsbCxcbiAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgPC9oMz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cbiAgICA8L3NlY3Rpb24+XG4gICk7XG59O1xuXG4iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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