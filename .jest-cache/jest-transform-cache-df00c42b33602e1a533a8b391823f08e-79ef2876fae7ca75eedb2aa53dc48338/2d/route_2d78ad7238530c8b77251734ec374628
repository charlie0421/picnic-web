fab6573031fe7f0d7b90313b993ccdf9
"use strict";

/* istanbul ignore next */
function cov_20cra9ii11() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/app/api/auth/exchange-code/route.ts";
  var hash = "05f45ce504ee2ed1355d7ff9e0b4c4dbcecb8b38";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/app/api/auth/exchange-code/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 13
        },
        end: {
          line: 12,
          column: 37
        }
      },
      "5": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "6": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 67
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 47
        }
      },
      "9": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "10": {
        start: {
          line: 19,
          column: 58
        },
        end: {
          line: 19,
          column: 62
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "12": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 26,
          column: 15
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "14": {
        start: {
          line: 35,
          column: 28
        },
        end: {
          line: 35,
          column: 57
        }
      },
      "15": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "16": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 39,
          column: 56
        }
      },
      "17": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 46,
          column: 23
        }
      },
      "18": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 53,
          column: 23
        }
      },
      "19": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 59
        }
      },
      "20": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 65
        }
      },
      "21": {
        start: {
          line: 61,
          column: 32
        },
        end: {
          line: 61,
          column: 80
        }
      },
      "22": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "23": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 60
        }
      },
      "24": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 70,
          column: 15
        }
      },
      "25": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "26": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 49
        }
      },
      "27": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 79,
          column: 15
        }
      },
      "28": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 86,
          column: 11
        }
      },
      "29": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "30": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 113,
          column: 13
        }
      },
      "31": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 62
        }
      },
      "32": {
        start: {
          line: 95,
          column: 42
        },
        end: {
          line: 95,
          column: 86
        }
      },
      "33": {
        start: {
          line: 97,
          column: 39
        },
        end: {
          line: 97,
          column: 41
        }
      },
      "34": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 102,
          column: 17
        }
      },
      "35": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 99,
          column: 57
        }
      },
      "36": {
        start: {
          line: 99,
          column: 30
        },
        end: {
          line: 99,
          column: 57
        }
      },
      "37": {
        start: {
          line: 100,
          column: 20
        },
        end: {
          line: 100,
          column: 69
        }
      },
      "38": {
        start: {
          line: 100,
          column: 34
        },
        end: {
          line: 100,
          column: 69
        }
      },
      "39": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 60
        }
      },
      "40": {
        start: {
          line: 101,
          column: 31
        },
        end: {
          line: 101,
          column: 60
        }
      },
      "41": {
        start: {
          line: 104,
          column: 39
        },
        end: {
          line: 104,
          column: 103
        }
      },
      "42": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 109,
          column: 17
        }
      },
      "43": {
        start: {
          line: 106,
          column: 20
        },
        end: {
          line: 106,
          column: 65
        }
      },
      "44": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 99
        }
      },
      "45": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 80
        }
      },
      "46": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 123,
          column: 11
        }
      },
      "47": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 47
        }
      },
      "48": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 132,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 15,
            column: 19
          }
        },
        loc: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 134,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 17
          }
        },
        loc: {
          start: {
            line: 38,
            column: 27
          },
          end: {
            line: 40,
            column: 17
          }
        },
        line: 38
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 17
          }
        },
        loc: {
          start: {
            line: 41,
            column: 43
          },
          end: {
            line: 47,
            column: 17
          }
        },
        line: 41
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 17
          }
        },
        loc: {
          start: {
            line: 48,
            column: 39
          },
          end: {
            line: 54,
            column: 17
          }
        },
        line: 48
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "2": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "3": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "4": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 91,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 88,
            column: 20
          }
        }, {
          start: {
            line: 88,
            column: 24
          },
          end: {
            line: 91,
            column: 28
          }
        }],
        line: 88
      },
      "5": {
        loc: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "6": {
        loc: {
          start: {
            line: 99,
            column: 20
          },
          end: {
            line: 99,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 20
          },
          end: {
            line: 99,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "7": {
        loc: {
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 100,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 100,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "8": {
        loc: {
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 101,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 101,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "9": {
        loc: {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        }, {
          start: {
            line: 107,
            column: 23
          },
          end: {
            line: 109,
            column: 17
          }
        }],
        line: 105
      },
      "10": {
        loc: {
          start: {
            line: 129,
            column: 19
          },
          end: {
            line: 129,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 60
          },
          end: {
            line: 129,
            column: 71
          }
        }, {
          start: {
            line: 129,
            column: 74
          },
          end: {
            line: 129,
            column: 83
          }
        }],
        line: 129
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/app/api/auth/exchange-code/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { createServerClient } from '@supabase/ssr';\nimport { cookies } from 'next/headers';\nimport { getSocialAuthService } from '@/lib/supabase/social/service';\n\n// \uBAA8\uB4E0 OAuth \uC81C\uACF5\uC790 \uB3D9\uC77C \uCC98\uB9AC: \uAC04\uB2E8\uD558\uACE0 \uC77C\uAD00\uB41C Supabase \uD45C\uC900 OAuth\n\nexport async function POST(request: NextRequest) {\n  try {\n    console.log('\uD83D\uDD27 [API] OAuth \uCF54\uB4DC \uAD50\uD658 \uC2DC\uC791');\n    \n    const body = await request.json();\n    const { code, provider, user, id_token, state } = body;\n\n    if (!code) {\n      return NextResponse.json(\n        { error: 'OAuth \uCF54\uB4DC\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4', success: false },\n        { status: 400 }\n      );\n    }\n\n    console.log('\uD83D\uDD10 [API] OAuth \uCF54\uB4DC \uC218\uC2E0:', { \n      code: code.substring(0, 10) + '...', \n      provider,\n      hasAppleUser: !!user,\n      hasAppleIdToken: !!id_token\n    });\n\n    // \uD83D\uDE80 \uC11C\uBC84\uC0AC\uC774\uB4DC Supabase \uD074\uB77C\uC774\uC5B8\uD2B8 \uC0DD\uC131\n    const cookieStore = await cookies();\n    \n    const supabase = createServerClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n      {\n        cookies: {\n          get(name: string) {\n            return cookieStore.get(name)?.value;\n          },\n          set(name: string, value: string, options: any) {\n            cookieStore.set({ name, value, ...options });\n          },\n          remove(name: string, options: any) {\n            cookieStore.set({ name, value: '', ...options });\n          },\n        },\n      }\n    );\n\n    console.log('\uD83D\uDD27 [API] \uC11C\uBC84\uC0AC\uC774\uB4DC Supabase \uD074\uB77C\uC774\uC5B8\uD2B8 \uC0DD\uC131 \uC644\uB8CC');\n\n    // \uBAA8\uB4E0 \uC81C\uACF5\uC790 \uB3D9\uC77C \uCC98\uB9AC: \uD45C\uC900 Supabase OAuth\uB9CC \uC0AC\uC6A9\n\n    // \uD83C\uDF10 \uBAA8\uB4E0 \uC81C\uACF5\uC790 \uACF5\uD1B5: \uD45C\uC900 Supabase OAuth \uC0AC\uC6A9\n    console.log('\uD83C\uDF10 [API] \uD45C\uC900 Supabase OAuth \uC0AC\uC6A9 (\uBAA8\uB4E0 \uC81C\uACF5\uC790 \uB3D9\uC77C)');\n    \n    const { data, error } = await supabase.auth.exchangeCodeForSession(code);\n\n    if (error) {\n      console.error('\u274C [API] OAuth \uCF54\uB4DC \uAD50\uD658 \uC2E4\uD328:', error);\n      return NextResponse.json(\n        { \n          error: `OAuth \uCF54\uB4DC \uAD50\uD658 \uC2E4\uD328: ${error.message}`, \n          success: false,\n          details: error \n        },\n        { status: 400 }\n      );\n    }\n\n    if (!data?.session) {\n      console.error('\u274C [API] \uC138\uC158\uC774 \uC0DD\uC131\uB418\uC9C0 \uC54A\uC74C');\n      return NextResponse.json(\n        { error: '\uC138\uC158\uC774 \uC0DD\uC131\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4', success: false },\n        { status: 400 }\n      );\n    }\n\n    console.log('\u2705 [API] OAuth \uC778\uC99D \uC131\uACF5:', {\n      hasSession: !!data.session,\n      hasUser: !!data.user,\n      userId: data.user?.id?.substring(0, 8) + '...',\n      provider: data.user?.app_metadata?.provider\n    });\n\n    // \uD83C\uDF4E Apple \uD2B9\uD654 \uD504\uB85C\uD544 \uCC98\uB9AC (\uB610\uB294 \uB2E4\uB978 \uC18C\uC15C \uD504\uB85C\uD544 \uCC98\uB9AC)\n    if (provider && ['apple', 'google'].includes(provider)) {\n      try {\n        console.log(`\uD83D\uDD27 [API] ${provider} \uD504\uB85C\uD544 \uCC98\uB9AC \uC2DC\uC791`);\n        \n        // SocialAuthService\uB97C \uD1B5\uD55C \uD504\uB85C\uD544 \uCC98\uB9AC\n        const socialAuthService = getSocialAuthService(supabase);\n        \n        // Apple \uD2B9\uD654 \uD30C\uB77C\uBBF8\uD130 \uC900\uBE44\n        const callbackParams: Record<string, string> = {};\n        if (provider === 'apple') {\n          if (user) callbackParams.user = user;\n          if (id_token) callbackParams.id_token = id_token;\n          if (state) callbackParams.state = state;\n        }\n        \n        // \uCF5C\uBC31 \uCC98\uB9AC (\uD504\uB85C\uD544 \uC0DD\uC131/\uC5C5\uB370\uC774\uD2B8)\n        const callbackResult = await socialAuthService.handleCallback(\n          provider as any,\n          callbackParams\n        );\n        \n        if (callbackResult.success) {\n          console.log(`\u2705 [API] ${provider} \uD504\uB85C\uD544 \uCC98\uB9AC \uC131\uACF5`);\n        } else {\n          console.error(`\u274C [API] ${provider} \uD504\uB85C\uD544 \uCC98\uB9AC \uC2E4\uD328:`, callbackResult.error?.message);\n        }\n      } catch (profileError) {\n        console.error(`\u274C [API] ${provider} \uD504\uB85C\uD544 \uCC98\uB9AC \uC911 \uC624\uB958:`, profileError);\n        // \uD504\uB85C\uD544 \uCC98\uB9AC \uC2E4\uD328\uD574\uB3C4 \uB85C\uADF8\uC778 \uC790\uCCB4\uB294 \uC131\uACF5\uC73C\uB85C \uCC98\uB9AC\n      }\n    }\n\n    return NextResponse.json({\n      success: true,\n      message: 'OAuth \uC778\uC99D \uC131\uACF5',\n      user: {\n        id: data.user?.id,\n        email: data.user?.email,\n        provider: data.user?.app_metadata?.provider\n      }\n    });\n\n  } catch (error: any) {\n    console.error('\u274C [API] \uC11C\uBC84 \uC624\uB958:', error);\n    return NextResponse.json(\n      { \n        error: `\uC11C\uBC84 \uC624\uB958: ${error.message}`, \n        success: false,\n        stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\n      },\n      { status: 500 }\n    );\n  }\n} "],
      names: ["POST", "request", "console", "log", "body", "json", "code", "provider", "user", "id_token", "state", "NextResponse", "error", "success", "status", "substring", "hasAppleUser", "hasAppleIdToken", "cookieStore", "cookies", "supabase", "createServerClient", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "NEXT_PUBLIC_SUPABASE_ANON_KEY", "get", "name", "value", "set", "options", "remove", "data", "auth", "exchangeCodeForSession", "message", "details", "session", "hasSession", "hasUser", "userId", "id", "app_metadata", "includes", "socialAuthService", "getSocialAuthService", "callbackParams", "callbackResult", "handleCallback", "profileError", "email", "stack", "NODE_ENV", "undefined"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "05f45ce504ee2ed1355d7ff9e0b4c4dbcecb8b38"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_20cra9ii11 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_20cra9ii11();
cov_20cra9ii11().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_20cra9ii11().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_20cra9ii11().f[0]++;
    cov_20cra9ii11().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_20cra9ii11().s[3]++, require("next/server"));
const _ssr =
/* istanbul ignore next */
(cov_20cra9ii11().s[4]++, require("@supabase/ssr"));
const _headers =
/* istanbul ignore next */
(cov_20cra9ii11().s[5]++, require("next/headers"));
const _service =
/* istanbul ignore next */
(cov_20cra9ii11().s[6]++, require("../../../../lib/supabase/social/service"));
async function POST(request) {
  /* istanbul ignore next */
  cov_20cra9ii11().f[1]++;
  cov_20cra9ii11().s[7]++;
  try {
    /* istanbul ignore next */
    cov_20cra9ii11().s[8]++;
    console.log('🔧 [API] OAuth 코드 교환 시작');
    const body =
    /* istanbul ignore next */
    (cov_20cra9ii11().s[9]++, await request.json());
    const {
      code,
      provider,
      user,
      id_token,
      state
    } =
    /* istanbul ignore next */
    (cov_20cra9ii11().s[10]++, body);
    /* istanbul ignore next */
    cov_20cra9ii11().s[11]++;
    if (!code) {
      /* istanbul ignore next */
      cov_20cra9ii11().b[0][0]++;
      cov_20cra9ii11().s[12]++;
      return _server.NextResponse.json({
        error: 'OAuth 코드가 필요합니다',
        success: false
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cra9ii11().b[0][1]++;
    }
    cov_20cra9ii11().s[13]++;
    console.log('🔐 [API] OAuth 코드 수신:', {
      code: code.substring(0, 10) + '...',
      provider,
      hasAppleUser: !!user,
      hasAppleIdToken: !!id_token
    });
    // 🚀 서버사이드 Supabase 클라이언트 생성
    const cookieStore =
    /* istanbul ignore next */
    (cov_20cra9ii11().s[14]++, await (0, _headers.cookies)());
    const supabase =
    /* istanbul ignore next */
    (cov_20cra9ii11().s[15]++, (0, _ssr.createServerClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY, {
      cookies: {
        get(name) {
          /* istanbul ignore next */
          cov_20cra9ii11().f[2]++;
          cov_20cra9ii11().s[16]++;
          return cookieStore.get(name)?.value;
        },
        set(name, value, options) {
          /* istanbul ignore next */
          cov_20cra9ii11().f[3]++;
          cov_20cra9ii11().s[17]++;
          cookieStore.set({
            name,
            value,
            ...options
          });
        },
        remove(name, options) {
          /* istanbul ignore next */
          cov_20cra9ii11().f[4]++;
          cov_20cra9ii11().s[18]++;
          cookieStore.set({
            name,
            value: '',
            ...options
          });
        }
      }
    }));
    /* istanbul ignore next */
    cov_20cra9ii11().s[19]++;
    console.log('🔧 [API] 서버사이드 Supabase 클라이언트 생성 완료');
    // 모든 제공자 동일 처리: 표준 Supabase OAuth만 사용
    // 🌐 모든 제공자 공통: 표준 Supabase OAuth 사용
    /* istanbul ignore next */
    cov_20cra9ii11().s[20]++;
    console.log('🌐 [API] 표준 Supabase OAuth 사용 (모든 제공자 동일)');
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_20cra9ii11().s[21]++, await supabase.auth.exchangeCodeForSession(code));
    /* istanbul ignore next */
    cov_20cra9ii11().s[22]++;
    if (error) {
      /* istanbul ignore next */
      cov_20cra9ii11().b[1][0]++;
      cov_20cra9ii11().s[23]++;
      console.error('❌ [API] OAuth 코드 교환 실패:', error);
      /* istanbul ignore next */
      cov_20cra9ii11().s[24]++;
      return _server.NextResponse.json({
        error: `OAuth 코드 교환 실패: ${error.message}`,
        success: false,
        details: error
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cra9ii11().b[1][1]++;
    }
    cov_20cra9ii11().s[25]++;
    if (!data?.session) {
      /* istanbul ignore next */
      cov_20cra9ii11().b[2][0]++;
      cov_20cra9ii11().s[26]++;
      console.error('❌ [API] 세션이 생성되지 않음');
      /* istanbul ignore next */
      cov_20cra9ii11().s[27]++;
      return _server.NextResponse.json({
        error: '세션이 생성되지 않았습니다',
        success: false
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_20cra9ii11().b[2][1]++;
    }
    cov_20cra9ii11().s[28]++;
    console.log('✅ [API] OAuth 인증 성공:', {
      hasSession: !!data.session,
      hasUser: !!data.user,
      userId: data.user?.id?.substring(0, 8) + '...',
      provider: data.user?.app_metadata?.provider
    });
    // 🍎 Apple 특화 프로필 처리 (또는 다른 소셜 프로필 처리)
    /* istanbul ignore next */
    cov_20cra9ii11().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_20cra9ii11().b[4][0]++, provider) &&
    /* istanbul ignore next */
    (cov_20cra9ii11().b[4][1]++, ['apple', 'google'].includes(provider))) {
      /* istanbul ignore next */
      cov_20cra9ii11().b[3][0]++;
      cov_20cra9ii11().s[30]++;
      try {
        /* istanbul ignore next */
        cov_20cra9ii11().s[31]++;
        console.log(`🔧 [API] ${provider} 프로필 처리 시작`);
        // SocialAuthService를 통한 프로필 처리
        const socialAuthService =
        /* istanbul ignore next */
        (cov_20cra9ii11().s[32]++, (0, _service.getSocialAuthService)(supabase));
        // Apple 특화 파라미터 준비
        const callbackParams =
        /* istanbul ignore next */
        (cov_20cra9ii11().s[33]++, {});
        /* istanbul ignore next */
        cov_20cra9ii11().s[34]++;
        if (provider === 'apple') {
          /* istanbul ignore next */
          cov_20cra9ii11().b[5][0]++;
          cov_20cra9ii11().s[35]++;
          if (user) {
            /* istanbul ignore next */
            cov_20cra9ii11().b[6][0]++;
            cov_20cra9ii11().s[36]++;
            callbackParams.user = user;
          } else
          /* istanbul ignore next */
          {
            cov_20cra9ii11().b[6][1]++;
          }
          cov_20cra9ii11().s[37]++;
          if (id_token) {
            /* istanbul ignore next */
            cov_20cra9ii11().b[7][0]++;
            cov_20cra9ii11().s[38]++;
            callbackParams.id_token = id_token;
          } else
          /* istanbul ignore next */
          {
            cov_20cra9ii11().b[7][1]++;
          }
          cov_20cra9ii11().s[39]++;
          if (state) {
            /* istanbul ignore next */
            cov_20cra9ii11().b[8][0]++;
            cov_20cra9ii11().s[40]++;
            callbackParams.state = state;
          } else
          /* istanbul ignore next */
          {
            cov_20cra9ii11().b[8][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_20cra9ii11().b[5][1]++;
        }
        // 콜백 처리 (프로필 생성/업데이트)
        const callbackResult =
        /* istanbul ignore next */
        (cov_20cra9ii11().s[41]++, await socialAuthService.handleCallback(provider, callbackParams));
        /* istanbul ignore next */
        cov_20cra9ii11().s[42]++;
        if (callbackResult.success) {
          /* istanbul ignore next */
          cov_20cra9ii11().b[9][0]++;
          cov_20cra9ii11().s[43]++;
          console.log(`✅ [API] ${provider} 프로필 처리 성공`);
        } else {
          /* istanbul ignore next */
          cov_20cra9ii11().b[9][1]++;
          cov_20cra9ii11().s[44]++;
          console.error(`❌ [API] ${provider} 프로필 처리 실패:`, callbackResult.error?.message);
        }
      } catch (profileError) {
        /* istanbul ignore next */
        cov_20cra9ii11().s[45]++;
        console.error(`❌ [API] ${provider} 프로필 처리 중 오류:`, profileError);
        // 프로필 처리 실패해도 로그인 자체는 성공으로 처리
      }
    } else
    /* istanbul ignore next */
    {
      cov_20cra9ii11().b[3][1]++;
    }
    cov_20cra9ii11().s[46]++;
    return _server.NextResponse.json({
      success: true,
      message: 'OAuth 인증 성공',
      user: {
        id: data.user?.id,
        email: data.user?.email,
        provider: data.user?.app_metadata?.provider
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20cra9ii11().s[47]++;
    console.error('❌ [API] 서버 오류:', error);
    /* istanbul ignore next */
    cov_20cra9ii11().s[48]++;
    return _server.NextResponse.json({
      error: `서버 오류: ${error.message}`,
      success: false,
      stack: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_20cra9ii11().b[10][0]++, error.stack) :
      /* istanbul ignore next */
      (cov_20cra9ii11().b[10][1]++, undefined)
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,