{"version":3,"sources":["/Users/cheolhyun/Repositories/picnic-web/jest.setup.js"],"sourcesContent":["// Jest DOM 확장을 가져와 테스트에서 DOM 어설션을 사용할 수 있게 합니다\nimport '@testing-library/jest-dom';\n\n// Web API 모킹 (Node.js 환경에서 브라우저 API 사용을 위해)\nimport { TextEncoder, TextDecoder } from 'util';\n\nglobal.TextEncoder = TextEncoder;\nglobal.TextDecoder = TextDecoder;\n\n// fetch API 모킹\nglobal.fetch = jest.fn(() =>\n  Promise.resolve({\n    ok: true,\n    json: () => Promise.resolve({}),\n    text: () => Promise.resolve(''),\n    status: 200,\n    statusText: 'OK',\n  })\n);\n\n// Request, Response, Headers 모킹\nglobal.Request = class Request {\n  constructor(input, init = {}) {\n    this.url = typeof input === 'string' ? input : input.url;\n    this.method = init.method || 'GET';\n    this.headers = new Headers(init.headers);\n    this.body = init.body;\n    this._bodyInit = init.body;\n  }\n\n  async json() {\n    if (this._bodyInit) {\n      return JSON.parse(this._bodyInit);\n    }\n    return {};\n  }\n\n  async text() {\n    return this._bodyInit || '';\n  }\n};\n\nglobal.Response = class Response {\n  constructor(body, init = {}) {\n    this.body = body;\n    this.status = init.status || 200;\n    this.statusText = init.statusText || 'OK';\n    this.headers = new Headers(init.headers);\n    this.ok = this.status >= 200 && this.status < 300;\n  }\n\n  async json() {\n    return JSON.parse(this.body);\n  }\n\n  async text() {\n    return this.body;\n  }\n};\n\nglobal.Headers = class Headers {\n  constructor(init = {}) {\n    this._headers = {};\n    if (init) {\n      Object.entries(init).forEach(([key, value]) => {\n        this._headers[key.toLowerCase()] = value;\n      });\n    }\n  }\n\n  get(name) {\n    return this._headers[name.toLowerCase()];\n  }\n\n  set(name, value) {\n    this._headers[name.toLowerCase()] = value;\n  }\n\n  has(name) {\n    return name.toLowerCase() in this._headers;\n  }\n};\n\n// URL 모킹 (Node.js에는 이미 있지만 확실히 하기 위해)\nif (!global.URL) {\n  global.URL = URL;\n}\n\n// Next.js 내장 함수와 컴포넌트 모킹\njest.mock('next/navigation', () => ({\n  useRouter: jest.fn(() => ({\n    push: jest.fn(),\n    replace: jest.fn(),\n    back: jest.fn(),\n    forward: jest.fn(),\n    refresh: jest.fn(),\n    prefetch: jest.fn(),\n    pathname: '/',\n    query: {},\n  })),\n  usePathname: jest.fn(() => '/'),\n  useSearchParams: jest.fn(() => new URLSearchParams()),\n  useParams: jest.fn(() => ({})),\n}));\n\n// NextResponse 모킹\njest.mock('next/server', () => ({\n  NextRequest: class NextRequest {\n    constructor(input, init = {}) {\n      this.url = typeof input === 'string' ? input : input.url;\n      this.method = init.method || 'GET';\n      this.headers = new Headers(init.headers);\n      this.body = init.body;\n      this._bodyInit = init.body;\n    }\n\n    async json() {\n      if (this._bodyInit) {\n        return JSON.parse(this._bodyInit);\n      }\n      return {};\n    }\n\n    async text() {\n      return this._bodyInit || '';\n    }\n  },\n  NextResponse: {\n    json: jest.fn((data, init = {}) => {\n      const response = new Response(JSON.stringify(data), {\n        status: init.status || 200,\n        statusText: init.statusText || 'OK',\n        headers: {\n          'Content-Type': 'application/json',\n          ...init.headers,\n        },\n      });\n      response.json = jest.fn().mockResolvedValue(data);\n      return response;\n    }),\n    redirect: jest.fn((url, status = 302) => {\n      return new Response(null, {\n        status,\n        headers: { Location: url },\n      });\n    }),\n  },\n}));\n\n// Supabase SSR 모킹 (@supabase/ssr)\njest.mock('@supabase/ssr', () => ({\n  createBrowserClient: jest.fn(() => ({\n    auth: {\n      getUser: jest.fn(() => ({ data: { user: null }, error: null })),\n      getSession: jest.fn(() => ({ data: { session: null }, error: null })),\n      signInWithOAuth: jest.fn(),\n      signOut: jest.fn(),\n      onAuthStateChange: jest.fn(() => ({\n        data: { subscription: { unsubscribe: jest.fn() } },\n      })),\n    },\n    from: jest.fn(() => ({\n      select: jest.fn(() => ({\n        eq: jest.fn(() => ({\n          data: [],\n          error: null,\n        })),\n      })),\n    })),\n  })),\n  createServerClient: jest.fn(() => ({\n    auth: {\n      getUser: jest.fn(() => ({ data: { user: null }, error: null })),\n      getSession: jest.fn(() => ({ data: { session: null }, error: null })),\n    },\n    from: jest.fn(() => ({\n      select: jest.fn(() => ({\n        eq: jest.fn(() => ({\n          data: [],\n          error: null,\n        })),\n      })),\n    })),\n  })),\n}));\n\n// Supabase 클라이언트 모킹\njest.mock('@/lib/supabase/client', () => {\n  const mockClient = {\n    auth: {\n      getUser: jest.fn(() => ({ data: { user: null }, error: null })),\n      getSession: jest.fn(() => ({ data: { session: null }, error: null })),\n      signInWithOAuth: jest.fn(),\n      signOut: jest.fn(),\n      onAuthStateChange: jest.fn(() => ({\n        data: { subscription: { unsubscribe: jest.fn() } },\n      })),\n    },\n    from: jest.fn(() => ({\n      select: jest.fn(() => ({\n        eq: jest.fn(() => ({\n          data: [],\n          error: null,\n        })),\n      })),\n    })),\n  };\n\n  return {\n    createBrowserSupabaseClient: jest.fn(() => mockClient),\n    getCurrentUser: jest.fn(() => Promise.resolve(null)),\n    getCurrentSession: jest.fn(() => Promise.resolve(null)),\n    signOut: jest.fn(),\n  };\n});\n\n// Supabase 서버 모킹\njest.mock('@/lib/supabase/server', () => {\n  const mockServerClient = {\n    auth: {\n      getUser: jest.fn(() => ({ data: { user: null }, error: null })),\n      getSession: jest.fn(() => ({ data: { session: null }, error: null })),\n    },\n    from: jest.fn(() => ({\n      select: jest.fn(() => ({\n        eq: jest.fn(() => ({\n          data: [],\n          error: null,\n        })),\n      })),\n    })),\n  };\n\n  return {\n    createServerSupabaseClient: jest.fn(() => mockServerClient),\n    getServerUser: jest.fn(() => Promise.resolve(null)),\n    getServerSession: jest.fn(() => Promise.resolve(null)),\n    withAuth: jest.fn((handler) => handler),\n  };\n});\n\n// next-intl 모킹\njest.mock('next-intl', () => ({\n  useTranslations: jest.fn(() => (key) => key),\n  useLocale: jest.fn(() => 'ko'),\n}));\n\n// 로컬 스토리지 모킹\nclass LocalStorageMock {\n  constructor() {\n    this.store = {};\n  }\n\n  clear() {\n    this.store = {};\n  }\n\n  getItem(key) {\n    return this.store[key] || null;\n  }\n\n  setItem(key, value) {\n    this.store[key] = String(value);\n  }\n\n  removeItem(key) {\n    delete this.store[key];\n  }\n}\n\nglobal.localStorage = new LocalStorageMock();\n\n// 쿠키 모킹\njest.mock('next/headers', () => ({\n  cookies: jest.fn(() => ({\n    get: jest.fn(),\n    set: jest.fn(),\n  })),\n}));\n"],"names":["jest","mock","useRouter","fn","push","replace","back","forward","refresh","prefetch","pathname","query","usePathname","useSearchParams","URLSearchParams","useParams","NextRequest","constructor","input","init","url","method","headers","Headers","body","_bodyInit","json","JSON","parse","text","NextResponse","data","response","Response","stringify","status","statusText","mockResolvedValue","redirect","Location","createBrowserClient","auth","getUser","user","error","getSession","session","signInWithOAuth","signOut","onAuthStateChange","subscription","unsubscribe","from","select","eq","createServerClient","mockClient","createBrowserSupabaseClient","getCurrentUser","Promise","resolve","getCurrentSession","mockServerClient","createServerSupabaseClient","getServerUser","getServerSession","withAuth","handler","useTranslations","key","useLocale","cookies","get","set","global","TextEncoder","TextDecoder","fetch","ok","Request","_headers","Object","entries","forEach","value","toLowerCase","name","has","URL","LocalStorageMock","store","clear","getItem","setItem","String","removeItem","localStorage"],"mappings":"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"}