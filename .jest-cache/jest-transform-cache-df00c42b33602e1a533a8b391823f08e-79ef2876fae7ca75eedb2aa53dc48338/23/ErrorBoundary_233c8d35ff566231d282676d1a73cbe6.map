{"version":3,"names":["cov_1iawogdong","actualCoverage","s","ErrorBoundary","error","reset","f","t","_languageStore","useLanguageStore","appError","_error","AppError","b","handleError","_react","default","useEffect","console","code","statusCode","status","errorMessage","toFriendlyMessage","ErrorCode","NOT_FOUND","UNAUTHORIZED","FORBIDDEN","VALIDATION","NETWORK_ERROR","_jsxruntime","jsxs","className","jsx","_ErrorState","message","retryLabel","retryLink","undefined","onClick"],"sources":["/Users/cheolhyun/Repositories/picnic-web/components/server/ErrorBoundary.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useLanguageStore } from '@/stores/languageStore';\nimport { ErrorCode, AppError, handleError } from '@/lib/supabase/error';\nimport ErrorState from './ErrorState';\n\ninterface ErrorBoundaryProps {\n  error: Error;\n  reset: () => void;\n}\n\n/**\n * 서버 컴포넌트용 에러 경계 컴포넌트\n * \n * Next.js의 error.tsx 파일과 함께 사용됩니다.\n * App Router에서 route segment마다 error.tsx를 생성하여 사용할 수 있습니다.\n * \n * @example\n * // app/[lang]/(main)/vote/error.tsx\n * import { ServerErrorBoundary } from '@/components/server';\n * export default ServerErrorBoundary;\n */\nexport default function ErrorBoundary({ error, reset }: ErrorBoundaryProps) {\n  const { t } = useLanguageStore();\n  \n  // 에러를 애플리케이션 표준 에러로 변환\n  const appError = error instanceof AppError ? error : handleError(error);\n  \n  // 로깅 추가\n  React.useEffect(() => {\n    console.error('서버 컴포넌트 에러:', error);\n    // 여기에 Sentry 등의 에러 로깅 서비스를 추가할 수 있습니다.\n  }, [error]);\n  \n  const { code } = appError;\n  \n  // 에러 유형에 따라 적절한 메시지와 상태 코드 표시\n  let statusCode = appError.status || 500;\n  let errorMessage = appError.toFriendlyMessage();\n  \n  switch (code) {\n    case ErrorCode.NOT_FOUND:\n      statusCode = 404;\n      errorMessage = t('error_loading_page') || '요청한 데이터를 찾을 수 없습니다.';\n      break;\n    case ErrorCode.UNAUTHORIZED:\n      statusCode = 401;\n      errorMessage = t('dialog_content_login_required') || '로그인이 필요합니다.';\n      break;\n    case ErrorCode.FORBIDDEN:\n      statusCode = 403;\n      errorMessage = '접근 권한이 없습니다.';\n      break;\n    case ErrorCode.VALIDATION:\n      statusCode = 400;\n      errorMessage = t('error_invalid_data') || '입력값이 유효하지 않습니다.';\n      break;\n    case ErrorCode.NETWORK_ERROR:\n      statusCode = 0;\n      errorMessage = t('error_network_connection') || '네트워크 연결을 확인해주세요.';\n      break;\n    default:\n      errorMessage = t('error.description') || '요청하신 페이지를 처리하는 중 문제가 발생했습니다.';\n      break;\n  }\n  \n  return (\n    <div className=\"py-8\">\n      <ErrorState \n        message={errorMessage}\n        code={statusCode}\n        retryLabel={t('error.retryButton')}\n        retryLink={undefined} // Link 대신 버튼 사용\n      />\n      <div className=\"mt-4 flex justify-center\">\n        <button\n          onClick={reset}\n          className=\"px-4 py-2 bg-primary text-white rounded hover:bg-primary/80 transition-colors\"\n        >\n          {t('error.retryButton')}\n        </button>\n      </div>\n    </div>\n  );\n} "],"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","ignoreList":[]}