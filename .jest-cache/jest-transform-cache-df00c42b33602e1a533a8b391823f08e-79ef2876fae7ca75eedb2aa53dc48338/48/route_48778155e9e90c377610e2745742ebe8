cc7c345dfdc086021ef09183970dba37
"use strict";

/* istanbul ignore next */
function cov_bxo8gcwva() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/app/api/vote/results/route.ts";
  var hash = "2f483838429b33f4a060a2bcb5b6c245ec90b9e0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/app/api/vote/results/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 30
        },
        end: {
          line: 20,
          column: 81
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "9": {
        start: {
          line: 23,
          column: 33
        },
        end: {
          line: 23,
          column: 53
        }
      },
      "10": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "11": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "12": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 30,
          column: 15
        }
      },
      "13": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 32,
          column: 45
        }
      },
      "14": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "15": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 38,
          column: 15
        }
      },
      "16": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 72
        }
      },
      "17": {
        start: {
          line: 42,
          column: 53
        },
        end: {
          line: 48,
          column: 69
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "19": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 53
        }
      },
      "20": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "21": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 56,
          column: 19
        }
      },
      "22": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 62,
          column: 15
        }
      },
      "23": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "24": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 69,
          column: 15
        }
      },
      "25": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 72,
          column: 30
        }
      },
      "26": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 73,
          column: 51
        }
      },
      "27": {
        start: {
          line: 74,
          column: 23
        },
        end: {
          line: 74,
          column: 49
        }
      },
      "28": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "29": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 32
        }
      },
      "30": {
        start: {
          line: 78,
          column: 15
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "31": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 31
        }
      },
      "32": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 29
        }
      },
      "33": {
        start: {
          line: 84,
          column: 55
        },
        end: {
          line: 101,
          column: 10
        }
      },
      "34": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "35": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 55
        }
      },
      "36": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 108,
          column: 15
        }
      },
      "37": {
        start: {
          line: 111,
          column: 27
        },
        end: {
          line: 111,
          column: 95
        }
      },
      "38": {
        start: {
          line: 111,
          column: 58
        },
        end: {
          line: 111,
          column: 86
        }
      },
      "39": {
        start: {
          line: 113,
          column: 24
        },
        end: {
          line: 131,
          column: 16
        }
      },
      "40": {
        start: {
          line: 114,
          column: 30
        },
        end: {
          line: 114,
          column: 50
        }
      },
      "41": {
        start: {
          line: 115,
          column: 31
        },
        end: {
          line: 115,
          column: 80
        }
      },
      "42": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 130,
          column: 14
        }
      },
      "43": {
        start: {
          line: 132,
          column: 25
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "44": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 142,
          column: 11
        }
      },
      "45": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 50
        }
      },
      "46": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "47": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 157,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 10
          }
        },
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 10
          },
          end: {
            line: 15,
            column: 11
          }
        },
        loc: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 18
          }
        },
        loc: {
          start: {
            line: 21,
            column: 28
          },
          end: {
            line: 151,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 111,
            column: 45
          },
          end: {
            line: 111,
            column: 46
          }
        },
        loc: {
          start: {
            line: 111,
            column: 58
          },
          end: {
            line: 111,
            column: 86
          }
        },
        line: 111
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 113,
            column: 39
          },
          end: {
            line: 113,
            column: 40
          }
        },
        loc: {
          start: {
            line: 113,
            column: 54
          },
          end: {
            line: 131,
            column: 9
          }
        },
        line: 113
      },
      "6": {
        name: "POST",
        decl: {
          start: {
            line: 152,
            column: 15
          },
          end: {
            line: 152,
            column: 19
          }
        },
        loc: {
          start: {
            line: 152,
            column: 29
          },
          end: {
            line: 158,
            column: 1
          }
        },
        line: 152
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 31
          }
        }, {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 33,
            column: 52
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "6": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: 78,
            column: 15
          },
          end: {
            line: 82,
            column: 9
          }
        }],
        line: 76
      },
      "7": {
        loc: {
          start: {
            line: 78,
            column: 15
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 15
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: 80,
            column: 15
          },
          end: {
            line: 82,
            column: 9
          }
        }],
        line: 78
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 19
          },
          end: {
            line: 78,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 19
          },
          end: {
            line: 78,
            column: 33
          }
        }, {
          start: {
            line: 78,
            column: 37
          },
          end: {
            line: 78,
            column: 50
          }
        }],
        line: 78
      },
      "9": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "10": {
        loc: {
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 90
          }
        }, {
          start: {
            line: 111,
            column: 94
          },
          end: {
            line: 111,
            column: 95
          }
        }],
        line: 111
      },
      "11": {
        loc: {
          start: {
            line: 111,
            column: 65
          },
          end: {
            line: 111,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 65
          },
          end: {
            line: 111,
            column: 80
          }
        }, {
          start: {
            line: 111,
            column: 84
          },
          end: {
            line: 111,
            column: 85
          }
        }],
        line: 111
      },
      "12": {
        loc: {
          start: {
            line: 113,
            column: 24
          },
          end: {
            line: 131,
            column: 16
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 24
          },
          end: {
            line: 131,
            column: 10
          }
        }, {
          start: {
            line: 131,
            column: 14
          },
          end: {
            line: 131,
            column: 16
          }
        }],
        line: 113
      },
      "13": {
        loc: {
          start: {
            line: 114,
            column: 30
          },
          end: {
            line: 114,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 30
          },
          end: {
            line: 114,
            column: 45
          }
        }, {
          start: {
            line: 114,
            column: 49
          },
          end: {
            line: 114,
            column: 50
          }
        }],
        line: 114
      },
      "14": {
        loc: {
          start: {
            line: 115,
            column: 31
          },
          end: {
            line: 115,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 48
          },
          end: {
            line: 115,
            column: 76
          }
        }, {
          start: {
            line: 115,
            column: 79
          },
          end: {
            line: 115,
            column: 80
          }
        }],
        line: 115
      },
      "15": {
        loc: {
          start: {
            line: 122,
            column: 24
          },
          end: {
            line: 127,
            column: 24
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 38
          },
          end: {
            line: 127,
            column: 17
          }
        }, {
          start: {
            line: 127,
            column: 20
          },
          end: {
            line: 127,
            column: 24
          }
        }],
        line: 122
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/app/api/vote/results/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from \"next/server\";\nimport { createClient } from \"@/utils/supabase-server-client\";\n\ninterface VoteResultItem {\n    id: number;\n    voteId: number;\n    artistId: number | null;\n    groupId: number;\n    voteTotal: number | null;\n    artist: {\n        id: number;\n        name: string;\n        image: string | null;\n        artistGroup: {\n            id: number;\n            name: string;\n        } | null;\n    } | null;\n    percentage: number;\n    rank: number;\n}\n\ninterface VoteResultsResponse {\n    voteId: number;\n    title: string;\n    status: \"upcoming\" | \"ongoing\" | \"ended\";\n    totalVotes: number;\n    results: VoteResultItem[];\n}\n\nexport async function GET(request: NextRequest) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const voteId = searchParams.get(\"voteId\");\n\n        if (!voteId) {\n            return NextResponse.json(\n                { error: \"\uD22C\uD45C ID\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.\" },\n                { status: 400 }\n            );\n        }\n\n        const voteIdNumber = parseInt(voteId);\n        if (isNaN(voteIdNumber) || voteIdNumber <= 0) {\n            return NextResponse.json(\n                { error: \"\uC720\uD6A8\uD55C \uD22C\uD45C ID\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.\" },\n                { status: 400 }\n            );\n        }\n\n        const supabase = await createClient();\n\n        // \uD22C\uD45C \uAE30\uBCF8 \uC815\uBCF4 \uC870\uD68C\n        const { data: voteData, error: voteError } = await supabase\n            .from(\"vote\")\n            .select(`\n                id,\n                title,\n                start_at,\n                stop_at,\n                deleted_at\n            `)\n            .eq(\"id\", voteIdNumber)\n            .is(\"deleted_at\", null)\n            .single();\n\n        if (voteError) {\n            console.error('\uD22C\uD45C \uC815\uBCF4 \uC870\uD68C \uC2E4\uD328:', voteError);\n            if (voteError.code === 'PGRST116') { // No rows returned\n                return NextResponse.json(\n                    { error: \"\uD22C\uD45C\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.\" },\n                    { status: 404 }\n                );\n            }\n            return NextResponse.json(\n                { error: \"\uD22C\uD45C \uC815\uBCF4 \uC870\uD68C\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.\" },\n                { status: 500 }\n            );\n        }\n\n        if (!voteData) {\n            return NextResponse.json(\n                { error: \"\uD22C\uD45C\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.\" },\n                { status: 404 }\n            );\n        }\n\n        // \uD22C\uD45C \uC0C1\uD0DC \uACC4\uC0B0\n        const now = new Date();\n        const startAt = new Date(voteData.start_at);\n        const stopAt = new Date(voteData.stop_at);\n\n        let status: \"upcoming\" | \"ongoing\" | \"ended\";\n        if (now < startAt) {\n            status = \"upcoming\";\n        } else if (now >= startAt && now <= stopAt) {\n            status = \"ongoing\";\n        } else {\n            status = \"ended\";\n        }\n\n        // \uD22C\uD45C \uC544\uC774\uD15C \uBC0F \uACB0\uACFC \uC870\uD68C\n        const { data: voteItems, error: itemsError } = await supabase\n            .from(\"vote_item\")\n            .select(`\n                id,\n                vote_id,\n                artist_id,\n                group_id,\n                vote_total,\n                artist (\n                    id,\n                    name,\n                    image,\n                    artist_group (\n                        id,\n                        name\n                    )\n                )\n            `)\n            .eq(\"vote_id\", voteIdNumber)\n            .is(\"deleted_at\", null)\n            .order(\"vote_total\", { ascending: false });\n\n        if (itemsError) {\n            console.error('\uD22C\uD45C \uC544\uC774\uD15C \uC870\uD68C \uC2E4\uD328:', itemsError);\n            return NextResponse.json(\n                { error: \"\uD22C\uD45C \uC544\uC774\uD15C \uC870\uD68C\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.\" },\n                { status: 500 }\n            );\n        }\n\n        // \uCD1D \uD22C\uD45C \uC218 \uACC4\uC0B0\n        const totalVotes = voteItems?.reduce((sum, item) =>\n            sum + (item.vote_total || 0), 0) || 0;\n\n        // \uACB0\uACFC \uB370\uC774\uD130 \uBCC0\uD658 \uBC0F \uC21C\uC704 \uACC4\uC0B0\n        const results: VoteResultItem[] = voteItems?.map((item: any, index) => {\n            const voteTotal = item.vote_total || 0;\n            const percentage = totalVotes > 0\n                ? (voteTotal / totalVotes) * 100\n                : 0;\n\n            return {\n                id: item.id,\n                voteId: item.vote_id,\n                artistId: item.artist_id,\n                groupId: item.group_id,\n                voteTotal,\n                artist: item.artist\n                    ? {\n                        id: item.artist.id,\n                        name: item.artist.name,\n                        image: item.artist.image,\n                        artistGroup: item.artist.artist_group,\n                    }\n                    : null,\n                percentage: Math.round(percentage * 100) / 100, // \uC18C\uC218\uC810 2\uC790\uB9AC\n                rank: index + 1, // \uC774\uBBF8 vote_total \uB0B4\uB9BC\uCC28\uC21C\uC73C\uB85C \uC815\uB82C\uB428\n            };\n        }) || [];\n\n        const response: VoteResultsResponse = {\n            voteId: voteIdNumber,\n            title: voteData.title,\n            status,\n            totalVotes,\n            results,\n        };\n\n        return NextResponse.json({\n            success: true,\n            data: response,\n        });\n    } catch (error) {\n        console.error('\uD22C\uD45C \uACB0\uACFC \uC870\uD68C \uCC98\uB9AC \uC911 \uC624\uB958:', error);\n        return NextResponse.json(\n            { error: '\uC11C\uBC84 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.' },\n            { status: 500 }\n        );\n    }\n}\n\nexport async function POST(request: NextRequest) {\n    return NextResponse.json(\n        { error: \"POST \uBA54\uC11C\uB4DC\uB294 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.\" },\n        { status: 405 }\n    );\n}\n"],
      names: ["GET", "POST", "request", "searchParams", "URL", "url", "voteId", "get", "NextResponse", "json", "error", "status", "voteIdNumber", "parseInt", "isNaN", "supabase", "createClient", "data", "voteData", "voteError", "from", "select", "eq", "is", "single", "console", "code", "now", "Date", "startAt", "start_at", "stopAt", "stop_at", "voteItems", "itemsError", "order", "ascending", "totalVotes", "reduce", "sum", "item", "vote_total", "results", "map", "index", "voteTotal", "percentage", "id", "vote_id", "artistId", "artist_id", "groupId", "group_id", "artist", "name", "image", "artistGroup", "artist_group", "Math", "round", "rank", "response", "title", "success"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2f483838429b33f4a060a2bcb5b6c245ec90b9e0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bxo8gcwva = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_bxo8gcwva();
cov_bxo8gcwva().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_bxo8gcwva().f[0]++;
  cov_bxo8gcwva().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_bxo8gcwva().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_bxo8gcwva().s[3]++;
_export(exports, {
  GET: function () {
    /* istanbul ignore next */
    cov_bxo8gcwva().f[1]++;
    cov_bxo8gcwva().s[4]++;
    return GET;
  },
  POST: function () {
    /* istanbul ignore next */
    cov_bxo8gcwva().f[2]++;
    cov_bxo8gcwva().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_bxo8gcwva().s[6]++, require("next/server"));
const _supabaseserverclient =
/* istanbul ignore next */
(cov_bxo8gcwva().s[7]++, require("../../../../utils/supabase-server-client"));
async function GET(request) {
  /* istanbul ignore next */
  cov_bxo8gcwva().f[3]++;
  cov_bxo8gcwva().s[8]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_bxo8gcwva().s[9]++, new URL(request.url));
    const voteId =
    /* istanbul ignore next */
    (cov_bxo8gcwva().s[10]++, searchParams.get("voteId"));
    /* istanbul ignore next */
    cov_bxo8gcwva().s[11]++;
    if (!voteId) {
      /* istanbul ignore next */
      cov_bxo8gcwva().b[0][0]++;
      cov_bxo8gcwva().s[12]++;
      return _server.NextResponse.json({
        error: "투표 ID가 필요합니다."
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_bxo8gcwva().b[0][1]++;
    }
    const voteIdNumber =
    /* istanbul ignore next */
    (cov_bxo8gcwva().s[13]++, parseInt(voteId));
    /* istanbul ignore next */
    cov_bxo8gcwva().s[14]++;
    if (
    /* istanbul ignore next */
    (cov_bxo8gcwva().b[2][0]++, isNaN(voteIdNumber)) ||
    /* istanbul ignore next */
    (cov_bxo8gcwva().b[2][1]++, voteIdNumber <= 0)) {
      /* istanbul ignore next */
      cov_bxo8gcwva().b[1][0]++;
      cov_bxo8gcwva().s[15]++;
      return _server.NextResponse.json({
        error: "유효한 투표 ID가 필요합니다."
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_bxo8gcwva().b[1][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_bxo8gcwva().s[16]++, await (0, _supabaseserverclient.createClient)());
    // 투표 기본 정보 조회
    const {
      data: voteData,
      error: voteError
    } =
    /* istanbul ignore next */
    (cov_bxo8gcwva().s[17]++, await supabase.from("vote").select(`
                id,
                title,
                start_at,
                stop_at,
                deleted_at
            `).eq("id", voteIdNumber).is("deleted_at", null).single());
    /* istanbul ignore next */
    cov_bxo8gcwva().s[18]++;
    if (voteError) {
      /* istanbul ignore next */
      cov_bxo8gcwva().b[3][0]++;
      cov_bxo8gcwva().s[19]++;
      console.error('투표 정보 조회 실패:', voteError);
      /* istanbul ignore next */
      cov_bxo8gcwva().s[20]++;
      if (voteError.code === 'PGRST116') {
        /* istanbul ignore next */
        cov_bxo8gcwva().b[4][0]++;
        cov_bxo8gcwva().s[21]++;
        return _server.NextResponse.json({
          error: "투표를 찾을 수 없습니다."
        }, {
          status: 404
        });
      } else
      /* istanbul ignore next */
      {
        cov_bxo8gcwva().b[4][1]++;
      }
      cov_bxo8gcwva().s[22]++;
      return _server.NextResponse.json({
        error: "투표 정보 조회에 실패했습니다."
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_bxo8gcwva().b[3][1]++;
    }
    cov_bxo8gcwva().s[23]++;
    if (!voteData) {
      /* istanbul ignore next */
      cov_bxo8gcwva().b[5][0]++;
      cov_bxo8gcwva().s[24]++;
      return _server.NextResponse.json({
        error: "투표를 찾을 수 없습니다."
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_bxo8gcwva().b[5][1]++;
    }
    // 투표 상태 계산
    const now =
    /* istanbul ignore next */
    (cov_bxo8gcwva().s[25]++, new Date());
    const startAt =
    /* istanbul ignore next */
    (cov_bxo8gcwva().s[26]++, new Date(voteData.start_at));
    const stopAt =
    /* istanbul ignore next */
    (cov_bxo8gcwva().s[27]++, new Date(voteData.stop_at));
    let status;
    /* istanbul ignore next */
    cov_bxo8gcwva().s[28]++;
    if (now < startAt) {
      /* istanbul ignore next */
      cov_bxo8gcwva().b[6][0]++;
      cov_bxo8gcwva().s[29]++;
      status = "upcoming";
    } else {
      /* istanbul ignore next */
      cov_bxo8gcwva().b[6][1]++;
      cov_bxo8gcwva().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_bxo8gcwva().b[8][0]++, now >= startAt) &&
      /* istanbul ignore next */
      (cov_bxo8gcwva().b[8][1]++, now <= stopAt)) {
        /* istanbul ignore next */
        cov_bxo8gcwva().b[7][0]++;
        cov_bxo8gcwva().s[31]++;
        status = "ongoing";
      } else {
        /* istanbul ignore next */
        cov_bxo8gcwva().b[7][1]++;
        cov_bxo8gcwva().s[32]++;
        status = "ended";
      }
    }
    // 투표 아이템 및 결과 조회
    const {
      data: voteItems,
      error: itemsError
    } =
    /* istanbul ignore next */
    (cov_bxo8gcwva().s[33]++, await supabase.from("vote_item").select(`
                id,
                vote_id,
                artist_id,
                group_id,
                vote_total,
                artist (
                    id,
                    name,
                    image,
                    artist_group (
                        id,
                        name
                    )
                )
            `).eq("vote_id", voteIdNumber).is("deleted_at", null).order("vote_total", {
      ascending: false
    }));
    /* istanbul ignore next */
    cov_bxo8gcwva().s[34]++;
    if (itemsError) {
      /* istanbul ignore next */
      cov_bxo8gcwva().b[9][0]++;
      cov_bxo8gcwva().s[35]++;
      console.error('투표 아이템 조회 실패:', itemsError);
      /* istanbul ignore next */
      cov_bxo8gcwva().s[36]++;
      return _server.NextResponse.json({
        error: "투표 아이템 조회에 실패했습니다."
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_bxo8gcwva().b[9][1]++;
    }
    // 총 투표 수 계산
    const totalVotes =
    /* istanbul ignore next */
    (cov_bxo8gcwva().s[37]++,
    /* istanbul ignore next */
    (cov_bxo8gcwva().b[10][0]++, voteItems?.reduce((sum, item) => {
      /* istanbul ignore next */
      cov_bxo8gcwva().f[4]++;
      cov_bxo8gcwva().s[38]++;
      return sum + (
      /* istanbul ignore next */
      (cov_bxo8gcwva().b[11][0]++, item.vote_total) ||
      /* istanbul ignore next */
      (cov_bxo8gcwva().b[11][1]++, 0));
    }, 0)) ||
    /* istanbul ignore next */
    (cov_bxo8gcwva().b[10][1]++, 0));
    // 결과 데이터 변환 및 순위 계산
    const results =
    /* istanbul ignore next */
    (cov_bxo8gcwva().s[39]++,
    /* istanbul ignore next */
    (cov_bxo8gcwva().b[12][0]++, voteItems?.map((item, index) => {
      /* istanbul ignore next */
      cov_bxo8gcwva().f[5]++;
      const voteTotal =
      /* istanbul ignore next */
      (cov_bxo8gcwva().s[40]++,
      /* istanbul ignore next */
      (cov_bxo8gcwva().b[13][0]++, item.vote_total) ||
      /* istanbul ignore next */
      (cov_bxo8gcwva().b[13][1]++, 0));
      const percentage =
      /* istanbul ignore next */
      (cov_bxo8gcwva().s[41]++, totalVotes > 0 ?
      /* istanbul ignore next */
      (cov_bxo8gcwva().b[14][0]++, voteTotal / totalVotes * 100) :
      /* istanbul ignore next */
      (cov_bxo8gcwva().b[14][1]++, 0));
      /* istanbul ignore next */
      cov_bxo8gcwva().s[42]++;
      return {
        id: item.id,
        voteId: item.vote_id,
        artistId: item.artist_id,
        groupId: item.group_id,
        voteTotal,
        artist: item.artist ?
        /* istanbul ignore next */
        (cov_bxo8gcwva().b[15][0]++, {
          id: item.artist.id,
          name: item.artist.name,
          image: item.artist.image,
          artistGroup: item.artist.artist_group
        }) :
        /* istanbul ignore next */
        (cov_bxo8gcwva().b[15][1]++, null),
        percentage: Math.round(percentage * 100) / 100,
        rank: index + 1
      };
    })) ||
    /* istanbul ignore next */
    (cov_bxo8gcwva().b[12][1]++, []));
    const response =
    /* istanbul ignore next */
    (cov_bxo8gcwva().s[43]++, {
      voteId: voteIdNumber,
      title: voteData.title,
      status,
      totalVotes,
      results
    });
    /* istanbul ignore next */
    cov_bxo8gcwva().s[44]++;
    return _server.NextResponse.json({
      success: true,
      data: response
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_bxo8gcwva().s[45]++;
    console.error('투표 결과 조회 처리 중 오류:', error);
    /* istanbul ignore next */
    cov_bxo8gcwva().s[46]++;
    return _server.NextResponse.json({
      error: '서버 오류가 발생했습니다.'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_bxo8gcwva().f[6]++;
  cov_bxo8gcwva().s[47]++;
  return _server.NextResponse.json({
    error: "POST 메서드는 지원되지 않습니다."
  }, {
    status: 405
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,