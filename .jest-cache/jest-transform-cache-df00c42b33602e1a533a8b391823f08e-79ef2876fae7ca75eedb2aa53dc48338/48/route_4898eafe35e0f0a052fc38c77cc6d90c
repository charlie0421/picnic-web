30f0d0f18f39ac6acdcab21f4d583806
/**
 * Server-side Logout API Endpoint
 * 
 * This endpoint handles server-side session invalidation and cleanup
 * when users log out from the Picnic application.
 */"use strict";

/* istanbul ignore next */
function cov_1tlv8yywu8() {
  var path = "/Users/cheolhyun/Repositories/picnic-web/app/api/auth/logout/route.ts";
  var hash = "84fd2d4c770803857e15ca0f4fe96e343f09424f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cheolhyun/Repositories/picnic-web/app/api/auth/logout/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "2": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 19
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 20
        }
      },
      "7": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 38
        }
      },
      "8": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 52
        }
      },
      "9": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 160,
          column: 5
        }
      },
      "10": {
        start: {
          line: 31,
          column: 26
        },
        end: {
          line: 31,
          column: 50
        }
      },
      "11": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 70
        }
      },
      "12": {
        start: {
          line: 34,
          column: 19
        },
        end: {
          line: 34,
          column: 21
        }
      },
      "13": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "14": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 40
        }
      },
      "15": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 86
        }
      },
      "16": {
        start: {
          line: 40,
          column: 55
        },
        end: {
          line: 40,
          column: 59
        }
      },
      "17": {
        start: {
          line: 42,
          column: 25
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "18": {
        start: {
          line: 48,
          column: 30
        },
        end: {
          line: 48,
          column: 31
        }
      },
      "19": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "20": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "21": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 64
        }
      },
      "22": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 67,
          column: 17
        }
      },
      "23": {
        start: {
          line: 55,
          column: 38
        },
        end: {
          line: 55,
          column: 79
        }
      },
      "24": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 62,
          column: 21
        }
      },
      "25": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 57,
          column: 88
        }
      },
      "26": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 60,
          column: 42
        }
      },
      "27": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 61,
          column: 77
        }
      },
      "28": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 67,
          column: 17
        }
      },
      "29": {
        start: {
          line: 66,
          column: 20
        },
        end: {
          line: 66,
          column: 83
        }
      },
      "30": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 71
        }
      },
      "31": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "32": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 60
        }
      },
      "33": {
        start: {
          line: 77,
          column: 34
        },
        end: {
          line: 83,
          column: 13
        }
      },
      "34": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "35": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 92,
          column: 17
        }
      },
      "36": {
        start: {
          line: 89,
          column: 20
        },
        end: {
          line: 89,
          column: 61
        }
      },
      "37": {
        start: {
          line: 91,
          column: 20
        },
        end: {
          line: 91,
          column: 74
        }
      },
      "38": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 55
        }
      },
      "39": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 67
        }
      },
      "40": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "41": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 54
        }
      },
      "42": {
        start: {
          line: 101,
          column: 28
        },
        end: {
          line: 110,
          column: 13
        }
      },
      "43": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 50
        }
      },
      "44": {
        start: {
          line: 114,
          column: 33
        },
        end: {
          line: 114,
          column: 70
        }
      },
      "45": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "46": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 126,
          column: 17
        }
      },
      "47": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 122,
          column: 23
        }
      },
      "48": {
        start: {
          line: 124,
          column: 20
        },
        end: {
          line: 124,
          column: 71
        }
      },
      "49": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 49
        }
      },
      "50": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 61
        }
      },
      "51": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "52": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 142,
          column: 13
        }
      },
      "53": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 58
        }
      },
      "54": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 53
        }
      },
      "55": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 61
        }
      },
      "56": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 105
        }
      },
      "57": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 152,
          column: 11
        }
      },
      "58": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 46
        }
      },
      "59": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 159,
          column: 11
        }
      },
      "60": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "61": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 164,
          column: 40
        }
      },
      "62": {
        start: {
          line: 165,
          column: 22
        },
        end: {
          line: 165,
          column: 62
        }
      },
      "63": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "64": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 182,
          column: 15
        }
      },
      "65": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 187,
          column: 11
        }
      },
      "66": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 49
        }
      },
      "67": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 194,
          column: 11
        }
      },
      "68": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 206,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 16
          }
        },
        loc: {
          start: {
            line: 10,
            column: 30
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 10
          }
        },
        loc: {
          start: {
            line: 17,
            column: 20
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 20,
            column: 14
          }
        },
        loc: {
          start: {
            line: 20,
            column: 24
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 10
          },
          end: {
            line: 23,
            column: 11
          }
        },
        loc: {
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 19
          }
        },
        loc: {
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 161,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 86,
            column: 34
          },
          end: {
            line: 86,
            column: 35
          }
        },
        loc: {
          start: {
            line: 86,
            column: 41
          },
          end: {
            line: 93,
            column: 13
          }
        },
        line: 86
      },
      "6": {
        name: "GET",
        decl: {
          start: {
            line: 162,
            column: 15
          },
          end: {
            line: 162,
            column: 18
          }
        },
        loc: {
          start: {
            line: 162,
            column: 28
          },
          end: {
            line: 196,
            column: 1
          }
        },
        line: 162
      },
      "7": {
        name: "OPTIONS",
        decl: {
          start: {
            line: 197,
            column: 15
          },
          end: {
            line: 197,
            column: 22
          }
        },
        loc: {
          start: {
            line: 197,
            column: 25
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 197
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 40,
            column: 31
          }
        }],
        line: 40
      },
      "1": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 20
          }
        }, {
          start: {
            line: 50,
            column: 24
          },
          end: {
            line: 50,
            column: 30
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 67,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 67,
            column: 17
          }
        }, {
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 67,
            column: 17
          }
        }],
        line: 53
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 62,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 62,
            column: 21
          }
        }, {
          start: {
            line: 59,
            column: 27
          },
          end: {
            line: 62,
            column: 21
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 67,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 67,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 104,
            column: 25
          },
          end: {
            line: 104,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 25
          },
          end: {
            line: 104,
            column: 31
          }
        }, {
          start: {
            line: 104,
            column: 35
          },
          end: {
            line: 104,
            column: 44
          }
        }],
        line: 104
      },
      "7": {
        loc: {
          start: {
            line: 105,
            column: 28
          },
          end: {
            line: 105,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 28
          },
          end: {
            line: 105,
            column: 37
          }
        }, {
          start: {
            line: 105,
            column: 41
          },
          end: {
            line: 105,
            column: 50
          }
        }],
        line: 105
      },
      "8": {
        loc: {
          start: {
            line: 106,
            column: 28
          },
          end: {
            line: 106,
            column: 153
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 28
          },
          end: {
            line: 106,
            column: 66
          }
        }, {
          start: {
            line: 106,
            column: 70
          },
          end: {
            line: 106,
            column: 102
          }
        }, {
          start: {
            line: 106,
            column: 106
          },
          end: {
            line: 106,
            column: 140
          }
        }, {
          start: {
            line: 106,
            column: 144
          },
          end: {
            line: 106,
            column: 153
          }
        }],
        line: 106
      },
      "9": {
        loc: {
          start: {
            line: 107,
            column: 28
          },
          end: {
            line: 107,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 28
          },
          end: {
            line: 107,
            column: 61
          }
        }, {
          start: {
            line: 107,
            column: 65
          },
          end: {
            line: 107,
            column: 74
          }
        }],
        line: 107
      },
      "10": {
        loc: {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 127,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 127,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "11": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 142,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 142,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "12": {
        loc: {
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 134,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 134,
            column: 37
          }
        }, {
          start: {
            line: 134,
            column: 41
          },
          end: {
            line: 134,
            column: 47
          }
        }],
        line: 134
      },
      "13": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "14": {
        loc: {
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 166,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 166,
            column: 17
          }
        }, {
          start: {
            line: 166,
            column: 21
          },
          end: {
            line: 166,
            column: 59
          }
        }],
        line: 166
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/cheolhyun/Repositories/picnic-web/app/api/auth/logout/route.ts"],
      sourcesContent: ["/**\n * Server-side Logout API Endpoint\n * \n * This endpoint handles server-side session invalidation and cleanup\n * when users log out from the Picnic application.\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createClient } from '@supabase/supabase-js';\n\n// Types\ninterface LogoutRequestBody {\n  timestamp?: string;\n  clearAll?: boolean;\n  userId?: string;\n  sessionId?: string;\n}\n\ninterface LogoutResponse {\n  success: boolean;\n  message: string;\n  timestamp: string;\n  clearedSessions?: number;\n  error?: string;\n}\n\n/**\n * POST /api/auth/logout\n * \n * Handles server-side logout operations including:\n * 1. Invalidating Supabase sessions\n * 2. Clearing server-side cached data\n * 3. Logging logout events\n */\nexport async function POST(request: NextRequest) {\n  try {\n    const timestamp = new Date().toISOString();\n    \n    console.log('\uD83D\uDD10 Server-side logout initiated at:', timestamp);\n\n    // Parse request body\n    let body: LogoutRequestBody = {};\n    try {\n      body = await request.json();\n    } catch (err) {\n      console.warn('No request body or invalid JSON, proceeding with defaults');\n    }\n\n    const { clearAll = true, userId, sessionId } = body;\n\n    // Create Supabase service client (bypasses RLS)\n    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.SUPABASE_SERVICE_ROLE_KEY!,\n      {\n        auth: {\n          autoRefreshToken: false,\n          persistSession: false\n        }\n      }\n    );\n\n    let clearedSessions = 0;\n\n    // 1. Clear Supabase sessions\n    if (clearAll || userId) {\n      try {\n        console.log('\uD83E\uDDF9 Clearing Supabase sessions...');\n        \n        if (userId) {\n          // Clear sessions for specific user\n          const { error } = await supabase.auth.admin.signOut(userId);\n          if (error) {\n            console.warn('Error signing out specific user:', error.message);\n            // Don't throw here, just log the warning\n          } else {\n            clearedSessions++;\n            console.log(`\u2705 Cleared session for user: ${userId}`);\n          }\n        } else if (clearAll) {\n          // Note: In a real implementation, you might want to clear sessions differently\n          // This is a placeholder for bulk session clearing logic\n          console.log('\u2139\uFE0F clearAll=true, but no specific user provided');\n        }\n      } catch (err) {\n        console.warn('Error clearing Supabase sessions:', err);\n        // Don't throw here, continue with other cleanup operations\n      }\n    }\n\n    // 2. Clear server-side cache (if any)\n    try {\n      console.log('\uD83E\uDDF9 Clearing server-side cache...');\n      \n      // Clear Next.js cache tags related to auth\n      const authCacheTags = [\n        'user-session',\n        'auth-state',\n        'user-profile',\n        'user-votes',\n        'user-preferences'\n      ];\n\n      // Note: In Next.js 14+, you might use revalidateTag\n      // For now, we'll just log the cache clearing\n      authCacheTags.forEach(tag => {\n        try {\n          // revalidateTag(tag); // Uncomment if using Next.js cache tags\n          console.log(`Cache tag cleared: ${tag}`);\n        } catch (err) {\n          console.warn(`Error clearing cache tag ${tag}:`, err);\n        }\n      });\n\n      console.log('\u2705 Server-side cache cleared');\n    } catch (err) {\n      console.warn('Error clearing server-side cache:', err);\n    }\n\n    // 3. Log logout event for analytics/security\n    try {\n      console.log('\uD83D\uDCDD Logging logout event...');\n      \n      const logData = {\n        event: 'user_logout',\n        timestamp,\n        user_id: userId || 'unknown',\n        session_id: sessionId || 'unknown',\n        ip_address: request.headers.get('x-forwarded-for') || \n                   request.headers.get('x-real-ip') || \n                   request.headers.get('x-client-ip') ||\n                   'unknown',\n        user_agent: request.headers.get('user-agent') || 'unknown',\n        clear_all: clearAll,\n        success: true\n      };\n\n      // Log to console for development\n      console.log('Logout event:', logData);\n\n      // In production, you might want to log to a database or external service\n      const isProduction = (process.env.NODE_ENV as string) === 'production';\n      if (isProduction) {\n        try {\n          // Example: Log to Supabase audit table\n          await supabase\n            .from('audit_logs')\n            .insert({\n              event_type: 'user_logout',\n              event_data: logData,\n              created_at: timestamp\n            });\n        } catch (err) {\n          console.warn('Error logging to audit table:', err);\n          // Don't throw here, logging failure shouldn't break logout\n        }\n      }\n\n      console.log('\u2705 Logout event logged');\n    } catch (err) {\n      console.warn('Error logging logout event:', err);\n    }\n\n    // 4. Clear any Redis/external cache (if applicable)\n    try {\n      if (process.env.REDIS_URL && userId) {\n        console.log('\uD83E\uDDF9 Clearing Redis cache...');\n        \n        // Example Redis cache clearing\n        // const redis = new Redis(process.env.REDIS_URL);\n        // await redis.del(`user:${userId}:session`);\n        // await redis.del(`user:${userId}:preferences`);\n        // await redis.del(`user:${userId}:votes`);\n        \n        console.log('\u2705 Redis cache cleared');\n      }\n    } catch (err) {\n      console.warn('Error clearing Redis cache:', err);\n    }\n\n    console.log(`\u2705 Server-side logout completed successfully. Cleared ${clearedSessions} sessions.`);\n\n    return NextResponse.json({\n      success: true,\n      message: 'Logout completed successfully',\n      timestamp,\n      clearedSessions\n    });\n  } catch (error) {\n    console.error('\uB85C\uADF8\uC544\uC6C3 \uCC98\uB9AC \uC911 \uC624\uB958:', error);\n    return NextResponse.json(\n      { error: '\uC11C\uBC84 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * GET /api/auth/logout\n * \n * Returns logout status and debugging information\n */\nexport async function GET(request: NextRequest) {\n  try {\n    const url = new URL(request.url);\n    const debug = url.searchParams.get('debug') === 'true';\n\n    if (debug && process.env.NODE_ENV === 'development') {\n      // Return debugging information in development\n      return NextResponse.json({\n        endpoint: '/api/auth/logout',\n        methods: ['POST', 'GET'],\n        description: 'Server-side logout endpoint',\n        timestamp: new Date().toISOString(),\n        environment: process.env.NODE_ENV,\n        features: {\n          supabase_logout: !!process.env.SUPABASE_SERVICE_ROLE_KEY,\n          redis_cache: !!process.env.REDIS_URL,\n          audit_logging: (process.env.NODE_ENV as string) === 'production'\n        }\n      });\n    }\n\n    return NextResponse.json({\n      message: 'Logout endpoint is active',\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    console.error('\uB85C\uADF8\uC544\uC6C3 \uC0C1\uD0DC \uC870\uD68C \uC911 \uC624\uB958:', error);\n    return NextResponse.json(\n      { error: '\uC11C\uBC84 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * OPTIONS /api/auth/logout\n * \n * CORS preflight handler\n */\nexport async function OPTIONS(): Promise<NextResponse> {\n  return new NextResponse(null, {\n    status: 200,\n    headers: {\n      'Allow': 'GET, POST, OPTIONS',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}"],
      names: ["GET", "OPTIONS", "POST", "request", "timestamp", "Date", "toISOString", "console", "log", "body", "json", "err", "warn", "clearAll", "userId", "sessionId", "supabase", "createClient", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "SUPABASE_SERVICE_ROLE_KEY", "auth", "autoRefreshToken", "persistSession", "clearedSessions", "error", "admin", "signOut", "message", "authCacheTags", "forEach", "tag", "logData", "event", "user_id", "session_id", "ip_address", "headers", "get", "user_agent", "clear_all", "success", "isProduction", "NODE_ENV", "from", "insert", "event_type", "event_data", "created_at", "REDIS_URL", "NextResponse", "status", "url", "URL", "debug", "searchParams", "endpoint", "methods", "description", "environment", "features", "supabase_logout", "redis_cache", "audit_logging"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "84fd2d4c770803857e15ca0f4fe96e343f09424f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tlv8yywu8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1tlv8yywu8();
cov_1tlv8yywu8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1tlv8yywu8().f[0]++;
  cov_1tlv8yywu8().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1tlv8yywu8().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1tlv8yywu8().s[3]++;
_export(exports, {
  GET: function () {
    /* istanbul ignore next */
    cov_1tlv8yywu8().f[1]++;
    cov_1tlv8yywu8().s[4]++;
    return GET;
  },
  OPTIONS: function () {
    /* istanbul ignore next */
    cov_1tlv8yywu8().f[2]++;
    cov_1tlv8yywu8().s[5]++;
    return OPTIONS;
  },
  POST: function () {
    /* istanbul ignore next */
    cov_1tlv8yywu8().f[3]++;
    cov_1tlv8yywu8().s[6]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_1tlv8yywu8().s[7]++, require("next/server"));
const _supabasejs =
/* istanbul ignore next */
(cov_1tlv8yywu8().s[8]++, require("@supabase/supabase-js"));
async function POST(request) {
  /* istanbul ignore next */
  cov_1tlv8yywu8().f[4]++;
  cov_1tlv8yywu8().s[9]++;
  try {
    const timestamp =
    /* istanbul ignore next */
    (cov_1tlv8yywu8().s[10]++, new Date().toISOString());
    /* istanbul ignore next */
    cov_1tlv8yywu8().s[11]++;
    console.log('🔐 Server-side logout initiated at:', timestamp);
    // Parse request body
    let body =
    /* istanbul ignore next */
    (cov_1tlv8yywu8().s[12]++, {});
    /* istanbul ignore next */
    cov_1tlv8yywu8().s[13]++;
    try {
      /* istanbul ignore next */
      cov_1tlv8yywu8().s[14]++;
      body = await request.json();
    } catch (err) {
      /* istanbul ignore next */
      cov_1tlv8yywu8().s[15]++;
      console.warn('No request body or invalid JSON, proceeding with defaults');
    }
    const {
      clearAll =
      /* istanbul ignore next */
      (cov_1tlv8yywu8().b[0][0]++, true),
      userId,
      sessionId
    } =
    /* istanbul ignore next */
    (cov_1tlv8yywu8().s[16]++, body);
    // Create Supabase service client (bypasses RLS)
    const supabase =
    /* istanbul ignore next */
    (cov_1tlv8yywu8().s[17]++, (0, _supabasejs.createClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY, {
      auth: {
        autoRefreshToken: false,
        persistSession: false
      }
    }));
    let clearedSessions =
    /* istanbul ignore next */
    (cov_1tlv8yywu8().s[18]++, 0);
    // 1. Clear Supabase sessions
    /* istanbul ignore next */
    cov_1tlv8yywu8().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_1tlv8yywu8().b[2][0]++, clearAll) ||
    /* istanbul ignore next */
    (cov_1tlv8yywu8().b[2][1]++, userId)) {
      /* istanbul ignore next */
      cov_1tlv8yywu8().b[1][0]++;
      cov_1tlv8yywu8().s[20]++;
      try {
        /* istanbul ignore next */
        cov_1tlv8yywu8().s[21]++;
        console.log('🧹 Clearing Supabase sessions...');
        /* istanbul ignore next */
        cov_1tlv8yywu8().s[22]++;
        if (userId) {
          /* istanbul ignore next */
          cov_1tlv8yywu8().b[3][0]++;
          // Clear sessions for specific user
          const {
            error
          } =
          /* istanbul ignore next */
          (cov_1tlv8yywu8().s[23]++, await supabase.auth.admin.signOut(userId));
          /* istanbul ignore next */
          cov_1tlv8yywu8().s[24]++;
          if (error) {
            /* istanbul ignore next */
            cov_1tlv8yywu8().b[4][0]++;
            cov_1tlv8yywu8().s[25]++;
            console.warn('Error signing out specific user:', error.message);
            // Don't throw here, just log the warning
          } else {
            /* istanbul ignore next */
            cov_1tlv8yywu8().b[4][1]++;
            cov_1tlv8yywu8().s[26]++;
            clearedSessions++;
            /* istanbul ignore next */
            cov_1tlv8yywu8().s[27]++;
            console.log(`✅ Cleared session for user: ${userId}`);
          }
        } else {
          /* istanbul ignore next */
          cov_1tlv8yywu8().b[3][1]++;
          cov_1tlv8yywu8().s[28]++;
          if (clearAll) {
            /* istanbul ignore next */
            cov_1tlv8yywu8().b[5][0]++;
            cov_1tlv8yywu8().s[29]++;
            // Note: In a real implementation, you might want to clear sessions differently
            // This is a placeholder for bulk session clearing logic
            console.log('ℹ️ clearAll=true, but no specific user provided');
          } else
          /* istanbul ignore next */
          {
            cov_1tlv8yywu8().b[5][1]++;
          }
        }
      } catch (err) {
        /* istanbul ignore next */
        cov_1tlv8yywu8().s[30]++;
        console.warn('Error clearing Supabase sessions:', err);
        // Don't throw here, continue with other cleanup operations
      }
    } else
    /* istanbul ignore next */
    {
      cov_1tlv8yywu8().b[1][1]++;
    }
    // 2. Clear server-side cache (if any)
    cov_1tlv8yywu8().s[31]++;
    try {
      /* istanbul ignore next */
      cov_1tlv8yywu8().s[32]++;
      console.log('🧹 Clearing server-side cache...');
      // Clear Next.js cache tags related to auth
      const authCacheTags =
      /* istanbul ignore next */
      (cov_1tlv8yywu8().s[33]++, ['user-session', 'auth-state', 'user-profile', 'user-votes', 'user-preferences']);
      // Note: In Next.js 14+, you might use revalidateTag
      // For now, we'll just log the cache clearing
      /* istanbul ignore next */
      cov_1tlv8yywu8().s[34]++;
      authCacheTags.forEach(tag => {
        /* istanbul ignore next */
        cov_1tlv8yywu8().f[5]++;
        cov_1tlv8yywu8().s[35]++;
        try {
          /* istanbul ignore next */
          cov_1tlv8yywu8().s[36]++;
          // revalidateTag(tag); // Uncomment if using Next.js cache tags
          console.log(`Cache tag cleared: ${tag}`);
        } catch (err) {
          /* istanbul ignore next */
          cov_1tlv8yywu8().s[37]++;
          console.warn(`Error clearing cache tag ${tag}:`, err);
        }
      });
      /* istanbul ignore next */
      cov_1tlv8yywu8().s[38]++;
      console.log('✅ Server-side cache cleared');
    } catch (err) {
      /* istanbul ignore next */
      cov_1tlv8yywu8().s[39]++;
      console.warn('Error clearing server-side cache:', err);
    }
    // 3. Log logout event for analytics/security
    /* istanbul ignore next */
    cov_1tlv8yywu8().s[40]++;
    try {
      /* istanbul ignore next */
      cov_1tlv8yywu8().s[41]++;
      console.log('📝 Logging logout event...');
      const logData =
      /* istanbul ignore next */
      (cov_1tlv8yywu8().s[42]++, {
        event: 'user_logout',
        timestamp,
        user_id:
        /* istanbul ignore next */
        (cov_1tlv8yywu8().b[6][0]++, userId) ||
        /* istanbul ignore next */
        (cov_1tlv8yywu8().b[6][1]++, 'unknown'),
        session_id:
        /* istanbul ignore next */
        (cov_1tlv8yywu8().b[7][0]++, sessionId) ||
        /* istanbul ignore next */
        (cov_1tlv8yywu8().b[7][1]++, 'unknown'),
        ip_address:
        /* istanbul ignore next */
        (cov_1tlv8yywu8().b[8][0]++, request.headers.get('x-forwarded-for')) ||
        /* istanbul ignore next */
        (cov_1tlv8yywu8().b[8][1]++, request.headers.get('x-real-ip')) ||
        /* istanbul ignore next */
        (cov_1tlv8yywu8().b[8][2]++, request.headers.get('x-client-ip')) ||
        /* istanbul ignore next */
        (cov_1tlv8yywu8().b[8][3]++, 'unknown'),
        user_agent:
        /* istanbul ignore next */
        (cov_1tlv8yywu8().b[9][0]++, request.headers.get('user-agent')) ||
        /* istanbul ignore next */
        (cov_1tlv8yywu8().b[9][1]++, 'unknown'),
        clear_all: clearAll,
        success: true
      });
      // Log to console for development
      /* istanbul ignore next */
      cov_1tlv8yywu8().s[43]++;
      console.log('Logout event:', logData);
      // In production, you might want to log to a database or external service
      const isProduction =
      /* istanbul ignore next */
      (cov_1tlv8yywu8().s[44]++, process.env.NODE_ENV === 'production');
      /* istanbul ignore next */
      cov_1tlv8yywu8().s[45]++;
      if (isProduction) {
        /* istanbul ignore next */
        cov_1tlv8yywu8().b[10][0]++;
        cov_1tlv8yywu8().s[46]++;
        try {
          /* istanbul ignore next */
          cov_1tlv8yywu8().s[47]++;
          // Example: Log to Supabase audit table
          await supabase.from('audit_logs').insert({
            event_type: 'user_logout',
            event_data: logData,
            created_at: timestamp
          });
        } catch (err) {
          /* istanbul ignore next */
          cov_1tlv8yywu8().s[48]++;
          console.warn('Error logging to audit table:', err);
          // Don't throw here, logging failure shouldn't break logout
        }
      } else
      /* istanbul ignore next */
      {
        cov_1tlv8yywu8().b[10][1]++;
      }
      cov_1tlv8yywu8().s[49]++;
      console.log('✅ Logout event logged');
    } catch (err) {
      /* istanbul ignore next */
      cov_1tlv8yywu8().s[50]++;
      console.warn('Error logging logout event:', err);
    }
    // 4. Clear any Redis/external cache (if applicable)
    /* istanbul ignore next */
    cov_1tlv8yywu8().s[51]++;
    try {
      /* istanbul ignore next */
      cov_1tlv8yywu8().s[52]++;
      if (
      /* istanbul ignore next */
      (cov_1tlv8yywu8().b[12][0]++, process.env.REDIS_URL) &&
      /* istanbul ignore next */
      (cov_1tlv8yywu8().b[12][1]++, userId)) {
        /* istanbul ignore next */
        cov_1tlv8yywu8().b[11][0]++;
        cov_1tlv8yywu8().s[53]++;
        console.log('🧹 Clearing Redis cache...');
        // Example Redis cache clearing
        // const redis = new Redis(process.env.REDIS_URL);
        // await redis.del(`user:${userId}:session`);
        // await redis.del(`user:${userId}:preferences`);
        // await redis.del(`user:${userId}:votes`);
        /* istanbul ignore next */
        cov_1tlv8yywu8().s[54]++;
        console.log('✅ Redis cache cleared');
      } else
      /* istanbul ignore next */
      {
        cov_1tlv8yywu8().b[11][1]++;
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_1tlv8yywu8().s[55]++;
      console.warn('Error clearing Redis cache:', err);
    }
    /* istanbul ignore next */
    cov_1tlv8yywu8().s[56]++;
    console.log(`✅ Server-side logout completed successfully. Cleared ${clearedSessions} sessions.`);
    /* istanbul ignore next */
    cov_1tlv8yywu8().s[57]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Logout completed successfully',
      timestamp,
      clearedSessions
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1tlv8yywu8().s[58]++;
    console.error('로그아웃 처리 중 오류:', error);
    /* istanbul ignore next */
    cov_1tlv8yywu8().s[59]++;
    return _server.NextResponse.json({
      error: '서버 오류가 발생했습니다.'
    }, {
      status: 500
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_1tlv8yywu8().f[6]++;
  cov_1tlv8yywu8().s[60]++;
  try {
    const url =
    /* istanbul ignore next */
    (cov_1tlv8yywu8().s[61]++, new URL(request.url));
    const debug =
    /* istanbul ignore next */
    (cov_1tlv8yywu8().s[62]++, url.searchParams.get('debug') === 'true');
    /* istanbul ignore next */
    cov_1tlv8yywu8().s[63]++;
    if (
    /* istanbul ignore next */
    (cov_1tlv8yywu8().b[14][0]++, debug) &&
    /* istanbul ignore next */
    (cov_1tlv8yywu8().b[14][1]++, process.env.NODE_ENV === 'development')) {
      /* istanbul ignore next */
      cov_1tlv8yywu8().b[13][0]++;
      cov_1tlv8yywu8().s[64]++;
      // Return debugging information in development
      return _server.NextResponse.json({
        endpoint: '/api/auth/logout',
        methods: ['POST', 'GET'],
        description: 'Server-side logout endpoint',
        timestamp: new Date().toISOString(),
        environment: process.env.NODE_ENV,
        features: {
          supabase_logout: !!process.env.SUPABASE_SERVICE_ROLE_KEY,
          redis_cache: !!process.env.REDIS_URL,
          audit_logging: process.env.NODE_ENV === 'production'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tlv8yywu8().b[13][1]++;
    }
    cov_1tlv8yywu8().s[65]++;
    return _server.NextResponse.json({
      message: 'Logout endpoint is active',
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1tlv8yywu8().s[66]++;
    console.error('로그아웃 상태 조회 중 오류:', error);
    /* istanbul ignore next */
    cov_1tlv8yywu8().s[67]++;
    return _server.NextResponse.json({
      error: '서버 오류가 발생했습니다.'
    }, {
      status: 500
    });
  }
}
async function OPTIONS() {
  /* istanbul ignore next */
  cov_1tlv8yywu8().f[7]++;
  cov_1tlv8yywu8().s[68]++;
  return new _server.NextResponse(null, {
    status: 200,
    headers: {
      'Allow': 'GET, POST, OPTIONS',
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type, Authorization'
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,