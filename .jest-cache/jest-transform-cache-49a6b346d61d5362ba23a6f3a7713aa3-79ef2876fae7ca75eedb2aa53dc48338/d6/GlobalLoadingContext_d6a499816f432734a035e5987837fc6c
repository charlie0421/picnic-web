fc29f3933edfa773a443a7c99d552986
'use client';
"use strict";

/* istanbul ignore next */
function cov_1chx34bo2l() {
  var path = "/Users/charlie.hyun/Repositories/picnic-web/contexts/GlobalLoadingContext.tsx";
  var hash = "ab6413b0d68e2fb8e675c6309376c1a36c77029b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/charlie.hyun/Repositories/picnic-web/contexts/GlobalLoadingContext.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 32
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 22,
          column: 46
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "10": {
        start: {
          line: 24,
          column: 39
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "11": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "12": {
        start: {
          line: 26,
          column: 27
        },
        end: {
          line: 26,
          column: 40
        }
      },
      "13": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 20
        }
      },
      "14": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "15": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "16": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 19
        }
      },
      "17": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "18": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 10
        }
      },
      "19": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 53
        }
      },
      "20": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "21": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "22": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "23": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 47,
          column: 88
        }
      },
      "24": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "25": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "26": {
        start: {
          line: 50,
          column: 23
        },
        end: {
          line: 50,
          column: 95
        }
      },
      "27": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "28": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 57
        }
      },
      "29": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 39
        }
      },
      "30": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 25
        }
      },
      "31": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "32": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 31
        }
      },
      "33": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 18
        }
      },
      "34": {
        start: {
          line: 64,
          column: 43
        },
        end: {
          line: 64,
          column: 79
        }
      },
      "35": {
        start: {
          line: 66,
          column: 38
        },
        end: {
          line: 66,
          column: 65
        }
      },
      "36": {
        start: {
          line: 67,
          column: 21
        },
        end: {
          line: 67,
          column: 51
        }
      },
      "37": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 73,
          column: 7
        }
      },
      "38": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 28
        }
      },
      "39": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 80,
          column: 7
        }
      },
      "40": {
        start: {
          line: 83,
          column: 20
        },
        end: {
          line: 83,
          column: 64
        }
      },
      "41": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "42": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 88
        }
      },
      "43": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 27
          },
          end: {
            line: 13,
            column: 28
          }
        },
        loc: {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 22
          },
          end: {
            line: 16,
            column: 23
          }
        },
        loc: {
          start: {
            line: 16,
            column: 33
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 47
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 27,
            column: 40
          }
        },
        loc: {
          start: {
            line: 27,
            column: 61
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 34
          }
        },
        loc: {
          start: {
            line: 31,
            column: 53
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 31
      },
      "6": {
        name: "GlobalLoadingProvider",
        decl: {
          start: {
            line: 65,
            column: 9
          },
          end: {
            line: 65,
            column: 30
          }
        },
        loc: {
          start: {
            line: 65,
            column: 45
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 69,
            column: 26
          },
          end: {
            line: 69,
            column: 27
          }
        },
        loc: {
          start: {
            line: 69,
            column: 30
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 69
      },
      "8": {
        name: "useGlobalLoading",
        decl: {
          start: {
            line: 82,
            column: 9
          },
          end: {
            line: 82,
            column: 25
          }
        },
        loc: {
          start: {
            line: 82,
            column: 28
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 82
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 28,
            column: 45
          }
        }, {
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 28,
            column: 65
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 20
          }
        }, {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 27
          }
        }, {
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 45
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 47
          }
        }, {
          start: {
            line: 35,
            column: 51
          },
          end: {
            line: 35,
            column: 76
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: 41,
            column: 17
          },
          end: {
            line: 41,
            column: 31
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 53
          }
        }, {
          start: {
            line: 47,
            column: 57
          },
          end: {
            line: 47,
            column: 88
          }
        }],
        line: 47
      },
      "9": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "10": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 29
          }
        }, {
          start: {
            line: 49,
            column: 33
          },
          end: {
            line: 49,
            column: 79
          }
        }],
        line: 49
      },
      "11": {
        loc: {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 47
          },
          end: {
            line: 50,
            column: 88
          }
        }, {
          start: {
            line: 50,
            column: 91
          },
          end: {
            line: 50,
            column: 95
          }
        }],
        line: 50
      },
      "12": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 55,
            column: 13
          }
        }],
        line: 51
      },
      "13": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 20
          }
        }, {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 51,
            column: 33
          }
        }, {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 51,
            column: 45
          }
        }],
        line: 51
      },
      "14": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "15": {
        loc: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/charlie.hyun/Repositories/picnic-web/contexts/GlobalLoadingContext.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { usePathname } from 'next/navigation';\n\ninterface GlobalLoadingContextType {\n  isLoading: boolean;\n  setIsLoading: (loading: boolean) => void;\n}\n\nconst GlobalLoadingContext = createContext<GlobalLoadingContextType | undefined>(undefined);\n\nexport function GlobalLoadingProvider({ children }: { children: React.ReactNode }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const pathname = usePathname();\n\n  // \uD398\uC774\uC9C0 \uC774\uB3D9 \uC2DC \uB85C\uB529 \uC0C1\uD0DC \uAD00\uB9AC\n  useEffect(() => {\n    setIsLoading(false);\n  }, [pathname]);\n\n  return (\n    <GlobalLoadingContext.Provider value={{ isLoading, setIsLoading }}>\n      {children}\n    </GlobalLoadingContext.Provider>\n  );\n}\n\nexport function useGlobalLoading() {\n  const context = useContext(GlobalLoadingContext);\n  if (context === undefined) {\n    throw new Error('useGlobalLoading must be used within a GlobalLoadingProvider');\n  }\n  return context;\n} "],
      names: ["GlobalLoadingProvider", "useGlobalLoading", "GlobalLoadingContext", "createContext", "undefined", "children", "isLoading", "setIsLoading", "useState", "pathname", "usePathname", "useEffect", "Provider", "value", "context", "useContext", "Error"],
      mappings: "AAAA;;;;;;;;;;;;IAYgBA,qBAAqB;eAArBA;;IAgBAC,gBAAgB;eAAhBA;;;;+DA1BsD;4BAC1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO5B,MAAMC,qCAAuBC,IAAAA,oBAAa,EAAuCC;AAE1E,SAASJ,sBAAsB,EAAEK,QAAQ,EAAiC;IAC/E,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAC;IAC3C,MAAMC,WAAWC,IAAAA,uBAAW;IAE5B,oBAAoB;IACpBC,IAAAA,gBAAS,EAAC;QACRJ,aAAa;IACf,GAAG;QAACE;KAAS;IAEb,qBACE,qBAACP,qBAAqBU,QAAQ;QAACC,OAAO;YAAEP;YAAWC;QAAa;kBAC7DF;;AAGP;AAEO,SAASJ;IACd,MAAMa,UAAUC,IAAAA,iBAAU,EAACb;IAC3B,IAAIY,YAAYV,WAAW;QACzB,MAAM,IAAIY,MAAM;IAClB;IACA,OAAOF;AACT"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ab6413b0d68e2fb8e675c6309376c1a36c77029b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1chx34bo2l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1chx34bo2l();
cov_1chx34bo2l().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1chx34bo2l().f[0]++;
  cov_1chx34bo2l().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1chx34bo2l().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1chx34bo2l().s[3]++;
_export(exports, {
  GlobalLoadingProvider: function () {
    /* istanbul ignore next */
    cov_1chx34bo2l().f[1]++;
    cov_1chx34bo2l().s[4]++;
    return GlobalLoadingProvider;
  },
  useGlobalLoading: function () {
    /* istanbul ignore next */
    cov_1chx34bo2l().f[2]++;
    cov_1chx34bo2l().s[5]++;
    return useGlobalLoading;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1chx34bo2l().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1chx34bo2l().s[7]++, _interop_require_wildcard(require("react")));
const _navigation =
/* istanbul ignore next */
(cov_1chx34bo2l().s[8]++, require("next/navigation"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1chx34bo2l().f[3]++;
  cov_1chx34bo2l().s[9]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1chx34bo2l().b[0][0]++;
    cov_1chx34bo2l().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1chx34bo2l().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1chx34bo2l().s[11]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1chx34bo2l().s[12]++, new WeakMap());
  /* istanbul ignore next */
  cov_1chx34bo2l().s[13]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1chx34bo2l().f[4]++;
    cov_1chx34bo2l().s[14]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1chx34bo2l().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1chx34bo2l().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1chx34bo2l().f[5]++;
  cov_1chx34bo2l().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_1chx34bo2l().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1chx34bo2l().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1chx34bo2l().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1chx34bo2l().b[2][0]++;
    cov_1chx34bo2l().s[16]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1chx34bo2l().b[2][1]++;
  }
  cov_1chx34bo2l().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_1chx34bo2l().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1chx34bo2l().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1chx34bo2l().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1chx34bo2l().b[4][0]++;
    cov_1chx34bo2l().s[18]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1chx34bo2l().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1chx34bo2l().s[19]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1chx34bo2l().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_1chx34bo2l().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1chx34bo2l().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1chx34bo2l().b[6][0]++;
    cov_1chx34bo2l().s[21]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1chx34bo2l().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1chx34bo2l().s[22]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1chx34bo2l().s[23]++,
  /* istanbul ignore next */
  (cov_1chx34bo2l().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1chx34bo2l().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1chx34bo2l().s[24]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1chx34bo2l().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_1chx34bo2l().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1chx34bo2l().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1chx34bo2l().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1chx34bo2l().s[26]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1chx34bo2l().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1chx34bo2l().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1chx34bo2l().s[27]++;
      if (
      /* istanbul ignore next */
      (cov_1chx34bo2l().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1chx34bo2l().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1chx34bo2l().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1chx34bo2l().b[12][0]++;
        cov_1chx34bo2l().s[28]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1chx34bo2l().b[12][1]++;
        cov_1chx34bo2l().s[29]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1chx34bo2l().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1chx34bo2l().s[30]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1chx34bo2l().s[31]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1chx34bo2l().b[14][0]++;
    cov_1chx34bo2l().s[32]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1chx34bo2l().b[14][1]++;
  }
  cov_1chx34bo2l().s[33]++;
  return newObj;
}
const GlobalLoadingContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_1chx34bo2l().s[34]++, (0, _react.createContext)(undefined));
function GlobalLoadingProvider({
  children
}) {
  /* istanbul ignore next */
  cov_1chx34bo2l().f[6]++;
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1chx34bo2l().s[35]++, (0, _react.useState)(false));
  const pathname =
  /* istanbul ignore next */
  (cov_1chx34bo2l().s[36]++, (0, _navigation.usePathname)());
  // 페이지 이동 시 로딩 상태 관리
  /* istanbul ignore next */
  cov_1chx34bo2l().s[37]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1chx34bo2l().f[7]++;
    cov_1chx34bo2l().s[38]++;
    setIsLoading(false);
  }, [pathname]);
  /* istanbul ignore next */
  cov_1chx34bo2l().s[39]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(GlobalLoadingContext.Provider, {
    value: {
      isLoading,
      setIsLoading
    },
    children: children
  });
}
function useGlobalLoading() {
  /* istanbul ignore next */
  cov_1chx34bo2l().f[8]++;
  const context =
  /* istanbul ignore next */
  (cov_1chx34bo2l().s[40]++, (0, _react.useContext)(GlobalLoadingContext));
  /* istanbul ignore next */
  cov_1chx34bo2l().s[41]++;
  if (context === undefined) {
    /* istanbul ignore next */
    cov_1chx34bo2l().b[15][0]++;
    cov_1chx34bo2l().s[42]++;
    throw new Error('useGlobalLoading must be used within a GlobalLoadingProvider');
  } else
  /* istanbul ignore next */
  {
    cov_1chx34bo2l().b[15][1]++;
  }
  cov_1chx34bo2l().s[43]++;
  return context;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWNoeDM0Ym8ybCIsImFjdHVhbENvdmVyYWdlIiwicyIsIkdsb2JhbExvYWRpbmdQcm92aWRlciIsImYiLCJ1c2VHbG9iYWxMb2FkaW5nIiwiR2xvYmFsTG9hZGluZ0NvbnRleHQiLCJfcmVhY3QiLCJjcmVhdGVDb250ZXh0IiwidW5kZWZpbmVkIiwiY2hpbGRyZW4iLCJpc0xvYWRpbmciLCJzZXRJc0xvYWRpbmciLCJ1c2VTdGF0ZSIsInBhdGhuYW1lIiwiX25hdmlnYXRpb24iLCJ1c2VQYXRobmFtZSIsInVzZUVmZmVjdCIsIl9qc3hydW50aW1lIiwianN4IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsImNvbnRleHQiLCJ1c2VDb250ZXh0IiwiYiIsIkVycm9yIl0sInNvdXJjZXMiOlsiL1VzZXJzL2NoYXJsaWUuaHl1bi9SZXBvc2l0b3JpZXMvcGljbmljLXdlYi9jb250ZXh0cy9HbG9iYWxMb2FkaW5nQ29udGV4dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVBhdGhuYW1lIH0gZnJvbSAnbmV4dC9uYXZpZ2F0aW9uJztcblxuaW50ZXJmYWNlIEdsb2JhbExvYWRpbmdDb250ZXh0VHlwZSB7XG4gIGlzTG9hZGluZzogYm9vbGVhbjtcbiAgc2V0SXNMb2FkaW5nOiAobG9hZGluZzogYm9vbGVhbikgPT4gdm9pZDtcbn1cblxuY29uc3QgR2xvYmFsTG9hZGluZ0NvbnRleHQgPSBjcmVhdGVDb250ZXh0PEdsb2JhbExvYWRpbmdDb250ZXh0VHlwZSB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcblxuZXhwb3J0IGZ1bmN0aW9uIEdsb2JhbExvYWRpbmdQcm92aWRlcih7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSB7XG4gIGNvbnN0IFtpc0xvYWRpbmcsIHNldElzTG9hZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IHBhdGhuYW1lID0gdXNlUGF0aG5hbWUoKTtcblxuICAvLyDtjpjsnbTsp4Ag7J2064+ZIOyLnCDroZzrlKkg7IOB7YOcIOq0gOumrFxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gIH0sIFtwYXRobmFtZV0pO1xuXG4gIHJldHVybiAoXG4gICAgPEdsb2JhbExvYWRpbmdDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IGlzTG9hZGluZywgc2V0SXNMb2FkaW5nIH19PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvR2xvYmFsTG9hZGluZ0NvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VHbG9iYWxMb2FkaW5nKCkge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChHbG9iYWxMb2FkaW5nQ29udGV4dCk7XG4gIGlmIChjb250ZXh0ID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZUdsb2JhbExvYWRpbmcgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIEdsb2JhbExvYWRpbmdQcm92aWRlcicpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufSAiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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