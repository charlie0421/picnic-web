2d80b8dcabcd2d801def373513747996
"use strict";

/* istanbul ignore next */
function cov_wnlhvaug() {
  var path = "/Users/charlie.hyun/Repositories/picnic-web/app/[lang]/(mypage)/notice/page.tsx";
  var hash = "6590ae4df9f7ecc929b4784c5740e1bedb4e7c2b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/charlie.hyun/Repositories/picnic-web/app/[lang]/(mypage)/notice/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 26
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "5": {
        start: {
          line: 13,
          column: 40
        },
        end: {
          line: 13,
          column: 95
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 6
        }
      },
      "7": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "8": {
        start: {
          line: 20,
          column: 39
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "9": {
        start: {
          line: 21,
          column: 28
        },
        end: {
          line: 21,
          column: 41
        }
      },
      "10": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 22,
          column: 40
        }
      },
      "11": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 20
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "14": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 19
        }
      },
      "15": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "16": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "17": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 53
        }
      },
      "18": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "19": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 30
        }
      },
      "20": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "21": {
        start: {
          line: 43,
          column: 32
        },
        end: {
          line: 43,
          column: 88
        }
      },
      "22": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "23": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "24": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 95
        }
      },
      "25": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "26": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 57
        }
      },
      "27": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 39
        }
      },
      "28": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 25
        }
      },
      "29": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "30": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 31
        }
      },
      "31": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 18
        }
      },
      "32": {
        start: {
          line: 61,
          column: 21
        },
        end: {
          line: 61,
          column: 33
        }
      },
      "33": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 63,
          column: 27
        }
      },
      "34": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "35": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 174
        }
      },
      "36": {
        start: {
          line: 65,
          column: 114
        },
        end: {
          line: 65,
          column: 151
        }
      },
      "37": {
        start: {
          line: 65,
          column: 163
        },
        end: {
          line: 65,
          column: 172
        }
      },
      "38": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 169
        }
      },
      "39": {
        start: {
          line: 68,
          column: 109
        },
        end: {
          line: 68,
          column: 146
        }
      },
      "40": {
        start: {
          line: 68,
          column: 158
        },
        end: {
          line: 68,
          column: 167
        }
      },
      "41": {
        start: {
          line: 71,
          column: 25
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "42": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 79,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 33
          }
        },
        loc: {
          start: {
            line: 19,
            column: 47
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 23,
            column: 40
          }
        },
        loc: {
          start: {
            line: 23,
            column: 61
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 34
          }
        },
        loc: {
          start: {
            line: 27,
            column: 53
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "NoticePage",
        decl: {
          start: {
            line: 60,
            column: 15
          },
          end: {
            line: 60,
            column: 25
          }
        },
        loc: {
          start: {
            line: 60,
            column: 38
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 95
          },
          end: {
            line: 65,
            column: 96
          }
        },
        loc: {
          start: {
            line: 65,
            column: 114
          },
          end: {
            line: 65,
            column: 151
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 65,
            column: 158
          },
          end: {
            line: 65,
            column: 159
          }
        },
        loc: {
          start: {
            line: 65,
            column: 163
          },
          end: {
            line: 65,
            column: 172
          }
        },
        line: 65
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 68,
            column: 90
          },
          end: {
            line: 68,
            column: 91
          }
        },
        loc: {
          start: {
            line: 68,
            column: 109
          },
          end: {
            line: 68,
            column: 146
          }
        },
        line: 68
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 68,
            column: 153
          },
          end: {
            line: 68,
            column: 154
          }
        },
        loc: {
          start: {
            line: 68,
            column: 158
          },
          end: {
            line: 68,
            column: 167
          }
        },
        line: 68
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 15,
            column: 38
          }
        }, {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 5
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 14
          }
        }, {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 32
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 29
          },
          end: {
            line: 24,
            column: 45
          }
        }, {
          start: {
            line: 24,
            column: 48
          },
          end: {
            line: 24,
            column: 65
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 20
          }
        }, {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 27
          }
        }, {
          start: {
            line: 28,
            column: 31
          },
          end: {
            line: 28,
            column: 45
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 20
          }
        }, {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 47
          }
        }, {
          start: {
            line: 31,
            column: 51
          },
          end: {
            line: 31,
            column: 76
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 13
          }
        }, {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 31
          }
        }],
        line: 37
      },
      "10": {
        loc: {
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 43,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 43,
            column: 53
          }
        }, {
          start: {
            line: 43,
            column: 57
          },
          end: {
            line: 43,
            column: 88
          }
        }],
        line: 43
      },
      "11": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "12": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 29
          }
        }, {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 45,
            column: 79
          }
        }],
        line: 45
      },
      "13": {
        loc: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 47
          },
          end: {
            line: 46,
            column: 88
          }
        }, {
          start: {
            line: 46,
            column: 91
          },
          end: {
            line: 46,
            column: 95
          }
        }],
        line: 46
      },
      "14": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: 49,
            column: 19
          },
          end: {
            line: 51,
            column: 13
          }
        }],
        line: 47
      },
      "15": {
        loc: {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 20
          }
        }, {
          start: {
            line: 47,
            column: 25
          },
          end: {
            line: 47,
            column: 33
          }
        }, {
          start: {
            line: 47,
            column: 37
          },
          end: {
            line: 47,
            column: 45
          }
        }],
        line: 47
      },
      "16": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "17": {
        loc: {
          start: {
            line: 72,
            column: 27
          },
          end: {
            line: 72,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 27
          },
          end: {
            line: 72,
            column: 59
          }
        }, {
          start: {
            line: 72,
            column: 63
          },
          end: {
            line: 72,
            column: 69
          }
        }],
        line: 72
      },
      "18": {
        loc: {
          start: {
            line: 73,
            column: 25
          },
          end: {
            line: 73,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 25
          },
          end: {
            line: 73,
            column: 55
          }
        }, {
          start: {
            line: 73,
            column: 59
          },
          end: {
            line: 73,
            column: 76
          }
        }],
        line: 73
      },
      "19": {
        loc: {
          start: {
            line: 74,
            column: 23
          },
          end: {
            line: 74,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 23
          },
          end: {
            line: 74,
            column: 51
          }
        }, {
          start: {
            line: 74,
            column: 55
          },
          end: {
            line: 74,
            column: 59
          }
        }],
        line: 74
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/charlie.hyun/Repositories/picnic-web/app/[lang]/(mypage)/notice/page.tsx"],
      sourcesContent: ["import React from 'react';\nimport NoticePageClient from './NoticePageClient';\n\ninterface Props {\n  params: Promise<{ lang: string }>;\n}\n\nexport default async function NoticePage({ params }: Props) {\n  const { lang } = await params;\n\n  // \uBC88\uC5ED \uD30C\uC77C \uC9C1\uC811 \uB85C\uB4DC\n  let localeMessages: Record<string, any> = {};\n  try {\n    localeMessages = await import(`../../../../public/locales/${lang}.json`).then(m => m.default);\n  } catch (error) {\n    // fallback to English\n    localeMessages = await import(`../../../../public/locales/en.json`).then(m => m.default);\n  }\n\n  // \uD074\uB77C\uC774\uC5B8\uD2B8 \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uD544\uC694\uD55C \uBC88\uC5ED\uB4E4 \uC900\uBE44\n  const translations = {\n    page_title_notice: localeMessages.page_title_notice || '\uACF5\uC9C0\uC0AC\uD56D',\n    notice_no_items: localeMessages.notice_no_items || '\uB4F1\uB85D\uB41C \uACF5\uC9C0\uC0AC\uD56D\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.',\n    notice_pinned: localeMessages.notice_pinned || '\uACF5\uC9C0',\n  };\n\n  return (\n    <NoticePageClient \n      lang={lang}\n      translations={translations}\n    />\n  );\n}\n"],
      names: ["NoticePage", "params", "lang", "localeMessages", "then", "m", "default", "error", "translations", "page_title_notice", "notice_no_items", "notice_pinned", "NoticePageClient"],
      mappings: ";;;;+BAOA;;;eAA8BA;;;;8DAPZ;yEACW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMd,eAAeA,WAAW,EAAEC,MAAM,EAAS;IACxD,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMD;IAEvB,cAAc;IACd,IAAIE,iBAAsC,CAAC;IAC3C,IAAI;QACFA,iBAAiB,MAAM,gBAAO,CAAC,2BAA2B,EAAED,KAAK,KAAK,CAAC,oDAAhD,aAAkDE,IAAI,CAACC,CAAAA,IAAKA,EAAEC,OAAO;IAC9F,EAAE,OAAOC,OAAO;QACd,sBAAsB;QACtBJ,iBAAiB,MAAM,gBAAO,CAAC,kCAAkC,CAAC,oDAA3C,aAA6CC,IAAI,CAACC,CAAAA,IAAKA,EAAEC,OAAO;IACzF;IAEA,0BAA0B;IAC1B,MAAME,eAAe;QACnBC,mBAAmBN,eAAeM,iBAAiB,IAAI;QACvDC,iBAAiBP,eAAeO,eAAe,IAAI;QACnDC,eAAeR,eAAeQ,aAAa,IAAI;IACjD;IAEA,qBACE,qBAACC,yBAAgB;QACfV,MAAMA;QACNM,cAAcA;;AAGpB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6590ae4df9f7ecc929b4784c5740e1bedb4e7c2b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_wnlhvaug = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wnlhvaug();
cov_wnlhvaug().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_wnlhvaug().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_wnlhvaug().f[0]++;
    cov_wnlhvaug().s[2]++;
    return NoticePage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_wnlhvaug().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_wnlhvaug().s[4]++, _interop_require_default(require("react")));
const _NoticePageClient =
/* istanbul ignore next */
(/*#__PURE__*/cov_wnlhvaug().s[5]++, _interop_require_default(require("./NoticePageClient")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_wnlhvaug().f[1]++;
  cov_wnlhvaug().s[6]++;
  return /* istanbul ignore next */(cov_wnlhvaug().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_wnlhvaug().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_wnlhvaug().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_wnlhvaug().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_wnlhvaug().f[2]++;
  cov_wnlhvaug().s[7]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_wnlhvaug().b[2][0]++;
    cov_wnlhvaug().s[8]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_wnlhvaug().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_wnlhvaug().s[9]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_wnlhvaug().s[10]++, new WeakMap());
  /* istanbul ignore next */
  cov_wnlhvaug().s[11]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_wnlhvaug().f[3]++;
    cov_wnlhvaug().s[12]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_wnlhvaug().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_wnlhvaug().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_wnlhvaug().f[4]++;
  cov_wnlhvaug().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_wnlhvaug().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_wnlhvaug().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_wnlhvaug().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_wnlhvaug().b[4][0]++;
    cov_wnlhvaug().s[14]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_wnlhvaug().b[4][1]++;
  }
  cov_wnlhvaug().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_wnlhvaug().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_wnlhvaug().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_wnlhvaug().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_wnlhvaug().b[6][0]++;
    cov_wnlhvaug().s[16]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_wnlhvaug().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_wnlhvaug().s[17]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_wnlhvaug().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_wnlhvaug().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_wnlhvaug().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_wnlhvaug().b[8][0]++;
    cov_wnlhvaug().s[19]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_wnlhvaug().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_wnlhvaug().s[20]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_wnlhvaug().s[21]++,
  /* istanbul ignore next */
  (cov_wnlhvaug().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_wnlhvaug().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_wnlhvaug().s[22]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_wnlhvaug().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_wnlhvaug().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_wnlhvaug().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_wnlhvaug().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_wnlhvaug().s[24]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_wnlhvaug().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_wnlhvaug().b[13][1]++, null));
      /* istanbul ignore next */
      cov_wnlhvaug().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_wnlhvaug().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_wnlhvaug().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_wnlhvaug().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_wnlhvaug().b[14][0]++;
        cov_wnlhvaug().s[26]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_wnlhvaug().b[14][1]++;
        cov_wnlhvaug().s[27]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_wnlhvaug().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_wnlhvaug().s[28]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_wnlhvaug().s[29]++;
  if (cache) {
    /* istanbul ignore next */
    cov_wnlhvaug().b[16][0]++;
    cov_wnlhvaug().s[30]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_wnlhvaug().b[16][1]++;
  }
  cov_wnlhvaug().s[31]++;
  return newObj;
}
async function NoticePage({
  params
}) {
  /* istanbul ignore next */
  cov_wnlhvaug().f[5]++;
  const {
    lang
  } =
  /* istanbul ignore next */
  (cov_wnlhvaug().s[32]++, await params);
  // 번역 파일 직접 로드
  let localeMessages =
  /* istanbul ignore next */
  (cov_wnlhvaug().s[33]++, {});
  /* istanbul ignore next */
  cov_wnlhvaug().s[34]++;
  try {
    /* istanbul ignore next */
    cov_wnlhvaug().s[35]++;
    localeMessages = await Promise.resolve(`../../../../public/locales/${lang}.json`).then(p => {
      /* istanbul ignore next */
      cov_wnlhvaug().f[6]++;
      cov_wnlhvaug().s[36]++;
      return /*#__PURE__*/_interop_require_wildcard(require(p));
    }).then(m => {
      /* istanbul ignore next */
      cov_wnlhvaug().f[7]++;
      cov_wnlhvaug().s[37]++;
      return m.default;
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_wnlhvaug().s[38]++;
    // fallback to English
    localeMessages = await Promise.resolve(`../../../../public/locales/en.json`).then(p => {
      /* istanbul ignore next */
      cov_wnlhvaug().f[8]++;
      cov_wnlhvaug().s[39]++;
      return /*#__PURE__*/_interop_require_wildcard(require(p));
    }).then(m => {
      /* istanbul ignore next */
      cov_wnlhvaug().f[9]++;
      cov_wnlhvaug().s[40]++;
      return m.default;
    });
  }
  // 클라이언트 컴포넌트에서 필요한 번역들 준비
  const translations =
  /* istanbul ignore next */
  (cov_wnlhvaug().s[41]++, {
    page_title_notice:
    /* istanbul ignore next */
    (cov_wnlhvaug().b[17][0]++, localeMessages.page_title_notice) ||
    /* istanbul ignore next */
    (cov_wnlhvaug().b[17][1]++, '공지사항'),
    notice_no_items:
    /* istanbul ignore next */
    (cov_wnlhvaug().b[18][0]++, localeMessages.notice_no_items) ||
    /* istanbul ignore next */
    (cov_wnlhvaug().b[18][1]++, '등록된 공지사항이 없습니다.'),
    notice_pinned:
    /* istanbul ignore next */
    (cov_wnlhvaug().b[19][0]++, localeMessages.notice_pinned) ||
    /* istanbul ignore next */
    (cov_wnlhvaug().b[19][1]++, '공지')
  });
  /* istanbul ignore next */
  cov_wnlhvaug().s[42]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_NoticePageClient.default, {
    lang: lang,
    translations: translations
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOb3RpY2VQYWdlIiwicGFyYW1zIiwiY292X3dubGh2YXVnIiwiZiIsImxhbmciLCJzIiwibG9jYWxlTWVzc2FnZXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInRoZW4iLCJwIiwiX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZCIsInJlcXVpcmUiLCJtIiwiZGVmYXVsdCIsImVycm9yIiwidHJhbnNsYXRpb25zIiwicGFnZV90aXRsZV9ub3RpY2UiLCJiIiwibm90aWNlX25vX2l0ZW1zIiwibm90aWNlX3Bpbm5lZCIsIl9qc3hydW50aW1lIiwianN4IiwiX05vdGljZVBhZ2VDbGllbnQiXSwic291cmNlcyI6WyIvVXNlcnMvY2hhcmxpZS5oeXVuL1JlcG9zaXRvcmllcy9waWNuaWMtd2ViL2FwcC9bbGFuZ10vKG15cGFnZSkvbm90aWNlL3BhZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTm90aWNlUGFnZUNsaWVudCBmcm9tICcuL05vdGljZVBhZ2VDbGllbnQnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBwYXJhbXM6IFByb21pc2U8eyBsYW5nOiBzdHJpbmcgfT47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIE5vdGljZVBhZ2UoeyBwYXJhbXMgfTogUHJvcHMpIHtcbiAgY29uc3QgeyBsYW5nIH0gPSBhd2FpdCBwYXJhbXM7XG5cbiAgLy8g67KI7JetIO2MjOydvCDsp4HsoJEg66Gc65OcXG4gIGxldCBsb2NhbGVNZXNzYWdlczogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9O1xuICB0cnkge1xuICAgIGxvY2FsZU1lc3NhZ2VzID0gYXdhaXQgaW1wb3J0KGAuLi8uLi8uLi8uLi9wdWJsaWMvbG9jYWxlcy8ke2xhbmd9Lmpzb25gKS50aGVuKG0gPT4gbS5kZWZhdWx0KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAvLyBmYWxsYmFjayB0byBFbmdsaXNoXG4gICAgbG9jYWxlTWVzc2FnZXMgPSBhd2FpdCBpbXBvcnQoYC4uLy4uLy4uLy4uL3B1YmxpYy9sb2NhbGVzL2VuLmpzb25gKS50aGVuKG0gPT4gbS5kZWZhdWx0KTtcbiAgfVxuXG4gIC8vIO2BtOudvOydtOyWuO2KuCDsu7Ttj6zrhIztirjsl5DshJwg7ZWE7JqU7ZWcIOuyiOyXreuTpCDspIDruYRcbiAgY29uc3QgdHJhbnNsYXRpb25zID0ge1xuICAgIHBhZ2VfdGl0bGVfbm90aWNlOiBsb2NhbGVNZXNzYWdlcy5wYWdlX3RpdGxlX25vdGljZSB8fCAn6rO17KeA7IKs7ZWtJyxcbiAgICBub3RpY2Vfbm9faXRlbXM6IGxvY2FsZU1lc3NhZ2VzLm5vdGljZV9ub19pdGVtcyB8fCAn65Ox66Gd65CcIOqzteyngOyCrO2VreydtCDsl4bsirXri4jri6QuJyxcbiAgICBub3RpY2VfcGlubmVkOiBsb2NhbGVNZXNzYWdlcy5ub3RpY2VfcGlubmVkIHx8ICfqs7Xsp4AnLFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPE5vdGljZVBhZ2VDbGllbnQgXG4gICAgICBsYW5nPXtsYW5nfVxuICAgICAgdHJhbnNsYXRpb25zPXt0cmFuc2xhdGlvbnN9XG4gICAgLz5cbiAgKTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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