{"version":3,"sources":["/Users/charlie.hyun/Repositories/picnic-web/__tests__/utils/api/link-transformer.test.ts"],"sourcesContent":["import { transformBannerLink, transformAppLinkToWebLink } from '@/utils/api/link-transformer';\n\ndescribe('link-transformer', () => {\n  describe('transformBannerLink', () => {\n    test('앱 링크를 웹 링크로 변환한다', () => {\n      const appLink = 'https://applink.picnic.fan/vote/detail/90';\n      const expected = 'https://www.picnic.fan/vote/90';\n      \n      const result = transformBannerLink(appLink);\n      \n      expect(result).toBe(expected);\n    });\n\n    test('이미 웹 링크인 경우 그대로 반환한다', () => {\n      const webLink = 'https://www.picnic.fan/vote/90';\n      \n      const result = transformBannerLink(webLink);\n      \n      expect(result).toBe(webLink);\n    });\n\n    test('빈 문자열을 입력하면 빈 문자열을 반환한다', () => {\n      const result = transformBannerLink('');\n      \n      expect(result).toBe('');\n    });\n\n    test('null 또는 undefined를 입력하면 원래 값을 반환한다', () => {\n      expect(transformBannerLink(null as any)).toBe(null);\n      expect(transformBannerLink(undefined as any)).toBe(undefined);\n    });\n\n    test('다른 형태의 링크는 그대로 반환한다', () => {\n      const otherLink = 'https://example.com/test';\n      \n      const result = transformBannerLink(otherLink);\n      \n      expect(result).toBe(otherLink);\n    });\n  });\n\n  describe('transformAppLinkToWebLink', () => {\n    test('여러 패턴의 앱 링크를 웹 링크로 변환한다', () => {\n      const appLink = 'https://applink.picnic.fan/vote/detail/90';\n      const expected = 'https://www.picnic.fan/vote/90';\n      \n      const result = transformAppLinkToWebLink(appLink);\n      \n      expect(result).toBe(expected);\n    });\n\n    test('도메인만 변환이 필요한 경우도 처리한다', () => {\n      const appLink = 'https://applink.picnic.fan/other/page';\n      const expected = 'https://www.picnic.fan/other/page';\n      \n      const result = transformAppLinkToWebLink(appLink);\n      \n      expect(result).toBe(expected);\n    });\n\n    test('경로만 변환이 필요한 경우도 처리한다', () => {\n      const appLink = 'https://www.picnic.fan/vote/detail/90';\n      const expected = 'https://www.picnic.fan/vote/90';\n      \n      const result = transformAppLinkToWebLink(appLink);\n      \n      expect(result).toBe(expected);\n    });\n  });\n}); "],"names":["describe","test","appLink","expected","result","transformBannerLink","expect","toBe","webLink","undefined","otherLink","transformAppLinkToWebLink"],"mappings":";;;;iCAA+D;AAE/DA,SAAS,oBAAoB;IAC3BA,SAAS,uBAAuB;QAC9BC,KAAK,oBAAoB;YACvB,MAAMC,UAAU;YAChB,MAAMC,WAAW;YAEjB,MAAMC,SAASC,IAAAA,oCAAmB,EAACH;YAEnCI,OAAOF,QAAQG,IAAI,CAACJ;QACtB;QAEAF,KAAK,wBAAwB;YAC3B,MAAMO,UAAU;YAEhB,MAAMJ,SAASC,IAAAA,oCAAmB,EAACG;YAEnCF,OAAOF,QAAQG,IAAI,CAACC;QACtB;QAEAP,KAAK,2BAA2B;YAC9B,MAAMG,SAASC,IAAAA,oCAAmB,EAAC;YAEnCC,OAAOF,QAAQG,IAAI,CAAC;QACtB;QAEAN,KAAK,sCAAsC;YACzCK,OAAOD,IAAAA,oCAAmB,EAAC,OAAcE,IAAI,CAAC;YAC9CD,OAAOD,IAAAA,oCAAmB,EAACI,YAAmBF,IAAI,CAACE;QACrD;QAEAR,KAAK,uBAAuB;YAC1B,MAAMS,YAAY;YAElB,MAAMN,SAASC,IAAAA,oCAAmB,EAACK;YAEnCJ,OAAOF,QAAQG,IAAI,CAACG;QACtB;IACF;IAEAV,SAAS,6BAA6B;QACpCC,KAAK,2BAA2B;YAC9B,MAAMC,UAAU;YAChB,MAAMC,WAAW;YAEjB,MAAMC,SAASO,IAAAA,0CAAyB,EAACT;YAEzCI,OAAOF,QAAQG,IAAI,CAACJ;QACtB;QAEAF,KAAK,yBAAyB;YAC5B,MAAMC,UAAU;YAChB,MAAMC,WAAW;YAEjB,MAAMC,SAASO,IAAAA,0CAAyB,EAACT;YAEzCI,OAAOF,QAAQG,IAAI,CAACJ;QACtB;QAEAF,KAAK,wBAAwB;YAC3B,MAAMC,UAAU;YAChB,MAAMC,WAAW;YAEjB,MAAMC,SAASO,IAAAA,0CAAyB,EAACT;YAEzCI,OAAOF,QAAQG,IAAI,CAACJ;QACtB;IACF;AACF"}