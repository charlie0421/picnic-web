{"version":3,"names":["DefaultAvatar","cov_1j0uz70wox","f","s","ProfileImageContainer","avatarUrl","width","height","borderRadius","b","className","_jsxruntime","jsx","style","overflow","src","alt","loading","onError","e","currentTarget"],"sources":["/Users/charlie.hyun/Repositories/picnic-web/components/ui/ProfileImageContainer.tsx"],"sourcesContent":["import React from 'react';\n\ninterface ProfileImageContainerProps {\n  avatarUrl: string;\n  width: number;\n  height: number;\n  borderRadius?: number;\n  className?: string;\n}\n\nexport const ProfileImageContainer: React.FC<ProfileImageContainerProps> = ({\n  avatarUrl,\n  width,\n  height,\n  borderRadius = 0,\n  className = ''\n}) => {\n  return (\n    <div \n      style={{ borderRadius, overflow: 'hidden' }}\n      className={className}\n    >\n      <img\n        src={avatarUrl}\n        alt=\"프로필 이미지\"\n        width={width}\n        height={height}\n        className=\"object-cover rounded-full bg-gray-200\"\n        loading=\"lazy\"\n        onError={(e) => {\n          // 이미지 로딩 실패 시 기본 이미지로 대체\n          e.currentTarget.src = '/images/default-avatar.png';\n        }}\n      />\n    </div>\n  );\n};\n\nexport const DefaultAvatar: React.FC<{ \n  width: number; \n  height: number; \n  className?: string; \n}> = ({ width, height, className = '' }) => {\n  return (\n    <div \n      className={`bg-gray-200 flex items-center justify-center rounded-full ${className}`}\n      style={{ width, height }}\n    >\n      <span className=\"text-gray-500 text-lg\">👤</span>\n    </div>\n  );\n}; "],"mappingssCaA,aAAa,WAAAA,CAAA;IAAA;IAAAC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAbH,aAAA;;EA5BAI,qBAAqB,WAAAA,CAAA;IAAA;IAAAH,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAArBC,qBAAA;;;;;;;;wEAVK;;;;;;;;;;;;;;;;;AAUX,MAAMA,qBAAA,GAA8DA,CAAC;EAC1EC,SAAS;EACTC,KAAK;EACLC,MAAM;EACNC,YAAA;EAAA;EAAA,CAAAP,cAAA,GAAAQ,CAAA,UAAe,CAAC;EAChBC,SAAA;EAAA;EAAA,CAAAT,cAAA,GAAAQ,CAAA,UAAY,EAAE;AAAA,CACf;EAAA;EAAAR,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EACC,oBACE,IAAAQ,WAAA,CAAAC,GAAA,EAAC;IACCC,KAAA,EAAO;MAAEL,YAAA;MAAcM,QAAA,EAAU;IAAS;IAC1CJ,SAAA,EAAWA,SAAA;cAEX,iBAAAC,WAAA,CAAAC,GAAA,EAAC;MACCG,GAAA,EAAKV,SAAA;MACLW,GAAA,EAAI;MACJV,KAAA,EAAOA,KAAA;MACPC,MAAA,EAAQA,MAAA;MACRG,SAAA,EAAU;MACVO,OAAA,EAAQ;MACRC,OAAA,EAAUC,CAAA;QAAA;QAAAlB,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAE,CAAA;QACR;QACAgB,CAAA,CAAEC,aAAa,CAACL,GAAG,GAAG;MACxB;;;AAIR;AAAA;AAAAd,cAAA,GAAAE,CAAA;AAEO,MAAMH,aAAA,GAIRA,CAAC;EAAEM,KAAK;EAAEC,MAAM;EAAEG,SAAA;EAAA;EAAA,CAAAT,cAAA,GAAAQ,CAAA,UAAY,EAAE;AAAA,CAAE;EAAA;EAAAR,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EACrC,oBACE,IAAAQ,WAAA,CAAAC,GAAA,EAAC;IACCF,SAAA,EAAW,6DAA6DA,SAAA,EAAW;IACnFG,KAAA,EAAO;MAAEP,KAAA;MAAOC;IAAO;cAEvB,iBAAAI,WAAA,CAAAC,GAAA,EAAC;MAAKF,SAAA,EAAU;gBAAwB;;;AAG9C","ignoreList":[]}