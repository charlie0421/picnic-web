0bd12bd93a6f8190d9298b6ea42a0dac
"use strict";

/* istanbul ignore next */
function cov_1vh404fclp() {
  var path = "/Users/charlie.hyun/Repositories/picnic-web/app/[lang]/(mypage)/mypage/vote-history/loading.tsx";
  var hash = "cfa3be9d41fa0a5faecf6651a8dac4a093a698f1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/charlie.hyun/Repositories/picnic-web/app/[lang]/(mypage)/mypage/vote-history/loading.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 34
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 43
        },
        end: {
          line: 12,
          column: 139
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 80
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "VoteHistoryLoading",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 27
          }
        },
        loc: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/charlie.hyun/Repositories/picnic-web/app/[lang]/(mypage)/mypage/vote-history/loading.tsx"],
      sourcesContent: ["import VoteHistorySkeleton from '@/components/server/mypage/VoteHistorySkeleton';\n\nexport default function VoteHistoryLoading() {\n  return <VoteHistorySkeleton />;\n} "],
      names: ["VoteHistoryLoading", "VoteHistorySkeleton"],
      mappings: ";;;;+BAEA;;;eAAwBA;;;;4EAFQ;;;;;;AAEjB,SAASA;IACtB,qBAAO,qBAACC,4BAAmB;AAC7B"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cfa3be9d41fa0a5faecf6651a8dac4a093a698f1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1vh404fclp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1vh404fclp();
cov_1vh404fclp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1vh404fclp().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1vh404fclp().f[0]++;
    cov_1vh404fclp().s[2]++;
    return VoteHistoryLoading;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1vh404fclp().s[3]++, require("react/jsx-runtime"));
const _VoteHistorySkeleton =
/* istanbul ignore next */
(/*#__PURE__*/cov_1vh404fclp().s[4]++, _interop_require_default(require("../../../../../components/server/mypage/VoteHistorySkeleton")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1vh404fclp().f[1]++;
  cov_1vh404fclp().s[5]++;
  return /* istanbul ignore next */(cov_1vh404fclp().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1vh404fclp().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1vh404fclp().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1vh404fclp().b[0][1]++, {
    default: obj
  });
}
function VoteHistoryLoading() {
  /* istanbul ignore next */
  cov_1vh404fclp().f[2]++;
  cov_1vh404fclp().s[6]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_VoteHistorySkeleton.default, {});
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWb3RlSGlzdG9yeUxvYWRpbmciLCJjb3ZfMXZoNDA0ZmNscCIsImYiLCJzIiwiX2pzeHJ1bnRpbWUiLCJqc3giLCJfVm90ZUhpc3RvcnlTa2VsZXRvbiIsImRlZmF1bHQiXSwic291cmNlcyI6WyIvVXNlcnMvY2hhcmxpZS5oeXVuL1JlcG9zaXRvcmllcy9waWNuaWMtd2ViL2FwcC9bbGFuZ10vKG15cGFnZSkvbXlwYWdlL3ZvdGUtaGlzdG9yeS9sb2FkaW5nLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVm90ZUhpc3RvcnlTa2VsZXRvbiBmcm9tICdAL2NvbXBvbmVudHMvc2VydmVyL215cGFnZS9Wb3RlSGlzdG9yeVNrZWxldG9uJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVm90ZUhpc3RvcnlMb2FkaW5nKCkge1xuICByZXR1cm4gPFZvdGVIaXN0b3J5U2tlbGV0b24gLz47XG59ICJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBRUE7Ozs7OztXQUF3QkEsa0JBQUE7Ozs7Ozs7O3dFQUZROzs7Ozs7Ozs7Ozs7Ozs7QUFFakIsU0FBU0EsbUJBQUE7RUFBQTtFQUFBQyxjQUFBLEdBQUFDLENBQUE7RUFBQUQsY0FBQSxHQUFBRSxDQUFBO0VBQ3RCLG9CQUFPLElBQUFDLFdBQUEsQ0FBQUMsR0FBQSxFQUFDQyxvQkFBQSxDQUFBQyxPQUFtQjtBQUM3QiIsImlnbm9yZUxpc3QiOltdfQ==