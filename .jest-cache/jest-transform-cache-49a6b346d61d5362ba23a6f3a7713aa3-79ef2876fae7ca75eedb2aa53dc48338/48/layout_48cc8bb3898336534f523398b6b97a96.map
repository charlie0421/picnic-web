{"version":3,"names":["_default","MainLayout","children","cov_kg30iadhm","f","setCurrentPortalType","s","_NavigationContext","useNavigation","isAuthenticated","isLoading","_authprovider","useAuth","pathname","_navigation","usePathname","isPopupOpen","setIsPopupOpen","_react","useState","popupSlides","setPopupSlides","useEffect","portalType","_navigation1","getPortalTypeFromPath","fetchPopupResource","popups","_queries","getPopups","b","length","now","Date","filteredPopups","filter","popup","popupKey","id","hideUntil","window","localStorage","getItem","platform","map","imageUrl","_image","getCdnImageUrl","_strings","getLocalizedString","image","title","content","startAt","stopAt","e","console","error","currentSlide","setCurrentSlide","handleCloseFor7Days","setDate","getDate","setItem","toISOString","_jsxruntime","jsxs","className","jsx","_PopupBanner","default","isOpen","onClose","onCloseFor7Days","slides","_Header","_ExclusiveOpenBadge","includes","_vote","Menu","_Footer"],"sources":["/Users/charlie.hyun/Repositories/picnic-web/app/[lang]/(main)/layout.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { usePathname } from 'next/navigation';\nimport { useAuth } from '@/lib/supabase/auth-provider';\nimport { useNavigation } from '@/contexts/NavigationContext';\nimport { useLanguageStore } from '@/stores/languageStore';\nimport Footer from '../Footer';\nimport ExclusiveOpenBadge from '@/components/layouts/ExclusiveOpenBadge';\nimport { getPortalTypeFromPath } from '@/config/navigation';\nimport Header from '@/components/layouts/Header';\nimport { getPopups } from '@/utils/api/queries';\nimport { getLocalizedString } from '@/utils/api/strings';\nimport { getCdnImageUrl } from '@/utils/api/image';\nimport PopupBanner from '@/components/client/vote/dialogs/PopupBanner';\nimport { Menu } from '@/components/client/vote';\n\ninterface MainLayoutProps {\n  children: React.ReactNode;\n}\n\nconst MainLayout: React.FC<MainLayoutProps> = ({ children }) => {\n  const { setCurrentPortalType } = useNavigation();\n  const { isAuthenticated, isLoading } = useAuth();\n  const pathname = usePathname();\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [popupSlides, setPopupSlides] = useState<any[]>([]);\n\n  useEffect(() => {\n    const portalType = getPortalTypeFromPath(pathname);\n    setCurrentPortalType(portalType);\n  }, [pathname, setCurrentPortalType]);\n\n  useEffect(() => {\n    async function fetchPopupResource() {\n      try {\n        // 서버에서 이미 start_at/stop_at 조건으로 필터링된 활성 팝업만 가져옴\n        const popups = await getPopups();\n        if (!popups || popups.length === 0) return;\n        \n        const now = new Date();\n        // 클라이언트에서는 localStorage 숨김 상태와 플랫폼만 체크\n        const filteredPopups = popups.filter((popup: any) => {\n          const popupKey = popup.id;\n          const hideUntil = typeof window !== 'undefined' ? localStorage.getItem(`hide_popup_${popupKey}`) : null;\n          \n          // 사용자가 7일간 숨김 설정한 팝업 제외\n          if (hideUntil && new Date(hideUntil) > now) return false;\n          \n          // 플랫폼 체크 (web 또는 all만 표시)\n          const platform = popup.platform || 'all';\n          if (!(platform === 'all' || platform === 'web')) return false;\n          \n          return true;\n        });\n\n        setPopupSlides(\n          filteredPopups.map((popup: any) => ({\n            imageUrl: getCdnImageUrl(getLocalizedString(popup.image)),\n            title: getLocalizedString(popup.title),\n            content: getLocalizedString(popup.content),\n            popupKey: popup.id,\n            startAt: popup.startAt,\n            stopAt: popup.stopAt,\n            platform: popup.platform || 'all',\n          }))\n        );\n      } catch (e) {\n        console.error('[fetchPopupResource] 팝업 데이터 로드 실패:', e);\n      }\n    }\n    fetchPopupResource();\n  }, []);\n\n  useEffect(() => {\n    // 서버에서 필터링된 팝업이 있고, 클라이언트 필터링도 통과한 팝업이 있으면 팝업 열기\n    if (popupSlides.length > 0) {\n      setIsPopupOpen(true);\n    }\n  }, [popupSlides]);\n\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const handleCloseFor7Days = () => {\n    if (!popupSlides[currentSlide]) return;\n    const popupKey = popupSlides[currentSlide].popupKey;\n    const hideUntil = new Date();\n    hideUntil.setDate(hideUntil.getDate() + 7);\n    if (typeof window !== 'undefined') {\n      localStorage.setItem(`hide_popup_${popupKey}`, hideUntil.toISOString());\n    }\n    setIsPopupOpen(false);\n  };\n\n  useEffect(() => {\n    // 추가 인증 관련 로직이 있을 수 있음\n  }, [isAuthenticated, isLoading]);\n\n  return (\n    <div className='bg-gradient-to-b from-blue-50 to-white relative'>\n      {popupSlides.length > 0 && (\n        <PopupBanner\n          isOpen={isPopupOpen}\n          onClose={() => setIsPopupOpen(false)}\n          onCloseFor7Days={handleCloseFor7Days}\n          slides={popupSlides}\n        />\n      )}\n      <div className='max-w-6xl mx-auto bg-white shadow-md'>\n        <Header />\n        <main className='container mx-auto py-0 min-h-screen'>\n          <div className='flex flex-col'>\n            <div className='w-full'>\n              {/* 배타 오픈 뱃지 */}\n              <div className='flex justify-center py-1 sm:py-2'>\n                <ExclusiveOpenBadge />\n              </div>\n              {/* 서브 메뉴 - 이용약관, 개인정보처리방침 페이지에서는 숨김 */}\n              {!pathname.includes('/terms') && !pathname.includes('/privacy') && (\n                <div className='bg-gray-50 border-b'>\n                  <div className='container mx-auto px-0'>\n                    <Menu />\n                  </div>\n                </div>\n              )}\n              {/* 메인 콘텐츠 */}\n              {children}\n            </div>\n          </div>\n        </main>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default MainLayout;"],"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","ignoreList":[]}