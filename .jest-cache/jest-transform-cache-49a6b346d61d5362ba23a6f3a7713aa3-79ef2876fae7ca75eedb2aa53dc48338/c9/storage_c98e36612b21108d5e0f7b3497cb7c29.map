{"version":3,"names":["clearLastLoginInfo","cov_2i60gto4ui","f","s","formatLastLoginTime","getLastLoginInfo","isLastLoginForUser","setLastLoginInfo","STORAGE_KEYS","LAST_LOGIN","window","b","stored","localStorage","getItem","parsed","JSON","parse","provider","timestamp","userId","console","warn","error","loginInfo","serialized","stringify","setItem","log","removeItem","language","_date","formatRelativeTime","useAbsolute","absoluteThreshold","showTime","fallbackMessages","ko","en","ja","zh","id","lastLogin"],"sources":["/Users/charlie.hyun/Repositories/picnic-web/utils/storage.ts"],"sourcesContent":["import { formatRelativeTime, type SupportedLanguage } from './date';\n\n/**\n * 최근 로그인 정보 타입\n */\nexport interface LastLoginInfo {\n  provider: string;\n  providerDisplay: string;\n  timestamp: string;\n  userId: string;\n}\n\n/**\n * 로컬 스토리지 키 상수\n */\nconst STORAGE_KEYS = {\n  LAST_LOGIN: 'picnic_last_login'\n} as const;\n\n/**\n * 최근 로그인 정보를 로컬 스토리지에서 가져오기\n */\nexport function getLastLoginInfo(): LastLoginInfo | null {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  try {\n    const stored = localStorage.getItem(STORAGE_KEYS.LAST_LOGIN);\n    if (!stored) {\n      return null;\n    }\n\n    const parsed = JSON.parse(stored) as LastLoginInfo;\n    \n    // 데이터 유효성 검사\n    if (!parsed.provider || !parsed.timestamp || !parsed.userId) {\n      console.warn('⚠️ [Storage] 잘못된 최근 로그인 정보 형식:', parsed);\n      return null;\n    }\n\n    return parsed;\n  } catch (error) {\n    console.warn('⚠️ [Storage] 최근 로그인 정보 읽기 실패:', error);\n    return null;\n  }\n}\n\n/**\n * 최근 로그인 정보를 로컬 스토리지에 저장\n * 중복 저장 방지: 동일한 정보가 이미 저장되어 있으면 저장하지 않음\n */\nexport function setLastLoginInfo(loginInfo: LastLoginInfo): boolean {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  try {\n    // 데이터 유효성 검사\n    if (!loginInfo.provider || !loginInfo.timestamp || !loginInfo.userId) {\n      console.warn('⚠️ [Storage] 잘못된 최근 로그인 정보:', loginInfo);\n      return false;\n    }\n\n    const serialized = JSON.stringify(loginInfo);\n    localStorage.setItem(STORAGE_KEYS.LAST_LOGIN, serialized);\n    \n    console.log('✅ [Storage] 최근 로그인 정보 저장 완료:', {\n      provider: loginInfo.provider,\n      userId: loginInfo.userId,\n      timestamp: loginInfo.timestamp\n    });\n    \n    return true;\n  } catch (error) {\n    console.warn('⚠️ [Storage] 최근 로그인 정보 저장 실패:', error);\n    return false;\n  }\n}\n\n/**\n * 최근 로그인 정보를 로컬 스토리지에서 삭제\n */\nexport function clearLastLoginInfo(): boolean {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  try {\n    localStorage.removeItem(STORAGE_KEYS.LAST_LOGIN);\n    console.log('✅ [Storage] 최근 로그인 정보 삭제 완료');\n    return true;\n  } catch (error) {\n    console.warn('⚠️ [Storage] 최근 로그인 정보 삭제 실패:', error);\n    return false;\n  }\n}\n\n/**\n * 최근 로그인 정보의 시간 포맷팅 (국제화 지원)\n */\nexport function formatLastLoginTime(timestamp: string, language: SupportedLanguage = 'ko'): string {\n  try {\n    return formatRelativeTime(timestamp, language, {\n      useAbsolute: true,\n      absoluteThreshold: 7,\n      showTime: false\n    });\n  } catch (error) {\n    console.warn('⚠️ [Storage] 시간 포맷팅 실패:', error);\n    // 언어별 폴백 메시지\n    const fallbackMessages = {\n      ko: '알 수 없음',\n      en: 'Unknown',\n      ja: '不明',\n      zh: '未知',\n      id: 'Tidak diketahui'\n    };\n    return fallbackMessages[language] || fallbackMessages.ko;\n  }\n}\n\n/**\n * 특정 사용자의 최근 로그인 정보인지 확인\n */\nexport function isLastLoginForUser(userId: string): boolean {\n  const lastLogin = getLastLoginInfo();\n  return lastLogin?.userId === userId;\n} "],"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","ignoreList":[]}