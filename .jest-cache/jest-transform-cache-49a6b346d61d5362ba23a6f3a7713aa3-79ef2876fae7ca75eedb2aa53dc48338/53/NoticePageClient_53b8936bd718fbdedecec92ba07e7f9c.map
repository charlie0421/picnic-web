{"version":3,"names":["_default","NoticePageClient","lang","translations","cov_wxccgpzq9","f","notices","setNotices","s","_react","useState","loading","setLoading","error","setError","showTestData","setShowTestData","console","log","testNotices","id","title","ko","en","content","created_at","Date","toISOString","is_pinned","status","now","useEffect","fetchNotices","supabase","_client","createBrowserSupabaseClient","data","testData","testError","from","select","limit","hasTestData","hasTestError","testErrorMessage","b","message","testErrorCode","code","testErrorDetails","details","eq","order","ascending","hasData","dataLength","length","hasError","errorCode","errorDetails","rawData","warn","transformedNotices","map","notice","index","원본개수","변환된개수","변환된데이터","getLocalizedText","text","formatDate","dateString","date","locale","_date","getCurrentLocale","_datefns","format","_jsxruntime","jsx","className","jsxs","page_title_notice","Array","_","i","onClick","notice_pinned","notice_no_items","_link","default","href"],"sources":["/Users/charlie.hyun/Repositories/picnic-web/app/[lang]/(mypage)/notice/NoticePageClient.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { createBrowserSupabaseClient } from '@/lib/supabase/client';\nimport { format } from 'date-fns';\nimport Link from 'next/link';\nimport { getCurrentLocale, type SupportedLanguage } from '@/utils/date';\n\ninterface MultilingualText {\n  en?: string;\n  ko?: string;\n  ja?: string;\n  zh?: string;\n  id?: string;\n}\n\ninterface Notice {\n  id: number;\n  title: MultilingualText;\n  content: MultilingualText;\n  created_at: string | null;\n  is_pinned: boolean | null;\n  status: string | null;\n}\n\ninterface Props {\n  lang: string;\n  translations: {\n    page_title_notice: string;\n    notice_no_items: string;\n    notice_pinned: string;\n  };\n}\n\nconst NoticePageClient: React.FC<Props> = ({ lang, translations }) => {\n  const [notices, setNotices] = useState<Notice[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [showTestData, setShowTestData] = useState(false);\n\n  console.log('🏗️ [Notice] NoticePageClient 컴포넌트 마운트됨:', { lang, translations });\n\n  // 테스트 데이터\n  const testNotices: Notice[] = [\n    {\n      id: 1,\n      title: { ko: '테스트 공지사항 1', en: 'Test Notice 1' },\n      content: { ko: '이것은 테스트 공지사항입니다.', en: 'This is a test notice.' },\n      created_at: new Date().toISOString(),\n      is_pinned: true,\n      status: 'published'\n    },\n    {\n      id: 2,\n      title: { ko: '테스트 공지사항 2', en: 'Test Notice 2' },\n      content: { ko: '또 다른 테스트 공지사항입니다.', en: 'Another test notice.' },\n      created_at: new Date(Date.now() - 86400000).toISOString(), // 1일 전\n      is_pinned: false,\n      status: 'published'\n    }\n  ];\n\n  useEffect(() => {\n    const fetchNotices = async () => {\n      try {\n        console.log('🔍 [Notice] 공지사항 페치 시작');\n        setLoading(true);\n        setError(null);\n        \n        const supabase = createBrowserSupabaseClient();\n        console.log('🔍 [Notice] Supabase 클라이언트 생성 완료');\n        \n        // 먼저 간단한 테이블 접근 권한 확인\n        console.log('🔍 [Notice] 테이블 접근 권한 확인 시작...');\n        const { data: testData, error: testError } = await supabase\n          .from('notices')\n          .select('count')\n          .limit(1);\n          \n        console.log('🔍 [Notice] 테이블 접근 권한 확인 결과:', {\n          hasTestData: !!testData,\n          hasTestError: !!testError,\n          testErrorMessage: testError?.message || null,\n          testErrorCode: testError?.code || null,\n          testErrorDetails: testError?.details || null\n        });\n        \n        if (testError) {\n          console.error('🚨 [Notice] 테이블 접근 권한 에러:', testError);\n          setError(`테이블 접근 에러: ${testError.message} (코드: ${testError.code})`);\n          setLoading(false);\n          return;\n        }\n        \n        // 실제 데이터 조회\n        console.log('🔍 [Notice] 실제 공지사항 데이터 조회 시작...');\n        const { data, error } = await supabase\n          .from('notices')\n          .select('*')\n          .eq('status', 'PUBLISHED')\n          .order('is_pinned', { ascending: false })\n          .order('created_at', { ascending: false });\n\n        console.log('🔍 [Notice] Supabase 쿼리 실행 완료:', { \n          hasData: !!data, \n          dataLength: data?.length || 0, \n          hasError: !!error,\n          error: error?.message || null,\n          errorCode: error?.code || null,\n          errorDetails: error?.details || null,\n          rawData: data\n        });\n\n        if (error) {\n          console.error('🚨 [Notice] 공지사항 조회 에러:', error);\n          setError(`공지사항 조회 실패: ${error.message}`);\n          setLoading(false);\n          return;\n        }\n\n        console.log('🔍 [Notice] 원본 데이터 확인:', data);\n\n        if (!data) {\n          console.warn('⚠️ [Notice] 데이터가 null/undefined입니다');\n          setNotices([]);\n          setLoading(false);\n          return;\n        }\n\n        // 데이터 변환 과정 상세 로깅\n        console.log('🔄 [Notice] 데이터 변환 시작...');\n        const transformedNotices = data.map((notice: any, index: number) => {\n          console.log(`🔄 [Notice] 변환 중 (${index + 1}/${data.length}):`, {\n            id: notice.id,\n            title: notice.title,\n            status: notice.status,\n            is_pinned: notice.is_pinned,\n            created_at: notice.created_at\n          });\n          \n          return {\n            id: notice.id,\n            title: notice.title,\n            content: notice.content,\n            created_at: notice.created_at,\n            is_pinned: notice.is_pinned || false,\n            status: notice.status\n          };\n        });\n\n        console.log('✅ [Notice] 데이터 변환 완료:', {\n          원본개수: data.length,\n          변환된개수: transformedNotices.length,\n          변환된데이터: transformedNotices\n        });\n\n        setNotices(transformedNotices);\n        setLoading(false);\n\n      } catch (error: any) {\n        console.error('🚨 [Notice] 예상치 못한 에러:', error);\n        setError(`예상치 못한 오류가 발생했습니다: ${error.message}`);\n        setLoading(false);\n      }\n    };\n\n    console.log('🚀 [Notice] fetchNotices 함수 호출');\n    fetchNotices();\n  }, []);\n\n  const getLocalizedText = (text: MultilingualText): string => {\n    if (!text) return '';\n    return text[lang as keyof MultilingualText] || text.ko || text.en || '';\n  };\n\n  const formatDate = (dateString: string | null) => {\n    if (!dateString) return '';\n    try {\n      const date = new Date(dateString);\n      const locale = getCurrentLocale(lang as SupportedLanguage);\n      return format(date, 'yyyy.MM.dd', { locale });\n    } catch {\n      return dateString;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container mx-auto px-4 py-6\">\n        <div className=\"max-w-4xl mx-auto\">\n          <h1 className=\"text-3xl font-bold mb-8 text-gray-900\">\n            {translations.page_title_notice}\n          </h1>\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6 mb-6\">\n            <p className=\"text-blue-600\">🔄 공지사항을 불러오는 중입니다...</p>\n          </div>\n          <div className=\"space-y-4\">\n            {[...Array(3)].map((_, i) => (\n              <div key={i} className=\"bg-white rounded-lg shadow-md p-6 animate-pulse\">\n                <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n                <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"container mx-auto px-4 py-6\">\n        <div className=\"max-w-4xl mx-auto\">\n          <h1 className=\"text-3xl font-bold mb-8 text-gray-900\">\n            {translations.page_title_notice}\n          </h1>\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-6 text-center\">\n            <p className=\"text-red-600 mb-4\">{error}</p>\n            <button\n              onClick={() => setShowTestData(true)}\n              className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\n            >\n              테스트 데이터 보기\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // 테스트 데이터 표시\n  if (showTestData) {\n    console.log('🧪 [Notice] 테스트 데이터 표시 중');\n    return (\n      <div className=\"container mx-auto px-4 py-6\">\n        <div className=\"max-w-4xl mx-auto\">\n          <h1 className=\"text-3xl font-bold mb-8 text-gray-900\">\n            {translations.page_title_notice} (테스트 모드)\n          </h1>\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6\">\n            <p className=\"text-yellow-700\">🧪 테스트 데이터를 표시하고 있습니다.</p>\n          </div>\n          <div className=\"space-y-4\">\n            {testNotices.map((notice) => (\n              <div\n                key={notice.id}\n                className=\"block bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200\"\n              >\n                <div className=\"p-6\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center mb-2\">\n                        {notice.is_pinned && (\n                          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 mr-2\">\n                            📌 {translations.notice_pinned}\n                          </span>\n                        )}\n                        <h2 className=\"text-lg font-semibold text-gray-900\">\n                          {getLocalizedText(notice.title)}\n                        </h2>\n                      </div>\n                      <p className=\"text-gray-600 text-sm line-clamp-2\">\n                        {getLocalizedText(notice.content)}\n                      </p>\n                    </div>\n                    <div className=\"ml-4 flex-shrink-0\">\n                      <span className=\"text-sm text-gray-500\">\n                        {formatDate(notice.created_at)}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        <h1 className=\"text-3xl font-bold mb-8 text-gray-900\">\n          {translations.page_title_notice}\n        </h1>\n\n        {notices.length === 0 ? (\n          <div className=\"bg-gray-50 rounded-lg p-8 text-center\">\n            <p className=\"text-gray-600 mb-4\">{translations.notice_no_items}</p>\n            <button\n              onClick={() => setShowTestData(true)}\n              className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\n            >\n              테스트 데이터 보기\n            </button>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {notices.map((notice) => (\n              <Link\n                key={notice.id}\n                href={`/${lang}/notice/${notice.id}`}\n                className=\"block bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200\"\n              >\n                <div className=\"p-6\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center mb-2\">\n                        {notice.is_pinned && (\n                          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 mr-2\">\n                            📌 {translations.notice_pinned}\n                          </span>\n                        )}\n                        <h2 className=\"text-lg font-semibold text-gray-900 hover:text-primary-600 transition-colors\">\n                          {getLocalizedText(notice.title)}\n                        </h2>\n                      </div>\n                      <p className=\"text-gray-600 text-sm line-clamp-2\">\n                        {getLocalizedText(notice.content)}\n                      </p>\n                    </div>\n                    <div className=\"ml-4 flex-shrink-0\">\n                      <span className=\"text-sm text-gray-500\">\n                        {formatDate(notice.created_at)}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NoticePageClient; "],"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","ignoreList":[]}