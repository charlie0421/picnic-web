653d8bd48bd4895d20f491e2375a55c1
"use strict";

/* istanbul ignore next */
function cov_1iasp8uxea() {
  var path = "/Users/charlie.hyun/Repositories/picnic-web/components/common/atoms/Spinner.tsx";
  var hash = "583cd94372798403e56b8cae45a22ffbbc3b4eab";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/charlie.hyun/Repositories/picnic-web/components/common/atoms/Spinner.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 23
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 37
        }
      },
      "5": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 76
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 6
        }
      },
      "7": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "8": {
        start: {
          line: 26,
          column: 23
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "9": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 54,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "Spinner",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 16
          }
        },
        loc: {
          start: {
            line: 19,
            column: 64
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 15,
            column: 38
          }
        }, {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 5
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 14
          }
        }, {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 32
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 19,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 30
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 32
          },
          end: {
            line: 19,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 40
          },
          end: {
            line: 19,
            column: 49
          }
        }],
        line: 19
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/charlie.hyun/Repositories/picnic-web/components/common/atoms/Spinner.tsx"],
      sourcesContent: ["import { cn } from '@/components/utils/cn';\nimport Image from 'next/image';\n\nexport interface SpinnerProps {\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  color?: 'primary' | 'secondary' | 'white';\n  className?: string;\n}\n\nexport function Spinner({ \n  size = 'md',\n  color = 'primary',\n  className\n}: SpinnerProps) {\n  const sizes = {\n    sm: 'w-4 h-4',\n    md: 'w-8 h-8',\n    lg: 'w-12 h-12',\n    xl: 'w-16 h-16'\n  };\n  \n  const sizeValues = {\n    sm: { width: 16, height: 16 },\n    md: { width: 32, height: 32 },\n    lg: { width: 48, height: 48 },\n    xl: { width: 64, height: 64 }\n  };\n  \n  return (\n    <div className={cn('inline-block', className)}>\n      <Image\n        src=\"/images/logo.png\"\n        alt=\"Loading\"\n        width={sizeValues[size].width}\n        height={sizeValues[size].height}\n        className={cn(\n          'rounded-full animate-scale-pulse drop-shadow-lg object-cover',\n          sizes[size]\n        )}\n        priority\n      />\n    </div>\n  );\n} "],
      names: ["Spinner", "size", "color", "className", "sizes", "sm", "md", "lg", "xl", "sizeValues", "width", "height", "div", "cn", "Image", "src", "alt", "priority"],
      mappings: ";;;;+BASgBA;;;eAAAA;;;;oBATG;8DACD;;;;;;AAQX,SAASA,QAAQ,EACtBC,OAAO,IAAI,EACXC,QAAQ,SAAS,EACjBC,SAAS,EACI;IACb,MAAMC,QAAQ;QACZC,IAAI;QACJC,IAAI;QACJC,IAAI;QACJC,IAAI;IACN;IAEA,MAAMC,aAAa;QACjBJ,IAAI;YAAEK,OAAO;YAAIC,QAAQ;QAAG;QAC5BL,IAAI;YAAEI,OAAO;YAAIC,QAAQ;QAAG;QAC5BJ,IAAI;YAAEG,OAAO;YAAIC,QAAQ;QAAG;QAC5BH,IAAI;YAAEE,OAAO;YAAIC,QAAQ;QAAG;IAC9B;IAEA,qBACE,qBAACC;QAAIT,WAAWU,IAAAA,MAAE,EAAC,gBAAgBV;kBACjC,cAAA,qBAACW,cAAK;YACJC,KAAI;YACJC,KAAI;YACJN,OAAOD,UAAU,CAACR,KAAK,CAACS,KAAK;YAC7BC,QAAQF,UAAU,CAACR,KAAK,CAACU,MAAM;YAC/BR,WAAWU,IAAAA,MAAE,EACX,gEACAT,KAAK,CAACH,KAAK;YAEbgB,QAAQ;;;AAIhB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "583cd94372798403e56b8cae45a22ffbbc3b4eab"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1iasp8uxea = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1iasp8uxea();
cov_1iasp8uxea().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1iasp8uxea().s[1]++;
Object.defineProperty(exports, "Spinner", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1iasp8uxea().f[0]++;
    cov_1iasp8uxea().s[2]++;
    return Spinner;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1iasp8uxea().s[3]++, require("react/jsx-runtime"));
const _cn =
/* istanbul ignore next */
(cov_1iasp8uxea().s[4]++, require("../../utils/cn"));
const _image =
/* istanbul ignore next */
(/*#__PURE__*/cov_1iasp8uxea().s[5]++, _interop_require_default(require("next/image")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1iasp8uxea().f[1]++;
  cov_1iasp8uxea().s[6]++;
  return /* istanbul ignore next */(cov_1iasp8uxea().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1iasp8uxea().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1iasp8uxea().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1iasp8uxea().b[0][1]++, {
    default: obj
  });
}
function Spinner({
  size =
  /* istanbul ignore next */
  (cov_1iasp8uxea().b[2][0]++, 'md'),
  color =
  /* istanbul ignore next */
  (cov_1iasp8uxea().b[3][0]++, 'primary'),
  className
}) {
  /* istanbul ignore next */
  cov_1iasp8uxea().f[2]++;
  const sizes =
  /* istanbul ignore next */
  (cov_1iasp8uxea().s[7]++, {
    sm: 'w-4 h-4',
    md: 'w-8 h-8',
    lg: 'w-12 h-12',
    xl: 'w-16 h-16'
  });
  const sizeValues =
  /* istanbul ignore next */
  (cov_1iasp8uxea().s[8]++, {
    sm: {
      width: 16,
      height: 16
    },
    md: {
      width: 32,
      height: 32
    },
    lg: {
      width: 48,
      height: 48
    },
    xl: {
      width: 64,
      height: 64
    }
  });
  /* istanbul ignore next */
  cov_1iasp8uxea().s[9]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: (0, _cn.cn)('inline-block', className),
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_image.default, {
      src: "/images/logo.png",
      alt: "Loading",
      width: sizeValues[size].width,
      height: sizeValues[size].height,
      className: (0, _cn.cn)('rounded-full animate-scale-pulse drop-shadow-lg object-cover', sizes[size]),
      priority: true
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTcGlubmVyIiwic2l6ZSIsImNvdl8xaWFzcDh1eGVhIiwiYiIsImNvbG9yIiwiY2xhc3NOYW1lIiwiZiIsInNpemVzIiwicyIsInNtIiwibWQiLCJsZyIsInhsIiwic2l6ZVZhbHVlcyIsIndpZHRoIiwiaGVpZ2h0IiwiX2pzeHJ1bnRpbWUiLCJqc3giLCJfY24iLCJjbiIsIl9pbWFnZSIsImRlZmF1bHQiLCJzcmMiLCJhbHQiLCJwcmlvcml0eSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFybGllLmh5dW4vUmVwb3NpdG9yaWVzL3BpY25pYy13ZWIvY29tcG9uZW50cy9jb21tb24vYXRvbXMvU3Bpbm5lci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY24gfSBmcm9tICdAL2NvbXBvbmVudHMvdXRpbHMvY24nO1xuaW1wb3J0IEltYWdlIGZyb20gJ25leHQvaW1hZ2UnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNwaW5uZXJQcm9wcyB7XG4gIHNpemU/OiAnc20nIHwgJ21kJyB8ICdsZycgfCAneGwnO1xuICBjb2xvcj86ICdwcmltYXJ5JyB8ICdzZWNvbmRhcnknIHwgJ3doaXRlJztcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gU3Bpbm5lcih7IFxuICBzaXplID0gJ21kJyxcbiAgY29sb3IgPSAncHJpbWFyeScsXG4gIGNsYXNzTmFtZVxufTogU3Bpbm5lclByb3BzKSB7XG4gIGNvbnN0IHNpemVzID0ge1xuICAgIHNtOiAndy00IGgtNCcsXG4gICAgbWQ6ICd3LTggaC04JyxcbiAgICBsZzogJ3ctMTIgaC0xMicsXG4gICAgeGw6ICd3LTE2IGgtMTYnXG4gIH07XG4gIFxuICBjb25zdCBzaXplVmFsdWVzID0ge1xuICAgIHNtOiB7IHdpZHRoOiAxNiwgaGVpZ2h0OiAxNiB9LFxuICAgIG1kOiB7IHdpZHRoOiAzMiwgaGVpZ2h0OiAzMiB9LFxuICAgIGxnOiB7IHdpZHRoOiA0OCwgaGVpZ2h0OiA0OCB9LFxuICAgIHhsOiB7IHdpZHRoOiA2NCwgaGVpZ2h0OiA2NCB9XG4gIH07XG4gIFxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbignaW5saW5lLWJsb2NrJywgY2xhc3NOYW1lKX0+XG4gICAgICA8SW1hZ2VcbiAgICAgICAgc3JjPVwiL2ltYWdlcy9sb2dvLnBuZ1wiXG4gICAgICAgIGFsdD1cIkxvYWRpbmdcIlxuICAgICAgICB3aWR0aD17c2l6ZVZhbHVlc1tzaXplXS53aWR0aH1cbiAgICAgICAgaGVpZ2h0PXtzaXplVmFsdWVzW3NpemVdLmhlaWdodH1cbiAgICAgICAgY2xhc3NOYW1lPXtjbihcbiAgICAgICAgICAncm91bmRlZC1mdWxsIGFuaW1hdGUtc2NhbGUtcHVsc2UgZHJvcC1zaGFkb3ctbGcgb2JqZWN0LWNvdmVyJyxcbiAgICAgICAgICBzaXplc1tzaXplXVxuICAgICAgICApfVxuICAgICAgICBwcmlvcml0eVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn0gIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQVNnQjs7Ozs7O1dBQUFBLE9BQUE7Ozs7Ozs7O2tDQVRHOzs7d0VBQ0Q7Ozs7Ozs7Ozs7Ozs7OztBQVFYLFNBQVNBLFFBQVE7RUFDdEJDLElBQUE7RUFBQTtFQUFBLENBQUFDLGNBQUEsR0FBQUMsQ0FBQSxVQUFPLElBQUk7RUFDWEMsS0FBQTtFQUFBO0VBQUEsQ0FBQUYsY0FBQSxHQUFBQyxDQUFBLFVBQVEsU0FBUztFQUNqQkU7QUFBUyxDQUNJO0VBQUE7RUFBQUgsY0FBQSxHQUFBSSxDQUFBO0VBQ2IsTUFBTUMsS0FBQTtFQUFBO0VBQUEsQ0FBQUwsY0FBQSxHQUFBTSxDQUFBLE9BQVE7SUFDWkMsRUFBQSxFQUFJO0lBQ0pDLEVBQUEsRUFBSTtJQUNKQyxFQUFBLEVBQUk7SUFDSkMsRUFBQSxFQUFJO0VBQ047RUFFQSxNQUFNQyxVQUFBO0VBQUE7RUFBQSxDQUFBWCxjQUFBLEdBQUFNLENBQUEsT0FBYTtJQUNqQkMsRUFBQSxFQUFJO01BQUVLLEtBQUEsRUFBTztNQUFJQyxNQUFBLEVBQVE7SUFBRztJQUM1QkwsRUFBQSxFQUFJO01BQUVJLEtBQUEsRUFBTztNQUFJQyxNQUFBLEVBQVE7SUFBRztJQUM1QkosRUFBQSxFQUFJO01BQUVHLEtBQUEsRUFBTztNQUFJQyxNQUFBLEVBQVE7SUFBRztJQUM1QkgsRUFBQSxFQUFJO01BQUVFLEtBQUEsRUFBTztNQUFJQyxNQUFBLEVBQVE7SUFBRztFQUM5QjtFQUFBO0VBQUFiLGNBQUEsR0FBQU0sQ0FBQTtFQUVBLG9CQUNFLElBQUFRLFdBQUEsQ0FBQUMsR0FBQSxFQUFDO0lBQUlaLFNBQUEsRUFBVyxJQUFBYSxHQUFBLENBQUFDLEVBQUUsRUFBQyxnQkFBZ0JkLFNBQUE7Y0FDakMsaUJBQUFXLFdBQUEsQ0FBQUMsR0FBQSxFQUFDRyxNQUFBLENBQUFDLE9BQUs7TUFDSkMsR0FBQSxFQUFJO01BQ0pDLEdBQUEsRUFBSTtNQUNKVCxLQUFBLEVBQU9ELFVBQVUsQ0FBQ1osSUFBQSxDQUFLLENBQUNhLEtBQUs7TUFDN0JDLE1BQUEsRUFBUUYsVUFBVSxDQUFDWixJQUFBLENBQUssQ0FBQ2MsTUFBTTtNQUMvQlYsU0FBQSxFQUFXLElBQUFhLEdBQUEsQ0FBQUMsRUFBRSxFQUNYLGdFQUNBWixLQUFLLENBQUNOLElBQUEsQ0FBSztNQUVidUIsUUFBUTs7O0FBSWhCIiwiaWdub3JlTGlzdCI6W119