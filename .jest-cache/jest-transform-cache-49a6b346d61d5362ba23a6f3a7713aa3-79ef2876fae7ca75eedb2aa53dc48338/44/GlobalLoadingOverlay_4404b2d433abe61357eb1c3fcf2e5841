3bbd4f3609b585597b1dde609d2617f6
'use client';
"use strict";

/* istanbul ignore next */
function cov_r8gcsq1uk() {
  var path = "/Users/charlie.hyun/Repositories/picnic-web/components/ui/GlobalLoadingOverlay.tsx";
  var hash = "9c4d42cfcdadf21597f01f2c105b58233e1fcb4e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/charlie.hyun/Repositories/picnic-web/components/ui/GlobalLoadingOverlay.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 36
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 29
        },
        end: {
          line: 14,
          column: 76
        }
      },
      "6": {
        start: {
          line: 15,
          column: 30
        },
        end: {
          line: 15,
          column: 76
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "8": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 22,
          column: 71
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "10": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "11": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 54,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "GlobalLoadingOverlay",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 29
          }
        },
        loc: {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 21
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 32
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/charlie.hyun/Repositories/picnic-web/components/ui/GlobalLoadingOverlay.tsx"],
      sourcesContent: ["'use client';\n\nimport React from 'react';\nimport Image from 'next/image';\nimport { useGlobalLoading } from '@/contexts/GlobalLoadingContext';\n\nexport default function GlobalLoadingOverlay() {\n  const { isLoading } = useGlobalLoading();\n\n  if (!isLoading) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center bg-black/60 backdrop-blur-sm\">\n      <div className=\"flex flex-col items-center space-y-4\">\n        {/* \uC571 \uC544\uC774\uCF58 with \uD384\uC2A4 \uC560\uB2C8\uBA54\uC774\uC158 */}\n        <div className=\"relative\">\n          <Image\n            src=\"/favicon/favicon-192x192.png\"\n            alt=\"Picnic Loading\"\n            width={80}\n            height={80}\n            className=\"animate-pulse drop-shadow-lg\"\n            priority\n          />\n          {/* \uCD94\uAC00 \uAE00\uB85C\uC6B0 \uD6A8\uACFC */}\n          <div className=\"absolute inset-0 rounded-full bg-gradient-to-r from-primary-400 to-secondary-400 opacity-30 animate-ping\" />\n          {/* \uD68C\uC804 \uB9C1 \uD6A8\uACFC */}\n          <div className=\"absolute -inset-2 border-2 border-transparent border-t-primary-400 border-r-secondary-400 rounded-full animate-spin opacity-70\" />\n        </div>\n        \n        {/* \uB85C\uB529 \uD14D\uC2A4\uD2B8 */}\n        <div className=\"text-white text-sm font-medium animate-pulse\">\n          Loading...\n        </div>\n      </div>\n    </div>\n  );\n} "],
      names: ["GlobalLoadingOverlay", "isLoading", "useGlobalLoading", "div", "className", "Image", "src", "alt", "width", "height", "priority"],
      mappings: "AAAA;;;;;+BAMA;;;eAAwBA;;;;8DAJN;8DACA;sCACe;;;;;;AAElB,SAASA;IACtB,MAAM,EAAEC,SAAS,EAAE,GAAGC,IAAAA,sCAAgB;IAEtC,IAAI,CAACD,WAAW,OAAO;IAEvB,qBACE,qBAACE;QAAIC,WAAU;kBACb,cAAA,sBAACD;YAAIC,WAAU;;8BAEb,sBAACD;oBAAIC,WAAU;;sCACb,qBAACC,cAAK;4BACJC,KAAI;4BACJC,KAAI;4BACJC,OAAO;4BACPC,QAAQ;4BACRL,WAAU;4BACVM,QAAQ;;sCAGV,qBAACP;4BAAIC,WAAU;;sCAEf,qBAACD;4BAAIC,WAAU;;;;8BAIjB,qBAACD;oBAAIC,WAAU;8BAA+C;;;;;AAMtE"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9c4d42cfcdadf21597f01f2c105b58233e1fcb4e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_r8gcsq1uk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_r8gcsq1uk();
cov_r8gcsq1uk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_r8gcsq1uk().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_r8gcsq1uk().f[0]++;
    cov_r8gcsq1uk().s[2]++;
    return GlobalLoadingOverlay;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_r8gcsq1uk().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_r8gcsq1uk().s[4]++, _interop_require_default(require("react")));
const _image =
/* istanbul ignore next */
(/*#__PURE__*/cov_r8gcsq1uk().s[5]++, _interop_require_default(require("next/image")));
const _GlobalLoadingContext =
/* istanbul ignore next */
(cov_r8gcsq1uk().s[6]++, require("../../contexts/GlobalLoadingContext"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_r8gcsq1uk().f[1]++;
  cov_r8gcsq1uk().s[7]++;
  return /* istanbul ignore next */(cov_r8gcsq1uk().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_r8gcsq1uk().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_r8gcsq1uk().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_r8gcsq1uk().b[0][1]++, {
    default: obj
  });
}
function GlobalLoadingOverlay() {
  /* istanbul ignore next */
  cov_r8gcsq1uk().f[2]++;
  const {
    isLoading
  } =
  /* istanbul ignore next */
  (cov_r8gcsq1uk().s[8]++, (0, _GlobalLoadingContext.useGlobalLoading)());
  /* istanbul ignore next */
  cov_r8gcsq1uk().s[9]++;
  if (!isLoading) {
    /* istanbul ignore next */
    cov_r8gcsq1uk().b[2][0]++;
    cov_r8gcsq1uk().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_r8gcsq1uk().b[2][1]++;
  }
  cov_r8gcsq1uk().s[11]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "fixed inset-0 z-[9999] flex items-center justify-center bg-black/60 backdrop-blur-sm",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex flex-col items-center space-y-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "relative",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_image.default, {
          src: "/favicon/favicon-192x192.png",
          alt: "Picnic Loading",
          width: 80,
          height: 80,
          className: "animate-pulse drop-shadow-lg",
          priority: true
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "absolute inset-0 rounded-full bg-gradient-to-r from-primary-400 to-secondary-400 opacity-30 animate-ping"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "absolute -inset-2 border-2 border-transparent border-t-primary-400 border-r-secondary-400 rounded-full animate-spin opacity-70"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-white text-sm font-medium animate-pulse",
        children: "Loading..."
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHbG9iYWxMb2FkaW5nT3ZlcmxheSIsImNvdl9yOGdjc3ExdWsiLCJmIiwiaXNMb2FkaW5nIiwicyIsIl9HbG9iYWxMb2FkaW5nQ29udGV4dCIsInVzZUdsb2JhbExvYWRpbmciLCJiIiwiX2pzeHJ1bnRpbWUiLCJqc3giLCJjbGFzc05hbWUiLCJqc3hzIiwiX2ltYWdlIiwiZGVmYXVsdCIsInNyYyIsImFsdCIsIndpZHRoIiwiaGVpZ2h0IiwicHJpb3JpdHkiXSwic291cmNlcyI6WyIvVXNlcnMvY2hhcmxpZS5oeXVuL1JlcG9zaXRvcmllcy9waWNuaWMtd2ViL2NvbXBvbmVudHMvdWkvR2xvYmFsTG9hZGluZ092ZXJsYXkudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBJbWFnZSBmcm9tICduZXh0L2ltYWdlJztcbmltcG9ydCB7IHVzZUdsb2JhbExvYWRpbmcgfSBmcm9tICdAL2NvbnRleHRzL0dsb2JhbExvYWRpbmdDb250ZXh0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR2xvYmFsTG9hZGluZ092ZXJsYXkoKSB7XG4gIGNvbnN0IHsgaXNMb2FkaW5nIH0gPSB1c2VHbG9iYWxMb2FkaW5nKCk7XG5cbiAgaWYgKCFpc0xvYWRpbmcpIHJldHVybiBudWxsO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJmaXhlZCBpbnNldC0wIHotWzk5OTldIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGJnLWJsYWNrLzYwIGJhY2tkcm9wLWJsdXItc21cIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXIgc3BhY2UteS00XCI+XG4gICAgICAgIHsvKiDslbEg7JWE7J207L2YIHdpdGgg7Y6E7IqkIOyVoOuLiOuplOydtOyFmCAqL31cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZWxhdGl2ZVwiPlxuICAgICAgICAgIDxJbWFnZVxuICAgICAgICAgICAgc3JjPVwiL2Zhdmljb24vZmF2aWNvbi0xOTJ4MTkyLnBuZ1wiXG4gICAgICAgICAgICBhbHQ9XCJQaWNuaWMgTG9hZGluZ1wiXG4gICAgICAgICAgICB3aWR0aD17ODB9XG4gICAgICAgICAgICBoZWlnaHQ9ezgwfVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiYW5pbWF0ZS1wdWxzZSBkcm9wLXNoYWRvdy1sZ1wiXG4gICAgICAgICAgICBwcmlvcml0eVxuICAgICAgICAgIC8+XG4gICAgICAgICAgey8qIOy2lOqwgCDquIDroZzsmrAg7Zqo6rO8ICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWJzb2x1dGUgaW5zZXQtMCByb3VuZGVkLWZ1bGwgYmctZ3JhZGllbnQtdG8tciBmcm9tLXByaW1hcnktNDAwIHRvLXNlY29uZGFyeS00MDAgb3BhY2l0eS0zMCBhbmltYXRlLXBpbmdcIiAvPlxuICAgICAgICAgIHsvKiDtmozsoIQg66eBIO2aqOqzvCAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFic29sdXRlIC1pbnNldC0yIGJvcmRlci0yIGJvcmRlci10cmFuc3BhcmVudCBib3JkZXItdC1wcmltYXJ5LTQwMCBib3JkZXItci1zZWNvbmRhcnktNDAwIHJvdW5kZWQtZnVsbCBhbmltYXRlLXNwaW4gb3BhY2l0eS03MFwiIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICBcbiAgICAgICAgey8qIOuhnOuUqSDthY3siqTtirggKi99XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC13aGl0ZSB0ZXh0LXNtIGZvbnQtbWVkaXVtIGFuaW1hdGUtcHVsc2VcIj5cbiAgICAgICAgICBMb2FkaW5nLi4uXG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59ICJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQU1BOzs7Ozs7V0FBd0JBLG9CQUFBOzs7Ozs7Ozt1RUFKTjs7O3VFQUNBOzs7aUNBQ2U7Ozs7Ozs7Ozs7Ozs7OztBQUVsQixTQUFTQSxxQkFBQTtFQUFBO0VBQUFDLGFBQUEsR0FBQUMsQ0FBQTtFQUN0QixNQUFNO0lBQUVDO0VBQVMsQ0FBRTtFQUFBO0VBQUEsQ0FBQUYsYUFBQSxHQUFBRyxDQUFBLE9BQUcsSUFBQUMscUJBQUEsQ0FBQUMsZ0JBQWdCO0VBQUE7RUFBQUwsYUFBQSxHQUFBRyxDQUFBO0VBRXRDLElBQUksQ0FBQ0QsU0FBQSxFQUFXO0lBQUE7SUFBQUYsYUFBQSxHQUFBTSxDQUFBO0lBQUFOLGFBQUEsR0FBQUcsQ0FBQTtJQUFBLE9BQU87RUFBQTtFQUFBO0VBQUE7SUFBQUgsYUFBQSxHQUFBTSxDQUFBO0VBQUE7RUFBQU4sYUFBQSxHQUFBRyxDQUFBO0VBRXZCLG9CQUNFLElBQUFJLFdBQUEsQ0FBQUMsR0FBQSxFQUFDO0lBQUlDLFNBQUEsRUFBVTtjQUNiLGlCQUFBRixXQUFBLENBQUFHLElBQUEsRUFBQztNQUFJRCxTQUFBLEVBQVU7OEJBRWIsSUFBQUYsV0FBQSxDQUFBRyxJQUFBLEVBQUM7UUFBSUQsU0FBQSxFQUFVO2dDQUNiLElBQUFGLFdBQUEsQ0FBQUMsR0FBQSxFQUFDRyxNQUFBLENBQUFDLE9BQUs7VUFDSkMsR0FBQSxFQUFJO1VBQ0pDLEdBQUEsRUFBSTtVQUNKQyxLQUFBLEVBQU87VUFDUEMsTUFBQSxFQUFRO1VBQ1JQLFNBQUEsRUFBVTtVQUNWUSxRQUFRO3lCQUdWLElBQUFWLFdBQUEsQ0FBQUMsR0FBQSxFQUFDO1VBQUlDLFNBQUEsRUFBVTt5QkFFZixJQUFBRixXQUFBLENBQUFDLEdBQUEsRUFBQztVQUFJQyxTQUFBLEVBQVU7O3VCQUlqQixJQUFBRixXQUFBLENBQUFDLEdBQUEsRUFBQztRQUFJQyxTQUFBLEVBQVU7a0JBQStDOzs7O0FBTXRFIiwiaWdub3JlTGlzdCI6W119