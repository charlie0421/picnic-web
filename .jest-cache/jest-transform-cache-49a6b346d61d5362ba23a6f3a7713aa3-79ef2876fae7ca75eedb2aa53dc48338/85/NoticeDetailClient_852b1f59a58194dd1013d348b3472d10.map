{"version":3,"names":["_default","NoticeDetailClient","lang","translations","cov_2c84ihfq92","f","notice","setNotice","s","_react","useState","loading","setLoading","params","_navigation","useParams","currentLang","router","useRouter","noticeId","id","t","key","b","useEffect","fetchNotice","parseInt","isNaN","Error","data","error","_client","createBrowserSupabaseClient","from","select","eq","single","transformedNotice","title","content","createdAt","created_at","isPinned","is_pinned","status","console","push","getLocalizedText","text","ko","en","_jsxruntime","jsx","className","jsxs","_link","default","href","_datefns","format","Date","locale","_date","getCurrentLocale"],"sources":["/Users/charlie.hyun/Repositories/picnic-web/app/[lang]/(mypage)/notice/[id]/NoticeDetailClient.tsx"],"sourcesContent":["'use client';\n\nimport React, {useEffect, useState} from 'react';\nimport { createBrowserSupabaseClient } from '@/lib/supabase/client';\nimport {format} from 'date-fns';\nimport {ko} from 'date-fns/locale';\nimport {useParams, useRouter} from 'next/navigation';\nimport Link from 'next/link';\nimport { getCurrentLocale, type SupportedLanguage } from '@/utils/date';\n\ninterface MultilingualText {\n  en?: string;\n  ko?: string;\n  ja?: string;\n  zh?: string;\n  id?: string;\n}\n\ninterface Notice {\n  id: number;\n  title: MultilingualText;\n  content: MultilingualText;\n  createdAt: string | null;\n  isPinned: boolean | null;\n  status: string | null;\n}\n\ninterface NoticeDetailClientProps {\n  lang: string;\n  translations: Record<string, any>;\n}\n\nconst NoticeDetailClient = ({ lang, translations }: NoticeDetailClientProps) => {\n  const [notice, setNotice] = useState<Notice | null>(null);\n  const [loading, setLoading] = useState(true);\n  const params = useParams();\n  const currentLang = lang;\n  const router = useRouter();\n  const noticeId = params?.id;\n  \n  // Helper function to get translation\n  const t = (key: string) => translations[key] || key;\n\n  useEffect(() => {\n    const fetchNotice = async () => {\n      try {\n        // noticeId를 숫자로 변환하고 유효성 검증\n        const id = parseInt(noticeId as string, 10);\n        if (isNaN(id)) {\n          throw new Error(t('notice_invalid_id') || '유효하지 않은 공지사항 ID입니다.');\n        }\n\n        const { data, error } = await createBrowserSupabaseClient()\n          .from('notices')\n          .select('*')\n          .eq('id', id)\n          .single();\n\n        if (error) throw error;\n        \n        // 데이터 변환\n        const transformedNotice: Notice = {\n          id: data.id,\n          title: data.title as MultilingualText,\n          content: data.content as MultilingualText,\n          createdAt: data.created_at,\n          isPinned: data.is_pinned,\n          status: data.status\n        };\n        \n        setNotice(transformedNotice);\n      } catch (error) {\n        console.error(t('notice_loading_error') || '공지사항을 불러오는 중 오류가 발생했습니다:', error);\n        router.push(`/${currentLang}/notice`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (noticeId) {\n      fetchNotice();\n    }\n  }, [noticeId, router, currentLang, t]);\n\n  const getLocalizedText = (text: MultilingualText): string => {\n    if (typeof text === 'string') return text;\n    return text[currentLang as keyof MultilingualText] || text.ko || text.en || '';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex justify-center items-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"></div>\n      </div>\n    );\n  }\n\n  if (!notice) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n          <p className=\"text-gray-600\">{t('notice_not_found') || '공지사항을 찾을 수 없습니다.'}</p>\n          <Link href={`/${currentLang}/notice`} className=\"text-primary-600 hover:underline mt-4 inline-block\">\n            {t('notice_back_to_list') || '목록으로 돌아가기'}\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <div className=\"mb-6\">\n          <Link href={`/${currentLang}/notice`} className=\"text-primary-600 hover:underline\">\n            ← {t('notice_back_to_list') || '목록으로 돌아가기'}\n          </Link>\n        </div>\n\n        <div className=\"border-b pb-4 mb-6\">\n          <div className=\"flex items-center space-x-2 mb-2\">\n            {notice.isPinned && (\n              <span className=\"bg-primary-100 text-primary-800 text-xs font-medium px-2.5 py-0.5 rounded\">\n                {t('notice_pinned') || '공지'}\n              </span>\n            )}\n            <h1 className=\"text-2xl font-bold text-gray-900\">{getLocalizedText(notice.title)}</h1>\n          </div>\n          <span className=\"text-sm text-gray-500\">\n            {notice.createdAt && format(new Date(notice.createdAt), 'yyyy.MM.dd (EEE)', { locale: getCurrentLocale(currentLang as SupportedLanguage) })}\n          </span>\n        </div>\n\n        <div className=\"prose max-w-none text-gray-900\">\n          <p className=\"whitespace-pre-wrap\">{getLocalizedText(notice.content)}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoticeDetailClient; "],"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","ignoreList":[]}