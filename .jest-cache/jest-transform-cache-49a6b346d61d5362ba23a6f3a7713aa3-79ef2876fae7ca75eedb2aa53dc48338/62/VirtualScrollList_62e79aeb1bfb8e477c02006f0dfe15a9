8bf96ca6b8aef26572d9dc54a717771d
'use client';
"use strict";

/* istanbul ignore next */
function cov_eacqibk0r() {
  var path = "/Users/charlie.hyun/Repositories/picnic-web/components/common/VirtualScrollList.tsx";
  var hash = "c694d115ad3e09e6519774262a082c289b2c0bcd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/charlie.hyun/Repositories/picnic-web/components/common/VirtualScrollList.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 32
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "9": {
        start: {
          line: 23,
          column: 39
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "10": {
        start: {
          line: 24,
          column: 28
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "11": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "12": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 20
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 66
        }
      },
      "14": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 19
        }
      },
      "16": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "17": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 37,
          column: 10
        }
      },
      "18": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 53
        }
      },
      "19": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "20": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 30
        }
      },
      "21": {
        start: {
          line: 43,
          column: 17
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "22": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 46,
          column: 88
        }
      },
      "23": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "24": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "25": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 95
        }
      },
      "26": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "27": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 57
        }
      },
      "28": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 39
        }
      },
      "29": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 25
        }
      },
      "30": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "31": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 31
        }
      },
      "32": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 18
        }
      },
      "33": {
        start: {
          line: 63,
          column: 40
        },
        end: {
          line: 210,
          column: 2
        }
      },
      "34": {
        start: {
          line: 64,
          column: 38
        },
        end: {
          line: 64,
          column: 61
        }
      },
      "35": {
        start: {
          line: 65,
          column: 25
        },
        end: {
          line: 65,
          column: 49
        }
      },
      "36": {
        start: {
          line: 66,
          column: 27
        },
        end: {
          line: 66,
          column: 52
        }
      },
      "37": {
        start: {
          line: 67,
          column: 29
        },
        end: {
          line: 67,
          column: 49
        }
      },
      "38": {
        start: {
          line: 69,
          column: 25
        },
        end: {
          line: 82,
          column: 6
        }
      },
      "39": {
        start: {
          line: 70,
          column: 27
        },
        end: {
          line: 70,
          column: 85
        }
      },
      "40": {
        start: {
          line: 71,
          column: 25
        },
        end: {
          line: 71,
          column: 118
        }
      },
      "41": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 75,
          column: 10
        }
      },
      "42": {
        start: {
          line: 84,
          column: 25
        },
        end: {
          line: 95,
          column: 6
        }
      },
      "43": {
        start: {
          line: 85,
          column: 41
        },
        end: {
          line: 85,
          column: 53
        }
      },
      "44": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 90,
          column: 16
        }
      },
      "45": {
        start: {
          line: 86,
          column: 73
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "46": {
        start: {
          line: 97,
          column: 24
        },
        end: {
          line: 97,
          column: 49
        }
      },
      "47": {
        start: {
          line: 99,
          column: 25
        },
        end: {
          line: 125,
          column: 6
        }
      },
      "48": {
        start: {
          line: 100,
          column: 29
        },
        end: {
          line: 100,
          column: 58
        }
      },
      "49": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 35
        }
      },
      "50": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 33
        }
      },
      "51": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "52": {
        start: {
          line: 105,
          column: 51
        },
        end: {
          line: 105,
          column: 70
        }
      },
      "53": {
        start: {
          line: 106,
          column: 37
        },
        end: {
          line: 106,
          column: 81
        }
      },
      "54": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "55": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 31
        }
      },
      "56": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 38
        }
      },
      "57": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "58": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 51
        }
      },
      "59": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 120,
          column: 16
        }
      },
      "60": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 43
        }
      },
      "61": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 133,
          column: 11
        }
      },
      "62": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 132,
          column: 10
        }
      },
      "63": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "64": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 55
        }
      },
      "65": {
        start: {
          line: 135,
          column: 26
        },
        end: {
          line: 145,
          column: 6
        }
      },
      "66": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "67": {
        start: {
          line: 137,
          column: 30
        },
        end: {
          line: 137,
          column: 48
        }
      },
      "68": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 141,
          column: 15
        }
      },
      "69": {
        start: {
          line: 147,
          column: 24
        },
        end: {
          line: 151,
          column: 6
        }
      },
      "70": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 35
        }
      },
      "71": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 209,
          column: 7
        }
      },
      "72": {
        start: {
          line: 168,
          column: 79
        },
        end: {
          line: 178,
          column: 37
        }
      },
      "73": {
        start: {
          line: 203,
          column: 29
        },
        end: {
          line: 203,
          column: 42
        }
      },
      "74": {
        start: {
          line: 211,
          column: 0
        },
        end: {
          line: 211,
          column: 52
        }
      },
      "75": {
        start: {
          line: 213,
          column: 38
        },
        end: {
          line: 213,
          column: 61
        }
      },
      "76": {
        start: {
          line: 214,
          column: 25
        },
        end: {
          line: 227,
          column: 6
        }
      },
      "77": {
        start: {
          line: 215,
          column: 27
        },
        end: {
          line: 215,
          column: 85
        }
      },
      "78": {
        start: {
          line: 216,
          column: 25
        },
        end: {
          line: 216,
          column: 118
        }
      },
      "79": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 220,
          column: 10
        }
      },
      "80": {
        start: {
          line: 228,
          column: 25
        },
        end: {
          line: 239,
          column: 6
        }
      },
      "81": {
        start: {
          line: 229,
          column: 41
        },
        end: {
          line: 229,
          column: 53
        }
      },
      "82": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 234,
          column: 16
        }
      },
      "83": {
        start: {
          line: 230,
          column: 73
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "84": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 245,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 23
          },
          end: {
            line: 13,
            column: 24
          }
        },
        loc: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 22
          },
          end: {
            line: 16,
            column: 23
          }
        },
        loc: {
          start: {
            line: 16,
            column: 33
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 33
          }
        },
        loc: {
          start: {
            line: 22,
            column: 47
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 26,
            column: 40
          }
        },
        loc: {
          start: {
            line: 26,
            column: 61
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 34
          }
        },
        loc: {
          start: {
            line: 30,
            column: 53
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 63,
            column: 57
          },
          end: {
            line: 63,
            column: 58
          }
        },
        loc: {
          start: {
            line: 63,
            column: 229
          },
          end: {
            line: 210,
            column: 1
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 69,
            column: 45
          },
          end: {
            line: 69,
            column: 46
          }
        },
        loc: {
          start: {
            line: 69,
            column: 49
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 69
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 84,
            column: 45
          },
          end: {
            line: 84,
            column: 46
          }
        },
        loc: {
          start: {
            line: 84,
            column: 49
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 84
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 86,
            column: 57
          },
          end: {
            line: 86,
            column: 58
          }
        },
        loc: {
          start: {
            line: 86,
            column: 73
          },
          end: {
            line: 90,
            column: 13
          }
        },
        line: 86
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 99,
            column: 49
          },
          end: {
            line: 99,
            column: 50
          }
        },
        loc: {
          start: {
            line: 99,
            column: 58
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 99
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 118,
            column: 46
          },
          end: {
            line: 118,
            column: 47
          }
        },
        loc: {
          start: {
            line: 118,
            column: 50
          },
          end: {
            line: 120,
            column: 9
          }
        },
        line: 118
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 127,
            column: 26
          },
          end: {
            line: 127,
            column: 27
          }
        },
        loc: {
          start: {
            line: 127,
            column: 30
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 127
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 128,
            column: 15
          },
          end: {
            line: 128,
            column: 16
          }
        },
        loc: {
          start: {
            line: 128,
            column: 19
          },
          end: {
            line: 132,
            column: 9
          }
        },
        line: 128
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 135,
            column: 50
          },
          end: {
            line: 135,
            column: 51
          }
        },
        loc: {
          start: {
            line: 135,
            column: 80
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 135
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 147,
            column: 48
          },
          end: {
            line: 147,
            column: 49
          }
        },
        loc: {
          start: {
            line: 147,
            column: 71
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 147
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 168,
            column: 41
          },
          end: {
            line: 168,
            column: 42
          }
        },
        loc: {
          start: {
            line: 168,
            column: 79
          },
          end: {
            line: 178,
            column: 37
          }
        },
        line: 168
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 203,
            column: 25
          },
          end: {
            line: 203,
            column: 26
          }
        },
        loc: {
          start: {
            line: 203,
            column: 29
          },
          end: {
            line: 203,
            column: 42
          }
        },
        line: 203
      },
      "18": {
        name: "useVirtualScroll",
        decl: {
          start: {
            line: 212,
            column: 9
          },
          end: {
            line: 212,
            column: 25
          }
        },
        loc: {
          start: {
            line: 212,
            column: 76
          },
          end: {
            line: 246,
            column: 1
          }
        },
        line: 212
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 214,
            column: 45
          },
          end: {
            line: 214,
            column: 46
          }
        },
        loc: {
          start: {
            line: 214,
            column: 49
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 214
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 228,
            column: 45
          },
          end: {
            line: 228,
            column: 46
          }
        },
        loc: {
          start: {
            line: 228,
            column: 49
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 228
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 230,
            column: 57
          },
          end: {
            line: 230,
            column: 58
          }
        },
        loc: {
          start: {
            line: 230,
            column: 73
          },
          end: {
            line: 234,
            column: 13
          }
        },
        line: 230
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 27,
            column: 45
          }
        }, {
          start: {
            line: 27,
            column: 48
          },
          end: {
            line: 27,
            column: 65
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 20
          }
        }, {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 27
          }
        }, {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 31,
            column: 45
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 20
          }
        }, {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 47
          }
        }, {
          start: {
            line: 34,
            column: 51
          },
          end: {
            line: 34,
            column: 76
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "7": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 31
          }
        }],
        line: 40
      },
      "8": {
        loc: {
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 53
          }
        }, {
          start: {
            line: 46,
            column: 57
          },
          end: {
            line: 46,
            column: 88
          }
        }],
        line: 46
      },
      "9": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "10": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 29
          }
        }, {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 48,
            column: 79
          }
        }],
        line: 48
      },
      "11": {
        loc: {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 49,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 49,
            column: 47
          },
          end: {
            line: 49,
            column: 88
          }
        }, {
          start: {
            line: 49,
            column: 91
          },
          end: {
            line: 49,
            column: 95
          }
        }],
        line: 49
      },
      "12": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 54,
            column: 13
          }
        }],
        line: 50
      },
      "13": {
        loc: {
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 50,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 50,
            column: 20
          }
        }, {
          start: {
            line: 50,
            column: 25
          },
          end: {
            line: 50,
            column: 33
          }
        }, {
          start: {
            line: 50,
            column: 37
          },
          end: {
            line: 50,
            column: 45
          }
        }],
        line: 50
      },
      "14": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "15": {
        loc: {
          start: {
            line: 63,
            column: 108
          },
          end: {
            line: 63,
            column: 120
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 119
          },
          end: {
            line: 63,
            column: 120
          }
        }],
        line: 63
      },
      "16": {
        loc: {
          start: {
            line: 63,
            column: 122
          },
          end: {
            line: 63,
            column: 136
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 134
          },
          end: {
            line: 63,
            column: 136
          }
        }],
        line: 63
      },
      "17": {
        loc: {
          start: {
            line: 63,
            column: 166
          },
          end: {
            line: 63,
            column: 183
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 178
          },
          end: {
            line: 63,
            column: 183
          }
        }],
        line: 63
      },
      "18": {
        loc: {
          start: {
            line: 63,
            column: 199
          },
          end: {
            line: 63,
            column: 224
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 221
          },
          end: {
            line: 63,
            column: 224
          }
        }],
        line: 63
      },
      "19": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "20": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "21": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "22": {
        loc: {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "23": {
        loc: {
          start: {
            line: 135,
            column: 58
          },
          end: {
            line: 135,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 135,
            column: 69
          },
          end: {
            line: 135,
            column: 77
          }
        }],
        line: 135
      },
      "24": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "25": {
        loc: {
          start: {
            line: 147,
            column: 49
          },
          end: {
            line: 147,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 147,
            column: 60
          },
          end: {
            line: 147,
            column: 68
          }
        }],
        line: 147
      },
      "26": {
        loc: {
          start: {
            line: 179,
            column: 24
          },
          end: {
            line: 198,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 24
          },
          end: {
            line: 179,
            column: 33
          }
        }, {
          start: {
            line: 179,
            column: 51
          },
          end: {
            line: 198,
            column: 26
          }
        }],
        line: 179
      },
      "27": {
        loc: {
          start: {
            line: 186,
            column: 38
          },
          end: {
            line: 197,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 38
          },
          end: {
            line: 186,
            column: 54
          }
        }, {
          start: {
            line: 186,
            column: 72
          },
          end: {
            line: 197,
            column: 30
          }
        }],
        line: 186
      },
      "28": {
        loc: {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 207,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 202,
            column: 39
          }
        }, {
          start: {
            line: 202,
            column: 57
          },
          end: {
            line: 207,
            column: 14
          }
        }],
        line: 202
      },
      "29": {
        loc: {
          start: {
            line: 212,
            column: 62
          },
          end: {
            line: 212,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 212,
            column: 73
          },
          end: {
            line: 212,
            column: 74
          }
        }],
        line: 212
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0],
      "24": [0, 0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/charlie.hyun/Repositories/picnic-web/components/common/VirtualScrollList.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { \n  useState, \n  useEffect, \n  useRef, \n  useCallback, \n  memo, \n  useMemo \n} from 'react';\n\ninterface VirtualScrollListProps<T> {\n  items: T[];\n  itemHeight: number;\n  containerHeight: number;\n  renderItem: (item: T, index: number) => React.ReactNode;\n  overscan?: number;\n  className?: string;\n  onScroll?: (scrollTop: number) => void;\n  loadingComponent?: React.ReactNode;\n  isLoading?: boolean;\n  onEndReached?: () => void;\n  endReachedThreshold?: number;\n}\n\nexport const VirtualScrollList = memo(<T,>({\n  items,\n  itemHeight,\n  containerHeight,\n  renderItem,\n  overscan = 5,\n  className = '',\n  onScroll,\n  loadingComponent,\n  isLoading = false,\n  onEndReached,\n  endReachedThreshold = 0.8\n}: VirtualScrollListProps<T>) => {\n  const [scrollTop, setScrollTop] = useState(0);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const isScrollingRef = useRef(false);\n  const scrollTimeoutRef = useRef<NodeJS.Timeout>();\n\n  // Calculate visible range\n  const visibleRange = useMemo(() => {\n    const startIndex = Math.max(0, Math.floor(scrollTop / itemHeight) - overscan);\n    const endIndex = Math.min(\n      items.length - 1,\n      Math.floor((scrollTop + containerHeight) / itemHeight) + overscan\n    );\n    return { startIndex, endIndex };\n  }, [scrollTop, itemHeight, containerHeight, overscan, items.length]);\n\n  // Get visible items\n  const visibleItems = useMemo(() => {\n    const { startIndex, endIndex } = visibleRange;\n    return items.slice(startIndex, endIndex + 1).map((item, index) => ({\n      item,\n      index: startIndex + index,\n      top: (startIndex + index) * itemHeight\n    }));\n  }, [items, visibleRange, itemHeight]);\n\n  // Total height calculation\n  const totalHeight = items.length * itemHeight;\n\n  // Scroll handler with throttling\n  const handleScroll = useCallback((event: React.UIEvent<HTMLDivElement>) => {\n    const newScrollTop = event.currentTarget.scrollTop;\n    setScrollTop(newScrollTop);\n    onScroll?.(newScrollTop);\n\n    // Check if reached end\n    if (onEndReached) {\n      const { scrollHeight, clientHeight } = event.currentTarget;\n      const scrollPercentage = (newScrollTop + clientHeight) / scrollHeight;\n      \n      if (scrollPercentage >= endReachedThreshold) {\n        onEndReached();\n      }\n    }\n\n    // Set scrolling state\n    isScrollingRef.current = true;\n    \n    // Clear existing timeout\n    if (scrollTimeoutRef.current) {\n      clearTimeout(scrollTimeoutRef.current);\n    }\n    \n    // Set timeout to detect scroll end\n    scrollTimeoutRef.current = setTimeout(() => {\n      isScrollingRef.current = false;\n    }, 150);\n  }, [onScroll, onEndReached, endReachedThreshold]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (scrollTimeoutRef.current) {\n        clearTimeout(scrollTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Scroll to specific index\n  const scrollToIndex = useCallback((index: number, behavior: ScrollBehavior = 'smooth') => {\n    if (containerRef.current) {\n      const scrollTop = index * itemHeight;\n      containerRef.current.scrollTo({\n        top: scrollTop,\n        behavior\n      });\n    }\n  }, [itemHeight]);\n\n  // Scroll to top\n  const scrollToTop = useCallback((behavior: ScrollBehavior = 'smooth') => {\n    scrollToIndex(0, behavior);\n  }, [scrollToIndex]);\n\n  return (\n    <div className={`relative ${className}`}>\n      <div\n        ref={containerRef}\n        className=\"overflow-auto\"\n        style={{ height: containerHeight }}\n        onScroll={handleScroll}\n      >\n        {/* Virtual container with total height */}\n        <div style={{ height: totalHeight, position: 'relative' }}>\n          {/* Visible items */}\n          {visibleItems.map(({ item, index, top }) => (\n            <div\n              key={index}\n              style={{\n                position: 'absolute',\n                top,\n                height: itemHeight,\n                width: '100%',\n                transform: `translateY(0)`, // Force GPU acceleration\n                willChange: 'transform' // Optimize for animations\n              }}\n            >\n              {renderItem(item, index)}\n            </div>\n          ))}\n          \n          {/* Loading indicator at the bottom */}\n          {isLoading && (\n            <div\n              style={{\n                position: 'absolute',\n                top: totalHeight,\n                width: '100%',\n                height: 60\n              }}\n            >\n              {loadingComponent || (\n                <div className=\"flex justify-center items-center h-full\">\n                  <div className=\"w-6 h-6 border-2 border-primary-200 border-t-primary-600 rounded-full animate-spin\"></div>\n                  <span className=\"ml-2 text-gray-600 text-sm\">Loading...</span>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Scroll to top button */}\n      {scrollTop > containerHeight && (\n        <button\n          onClick={() => scrollToTop()}\n          className=\"fixed bottom-4 right-4 w-12 h-12 bg-primary-600 text-white rounded-full shadow-lg hover:bg-primary-700 transition-colors duration-200 flex items-center justify-center z-10\"\n          aria-label=\"Scroll to top\"\n        >\n          \u2191\n        </button>\n      )}\n    </div>\n  );\n});\n\nVirtualScrollList.displayName = 'VirtualScrollList';\n\n// Hook for Virtual Scrolling\nexport function useVirtualScroll<T>(\n  items: T[],\n  itemHeight: number,\n  containerHeight: number,\n  overscan: number = 5\n) {\n  const [scrollTop, setScrollTop] = useState(0);\n\n  const visibleRange = useMemo(() => {\n    const startIndex = Math.max(0, Math.floor(scrollTop / itemHeight) - overscan);\n    const endIndex = Math.min(\n      items.length - 1,\n      Math.floor((scrollTop + containerHeight) / itemHeight) + overscan\n    );\n    return { startIndex, endIndex };\n  }, [scrollTop, itemHeight, containerHeight, overscan, items.length]);\n\n  const visibleItems = useMemo(() => {\n    const { startIndex, endIndex } = visibleRange;\n    return items.slice(startIndex, endIndex + 1).map((item, index) => ({\n      item,\n      index: startIndex + index,\n      top: (startIndex + index) * itemHeight\n    }));\n  }, [items, visibleRange, itemHeight]);\n\n  return {\n    visibleItems,\n    totalHeight: items.length * itemHeight,\n    setScrollTop,\n    scrollTop\n  };\n} "],
      names: ["VirtualScrollList", "useVirtualScroll", "memo", "items", "itemHeight", "containerHeight", "renderItem", "overscan", "className", "onScroll", "loadingComponent", "isLoading", "onEndReached", "endReachedThreshold", "scrollTop", "setScrollTop", "useState", "containerRef", "useRef", "isScrollingRef", "scrollTimeoutRef", "visibleRange", "useMemo", "startIndex", "Math", "max", "floor", "endIndex", "min", "length", "visibleItems", "slice", "map", "item", "index", "top", "totalHeight", "handleScroll", "useCallback", "event", "newScrollTop", "currentTarget", "scrollHeight", "clientHeight", "scrollPercentage", "current", "clearTimeout", "setTimeout", "useEffect", "scrollToIndex", "behavior", "scrollTo", "scrollToTop", "div", "ref", "style", "height", "position", "width", "transform", "willChange", "span", "button", "onClick", "aria-label", "displayName"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c694d115ad3e09e6519774262a082c289b2c0bcd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_eacqibk0r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_eacqibk0r();
cov_eacqibk0r().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_eacqibk0r().f[0]++;
  cov_eacqibk0r().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_eacqibk0r().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_eacqibk0r().s[3]++;
_export(exports, {
  VirtualScrollList: function () {
    /* istanbul ignore next */
    cov_eacqibk0r().f[1]++;
    cov_eacqibk0r().s[4]++;
    return VirtualScrollList;
  },
  useVirtualScroll: function () {
    /* istanbul ignore next */
    cov_eacqibk0r().f[2]++;
    cov_eacqibk0r().s[5]++;
    return useVirtualScroll;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_eacqibk0r().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_eacqibk0r().s[7]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_eacqibk0r().f[3]++;
  cov_eacqibk0r().s[8]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_eacqibk0r().b[0][0]++;
    cov_eacqibk0r().s[9]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_eacqibk0r().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[10]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[11]++, new WeakMap());
  /* istanbul ignore next */
  cov_eacqibk0r().s[12]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_eacqibk0r().f[4]++;
    cov_eacqibk0r().s[13]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_eacqibk0r().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_eacqibk0r().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_eacqibk0r().f[5]++;
  cov_eacqibk0r().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_eacqibk0r().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_eacqibk0r().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_eacqibk0r().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_eacqibk0r().b[2][0]++;
    cov_eacqibk0r().s[15]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_eacqibk0r().b[2][1]++;
  }
  cov_eacqibk0r().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_eacqibk0r().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_eacqibk0r().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_eacqibk0r().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_eacqibk0r().b[4][0]++;
    cov_eacqibk0r().s[17]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_eacqibk0r().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[18]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_eacqibk0r().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_eacqibk0r().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_eacqibk0r().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_eacqibk0r().b[6][0]++;
    cov_eacqibk0r().s[20]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_eacqibk0r().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[21]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[22]++,
  /* istanbul ignore next */
  (cov_eacqibk0r().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_eacqibk0r().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_eacqibk0r().s[23]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_eacqibk0r().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_eacqibk0r().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_eacqibk0r().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_eacqibk0r().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_eacqibk0r().s[25]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_eacqibk0r().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_eacqibk0r().b[11][1]++, null));
      /* istanbul ignore next */
      cov_eacqibk0r().s[26]++;
      if (
      /* istanbul ignore next */
      (cov_eacqibk0r().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_eacqibk0r().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_eacqibk0r().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_eacqibk0r().b[12][0]++;
        cov_eacqibk0r().s[27]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_eacqibk0r().b[12][1]++;
        cov_eacqibk0r().s[28]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_eacqibk0r().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_eacqibk0r().s[29]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_eacqibk0r().s[30]++;
  if (cache) {
    /* istanbul ignore next */
    cov_eacqibk0r().b[14][0]++;
    cov_eacqibk0r().s[31]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_eacqibk0r().b[14][1]++;
  }
  cov_eacqibk0r().s[32]++;
  return newObj;
}
const VirtualScrollList =
/* istanbul ignore next */
(/*#__PURE__*/cov_eacqibk0r().s[33]++, (0, _react.memo)(({
  items,
  itemHeight,
  containerHeight,
  renderItem,
  overscan =
  /* istanbul ignore next */
  (cov_eacqibk0r().b[15][0]++, 5),
  className =
  /* istanbul ignore next */
  (cov_eacqibk0r().b[16][0]++, ''),
  onScroll,
  loadingComponent,
  isLoading =
  /* istanbul ignore next */
  (cov_eacqibk0r().b[17][0]++, false),
  onEndReached,
  endReachedThreshold =
  /* istanbul ignore next */
  (cov_eacqibk0r().b[18][0]++, 0.8)
}) => {
  /* istanbul ignore next */
  cov_eacqibk0r().f[6]++;
  const [scrollTop, setScrollTop] =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[34]++, (0, _react.useState)(0));
  const containerRef =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[35]++, (0, _react.useRef)(null));
  const isScrollingRef =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[36]++, (0, _react.useRef)(false));
  const scrollTimeoutRef =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[37]++, (0, _react.useRef)());
  // Calculate visible range
  const visibleRange =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[38]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_eacqibk0r().f[7]++;
    const startIndex =
    /* istanbul ignore next */
    (cov_eacqibk0r().s[39]++, Math.max(0, Math.floor(scrollTop / itemHeight) - overscan));
    const endIndex =
    /* istanbul ignore next */
    (cov_eacqibk0r().s[40]++, Math.min(items.length - 1, Math.floor((scrollTop + containerHeight) / itemHeight) + overscan));
    /* istanbul ignore next */
    cov_eacqibk0r().s[41]++;
    return {
      startIndex,
      endIndex
    };
  }, [scrollTop, itemHeight, containerHeight, overscan, items.length]));
  // Get visible items
  const visibleItems =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[42]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_eacqibk0r().f[8]++;
    const {
      startIndex,
      endIndex
    } =
    /* istanbul ignore next */
    (cov_eacqibk0r().s[43]++, visibleRange);
    /* istanbul ignore next */
    cov_eacqibk0r().s[44]++;
    return items.slice(startIndex, endIndex + 1).map((item, index) => {
      /* istanbul ignore next */
      cov_eacqibk0r().f[9]++;
      cov_eacqibk0r().s[45]++;
      return {
        item,
        index: startIndex + index,
        top: (startIndex + index) * itemHeight
      };
    });
  }, [items, visibleRange, itemHeight]));
  // Total height calculation
  const totalHeight =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[46]++, items.length * itemHeight);
  // Scroll handler with throttling
  const handleScroll =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[47]++, (0, _react.useCallback)(event => {
    /* istanbul ignore next */
    cov_eacqibk0r().f[10]++;
    const newScrollTop =
    /* istanbul ignore next */
    (cov_eacqibk0r().s[48]++, event.currentTarget.scrollTop);
    /* istanbul ignore next */
    cov_eacqibk0r().s[49]++;
    setScrollTop(newScrollTop);
    /* istanbul ignore next */
    cov_eacqibk0r().s[50]++;
    onScroll?.(newScrollTop);
    // Check if reached end
    /* istanbul ignore next */
    cov_eacqibk0r().s[51]++;
    if (onEndReached) {
      /* istanbul ignore next */
      cov_eacqibk0r().b[19][0]++;
      const {
        scrollHeight,
        clientHeight
      } =
      /* istanbul ignore next */
      (cov_eacqibk0r().s[52]++, event.currentTarget);
      const scrollPercentage =
      /* istanbul ignore next */
      (cov_eacqibk0r().s[53]++, (newScrollTop + clientHeight) / scrollHeight);
      /* istanbul ignore next */
      cov_eacqibk0r().s[54]++;
      if (scrollPercentage >= endReachedThreshold) {
        /* istanbul ignore next */
        cov_eacqibk0r().b[20][0]++;
        cov_eacqibk0r().s[55]++;
        onEndReached();
      } else
      /* istanbul ignore next */
      {
        cov_eacqibk0r().b[20][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_eacqibk0r().b[19][1]++;
    }
    // Set scrolling state
    cov_eacqibk0r().s[56]++;
    isScrollingRef.current = true;
    // Clear existing timeout
    /* istanbul ignore next */
    cov_eacqibk0r().s[57]++;
    if (scrollTimeoutRef.current) {
      /* istanbul ignore next */
      cov_eacqibk0r().b[21][0]++;
      cov_eacqibk0r().s[58]++;
      clearTimeout(scrollTimeoutRef.current);
    } else
    /* istanbul ignore next */
    {
      cov_eacqibk0r().b[21][1]++;
    }
    // Set timeout to detect scroll end
    cov_eacqibk0r().s[59]++;
    scrollTimeoutRef.current = setTimeout(() => {
      /* istanbul ignore next */
      cov_eacqibk0r().f[11]++;
      cov_eacqibk0r().s[60]++;
      isScrollingRef.current = false;
    }, 150);
  }, [onScroll, onEndReached, endReachedThreshold]));
  // Cleanup on unmount
  /* istanbul ignore next */
  cov_eacqibk0r().s[61]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_eacqibk0r().f[12]++;
    cov_eacqibk0r().s[62]++;
    return () => {
      /* istanbul ignore next */
      cov_eacqibk0r().f[13]++;
      cov_eacqibk0r().s[63]++;
      if (scrollTimeoutRef.current) {
        /* istanbul ignore next */
        cov_eacqibk0r().b[22][0]++;
        cov_eacqibk0r().s[64]++;
        clearTimeout(scrollTimeoutRef.current);
      } else
      /* istanbul ignore next */
      {
        cov_eacqibk0r().b[22][1]++;
      }
    };
  }, []);
  // Scroll to specific index
  const scrollToIndex =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[65]++, (0, _react.useCallback)((index, behavior =
  /* istanbul ignore next */
  (cov_eacqibk0r().b[23][0]++, 'smooth')) => {
    /* istanbul ignore next */
    cov_eacqibk0r().f[14]++;
    cov_eacqibk0r().s[66]++;
    if (containerRef.current) {
      /* istanbul ignore next */
      cov_eacqibk0r().b[24][0]++;
      const scrollTop =
      /* istanbul ignore next */
      (cov_eacqibk0r().s[67]++, index * itemHeight);
      /* istanbul ignore next */
      cov_eacqibk0r().s[68]++;
      containerRef.current.scrollTo({
        top: scrollTop,
        behavior
      });
    } else
    /* istanbul ignore next */
    {
      cov_eacqibk0r().b[24][1]++;
    }
  }, [itemHeight]));
  // Scroll to top
  const scrollToTop =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[69]++, (0, _react.useCallback)((behavior =
  /* istanbul ignore next */
  (cov_eacqibk0r().b[25][0]++, 'smooth')) => {
    /* istanbul ignore next */
    cov_eacqibk0r().f[15]++;
    cov_eacqibk0r().s[70]++;
    scrollToIndex(0, behavior);
  }, [scrollToIndex]));
  /* istanbul ignore next */
  cov_eacqibk0r().s[71]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: `relative ${className}`,
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      ref: containerRef,
      className: "overflow-auto",
      style: {
        height: containerHeight
      },
      onScroll: handleScroll,
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        style: {
          height: totalHeight,
          position: 'relative'
        },
        children: [visibleItems.map(({
          item,
          index,
          top
        }) => {
          /* istanbul ignore next */
          cov_eacqibk0r().f[16]++;
          cov_eacqibk0r().s[72]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            style: {
              position: 'absolute',
              top,
              height: itemHeight,
              width: '100%',
              transform: `translateY(0)`,
              willChange: 'transform' // Optimize for animations
            },
            children: renderItem(item, index)
          }, index);
        }),
        /* istanbul ignore next */
        (cov_eacqibk0r().b[26][0]++, isLoading) &&
        /* istanbul ignore next */
        (cov_eacqibk0r().b[26][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          style: {
            position: 'absolute',
            top: totalHeight,
            width: '100%',
            height: 60
          },
          children:
          /* istanbul ignore next */
          (cov_eacqibk0r().b[27][0]++, loadingComponent) ||
          /* istanbul ignore next */
          (cov_eacqibk0r().b[27][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex justify-center items-center h-full",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "w-6 h-6 border-2 border-primary-200 border-t-primary-600 rounded-full animate-spin"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "ml-2 text-gray-600 text-sm",
              children: "Loading..."
            })]
          }))
        }))]
      })
    }),
    /* istanbul ignore next */
    (cov_eacqibk0r().b[28][0]++, scrollTop > containerHeight) &&
    /* istanbul ignore next */
    (cov_eacqibk0r().b[28][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
      onClick: () => {
        /* istanbul ignore next */
        cov_eacqibk0r().f[17]++;
        cov_eacqibk0r().s[73]++;
        return scrollToTop();
      },
      className: "fixed bottom-4 right-4 w-12 h-12 bg-primary-600 text-white rounded-full shadow-lg hover:bg-primary-700 transition-colors duration-200 flex items-center justify-center z-10",
      "aria-label": "Scroll to top",
      children: "↑"
    }))]
  });
}));
/* istanbul ignore next */
cov_eacqibk0r().s[74]++;
VirtualScrollList.displayName = 'VirtualScrollList';
function useVirtualScroll(items, itemHeight, containerHeight, overscan =
/* istanbul ignore next */
(cov_eacqibk0r().b[29][0]++, 5)) {
  /* istanbul ignore next */
  cov_eacqibk0r().f[18]++;
  const [scrollTop, setScrollTop] =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[75]++, (0, _react.useState)(0));
  const visibleRange =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[76]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_eacqibk0r().f[19]++;
    const startIndex =
    /* istanbul ignore next */
    (cov_eacqibk0r().s[77]++, Math.max(0, Math.floor(scrollTop / itemHeight) - overscan));
    const endIndex =
    /* istanbul ignore next */
    (cov_eacqibk0r().s[78]++, Math.min(items.length - 1, Math.floor((scrollTop + containerHeight) / itemHeight) + overscan));
    /* istanbul ignore next */
    cov_eacqibk0r().s[79]++;
    return {
      startIndex,
      endIndex
    };
  }, [scrollTop, itemHeight, containerHeight, overscan, items.length]));
  const visibleItems =
  /* istanbul ignore next */
  (cov_eacqibk0r().s[80]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_eacqibk0r().f[20]++;
    const {
      startIndex,
      endIndex
    } =
    /* istanbul ignore next */
    (cov_eacqibk0r().s[81]++, visibleRange);
    /* istanbul ignore next */
    cov_eacqibk0r().s[82]++;
    return items.slice(startIndex, endIndex + 1).map((item, index) => {
      /* istanbul ignore next */
      cov_eacqibk0r().f[21]++;
      cov_eacqibk0r().s[83]++;
      return {
        item,
        index: startIndex + index,
        top: (startIndex + index) * itemHeight
      };
    });
  }, [items, visibleRange, itemHeight]));
  /* istanbul ignore next */
  cov_eacqibk0r().s[84]++;
  return {
    visibleItems,
    totalHeight: items.length * itemHeight,
    setScrollTop,
    scrollTop
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,