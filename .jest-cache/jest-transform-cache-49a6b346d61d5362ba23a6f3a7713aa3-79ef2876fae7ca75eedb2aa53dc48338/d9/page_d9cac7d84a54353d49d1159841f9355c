87c7f39ac7442890a03f5bc7ec559eec
"use strict";

/* istanbul ignore next */
function cov_10id2q6okp() {
  var path = "/Users/charlie.hyun/Repositories/picnic-web/app/[lang]/(mypage)/notice/[id]/page.tsx";
  var hash = "9aad61d9cb42f66a895bde56409e6f96f1e953e6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/charlie.hyun/Repositories/picnic-web/app/[lang]/(mypage)/notice/[id]/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "5": {
        start: {
          line: 13,
          column: 42
        },
        end: {
          line: 13,
          column: 99
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 6
        }
      },
      "7": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "8": {
        start: {
          line: 20,
          column: 39
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "9": {
        start: {
          line: 21,
          column: 28
        },
        end: {
          line: 21,
          column: 41
        }
      },
      "10": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 22,
          column: 40
        }
      },
      "11": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 20
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "14": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 19
        }
      },
      "15": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "16": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "17": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 53
        }
      },
      "18": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "19": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 30
        }
      },
      "20": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "21": {
        start: {
          line: 43,
          column: 32
        },
        end: {
          line: 43,
          column: 88
        }
      },
      "22": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "23": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "24": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 95
        }
      },
      "25": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "26": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 57
        }
      },
      "27": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 39
        }
      },
      "28": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 25
        }
      },
      "29": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "30": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 31
        }
      },
      "31": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 18
        }
      },
      "32": {
        start: {
          line: 60,
          column: 25
        },
        end: {
          line: 84,
          column: 1
        }
      },
      "33": {
        start: {
          line: 61,
          column: 21
        },
        end: {
          line: 61,
          column: 33
        }
      },
      "34": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 63,
          column: 27
        }
      },
      "35": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "36": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 177
        }
      },
      "37": {
        start: {
          line: 65,
          column: 117
        },
        end: {
          line: 65,
          column: 154
        }
      },
      "38": {
        start: {
          line: 65,
          column: 166
        },
        end: {
          line: 65,
          column: 175
        }
      },
      "39": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 88
        }
      },
      "40": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 172
        }
      },
      "41": {
        start: {
          line: 68,
          column: 112
        },
        end: {
          line: 68,
          column: 149
        }
      },
      "42": {
        start: {
          line: 68,
          column: 161
        },
        end: {
          line: 68,
          column: 170
        }
      },
      "43": {
        start: {
          line: 71,
          column: 14
        },
        end: {
          line: 71,
          column: 47
        }
      },
      "44": {
        start: {
          line: 71,
          column: 21
        },
        end: {
          line: 71,
          column: 47
        }
      },
      "45": {
        start: {
          line: 73,
          column: 25
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "46": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 83,
          column: 7
        }
      },
      "47": {
        start: {
          line: 85,
          column: 17
        },
        end: {
          line: 85,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 33
          }
        },
        loc: {
          start: {
            line: 19,
            column: 47
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 23,
            column: 40
          }
        },
        loc: {
          start: {
            line: 23,
            column: 61
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 34
          }
        },
        loc: {
          start: {
            line: 27,
            column: 53
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 60,
            column: 25
          },
          end: {
            line: 60,
            column: 26
          }
        },
        loc: {
          start: {
            line: 60,
            column: 45
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 98
          },
          end: {
            line: 65,
            column: 99
          }
        },
        loc: {
          start: {
            line: 65,
            column: 117
          },
          end: {
            line: 65,
            column: 154
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 65,
            column: 161
          },
          end: {
            line: 65,
            column: 162
          }
        },
        loc: {
          start: {
            line: 65,
            column: 166
          },
          end: {
            line: 65,
            column: 175
          }
        },
        line: 65
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 68,
            column: 93
          },
          end: {
            line: 68,
            column: 94
          }
        },
        loc: {
          start: {
            line: 68,
            column: 112
          },
          end: {
            line: 68,
            column: 149
          }
        },
        line: 68
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 68,
            column: 156
          },
          end: {
            line: 68,
            column: 157
          }
        },
        loc: {
          start: {
            line: 68,
            column: 161
          },
          end: {
            line: 68,
            column: 170
          }
        },
        line: 68
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 71,
            column: 14
          },
          end: {
            line: 71,
            column: 15
          }
        },
        loc: {
          start: {
            line: 71,
            column: 21
          },
          end: {
            line: 71,
            column: 47
          }
        },
        line: 71
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 15,
            column: 38
          }
        }, {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 5
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 14
          }
        }, {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 32
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 29
          },
          end: {
            line: 24,
            column: 45
          }
        }, {
          start: {
            line: 24,
            column: 48
          },
          end: {
            line: 24,
            column: 65
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 20
          }
        }, {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 27
          }
        }, {
          start: {
            line: 28,
            column: 31
          },
          end: {
            line: 28,
            column: 45
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 20
          }
        }, {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 47
          }
        }, {
          start: {
            line: 31,
            column: 51
          },
          end: {
            line: 31,
            column: 76
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 13
          }
        }, {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 31
          }
        }],
        line: 37
      },
      "10": {
        loc: {
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 43,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 43,
            column: 53
          }
        }, {
          start: {
            line: 43,
            column: 57
          },
          end: {
            line: 43,
            column: 88
          }
        }],
        line: 43
      },
      "11": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "12": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 29
          }
        }, {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 45,
            column: 79
          }
        }],
        line: 45
      },
      "13": {
        loc: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 47
          },
          end: {
            line: 46,
            column: 88
          }
        }, {
          start: {
            line: 46,
            column: 91
          },
          end: {
            line: 46,
            column: 95
          }
        }],
        line: 46
      },
      "14": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: 49,
            column: 19
          },
          end: {
            line: 51,
            column: 13
          }
        }],
        line: 47
      },
      "15": {
        loc: {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 20
          }
        }, {
          start: {
            line: 47,
            column: 25
          },
          end: {
            line: 47,
            column: 33
          }
        }, {
          start: {
            line: 47,
            column: 37
          },
          end: {
            line: 47,
            column: 45
          }
        }],
        line: 47
      },
      "16": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "17": {
        loc: {
          start: {
            line: 71,
            column: 21
          },
          end: {
            line: 71,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 21
          },
          end: {
            line: 71,
            column: 40
          }
        }, {
          start: {
            line: 71,
            column: 44
          },
          end: {
            line: 71,
            column: 47
          }
        }],
        line: 71
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/charlie.hyun/Repositories/picnic-web/app/[lang]/(mypage)/notice/[id]/page.tsx"],
      sourcesContent: ["import React from 'react';\nimport NoticeDetailClient from './NoticeDetailClient';\n\ninterface Props {\n  params: Promise<{ lang: string; id: string }>;\n}\n\nconst NoticeDetailPage = async ({ params }: Props) => {\n  const { lang } = await params;\n  \n  // Load translations server-side\n  let localeMessages: Record<string, any> = {};\n  try {\n    localeMessages = await import(`../../../../../public/locales/${lang}.json`).then(m => m.default);\n  } catch (error) {\n    console.warn(`Translation file for ${lang} not found, falling back to English`);\n    localeMessages = await import(`../../../../../public/locales/en.json`).then(m => m.default);\n  }\n\n  // Helper function to extract translations\n  const t = (key: string) => localeMessages[key] || key;\n\n  // Prepare all necessary translations for the notice detail page\n  const translations = {\n    notice_invalid_id: t('notice_invalid_id'),\n    notice_loading_error: t('notice_loading_error'),\n    notice_not_found: t('notice_not_found'),\n    notice_back_to_list: t('notice_back_to_list'),\n    notice_pinned: t('notice_pinned'),\n  };\n\n  return <NoticeDetailClient lang={lang} translations={translations} />;\n};\n\nexport default NoticeDetailPage;\n"],
      names: ["NoticeDetailPage", "params", "lang", "localeMessages", "then", "m", "default", "error", "console", "warn", "t", "key", "translations", "notice_invalid_id", "notice_loading_error", "notice_not_found", "notice_back_to_list", "notice_pinned", "NoticeDetailClient"],
      mappings: ";;;;+BAkCA;;;eAAA;;;;8DAlCkB;2EACa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM/B,MAAMA,mBAAmB,OAAO,EAAEC,MAAM,EAAS;IAC/C,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMD;IAEvB,gCAAgC;IAChC,IAAIE,iBAAsC,CAAC;IAC3C,IAAI;QACFA,iBAAiB,MAAM,gBAAO,CAAC,8BAA8B,EAAED,KAAK,KAAK,CAAC,oDAAnD,aAAqDE,IAAI,CAACC,CAAAA,IAAKA,EAAEC,OAAO;IACjG,EAAE,OAAOC,OAAO;QACdC,QAAQC,IAAI,CAAC,CAAC,qBAAqB,EAAEP,KAAK,mCAAmC,CAAC;QAC9EC,iBAAiB,MAAM,gBAAO,CAAC,qCAAqC,CAAC,oDAA9C,aAAgDC,IAAI,CAACC,CAAAA,IAAKA,EAAEC,OAAO;IAC5F;IAEA,0CAA0C;IAC1C,MAAMI,IAAI,CAACC,MAAgBR,cAAc,CAACQ,IAAI,IAAIA;IAElD,gEAAgE;IAChE,MAAMC,eAAe;QACnBC,mBAAmBH,EAAE;QACrBI,sBAAsBJ,EAAE;QACxBK,kBAAkBL,EAAE;QACpBM,qBAAqBN,EAAE;QACvBO,eAAeP,EAAE;IACnB;IAEA,qBAAO,qBAACQ,2BAAkB;QAAChB,MAAMA;QAAMU,cAAcA;;AACvD;MAEA,WAAeZ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9aad61d9cb42f66a895bde56409e6f96f1e953e6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10id2q6okp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10id2q6okp();
cov_10id2q6okp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_10id2q6okp().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_10id2q6okp().f[0]++;
    cov_10id2q6okp().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_10id2q6okp().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_10id2q6okp().s[4]++, _interop_require_default(require("react")));
const _NoticeDetailClient =
/* istanbul ignore next */
(/*#__PURE__*/cov_10id2q6okp().s[5]++, _interop_require_default(require("./NoticeDetailClient")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_10id2q6okp().f[1]++;
  cov_10id2q6okp().s[6]++;
  return /* istanbul ignore next */(cov_10id2q6okp().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_10id2q6okp().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_10id2q6okp().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_10id2q6okp().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_10id2q6okp().f[2]++;
  cov_10id2q6okp().s[7]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_10id2q6okp().b[2][0]++;
    cov_10id2q6okp().s[8]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_10id2q6okp().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_10id2q6okp().s[9]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_10id2q6okp().s[10]++, new WeakMap());
  /* istanbul ignore next */
  cov_10id2q6okp().s[11]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_10id2q6okp().f[3]++;
    cov_10id2q6okp().s[12]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_10id2q6okp().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_10id2q6okp().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_10id2q6okp().f[4]++;
  cov_10id2q6okp().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_10id2q6okp().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_10id2q6okp().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_10id2q6okp().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_10id2q6okp().b[4][0]++;
    cov_10id2q6okp().s[14]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_10id2q6okp().b[4][1]++;
  }
  cov_10id2q6okp().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_10id2q6okp().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_10id2q6okp().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_10id2q6okp().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_10id2q6okp().b[6][0]++;
    cov_10id2q6okp().s[16]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_10id2q6okp().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_10id2q6okp().s[17]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_10id2q6okp().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_10id2q6okp().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_10id2q6okp().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_10id2q6okp().b[8][0]++;
    cov_10id2q6okp().s[19]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_10id2q6okp().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_10id2q6okp().s[20]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_10id2q6okp().s[21]++,
  /* istanbul ignore next */
  (cov_10id2q6okp().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_10id2q6okp().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_10id2q6okp().s[22]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_10id2q6okp().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_10id2q6okp().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_10id2q6okp().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_10id2q6okp().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_10id2q6okp().s[24]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_10id2q6okp().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_10id2q6okp().b[13][1]++, null));
      /* istanbul ignore next */
      cov_10id2q6okp().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_10id2q6okp().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_10id2q6okp().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_10id2q6okp().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_10id2q6okp().b[14][0]++;
        cov_10id2q6okp().s[26]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_10id2q6okp().b[14][1]++;
        cov_10id2q6okp().s[27]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_10id2q6okp().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_10id2q6okp().s[28]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_10id2q6okp().s[29]++;
  if (cache) {
    /* istanbul ignore next */
    cov_10id2q6okp().b[16][0]++;
    cov_10id2q6okp().s[30]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_10id2q6okp().b[16][1]++;
  }
  cov_10id2q6okp().s[31]++;
  return newObj;
}
/* istanbul ignore next */
cov_10id2q6okp().s[32]++;
const NoticeDetailPage = async ({
  params
}) => {
  /* istanbul ignore next */
  cov_10id2q6okp().f[5]++;
  const {
    lang
  } =
  /* istanbul ignore next */
  (cov_10id2q6okp().s[33]++, await params);
  // Load translations server-side
  let localeMessages =
  /* istanbul ignore next */
  (cov_10id2q6okp().s[34]++, {});
  /* istanbul ignore next */
  cov_10id2q6okp().s[35]++;
  try {
    /* istanbul ignore next */
    cov_10id2q6okp().s[36]++;
    localeMessages = await Promise.resolve(`../../../../../public/locales/${lang}.json`).then(p => {
      /* istanbul ignore next */
      cov_10id2q6okp().f[6]++;
      cov_10id2q6okp().s[37]++;
      return /*#__PURE__*/_interop_require_wildcard(require(p));
    }).then(m => {
      /* istanbul ignore next */
      cov_10id2q6okp().f[7]++;
      cov_10id2q6okp().s[38]++;
      return m.default;
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_10id2q6okp().s[39]++;
    console.warn(`Translation file for ${lang} not found, falling back to English`);
    /* istanbul ignore next */
    cov_10id2q6okp().s[40]++;
    localeMessages = await Promise.resolve(`../../../../../public/locales/en.json`).then(p => {
      /* istanbul ignore next */
      cov_10id2q6okp().f[8]++;
      cov_10id2q6okp().s[41]++;
      return /*#__PURE__*/_interop_require_wildcard(require(p));
    }).then(m => {
      /* istanbul ignore next */
      cov_10id2q6okp().f[9]++;
      cov_10id2q6okp().s[42]++;
      return m.default;
    });
  }
  // Helper function to extract translations
  /* istanbul ignore next */
  cov_10id2q6okp().s[43]++;
  const t = key => {
    /* istanbul ignore next */
    cov_10id2q6okp().f[10]++;
    cov_10id2q6okp().s[44]++;
    return /* istanbul ignore next */(cov_10id2q6okp().b[17][0]++, localeMessages[key]) ||
    /* istanbul ignore next */
    (cov_10id2q6okp().b[17][1]++, key);
  };
  // Prepare all necessary translations for the notice detail page
  const translations =
  /* istanbul ignore next */
  (cov_10id2q6okp().s[45]++, {
    notice_invalid_id: t('notice_invalid_id'),
    notice_loading_error: t('notice_loading_error'),
    notice_not_found: t('notice_not_found'),
    notice_back_to_list: t('notice_back_to_list'),
    notice_pinned: t('notice_pinned')
  });
  /* istanbul ignore next */
  cov_10id2q6okp().s[46]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_NoticeDetailClient.default, {
    lang: lang,
    translations: translations
  });
};
const _default =
/* istanbul ignore next */
(cov_10id2q6okp().s[47]++, NoticeDetailPage);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsIk5vdGljZURldGFpbFBhZ2UiLCJwYXJhbXMiLCJjb3ZfMTBpZDJxNm9rcCIsImYiLCJsYW5nIiwicyIsImxvY2FsZU1lc3NhZ2VzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJ0aGVuIiwicCIsIl9pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQiLCJyZXF1aXJlIiwibSIsImRlZmF1bHQiLCJlcnJvciIsImNvbnNvbGUiLCJ3YXJuIiwidCIsImtleSIsImIiLCJ0cmFuc2xhdGlvbnMiLCJub3RpY2VfaW52YWxpZF9pZCIsIm5vdGljZV9sb2FkaW5nX2Vycm9yIiwibm90aWNlX25vdF9mb3VuZCIsIm5vdGljZV9iYWNrX3RvX2xpc3QiLCJub3RpY2VfcGlubmVkIiwiX2pzeHJ1bnRpbWUiLCJqc3giLCJfTm90aWNlRGV0YWlsQ2xpZW50Il0sInNvdXJjZXMiOlsiL1VzZXJzL2NoYXJsaWUuaHl1bi9SZXBvc2l0b3JpZXMvcGljbmljLXdlYi9hcHAvW2xhbmddLyhteXBhZ2UpL25vdGljZS9baWRdL3BhZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTm90aWNlRGV0YWlsQ2xpZW50IGZyb20gJy4vTm90aWNlRGV0YWlsQ2xpZW50JztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgcGFyYW1zOiBQcm9taXNlPHsgbGFuZzogc3RyaW5nOyBpZDogc3RyaW5nIH0+O1xufVxuXG5jb25zdCBOb3RpY2VEZXRhaWxQYWdlID0gYXN5bmMgKHsgcGFyYW1zIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IHsgbGFuZyB9ID0gYXdhaXQgcGFyYW1zO1xuICBcbiAgLy8gTG9hZCB0cmFuc2xhdGlvbnMgc2VydmVyLXNpZGVcbiAgbGV0IGxvY2FsZU1lc3NhZ2VzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+ID0ge307XG4gIHRyeSB7XG4gICAgbG9jYWxlTWVzc2FnZXMgPSBhd2FpdCBpbXBvcnQoYC4uLy4uLy4uLy4uLy4uL3B1YmxpYy9sb2NhbGVzLyR7bGFuZ30uanNvbmApLnRoZW4obSA9PiBtLmRlZmF1bHQpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUud2FybihgVHJhbnNsYXRpb24gZmlsZSBmb3IgJHtsYW5nfSBub3QgZm91bmQsIGZhbGxpbmcgYmFjayB0byBFbmdsaXNoYCk7XG4gICAgbG9jYWxlTWVzc2FnZXMgPSBhd2FpdCBpbXBvcnQoYC4uLy4uLy4uLy4uLy4uL3B1YmxpYy9sb2NhbGVzL2VuLmpzb25gKS50aGVuKG0gPT4gbS5kZWZhdWx0KTtcbiAgfVxuXG4gIC8vIEhlbHBlciBmdW5jdGlvbiB0byBleHRyYWN0IHRyYW5zbGF0aW9uc1xuICBjb25zdCB0ID0gKGtleTogc3RyaW5nKSA9PiBsb2NhbGVNZXNzYWdlc1trZXldIHx8IGtleTtcblxuICAvLyBQcmVwYXJlIGFsbCBuZWNlc3NhcnkgdHJhbnNsYXRpb25zIGZvciB0aGUgbm90aWNlIGRldGFpbCBwYWdlXG4gIGNvbnN0IHRyYW5zbGF0aW9ucyA9IHtcbiAgICBub3RpY2VfaW52YWxpZF9pZDogdCgnbm90aWNlX2ludmFsaWRfaWQnKSxcbiAgICBub3RpY2VfbG9hZGluZ19lcnJvcjogdCgnbm90aWNlX2xvYWRpbmdfZXJyb3InKSxcbiAgICBub3RpY2Vfbm90X2ZvdW5kOiB0KCdub3RpY2Vfbm90X2ZvdW5kJyksXG4gICAgbm90aWNlX2JhY2tfdG9fbGlzdDogdCgnbm90aWNlX2JhY2tfdG9fbGlzdCcpLFxuICAgIG5vdGljZV9waW5uZWQ6IHQoJ25vdGljZV9waW5uZWQnKSxcbiAgfTtcblxuICByZXR1cm4gPE5vdGljZURldGFpbENsaWVudCBsYW5nPXtsYW5nfSB0cmFuc2xhdGlvbnM9e3RyYW5zbGF0aW9uc30gLz47XG59O1xuXG5leHBvcnQgZGVmYXVsdCBOb3RpY2VEZXRhaWxQYWdlO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBa0NBOzs7Ozs7V0FBQUEsUUFBQTs7Ozs7Ozs7d0VBbENrQjs7O3dFQUNhOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU0vQixNQUFNQyxnQkFBQSxHQUFtQixNQUFBQSxDQUFPO0VBQUVDO0FBQU0sQ0FBUztFQUFBO0VBQUFDLGNBQUEsR0FBQUMsQ0FBQTtFQUMvQyxNQUFNO0lBQUVDO0VBQUksQ0FBRTtFQUFBO0VBQUEsQ0FBQUYsY0FBQSxHQUFB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