22a5e10d36a695861a155d61a7bc5e75
'use client';
"use strict";

/* istanbul ignore next */
function cov_r8gcsq1uk() {
  var path = "/Users/charlie.hyun/Repositories/picnic-web/components/ui/GlobalLoadingOverlay.tsx";
  var hash = "54349bb5e607d6f649fda37a29e04a70f6b0ed68";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/charlie.hyun/Repositories/picnic-web/components/ui/GlobalLoadingOverlay.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 36
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 29
        },
        end: {
          line: 14,
          column: 76
        }
      },
      "6": {
        start: {
          line: 15,
          column: 30
        },
        end: {
          line: 15,
          column: 76
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "8": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 22,
          column: 71
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 7
        }
      },
      "10": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 32
        }
      },
      "11": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 32
        }
      },
      "12": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 66,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "GlobalLoadingOverlay",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 29
          }
        },
        loc: {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 21
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 32
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/charlie.hyun/Repositories/picnic-web/components/ui/GlobalLoadingOverlay.tsx"],
      sourcesContent: ["'use client';\n\nimport React from 'react';\nimport Image from 'next/image';\nimport { useGlobalLoading } from '@/contexts/GlobalLoadingContext';\n\nexport default function GlobalLoadingOverlay() {\n  const { isLoading } = useGlobalLoading();\n\n  // \uB514\uBC84\uAE45\uC6A9 \uCF58\uC194 \uB85C\uADF8\n  console.log('\uD83D\uDD0D [GlobalLoadingOverlay] \uB80C\uB354\uB9C1:', { isLoading });\n\n  if (!isLoading) return null;\n\n  return (\n    <div \n      className=\"fixed top-0 left-0 right-0 bottom-0 z-[9999] bg-black/50 backdrop-blur-sm\"\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        zIndex: 9999,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        backdropFilter: 'blur(4px)',\n      }}\n    >\n      <div \n        className=\"flex flex-col items-center justify-center\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Image\n          src=\"/images/logo.png\"\n          alt=\"Picnic Loading\"\n          width={80}\n          height={80}\n          className=\"w-20 h-20 rounded-full animate-scale-pulse drop-shadow-lg object-cover\"\n          priority\n        />\n        <div className=\"mt-4 text-white text-sm font-medium animate-pulse\">\n          \uB85C\uB529 \uC911...\n        </div>\n      </div>\n    </div>\n  );\n} "],
      names: ["GlobalLoadingOverlay", "isLoading", "useGlobalLoading", "console", "log", "div", "className", "style", "position", "top", "left", "width", "height", "zIndex", "display", "alignItems", "justifyContent", "backgroundColor", "backdropFilter", "flexDirection", "Image", "src", "alt", "priority"],
      mappings: "AAAA;;;;;+BAMA;;;eAAwBA;;;;8DAJN;8DACA;sCACe;;;;;;AAElB,SAASA;IACtB,MAAM,EAAEC,SAAS,EAAE,GAAGC,IAAAA,sCAAgB;IAEtC,aAAa;IACbC,QAAQC,GAAG,CAAC,kCAAkC;QAAEH;IAAU;IAE1D,IAAI,CAACA,WAAW,OAAO;IAEvB,qBACE,qBAACI;QACCC,WAAU;QACVC,OAAO;YACLC,UAAU;YACVC,KAAK;YACLC,MAAM;YACNC,OAAO;YACPC,QAAQ;YACRC,QAAQ;YACRC,SAAS;YACTC,YAAY;YACZC,gBAAgB;YAChBC,iBAAiB;YACjBC,gBAAgB;QAClB;kBAEA,cAAA,sBAACb;YACCC,WAAU;YACVC,OAAO;gBACLO,SAAS;gBACTK,eAAe;gBACfJ,YAAY;gBACZC,gBAAgB;YAClB;;8BAEA,qBAACI,cAAK;oBACJC,KAAI;oBACJC,KAAI;oBACJX,OAAO;oBACPC,QAAQ;oBACRN,WAAU;oBACViB,QAAQ;;8BAEV,qBAAClB;oBAAIC,WAAU;8BAAoD;;;;;AAM3E"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "54349bb5e607d6f649fda37a29e04a70f6b0ed68"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_r8gcsq1uk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_r8gcsq1uk();
cov_r8gcsq1uk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_r8gcsq1uk().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_r8gcsq1uk().f[0]++;
    cov_r8gcsq1uk().s[2]++;
    return GlobalLoadingOverlay;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_r8gcsq1uk().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_r8gcsq1uk().s[4]++, _interop_require_default(require("react")));
const _image =
/* istanbul ignore next */
(/*#__PURE__*/cov_r8gcsq1uk().s[5]++, _interop_require_default(require("next/image")));
const _GlobalLoadingContext =
/* istanbul ignore next */
(cov_r8gcsq1uk().s[6]++, require("../../contexts/GlobalLoadingContext"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_r8gcsq1uk().f[1]++;
  cov_r8gcsq1uk().s[7]++;
  return /* istanbul ignore next */(cov_r8gcsq1uk().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_r8gcsq1uk().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_r8gcsq1uk().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_r8gcsq1uk().b[0][1]++, {
    default: obj
  });
}
function GlobalLoadingOverlay() {
  /* istanbul ignore next */
  cov_r8gcsq1uk().f[2]++;
  const {
    isLoading
  } =
  /* istanbul ignore next */
  (cov_r8gcsq1uk().s[8]++, (0, _GlobalLoadingContext.useGlobalLoading)());
  // 디버깅용 콘솔 로그
  /* istanbul ignore next */
  cov_r8gcsq1uk().s[9]++;
  console.log('🔍 [GlobalLoadingOverlay] 렌더링:', {
    isLoading
  });
  /* istanbul ignore next */
  cov_r8gcsq1uk().s[10]++;
  if (!isLoading) {
    /* istanbul ignore next */
    cov_r8gcsq1uk().b[2][0]++;
    cov_r8gcsq1uk().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_r8gcsq1uk().b[2][1]++;
  }
  cov_r8gcsq1uk().s[12]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "fixed top-0 left-0 right-0 bottom-0 z-[9999] bg-black/50 backdrop-blur-sm",
    style: {
      position: 'fixed',
      top: 0,
      left: 0,
      width: '100vw',
      height: '100vh',
      zIndex: 9999,
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: 'rgba(0, 0, 0, 0.5)',
      backdropFilter: 'blur(4px)'
    },
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex flex-col items-center justify-center",
      style: {
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        justifyContent: 'center'
      },
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_image.default, {
        src: "/images/logo.png",
        alt: "Picnic Loading",
        width: 80,
        height: 80,
        className: "w-20 h-20 rounded-full animate-scale-pulse drop-shadow-lg object-cover",
        priority: true
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "mt-4 text-white text-sm font-medium animate-pulse",
        children: "로딩 중..."
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHbG9iYWxMb2FkaW5nT3ZlcmxheSIsImNvdl9yOGdjc3ExdWsiLCJmIiwiaXNMb2FkaW5nIiwicyIsIl9HbG9iYWxMb2FkaW5nQ29udGV4dCIsInVzZUdsb2JhbExvYWRpbmciLCJjb25zb2xlIiwibG9nIiwiYiIsIl9qc3hydW50aW1lIiwianN4IiwiY2xhc3NOYW1lIiwic3R5bGUiLCJwb3NpdGlvbiIsInRvcCIsImxlZnQiLCJ3aWR0aCIsImhlaWdodCIsInpJbmRleCIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJiYWNrZHJvcEZpbHRlciIsImpzeHMiLCJmbGV4RGlyZWN0aW9uIiwiX2ltYWdlIiwiZGVmYXVsdCIsInNyYyIsImFsdCIsInByaW9yaXR5Il0sInNvdXJjZXMiOlsiL1VzZXJzL2NoYXJsaWUuaHl1bi9SZXBvc2l0b3JpZXMvcGljbmljLXdlYi9jb21wb25lbnRzL3VpL0dsb2JhbExvYWRpbmdPdmVybGF5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSW1hZ2UgZnJvbSAnbmV4dC9pbWFnZSc7XG5pbXBvcnQgeyB1c2VHbG9iYWxMb2FkaW5nIH0gZnJvbSAnQC9jb250ZXh0cy9HbG9iYWxMb2FkaW5nQ29udGV4dCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEdsb2JhbExvYWRpbmdPdmVybGF5KCkge1xuICBjb25zdCB7IGlzTG9hZGluZyB9ID0gdXNlR2xvYmFsTG9hZGluZygpO1xuXG4gIC8vIOuUlOuyhOq5heyaqSDsvZjshpQg66Gc6re4XG4gIGNvbnNvbGUubG9nKCfwn5SNIFtHbG9iYWxMb2FkaW5nT3ZlcmxheV0g66CM642U66eBOicsIHsgaXNMb2FkaW5nIH0pO1xuXG4gIGlmICghaXNMb2FkaW5nKSByZXR1cm4gbnVsbDtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgXG4gICAgICBjbGFzc05hbWU9XCJmaXhlZCB0b3AtMCBsZWZ0LTAgcmlnaHQtMCBib3R0b20tMCB6LVs5OTk5XSBiZy1ibGFjay81MCBiYWNrZHJvcC1ibHVyLXNtXCJcbiAgICAgIHN0eWxlPXt7XG4gICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgICB0b3A6IDAsXG4gICAgICAgIGxlZnQ6IDAsXG4gICAgICAgIHdpZHRoOiAnMTAwdncnLFxuICAgICAgICBoZWlnaHQ6ICcxMDB2aCcsXG4gICAgICAgIHpJbmRleDogOTk5OSxcbiAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuNSknLFxuICAgICAgICBiYWNrZHJvcEZpbHRlcjogJ2JsdXIoNHB4KScsXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxkaXYgXG4gICAgICAgIGNsYXNzTmFtZT1cImZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCJcbiAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICA8SW1hZ2VcbiAgICAgICAgICBzcmM9XCIvaW1hZ2VzL2xvZ28ucG5nXCJcbiAgICAgICAgICBhbHQ9XCJQaWNuaWMgTG9hZGluZ1wiXG4gICAgICAgICAgd2lkdGg9ezgwfVxuICAgICAgICAgIGhlaWdodD17ODB9XG4gICAgICAgICAgY2xhc3NOYW1lPVwidy0yMCBoLTIwIHJvdW5kZWQtZnVsbCBhbmltYXRlLXNjYWxlLXB1bHNlIGRyb3Atc2hhZG93LWxnIG9iamVjdC1jb3ZlclwiXG4gICAgICAgICAgcHJpb3JpdHlcbiAgICAgICAgLz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtdC00IHRleHQtd2hpdGUgdGV4dC1zbSBmb250LW1lZGl1bSBhbmltYXRlLXB1bHNlXCI+XG4gICAgICAgICAg66Gc65SpIOykkS4uLlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufSAiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQU1BOzs7Ozs7V0FBd0JBLG9CQUFBOzs7Ozs7Ozt1RUFKTjs7O3VFQUNBOzs7aUNBQ2U7Ozs7Ozs7Ozs7Ozs7OztBQUVsQixTQUFTQSxxQkFBQTtFQUFBO0VBQUFDLGFBQUEsR0FBQUMsQ0FBQTtFQUN0QixNQUFNO0lBQUVDO0VBQVMsQ0FBRTtFQUFBO0VBQUEsQ0FBQUYsYUFBQSxHQUFBRyxDQUFBLE9BQUcsSUFBQUMscUJBQUEsQ0FBQUMsZ0JBQWdCO0VBRXRDO0VBQUE7RUFBQUwsYUFBQSxHQUFBRyxDQUFBO0VBQ0FHLE9BQUEsQ0FBUUMsR0FBRyxDQUFDLGtDQUFrQztJQUFFTDtFQUFVO0VBQUE7RUFBQUYsYUFBQSxHQUFBRyxDQUFBO0VBRTFELElBQUksQ0FBQ0QsU0FBQSxFQUFXO0lBQUE7SUFBQUYsYUFBQSxHQUFBUSxDQUFBO0lBQUFSLGFBQUEsR0FBQUcsQ0FBQTtJQUFBLE9BQU87RUFBQTtFQUFBO0VBQUE7SUFBQUgsYUFBQSxHQUFBUSxDQUFBO0VBQUE7RUFBQVIsYUFBQSxHQUFBRyxDQUFBO0VBRXZCLG9CQUNFLElBQUFNLFdBQUEsQ0FBQUMsR0FBQSxFQUFDO0lBQ0NDLFNBQUEsRUFBVTtJQUNWQyxLQUFBLEVBQU87TUFDTEMsUUFBQSxFQUFVO01BQ1ZDLEdBQUEsRUFBSztNQUNMQyxJQUFBLEVBQU07TUFDTkMsS0FBQSxFQUFPO01BQ1BDLE1BQUEsRUFBUTtNQUNSQyxNQUFBLEVBQVE7TUFDUkMsT0FBQSxFQUFTO01BQ1RDLFVBQUEsRUFBWTtNQUNaQyxjQUFBLEVBQWdCO01BQ2hCQyxlQUFBLEVBQWlCO01BQ2pCQyxjQUFBLEVBQWdCO0lBQ2xCO2NBRUEsaUJBQUFkLFdBQUEsQ0FBQWUsSUFBQSxFQUFDO01BQ0NiLFNBQUEsRUFBVTtNQUNWQyxLQUFBLEVBQU87UUFDTE8sT0FBQSxFQUFTO1FBQ1RNLGFBQUEsRUFBZTtRQUNmTCxVQUFBLEVBQVk7UUFDWkMsY0FBQSxFQUFnQjtNQUNsQjs4QkFFQSxJQUFBWixXQUFBLENBQUFDLEdBQUEsRUFBQ2dCLE1BQUEsQ0FBQUMsT0FBSztRQUNKQyxHQUFBLEVBQUk7UUFDSkMsR0FBQSxFQUFJO1FBQ0piLEtBQUEsRUFBTztRQUNQQyxNQUFBLEVBQVE7UUFDUk4sU0FBQSxFQUFVO1FBQ1ZtQixRQUFRO3VCQUVWLElBQUFyQixXQUFBLENBQUFDLEdBQUEsRUFBQztRQUFJQyxTQUFBLEVBQVU7a0JBQW9EOzs7O0FBTTNFIiwiaWdub3JlTGlzdCI6W119