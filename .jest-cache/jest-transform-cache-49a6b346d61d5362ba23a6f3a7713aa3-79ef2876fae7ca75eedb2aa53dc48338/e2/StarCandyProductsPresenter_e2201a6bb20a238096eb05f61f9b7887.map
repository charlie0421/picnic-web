{"version":3,"names":["StarCandyProductsPresenter","products","error","className","cov_5d37270ig","f","t","currentLanguage","s","_languageStore","useLanguageStore","user","_authprovider","useAuth","selectedPaymentMethod","setSelectedPaymentMethod","_react","useState","processingProductId","setProcessingProductId","formatPrice","price","currency","b","toLocaleString","toFixed","handlePurchase","product","alert","id","handlePortOnePayment","handlePayPalPayment","console","paymentId","Date","now","Math","random","toString","substr","paymentRequest","orderName","product_name","star_candy","totalAmount","web_price_krw","customer","fullName","user_metadata","name","email","phoneNumber","phone","productInfo","starCandy","bonusAmount","web_bonus_amount","response","_portone","portOneService","requestPaymentAuto","success","verified","verifyPayment","window","location","reload","message","initialized","_paypal","payPalService","initialize","Error","orderID","createOrder","productId","productName","amount","web_price_usd","userId","userEmail","paypal","getPayPal","Buttons","actions","order","get","Promise","resolve","approvalUrl","process","env","NEXT_PUBLIC_PAYPAL_ENV","width","height","left","screen","top","paypalWindow","open","pollForCompletion","interval","setInterval","closed","clearInterval","result","captureOrder","log","currentUrl","href","includes","close","setTimeout","paypalPayUrl","handlePaymentMethodChange","method","getCurrentPrice","_ipdetection","getCurrencyByPaymentMethod","getCurrentCurrency","getSafeLocalizedString","value","language","parsed","JSON","parse","String","getProductImage","starCandyAmount","imageMap","threshold","image","selectedImage","item","getSortedProducts","sort","a","web_display_order","_jsxruntime","jsxs","jsx","onClick","length","_PaymentMethodSelector","PaymentMethodSelector","onMethodChange","map","index","isFeatured","isProcessing","_framermotion","motion","div","initial","opacity","y","animate","transition","delay","_image","default","src","alt","web_description","replace","trim","disabled","viewBox","cx","cy","r","stroke","strokeWidth","fill","d","_link"],"sources":["/Users/charlie.hyun/Repositories/picnic-web/components/client/star-candy/StarCandyProductsPresenter.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { useLanguageStore } from '@/stores/languageStore';\nimport { Products } from '@/types/interfaces';\nimport { getCdnImageUrl } from '@/utils/api/image';\nimport { getLocalizedString } from '@/utils/api/strings';\nimport { useAuth } from '@/lib/supabase/auth-provider';\nimport { motion } from 'framer-motion';\nimport { PaymentMethodSelector, PaymentMethod } from './PaymentMethodSelector';\nimport { getCurrencyByPaymentMethod } from '@/utils/ip-detection';\nimport { portOneService } from '@/lib/payment/portone';\nimport { payPalService } from '@/lib/payment/paypal';\nimport Image from 'next/image';\nimport Link from 'next/link';\n\ninterface StarCandyProductsPresenterProps {\n  products: Products[];\n  error: string | null;\n  className?: string;\n}\n\nexport function StarCandyProductsPresenter({\n  products,\n  error,\n  className\n}: StarCandyProductsPresenterProps) {\n  const { t, currentLanguage } = useLanguageStore();\n  const { user } = useAuth();\n  const [selectedPaymentMethod, setSelectedPaymentMethod] =\n    useState<PaymentMethod>('paypal');\n  const [processingProductId, setProcessingProductId] = useState<string | null>(null);\n\n  const formatPrice = (price: number | null, currency: 'KRW' | 'USD') => {\n    if (!price) return '';\n\n    if (currency === 'KRW') {\n      return `₩${price.toLocaleString('ko-KR')}`;\n    } else {\n      return `$${price.toFixed(2)}`;\n    }\n  };\n\n  const handlePurchase = async (product: Products) => {\n    if (!user) {\n      alert(t('star_candy_login_required'));\n      return;\n    }\n\n    if (processingProductId) {\n      return; // 이미 처리 중인 결제가 있음\n    }\n\n    setProcessingProductId(product.id);\n\n    try {\n      if (selectedPaymentMethod === 'portone') {\n        await handlePortOnePayment(product);\n      } else {\n        await handlePayPalPayment(product);\n      }\n    } catch (error) {\n      console.error('Payment error:', error);\n      alert(t('payment_failed'));\n    } finally {\n      setProcessingProductId(null);\n    }\n  };\n\n  const handlePortOnePayment = async (product: Products) => {\n    try {\n      // Generate unique payment ID\n      const paymentId = `PAY_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n      // Prepare payment request\n      const paymentRequest = {\n        paymentId,\n        orderName: `${product.product_name} - ${product.star_candy} 별사탕`,\n        totalAmount: product.web_price_krw || 0,\n        currency: 'KRW' as const,\n        customer: {\n          fullName: user?.user_metadata?.name || '사용자',\n          email: user?.email || '',\n          phoneNumber: user?.user_metadata?.phone,\n        },\n        productInfo: {\n          id: product.id,\n          name: product.product_name,\n          starCandy: product.star_candy || 0,\n          bonusAmount: product.web_bonus_amount || 0,\n        },\n      };\n\n      // Request payment using Port One v2 (automatic payment method selection)\n      const response = await portOneService.requestPaymentAuto(paymentRequest);\n\n      if (response.success && response.paymentId) {\n        // Verify payment on server\n        const verified = await portOneService.verifyPayment(response.paymentId);\n        \n        if (verified) {\n          alert(t('payment_success'));\n          window.location.reload();\n        } else {\n          alert(t('payment_verification_failed'));\n        }\n      } else {\n        alert(response.error?.message || t('payment_failed'));\n      }\n    } catch (error) {\n      console.error('Port One payment error:', error);\n      alert(t('payment_error_occurred'));\n    }\n  };\n\n  const handlePayPalPayment = async (product: Products) => {\n    try {\n      // Initialize PayPal service\n      const initialized = await payPalService.initialize();\n      if (!initialized) {\n        throw new Error('PayPal SDK initialization failed');\n      }\n\n      // Create PayPal order\n      const orderID = await payPalService.createOrder({\n        productId: product.id,\n        productName: product.product_name,\n        amount: product.web_price_usd || 0,\n        starCandy: product.star_candy || 0,\n        bonusAmount: product.web_bonus_amount || 0,\n        userId: user?.id || '',\n        userEmail: user?.email || '',\n      });\n\n      // Get PayPal SDK instance and approve order\n      const paypal = payPalService.getPayPal();\n      if (paypal && paypal.Buttons) {\n        // Open PayPal checkout in a popup\n        const actions = {\n          order: {\n            get: () => Promise.resolve({ id: orderID })\n          }\n        };\n\n        // Redirect to PayPal approval URL\n        const approvalUrl = `https://www.${process.env.NEXT_PUBLIC_PAYPAL_ENV === 'production' ? '' : 'sandbox.'}paypal.com/checkoutnow?token=${orderID}`;\n        \n        // Open PayPal in a centered popup window\n        const width = 500;\n        const height = 600;\n        const left = (window.screen.width / 2) - (width / 2);\n        const top = (window.screen.height / 2) - (height / 2);\n        \n        const paypalWindow = window.open(\n          approvalUrl,\n          'paypal_checkout',\n          `width=${width},height=${height},left=${left},top=${top},scrollbars=yes,resizable=yes`\n        );\n\n        // Poll for payment completion\n        const pollForCompletion = () => {\n          const interval = setInterval(async () => {\n            try {\n              // Check if popup was closed\n              if (paypalWindow?.closed) {\n                clearInterval(interval);\n                \n                // Try to capture the order to check if payment was completed\n                try {\n                  const result = await payPalService.captureOrder(orderID);\n                  if (result.success) {\n                    alert(t('payment_success'));\n                    window.location.reload();\n                  }\n                } catch (error) {\n                  // Payment likely was not completed\n                  console.log('Payment was cancelled or not completed');\n                }\n                return;\n              }\n\n              // Check popup URL for success/cancel indicators\n              try {\n                const currentUrl = paypalWindow?.location?.href;\n                if (currentUrl && currentUrl.includes('success')) {\n                  clearInterval(interval);\n                  paypalWindow?.close();\n                  \n                  // Capture the order\n                  const result = await payPalService.captureOrder(orderID);\n                  if (result.success) {\n                    alert(t('payment_success'));\n                    window.location.reload();\n                  } else {\n                    alert(t('payment_failed'));\n                  }\n                }\n              } catch (error) {\n                // Cross-origin restriction, continue polling\n              }\n            } catch (error) {\n              console.error('Error polling payment status:', error);\n            }\n          }, 1000);\n\n          // Clear interval after 10 minutes\n          setTimeout(() => {\n            clearInterval(interval);\n            if (paypalWindow && !paypalWindow.closed) {\n              paypalWindow.close();\n            }\n          }, 600000);\n        };\n\n        pollForCompletion();\n        \n      } else {\n        // Fallback: redirect to PayPal\n        const paypalPayUrl = `https://www.${process.env.NEXT_PUBLIC_PAYPAL_ENV === 'production' ? '' : 'sandbox.'}paypal.com/checkoutnow?token=${orderID}`;\n        window.location.href = paypalPayUrl;\n      }\n\n    } catch (error) {\n      console.error('PayPal payment error:', error);\n      alert(t('payment_failed'));\n    }\n  };\n\n  const handlePaymentMethodChange = (method: PaymentMethod) => {\n    setSelectedPaymentMethod(method);\n  };\n\n  const getCurrentPrice = (product: Products) => {\n    const currency = getCurrencyByPaymentMethod(selectedPaymentMethod);\n    return currency === 'KRW' ? product.web_price_krw : product.web_price_usd;\n  };\n\n  const getCurrentCurrency = () => {\n    return getCurrencyByPaymentMethod(selectedPaymentMethod);\n  };\n\n  // 안전한 다국어 문자열 처리 함수\n  const getSafeLocalizedString = (value: any, language: string) => {\n    if (!value) return '';\n    \n    // 이미 문자열인 경우\n    if (typeof value === 'string') {\n      // JSON 문자열인지 확인\n      try {\n        const parsed = JSON.parse(value);\n        if (typeof parsed === 'object' && parsed[language]) {\n          return parsed[language];\n        }\n        if (typeof parsed === 'object' && parsed['en']) {\n          return parsed['en'];\n        }\n        // JSON이지만 해당 언어가 없으면 원본 문자열 반환\n        return value;\n      } catch {\n        // JSON이 아닌 일반 문자열\n        return value;\n      }\n    }\n    \n    // 객체인 경우\n    if (typeof value === 'object' && value !== null) {\n      return value[language] || value['en'] || '';\n    }\n    \n    return String(value);\n  };\n\n  // 상품 수량에 따라 적절한 이미지를 선택하는 함수\n  const getProductImage = (starCandyAmount: number | null | undefined) => {\n    if (!starCandyAmount) return '/images/star-candy/star_100.png';\n    \n    const imageMap = [\n      { threshold: 100, image: 'star_100.png' },\n      { threshold: 200, image: 'star_200.png' },\n      { threshold: 600, image: 'star_600.png' },\n      { threshold: 1000, image: 'star_1000.png' },\n      { threshold: 2000, image: 'star_2000.png' },\n      { threshold: 3000, image: 'star_3000.png' },\n      { threshold: 4000, image: 'star_4000.png' },\n      { threshold: 5000, image: 'star_5000.png' },\n      { threshold: 7000, image: 'star_7000.png' },\n      { threshold: 10000, image: 'star_10000.png' }\n    ];\n\n    // 수량에 가장 가까운 이미지를 찾기\n    let selectedImage = imageMap[0].image;\n    for (const item of imageMap) {\n      if (starCandyAmount <= item.threshold) {\n        selectedImage = item.image;\n        break;\n      }\n      selectedImage = item.image; // 가장 큰 수량보다 많은 경우 최대 이미지 사용\n    }\n\n    return `/images/star-candy/${selectedImage}`;\n  };\n\n  // 상품을 소팅하는 함수\n  const getSortedProducts = () => {\n    return [...products].sort((a, b) => {\n      // 2. web_display_order가 있으면 그것으로 정렬\n      if (a.web_display_order && b.web_display_order) {\n        return a.web_display_order - b.web_display_order;\n      }\n      if (a.web_display_order && !b.web_display_order) return -1;\n      if (!a.web_display_order && b.web_display_order) return 1;\n      \n      // 3. 별사탕 수량으로 정렬 (오름차순)\n      return (a.star_candy || 0) - (b.star_candy || 0);\n    });\n  };\n\n  // 서버 컴포넌트에서 완성된 데이터만 전달받음\n  // 로딩 상태는 페이지 레벨의 loading.tsx에서 처리됨\n\n  if (error) {\n    return (\n      <div className={`text-center py-12 ${className || ''}`}>\n        <p className='text-red-500 mb-4'>{error}</p>\n        <button\n          onClick={() => window.location.reload()}\n          className='px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary/90'\n        >\n          {t('button_retry')}\n        </button>\n      </div>\n    );\n  }\n\n  if (products.length === 0) {\n    return (\n      <div className={`text-center py-12 ${className || ''}`}>\n        <p className='text-gray-500'>{t('star_candy_no_products')}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-6 ${className || ''}`}>\n      <div className='text-center mb-8'>\n        <h1 className='text-3xl font-bold mb-2'>\n          {t('star_candy_recharge_title')}\n        </h1>\n        <p className='text-gray-600'>{t('star_candy_recharge_description')}</p>\n      </div>\n\n      <PaymentMethodSelector \n        onMethodChange={handlePaymentMethodChange}\n        className=\"mb-8\"\n      />\n\n      <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6'>\n        {getSortedProducts().map((product, index) => {\n          // 추천 상품을 600개, 10,000개 상품만으로 제한 (최대 2개)\n          const isFeatured = product.star_candy === 600 || product.star_candy === 10000;\n          const isProcessing = processingProductId === product.id;\n\n          return (\n            <motion.div\n              key={product.id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.1 }}\n              className={`relative bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow ${\n                isFeatured ? 'ring-2 ring-primary' : ''\n              }`}\n            >\n              {isFeatured && (\n                <div className=\"absolute top-0 right-0 bg-primary text-white px-2 py-1 text-xs font-medium rounded-bl-lg\">\n                  {t('star_candy_featured')}\n                </div>\n              )}\n\n              <div className='p-6'>\n                <div className='text-center mb-4'>\n                  <div className='inline-flex items-center justify-center w-20 h-20 mb-3'>\n                    <Image\n                      src={getProductImage(product.star_candy)}\n                      alt={`${product.star_candy || 0} ${t('star_candy_unit')}`}\n                      width={80}\n                      height={80}\n                      className='object-contain'\n                    />\n                  </div>\n\n                  <h3 className='text-xl font-bold mb-1'>\n                    {(product.star_candy || 0).toLocaleString()} {t('star_candy_unit')}\n                  </h3>\n\n                  {product.web_bonus_amount && product.web_bonus_amount > 0 ? (\n                    <p className='text-sm text-green-600 font-medium'>\n                      +{product.web_bonus_amount.toLocaleString()}{' '}\n                      {t('star_candy_bonus')}\n                    </p>\n                  ) : (\n                    <p className='text-sm text-gray-400 font-medium'>\n                      {t('star_candy_no_bonus')}\n                    </p>\n                  )}\n                </div>\n\n                {product.web_description && (\n                  <p className='text-sm text-gray-600 mb-4 text-center min-h-[2rem] flex items-center justify-center'>\n                    {getSafeLocalizedString(product.web_description, currentLanguage)\n                      .replace(/\\s*\\+\\s*Bonus\\s*/gi, '') // \"+ Bonus\" 제거\n                      .replace(/\\s*\\+\\s*보너스\\s*/gi, '') // \"+ 보너스\" 제거  \n                      .replace(/\\s*\\+\\s*/g, '') // 남은 \"+\" 기호들 제거\n                      .replace(/\\s*Bonus\\s*/gi, '') // \"Bonus\" 단어 제거\n                      .replace(/\\s*보너스\\s*/gi, '') // \"보너스\" 단어 제거\n                      .trim()}\n                  </p>\n                )}\n\n                <div className='text-center mb-4'>\n                  <p className='text-2xl font-bold text-primary'>\n                    {formatPrice(getCurrentPrice(product), getCurrentCurrency())}\n                  </p>\n                </div>\n\n                <button\n                  onClick={() => handlePurchase(product)}\n                  disabled={!user || isProcessing}\n                  className={`\n                    w-full py-3 font-medium rounded-lg transition-colors\n                    ${!user\n                      ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                      : isProcessing\n                      ? 'bg-gray-400 text-white cursor-not-allowed'\n                      : 'bg-primary text-white hover:bg-primary/90'\n                    }\n                  `}\n                >\n                  {isProcessing ? (\n                    <span className=\"flex items-center justify-center\">\n                      <svg className=\"animate-spin h-5 w-5 mr-2\" viewBox=\"0 0 24 24\">\n                        <circle \n                          className=\"opacity-25\" \n                          cx=\"12\" \n                          cy=\"12\" \n                          r=\"10\" \n                          stroke=\"currentColor\" \n                          strokeWidth=\"4\"\n                        />\n                        <path \n                          className=\"opacity-75\" \n                          fill=\"currentColor\" \n                          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                        />\n                      </svg>\n                      {t('processing')}\n                    </span>\n                  ) : !user ? (\n                    t('star_candy_login_required')\n                  ) : (\n                    t('star_candy_purchase')\n                  )}\n                </button>\n              </div>\n            </motion.div>\n          );\n        })}\n      </div>\n\n      <div className='mt-8 bg-gray-50 rounded-lg p-6'>\n        <h3 className='font-medium mb-2'>{t('star_candy_notice_title')}</h3>\n        <ul className='text-sm text-gray-600 space-y-1'>\n          <li>• {t('star_candy_notice_1')}</li>\n          <li>\n            • {currentLanguage === 'ko' ? '환불은 ' : \n               currentLanguage === 'ja' ? '返金については' :\n               currentLanguage === 'zh' ? '退款请参考' :\n               currentLanguage === 'id' ? 'Untuk pengembalian dana, silakan lihat ' :\n               'Please refer to the '}\n            <Link \n              href={`/${currentLanguage}/terms`} \n              className='text-primary hover:underline font-medium'\n            >\n              {t('terms_of_service')}\n            </Link>\n            {currentLanguage === 'ko' ? '을 참고바랍니다.' : \n             currentLanguage === 'ja' ? 'をご확認ください。' :\n             currentLanguage === 'zh' ? '。' :\n             currentLanguage === 'id' ? '.' :\n             ' for refund policy.'}\n          </li>\n          <li>• {t('star_candy_notice_3')}</li>\n        </ul>\n      </div>\n    </div>\n  );\n} "],"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","ignoreList":[]}