{"version":3,"names":["Login","cov_19knvhomt5","s","debugLog","message","data","f","process","env","NODE_ENV","b","console","log","debugLogs","JSON","parse","localStorage","getItem","push","timestamp","Date","now","length","shift","setItem","stringify","e","LoginContentInner","t","currentLanguage","_languageStore","useLanguageStore","isAuthenticated","isLoading","isInitialized","user","userProfile","_authprovider","useAuth","error","setError","_react","useState","loading","setLoading","mounted","setMounted","envCheckFailed","setEnvCheckFailed","lastLoginInfo","setLastLoginInfo","router","_navigation","useRouter","searchParams","useSearchParams","providers","useMemo","handleLoginStart","useCallback","handleLoginComplete","handleLoginError","loginError","useEffect","loginInfo","_storage","getLastLoginInfo","checkEnvironment","hasUrl","NEXT_PUBLIC_SUPABASE_URL","hasKey","NEXT_PUBLIC_SUPABASE_ANON_KEY","url","substring","testClient","_client","createBrowserSupabaseClient","Error","clientError","hasUser","hasUserProfile","returnTo","get","targetUrl","_authredirect","handlePostLoginRedirect","undefined","replace","checkAppleAuthSuccess","authSuccess","appleEmail","appleIdToken","appleNonce","hasIdToken","hasNonce","hasEmail","supabase","hasSupabase","userError","auth","getUser","userId","id","email","removeItem","tokenLength","nonceLength","authData","authError","signInWithIdToken","provider","token","nonce","setTimeout","magicLinkError","signInWithOtp","options","shouldCreateUser","apple_oauth","full_name","sessionError","errorDescription","localErrorDescription","decodeURIComponent","errorCode","sessionStorage","clear","warn","window","URL","location","href","delete","history","replaceState","document","title","toString","_jsxruntime","jsxs","className","jsx","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","reload","Fragment","String","toISOString","split","role","fillRule","clipRule","providerDisplay","formatLastLoginTime","_SocialLoginButtons","SocialLoginButtons","size","onLoginStart","onLoginComplete","onError","width","height","dangerouslySetInnerHTML","__html","LoginContent","handleGoBack","back","_lucidereact","ArrowLeft","_LanguageSelector","default","_link","_image","src","alt","priority","Suspense","fallback"],"sources":["/Users/charlie.hyun/Repositories/picnic-web/app/[lang]/(auth)/login/page.tsx"],"sourcesContent":["'use client';\n\nimport { Suspense, useCallback, useEffect, useState, useMemo } from 'react';\nimport { createBrowserSupabaseClient } from '@/lib/supabase/client';\nimport Image from 'next/image';\nimport { useSearchParams, useRouter } from 'next/navigation';\nimport { useLanguageStore } from '@/stores/languageStore';\nimport Script from 'next/script';\nimport { SocialLoginButtons } from '@/components/client/auth/SocialLoginButtons';\nimport { useAuth } from '@/lib/supabase/auth-provider';\nimport Link from 'next/link';\nimport { handlePostLoginRedirect } from '@/utils/auth-redirect';\nimport type { SocialLoginProvider } from '@/lib/supabase/social/types';\nimport { getLastLoginInfo, formatLastLoginTime, type LastLoginInfo } from '@/utils/storage';\nimport LanguageSelector from '@/components/layouts/LanguageSelector';\nimport { ArrowLeft } from 'lucide-react';\n\n// AppleID 타입 정의\ndeclare global {\n  interface Window {\n    AppleID?: {\n      auth: {\n        init(params: any): void;\n        signIn(): Promise<{\n          authorization: {\n            id_token?: string;\n            code?: string;\n            state?: string;\n          };\n        }>;\n      };\n    };\n  }\n}\n\n// 최적화된 디버깅 함수 - 개발 환경에서만 작동\nconst debugLog = (message: string, data?: any) => {\n  if (process.env.NODE_ENV !== 'development') return;\n  \n  console.log(`[DEBUG] ${message}`, data ? data : '');\n  \n  // 로컬 스토리지 저장도 개발 환경에서만\n  try {\n    const debugLogs = JSON.parse(localStorage.getItem('debug_logs') || '[]');\n    debugLogs.push({\n      timestamp: Date.now(),\n      message,\n      data,\n    });\n    // 최대 20개 항목만 유지 (50 → 20으로 축소)\n    while (debugLogs.length > 20) {\n      debugLogs.shift();\n    }\n    localStorage.setItem('debug_logs', JSON.stringify(debugLogs));\n  } catch (e) {\n    // 저장 실패 시 무시\n  }\n};\n\n// SearchParams를 사용하는 컴포넌트\nfunction LoginContentInner() {\n  const { t, currentLanguage } = useLanguageStore();\n  const { isAuthenticated, isLoading, isInitialized, user, userProfile } = useAuth();\n  const [error, setError] = useState<string>('');\n  const [loading, setLoading] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const [envCheckFailed, setEnvCheckFailed] = useState(false);\n  const [lastLoginInfo, setLastLoginInfo] = useState<LastLoginInfo | null>(null);\n  const router = useRouter();\n  const searchParams = useSearchParams();\n\n  // 메모이제이션된 providers 배열\n  const providers: SocialLoginProvider[] = useMemo(() => {\n    return process.env.NODE_ENV === 'development' \n      ? ['google', 'apple', 'wechat'] // 'kakao' 제거 - 웹에서 지원 안함\n      : ['google', 'apple']; // 'kakao' 제거 - 웹에서 지원 안함\n  }, []);\n\n  // 메모이제이션된 콜백 함수들\n  const handleLoginStart = useCallback(() => {\n    setLoading(true);\n    setError('');\n  }, []);\n\n  const handleLoginComplete = useCallback(() => {\n    if (process.env.NODE_ENV === 'development') {\n      debugLog('소셜 로그인 완료');\n    }\n    setLoading(false);\n  }, []);\n\n  const handleLoginError = useCallback((loginError: Error) => {\n    if (process.env.NODE_ENV === 'development') {\n      debugLog('소셜 로그인 오류', loginError);\n    }\n    setError(loginError.message);\n    setLoading(false);\n  }, []);\n\n  // 컴포넌트 마운트 감지\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  // 최근 로그인 정보 로드\n  useEffect(() => {\n    if (!mounted) return;\n    \n    try {\n      const loginInfo = getLastLoginInfo();\n      setLastLoginInfo(loginInfo);\n      \n      if (process.env.NODE_ENV === 'development' && loginInfo) {\n        debugLog('최근 로그인 정보 로드됨', loginInfo);\n      }\n    } catch (error) {\n      if (process.env.NODE_ENV === 'development') {\n        debugLog('최근 로그인 정보 로드 실패', error);\n      }\n    }\n  }, [mounted]);\n\n  // 환경 변수 확인 및 Supabase 클라이언트 상태 체크 - 최적화됨\n  useEffect(() => {\n    if (!mounted || envCheckFailed !== false) return; // 이미 체크했거나 실패한 경우 건너뛰기\n\n    const checkEnvironment = () => {\n      try {\n        // 환경 변수 확인\n        const hasUrl = !!process.env.NEXT_PUBLIC_SUPABASE_URL;\n        const hasKey = !!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n        if (process.env.NODE_ENV === 'development') {\n          debugLog('환경 변수 상태 확인', {\n            hasUrl,\n            hasKey,\n            url: process.env.NEXT_PUBLIC_SUPABASE_URL?.substring(0, 20) + '...',\n          });\n        }\n\n        if (!hasUrl || !hasKey) {\n          console.error('❌ 필수 환경 변수가 누락되었습니다.', {\n            'NEXT_PUBLIC_SUPABASE_URL': hasUrl,\n            'NEXT_PUBLIC_SUPABASE_ANON_KEY': hasKey,\n          });\n          setEnvCheckFailed(true);\n          setError('서버 설정 오류가 발생했습니다. 관리자에게 문의해주세요.');\n          return;\n        }\n\n        // Supabase 클라이언트 테스트 - 간소화\n        try {\n          const testClient = createBrowserSupabaseClient();\n          if (!testClient) {\n            throw new Error('클라이언트 생성 실패');\n          }\n          if (process.env.NODE_ENV === 'development') {\n            debugLog('✅ Supabase 클라이언트 생성 성공');\n          }\n        } catch (clientError) {\n          console.error('❌ Supabase 클라이언트 생성 실패:', clientError);\n          setEnvCheckFailed(true);\n          setError('데이터베이스 연결에 실패했습니다. 잠시 후 다시 시도해주세요.');\n          return;\n        }\n\n        setEnvCheckFailed(false);\n      } catch (error) {\n        console.error('❌ 환경 확인 중 오류:', error);\n        setEnvCheckFailed(true);\n        setError('시스템 초기화 중 오류가 발생했습니다.');\n      }\n    };\n\n    // 즉시 실행 (지연 제거)\n    checkEnvironment();\n  }, [mounted]);\n\n  // AuthProvider 상태 디버깅 - 최적화됨\n  useEffect(() => {\n    if (mounted && process.env.NODE_ENV === 'development') {\n      debugLog('AuthProvider 상태 변경', {\n        isAuthenticated,\n        isLoading,\n        isInitialized,\n        hasUser: !!user,\n        hasUserProfile: !!userProfile,\n        envCheckFailed,\n      });\n    }\n  }, [mounted, isAuthenticated, isLoading, isInitialized, !!user, !!userProfile, envCheckFailed]);\n\n  // 이미 인증된 사용자 리디렉트 처리 - 최상위로 이동\n  useEffect(() => {\n    if (mounted && isAuthenticated && !envCheckFailed) {\n      debugLog('이미 인증된 사용자 - 즉시 리디렉트');\n      const returnTo = searchParams.get('returnTo');\n      const targetUrl = handlePostLoginRedirect(returnTo || undefined);\n      router.replace(targetUrl); // push 대신 replace 사용하여 뒤로가기 방지\n    }\n  }, [mounted, isAuthenticated, router, envCheckFailed, searchParams]);\n\n  // Apple OAuth 성공 상태 확인\n  useEffect(() => {\n    if (!mounted) return;\n\n    const checkAppleAuthSuccess = async () => {\n      try {\n        const authSuccess = localStorage.getItem('authSuccess');\n        const appleEmail = localStorage.getItem('appleEmail');\n        const appleIdToken = localStorage.getItem('appleIdToken');\n        const appleNonce = localStorage.getItem('appleNonce');\n\n        if (authSuccess === 'true') {\n          setLoading(true);\n          debugLog('Apple OAuth 성공 감지, 세션 생성 시도', {\n            hasIdToken: !!appleIdToken,\n            hasNonce: !!appleNonce,\n            hasEmail: !!appleEmail,\n          });\n\n          try {\n            const supabase = createBrowserSupabaseClient();\n            if (!appleIdToken || !appleNonce || !supabase) {\n              debugLog(\n                '❌ Apple ID Token, nonce 또는 Supabase 클라이언트 없음',\n                {\n                  hasIdToken: !!appleIdToken,\n                  hasNonce: !!appleNonce,\n                  hasSupabase: !!supabase,\n                },\n              );\n              throw new Error('Apple ID Token 또는 nonce가 없습니다');\n            }\n\n            debugLog('✅ Apple ID Token과 nonce 확인됨, Supabase 인증 시도');\n\n            // 1. 기존 사용자 세션 확인\n            const {\n              data: { user },\n              error: userError,\n            } = await supabase.auth.getUser();\n            if (!userError && user) {\n              debugLog('기존 세션 발견', {\n                userId: user.id,\n                email: user.email,\n              });\n              localStorage.setItem('sessionCreated', 'true');\n              localStorage.removeItem('authSuccess');\n              localStorage.removeItem('appleEmail');\n              localStorage.removeItem('appleIdToken');\n              localStorage.removeItem('appleNonce');\n\n              // 리다이렉트 처리\n              const returnTo = searchParams.get('returnTo');\n              const targetUrl = handlePostLoginRedirect(returnTo || undefined);\n              router.push(targetUrl);\n              return;\n            }\n\n            // 2. Apple ID Token으로 Supabase 세션 생성 시도\n            debugLog('Apple ID Token으로 Supabase 세션 생성 시도', {\n              tokenLength: appleIdToken.length,\n              nonceLength: appleNonce.length,\n            });\n\n            const { data: authData, error: authError } =\n              await supabase.auth.signInWithIdToken({\n                provider: 'apple',\n                token: appleIdToken,\n                nonce: appleNonce,\n              });\n\n            if (!authError && authData?.user) {\n              debugLog('✅ Apple ID Token으로 Supabase 세션 생성 성공!', {\n                userId: authData.user.id,\n                email: authData.user.email,\n              });\n\n              localStorage.setItem('sessionCreated', 'true');\n              localStorage.removeItem('authSuccess');\n              localStorage.removeItem('appleEmail');\n              localStorage.removeItem('appleIdToken');\n              localStorage.removeItem('appleNonce');\n\n              // 성공 메시지 표시 후 리다이렉트\n              setError('Apple 로그인이 성공적으로 완료되었습니다!');\n              setTimeout(() => {\n                const returnTo = searchParams.get('returnTo');\n                const targetUrl = handlePostLoginRedirect(returnTo || undefined);\n                router.push(targetUrl);\n              }, 1000);\n              return;\n            } else {\n              debugLog(\n                '❌ Apple ID Token으로 Supabase 세션 생성 실패',\n                authError,\n              );\n\n              // 3. 대안: Apple 이메일로 매직 링크 시도\n              if (appleEmail) {\n                debugLog('대안: Apple 이메일로 매직 링크 시도', {\n                  email: appleEmail,\n                });\n\n                const { error: magicLinkError } =\n                  await supabase.auth.signInWithOtp({\n                    email: appleEmail,\n                    options: {\n                      shouldCreateUser: true,\n                      data: {\n                        provider: 'apple',\n                        apple_oauth: true,\n                        full_name: 'Apple User',\n                      },\n                    },\n                  });\n\n                if (!magicLinkError) {\n                  debugLog('✅ 매직 링크 성공');\n                  localStorage.setItem('sessionCreated', 'true');\n                  localStorage.removeItem('authSuccess');\n                  localStorage.removeItem('appleEmail');\n                  localStorage.removeItem('appleIdToken');\n                  localStorage.removeItem('appleNonce');\n                  setError(\n                    'Apple 로그인이 거의 완료되었습니다. 이메일을 확인해주세요.',\n                  );\n                  return;\n                } else {\n                  debugLog('❌ 매직 링크 실패', magicLinkError);\n                }\n              }\n\n              // 4. 모든 방법 실패\n              throw new Error(\n                `Apple 세션 생성 실패: ${\n                  authError?.message || '알 수 없는 오류'\n                }`,\n              );\n            }\n          } catch (sessionError) {\n            debugLog('세션 생성 중 오류', sessionError);\n            setError(\n              `Apple 로그인 후 세션 생성 중 오류가 발생했습니다: ${\n                sessionError instanceof Error\n                  ? sessionError.message\n                  : '알 수 없는 오류'\n              }`,\n            );\n          } finally {\n            setLoading(false);\n          }\n        }\n      } catch (e) {\n        debugLog('Apple OAuth 상태 확인 중 오류', e);\n      }\n    };\n\n    checkAppleAuthSuccess();\n  }, [mounted, router]);\n\n  // 오류 파라미터 처리\n  useEffect(() => {\n    if (!mounted) return;\n\n    const error = searchParams.get('error');\n    const errorDescription = searchParams.get('error_description');\n    const provider = searchParams.get('provider');\n    const authError = searchParams.get('auth_error');\n\n    // 오류 로컬 스토리지에서 확인\n    const localErrorDescription = (() => {\n      try {\n        return localStorage.getItem('auth_error_description');\n      } catch (e) {\n        return null;\n      }\n    })();\n\n    if (authError === 'true' || error) {\n      // 먼저 디버그 로그 기록\n      debugLog('인증 오류 발생', {\n        error,\n        errorDescription,\n        authError,\n        localErrorDescription,\n        provider,\n      });\n\n      // 오류 메시지 설정\n      if (errorDescription) {\n        setError(`인증 오류: ${decodeURIComponent(errorDescription)}`);\n      } else if (localErrorDescription) {\n        setError(`인증 오류: ${localErrorDescription}`);\n        // 로컬 스토리지에서 사용 후 제거\n        try {\n          localStorage.removeItem('auth_error_description');\n        } catch (e) {}\n      } else if (\n        error === 'invalid_request' ||\n        error === 'bad_oauth_callback'\n      ) {\n        // bad_oauth_state 에러 특별 처리\n        const errorCode = searchParams.get('error_code');\n        if (errorCode === 'bad_oauth_state') {\n          setError('보안상의 이유로 로그인이 취소되었습니다. 브라우저를 새로고침하고 다시 시도해주세요.');\n          \n          // 관련 스토리지 정리\n          try {\n            localStorage.removeItem('auth_return_url');\n            sessionStorage.clear();\n          } catch (e) {\n            console.warn('스토리지 정리 중 오류:', e);\n          }\n        } else {\n          setError('OAuth 인증 중 문제가 발생했습니다. 다시 시도해주세요.');\n        }\n      } else if (error) {\n        switch (error) {\n          case 'missing_params':\n            setError('필수 파라미터가 누락되었습니다.');\n            break;\n          case 'server_error':\n            setError(\n              `서버 오류가 발생했습니다: ${\n                errorDescription || '알 수 없는 오류'\n              }`,\n            );\n            break;\n          case 'oauth_error':\n            setError(\n              provider === 'apple'\n                ? 'Apple 로그인 중 오류가 발생했습니다. 다시 시도해주세요.'\n                : '소셜 로그인 중 오류가 발생했습니다.',\n            );\n            break;\n          case 'callback_error':\n            setError('인증 처리 중 오류가 발생했습니다.');\n            break;\n          default:\n            setError(\n              `인증 오류가 발생했습니다: ${\n                errorDescription || '알 수 없는 오류'\n              }`,\n            );\n        }\n      } else {\n        setError(\n          '로그인 중 알 수 없는 오류가 발생했습니다. 다시 시도해주세요.',\n        );\n      }\n\n      // URL에서 오류 파라미터 제거\n      if (typeof window !== 'undefined') {\n        const url = new URL(window.location.href);\n        url.searchParams.delete('error');\n        url.searchParams.delete('error_description');\n        url.searchParams.delete('auth_error');\n        url.searchParams.delete('provider');\n        window.history.replaceState({}, document.title, url.toString());\n      }\n    }\n  }, [mounted, searchParams, router]);\n\n  // 클라이언트에서 마운트되지 않았으면 로딩 표시\n  if (!mounted) {\n    return (\n      <div className='flex flex-col justify-center items-center min-h-[60vh] sm:min-h-[70vh]'>\n        <div className='animate-spin rounded-full h-8 w-8 sm:h-12 sm:w-12 border-t-2 border-b-2 border-primary-500 mb-3 sm:mb-4'></div>\n        <p className='text-gray-600 text-sm sm:text-base'>{t('login_loading_text')}</p>\n      </div>\n    );\n  }\n\n  // 환경 변수 오류가 있으면 오류 페이지 표시\n  if (envCheckFailed) {\n    return (\n      <div className='flex flex-col justify-center items-center min-h-[400px] p-8'>\n        <div className='max-w-md text-center'>\n          <div className='mb-6'>\n            <svg className='w-16 h-16 mx-auto text-red-500' fill='none' stroke='currentColor' viewBox='0 0 24 24'>\n              <path strokeLinecap='round' strokeLinejoin='round' strokeWidth={2} d='M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 19.5c-.77.833.192 2.5 1.732 2.5z' />\n            </svg>\n          </div>\n          <h3 className='text-xl font-semibold text-gray-900 mb-4'>{t('login_service_maintenance_title')}</h3>\n          <p className='text-gray-600 mb-6'>{error}</p>\n          <div className='space-y-3'>\n            <button\n              onClick={() => window.location.reload()}\n              className='w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors'\n            >\n              {t('login_refresh_page')}\n            </button>\n            <button\n              onClick={() => router.push('/')}\n              className='w-full px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors'\n            >\n              {t('login_home_button')}\n            </button>\n          </div>\n          {process.env.NODE_ENV === 'development' && (\n            <div className='mt-6 p-4 bg-red-50 rounded-lg border border-red-200 text-left'>\n              <h4 className='font-semibold text-red-800 mb-2'>{t('login_developer_info_title')}:</h4>\n              <div className='text-sm text-red-700 space-y-1'>\n                <p>• {t('login_env_url_label')}: {process.env.NEXT_PUBLIC_SUPABASE_URL ? '설정됨' : '❌ 누락'}</p>\n                <p>• {t('login_env_key_label')}: {process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY ? '설정됨' : '❌ 누락'}</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  // 로딩 상태 또는 이미 인증된 상태 처리\n  if (!isInitialized || isLoading) {\n    if (process.env.NODE_ENV === 'development') {\n      debugLog('로딩 상태 표시', { isInitialized, isLoading });\n    }\n    return (\n      <div className='flex flex-col justify-center items-center min-h-[400px]'>\n        <div className='animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500 mb-4'></div>\n        <p className='text-gray-600'>\n          {!isInitialized ? t('login_auth_system_initializing') : t('login_loading_text')}\n        </p>\n        \n        {/* 🔍 디버깅 정보 (개발 환경에서만) */}\n        {process.env.NODE_ENV === 'development' && (\n          <>\n            <div className='mt-4 text-xs text-gray-500 bg-gray-50 p-3 rounded border max-w-sm'>\n              <div className='font-semibold mb-2'>🔍 {t('login_debug_info_title')}:</div>\n              <div>• {t('login_is_initialized')}: {String(isInitialized)}</div>\n              <div>• {t('login_is_loading')}: {String(isLoading)}</div>\n              <div>• {t('login_mounted')}: {String(mounted)}</div>\n              <div>• {t('login_env_check_failed')}: {String(envCheckFailed)}</div>\n              <div>• {t('login_is_authenticated')}: {String(isAuthenticated)}</div>\n              <div>• {t('login_has_user')}: {String(!!user)}</div>\n              <div>• {t('login_has_user_profile')}: {String(!!userProfile)}</div>\n              <div>{t('login_env_check_info')}: URL={String(!!process.env.NEXT_PUBLIC_SUPABASE_URL)}, KEY={String(!!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY)}</div>\n              <div>{t('login_timestamp')}: {new Date().toISOString().split('.')[0]}</div>\n            </div>\n            \n            {/* 🔧 새로고침 버튼 */}\n            <button \n              onClick={() => window.location.reload()} \n              className=\"mt-3 px-3 py-1 bg-blue-600 text-white rounded text-xs hover:bg-blue-700\"\n            >\n              🔄 {t('login_refresh_button')}\n            </button>\n          </>\n        )}\n        \n        {process.env.NODE_ENV === 'development' && (\n          <div className='mt-4 text-xs text-gray-500 text-center'>\n            <p>\n              {t('login_debug_state_info')}: isInitialized={String(isInitialized)}, isLoading=\n              {String(isLoading)}\n            </p>\n            <p className='mt-2'>\n              {t('login_env_info')}: URL={!!process.env.NEXT_PUBLIC_SUPABASE_URL}, KEY={!!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY}\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  if (isAuthenticated) {\n    // 리디렉트 중 간단한 로딩 표시\n    return (\n      <div className='flex flex-col justify-center items-center min-h-[400px]'>\n        <div className='animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500 mb-4'></div>\n        <p className='text-gray-600'>{t('login_complete_redirecting')}</p>\n      </div>\n    );\n  }\n\n  // 인증 상태가 초기화되지 않은 경우 대기 화면 표시\n  if (!isInitialized) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-white\">\n        <div className=\"text-center p-8 bg-white rounded-lg shadow-lg max-w-md w-full\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">\n            {t('login_auth_system_initializing')}\n          </h2>\n          <p className=\"text-gray-600 mb-4\">\n            {t('login_please_wait')}\n          </p>\n          \n          {/* 🔍 디버깅 정보 (개발 환경에서만) */}\n          {process.env.NODE_ENV === 'development' && (\n            <>\n              <div className=\"text-left text-xs text-gray-500 bg-gray-50 p-3 rounded border-l-4 border-blue-400\">\n                <div className=\"font-semibold mb-2\">{t('login_state_info_title')}:</div>\n                <div>• {t('login_is_loading')}: {String(isLoading)}</div>\n                <div>• {t('login_is_initialized')}: {String(isInitialized)}</div>\n                <div>• {t('login_is_authenticated')}: {String(isAuthenticated)}</div>\n                <div>• {t('login_has_user')}: {String(!!user)}</div>\n                <div>• {t('login_has_user_profile')}: {String(!!userProfile)}</div>\n                <div>{t('login_has_supabase_url')}: {String(!!process.env.NEXT_PUBLIC_SUPABASE_URL)}</div>\n                <div>{t('login_has_supabase_key')}: {String(!!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY)}</div>\n                <div>{t('login_timestamp')}: {new Date().toISOString().split('.')[0]}</div>\n              </div>\n              \n              {/* 🔧 강제 새로고침 버튼 */}\n              <button \n                onClick={() => window.location.reload()} \n                className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              >\n                🔄 {t('login_refresh_button')}\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    debugLog('로그인 폼 표시');\n  }\n  return (\n    <div className='relative max-w-sm sm:max-w-lg mx-auto'>\n      {/* 메인 로그인 카드 */}\n      <div className='relative bg-white p-4 sm:p-6 md:p-8 lg:p-10 rounded-xl sm:rounded-2xl md:rounded-3xl shadow-lg border border-gray-200 transition-shadow duration-200 hover:shadow-xl'>\n        {/* 웰컴 헤더 */}\n        <div className='text-center mb-4 sm:mb-6 md:mb-8'>\n          <p className='text-gray-600 text-sm sm:text-base'>{t('login_title')}</p>\n        </div>\n\n        {/* 오류 메시지 표시 */}\n        {error && (\n          <div\n            className='bg-red-50 border border-red-200 text-red-700 px-3 sm:px-4 py-2 sm:py-3 rounded-lg mb-4 sm:mb-6 text-sm'\n            role='alert'\n          >\n            <div className='flex items-center'>\n              <svg\n                className='w-4 h-4 mr-2 flex-shrink-0'\n                fill='currentColor'\n                viewBox='0 0 20 20'\n              >\n                <path\n                  fillRule='evenodd'\n                  d='M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z'\n                  clipRule='evenodd'\n                />\n              </svg>\n              <span className='break-words'>{error}</span>\n            </div>\n          </div>\n        )}\n\n        {/* 최근 로그인 정보 표시 */}\n        {lastLoginInfo && (\n          <div className='bg-blue-50 border border-blue-200 px-3 sm:px-4 py-2 sm:py-3 rounded-lg mb-4 sm:mb-6'>\n            <div className='flex items-center justify-center space-x-2'>\n              <div className='flex items-center space-x-2'>\n                <div className='w-2 h-2 bg-green-500 rounded-full animate-pulse'></div>\n                <span className='text-blue-700 text-sm font-medium'>\n                  {t('login_recent_login')}\n                </span>\n              </div>\n            </div>\n            <div className='text-center mt-1'>\n              <span className='text-blue-600 text-sm'>\n                {lastLoginInfo.providerDisplay} {t('login_recent_login_via')} • {formatLastLoginTime(lastLoginInfo.timestamp, currentLanguage)}\n              </span>\n            </div>\n          </div>\n        )}\n\n        {/* 소셜 로그인 버튼들 */}\n        <div className='space-y-3 sm:space-y-4'>\n          <SocialLoginButtons\n            providers={providers}\n            size='medium'\n            onLoginStart={handleLoginStart}\n            onLoginComplete={handleLoginComplete}\n            onError={handleLoginError}\n          />\n        </div>\n\n        {/* 하단 안내 */}\n        <div className='mt-8 sm:mt-10 text-center relative'>\n          <div className='relative inline-block'>\n            <div className='absolute -inset-3 bg-gradient-to-r from-blue-50 via-purple-50 to-blue-50 rounded-2xl opacity-80 blur-sm'></div>\n            <div className='relative bg-gradient-to-r from-blue-600 via-purple-600 to-blue-600 bg-clip-text text-transparent'>\n              <div className='space-y-3'>\n                <div className='flex items-center justify-center space-x-2 text-sm sm:text-base font-medium'>\n                  <span className='bg-blue-100 text-blue-600 p-1.5 rounded-full'>\n                    <svg width=\"14\" height=\"14\" fill=\"currentColor\" viewBox=\"0 0 20 20\" className='w-3.5 h-3.5'>\n                      <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </span>\n                  <span className='text-gray-800 font-semibold'>{t('login_no_account_question')}</span>\n                </div>\n                <div className='text-gray-600 text-sm leading-relaxed max-w-sm mx-auto px-4'>\n                  <div \n                    className='inline-flex items-center space-x-1 whitespace-nowrap'\n                    dangerouslySetInnerHTML={{\n                      __html: t('login_auto_signup_description')\n                        .replace('<social>', '<span class=\"bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent font-semibold\">')\n                        .replace('</social>', '</span>')\n                        .replace('<signup>', '<span class=\"bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent font-semibold\">')\n                        .replace('</signup>', '</span>')\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 개발 환경에서만 디버그 정보 표시 */}\n        {process.env.NODE_ENV === 'development' && (\n          <div className='mt-6 sm:mt-8 p-3 sm:p-4 bg-gray-50/80 backdrop-blur-sm rounded-xl sm:rounded-2xl border border-gray-200/50'>\n            <details className='text-xs text-gray-700'>\n              <summary className='font-semibold cursor-pointer hover:text-blue-600 transition-colors'>\n                🐛 {t('login_debug_info_title')} (👇 {t('login_click_to_expand')})\n              </summary>\n              <div className='mt-3 space-y-1 pl-4 border-l-2 border-blue-200'>\n                <div className='flex justify-between'>\n                  <span>{t('login_mounted')}:</span>{' '}\n                  <code className='text-blue-600'>{String(mounted)}</code>\n                </div>\n                <div className='flex justify-between'>\n                  <span>{t('login_is_initialized')}:</span>{' '}\n                  <code className='text-blue-600'>{String(isInitialized)}</code>\n                </div>\n                <div className='flex justify-between'>\n                  <span>{t('login_is_loading')}:</span>{' '}\n                  <code className='text-blue-600'>{String(isLoading)}</code>\n                </div>\n                <div className='flex justify-between'>\n                  <span>{t('login_is_authenticated')}:</span>{' '}\n                  <code className='text-blue-600'>\n                    {String(isAuthenticated)}\n                  </code>\n                </div>\n                <div className='flex justify-between'>\n                  <span>{t('login_has_user')}:</span>{' '}\n                  <code className='text-blue-600'>{String(!!user)}</code>\n                </div>\n                <div className='flex justify-between'>\n                  <span>{t('login_has_user_profile')}:</span>{' '}\n                  <code className='text-blue-600'>{String(!!userProfile)}</code>\n                </div>\n              </div>\n            </details>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction LoginContent() {\n  const router = useRouter();\n  const { t } = useLanguageStore();\n\n  // 뒤로가기 핸들러\n  const handleGoBack = () => {\n    // 브라우저 히스토리가 있으면 뒤로가기, 없으면 홈으로 이동\n    if (typeof window !== 'undefined' && window.history.length > 1) {\n      router.back();\n    } else {\n      router.push('/');\n    }\n  };\n\n  return (\n    <div className='relative min-h-screen flex flex-col items-center justify-center py-6 sm:py-10 px-4 sm:px-6 bg-white'>\n\n      {/* 뒤로가기 버튼 - 좌상단 고정 */}\n      <div className='fixed top-4 left-4 z-50'>\n        <button\n          onClick={handleGoBack}\n          className='flex items-center justify-center w-10 h-10 sm:w-12 sm:h-12 bg-white/80 backdrop-blur-sm border border-gray-200 rounded-full shadow-lg hover:shadow-xl transition-all duration-200 hover:bg-white group'\n          aria-label={t('login_back_button')}\n        >\n          <ArrowLeft className='w-5 h-5 sm:w-6 sm:h-6 text-gray-600 group-hover:text-gray-800 transition-colors' />\n        </button>\n      </div>\n\n      {/* 언어 선택기 - 우상단 고정 */}\n      <div className='fixed top-4 right-4 z-50'>\n        <LanguageSelector />\n      </div>\n\n      {/* 로고 섹션 */}\n      <div className='relative z-10 mb-8 sm:mb-12'>\n        <div className='text-center'>\n          <div className='transition-transform duration-200 hover:scale-105 mb-3'>\n            <Link href='/' className='group'>\n              <div className='relative'>\n                <div className='relative bg-white p-4 sm:p-6 rounded-2xl sm:rounded-3xl shadow-xl border border-gray-200 group-hover:shadow-2xl transition-all duration-300'>\n                  <Image\n                    src='/images/logo.png'\n                    alt='Picnic Logo'\n                    width={48}\n                    height={48}\n                    className='w-12 h-12 sm:w-16 sm:h-16 mx-auto filter drop-shadow-lg'\n                    priority\n                  />\n                </div>\n              </div>\n            </Link>\n          </div>\n          <Link \n            href='/' \n            className='text-gray-500 hover:text-gray-700 text-sm transition-colors duration-200 hover:underline'\n          >\n            {t('login_home_button')}\n          </Link>\n        </div>\n      </div>\n\n      <div className='relative z-10 w-full max-w-sm sm:max-w-md'>\n        <Suspense\n          fallback={\n            <div className='flex flex-col justify-center items-center min-h-[60vh] sm:min-h-[70vh]'>\n              <div className='animate-spin rounded-full h-8 w-8 sm:h-12 sm:w-12 border-t-2 border-b-2 border-primary-500 mb-3 sm:mb-4'></div>\n              <p className='text-gray-600 text-sm sm:text-base'>{t('login_loading_text')}</p>\n            </div>\n          }\n        >\n          <LoginContentInner />\n        </Suspense>\n      </div>\n\n    </div>\n  );\n}\n\nexport default function Login() {\n  return (\n    <div className='min-h-screen bg-white flex flex-col'>\n      {/* 메인 컨테이너 */}\n      <div className='flex-1 flex items-center justify-center p-3 sm:p-6 lg:p-8'>\n        <div className='w-full max-w-sm sm:max-w-md'>\n          <LoginContent />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}