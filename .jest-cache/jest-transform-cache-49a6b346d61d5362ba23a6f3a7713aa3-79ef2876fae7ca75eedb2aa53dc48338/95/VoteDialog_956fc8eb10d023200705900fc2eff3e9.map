{"version":3,"names":["_default","cov_s01e39ou0","s","VoteDialog","isOpen","onClose","onVote","selectedArtist","votes","setVotes","f","isAuthenticated","isLoading","user","session","_authprovider","useAuth","t","_languageStore","useLanguageStore","withAuth","_useAuthGuard","useAuthGuard","customLoginMessage","title","description","artist","name","b","artistName","_strings","getLocalizedString","loginText","cancelText","authVerified","setAuthVerified","_react","useState","verificationError","setVerificationError","verifyAuthentication","console","log","warn","expires_at","expiryTime","Date","now","response","fetch","method","credentials","ok","data","json","valid","error","useEffect","handleVote","isValid","_jsxruntime","jsx","className","jsxs","defaultValue","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","image","_image","default","src","process","env","NEXT_PUBLIC_CDN_URL","alt","width","height","unoptimized","Math","max","disabled","type","min","value","onChange","e","parseInt","target","NODE_ENV","id"],"sources":["/Users/charlie.hyun/Repositories/picnic-web/components/client/vote/dialogs/VoteDialog.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport Image from 'next/image';\nimport { useAuth } from '@/lib/supabase/auth-provider';\nimport { useAuthGuard } from '@/hooks/useAuthGuard';\nimport { useLanguageStore } from '@/stores/languageStore';\nimport { VoteItem } from '@/types/interfaces';\nimport { getLocalizedString } from '@/utils/api/strings';\n\ninterface VoteDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onVote: () => void;\n  selectedArtist: VoteItem | null;\n  votes: number;\n  setVotes: (votes: number) => void;\n}\n\n/**\n * 투표 다이얼로그 컴포넌트\n * 로그인된 사용자에게만 표시되며, 강화된 인증 검증을 수행합니다.\n */\nconst VoteDialog: React.FC<VoteDialogProps> = ({\n  isOpen,\n  onClose,\n  onVote,\n  selectedArtist,\n  votes,\n  setVotes,\n}) => {\n  const { isAuthenticated, isLoading, user, session } = useAuth();\n  const { t } = useLanguageStore();\n  const { withAuth } = useAuthGuard({\n    // 투표별 맞춤 로그인 메시지\n    customLoginMessage: {\n      title: t('vote.login_required.title'),\n      description: selectedArtist?.artist?.name\n        ? t('vote.login_required.description_with_artist', { \n            artistName: getLocalizedString(selectedArtist.artist.name) \n          })\n        : t('vote.login_required.description'),\n      loginText: t('vote.login_required.login_button'),\n      cancelText: t('vote.login_required.cancel_button'),\n    }\n  });\n  const [authVerified, setAuthVerified] = useState(false);\n  const [verificationError, setVerificationError] = useState<string | null>(null);\n\n  /**\n   * 강화된 인증 상태 검증\n   */\n  const verifyAuthentication = async () => {\n    try {\n      console.log('🔍 [VoteDialog] 인증 상태 검증 시작');\n\n      // 1. 기본 인증 상태 체크\n      if (!isAuthenticated || !user || !session) {\n        console.warn('❌ [VoteDialog] 기본 인증 상태 실패');\n        setAuthVerified(false);\n        setVerificationError('로그인이 필요합니다.');\n        return false;\n      }\n\n      // 2. 세션 만료 체크\n      if (session.expires_at) {\n        const expiryTime = new Date(session.expires_at * 1000);\n        const now = new Date();\n        if (now >= expiryTime) {\n          console.warn('⏰ [VoteDialog] 세션이 만료됨');\n          setAuthVerified(false);\n          setVerificationError('세션이 만료되었습니다. 다시 로그인해주세요.');\n          onClose(); // 다이얼로그 자동 닫기\n          return false;\n        }\n      }\n\n      // 3. 서버 인증 상태 검증\n      try {\n        const response = await fetch('/api/auth/verify', {\n          method: 'GET',\n          credentials: 'include',\n        });\n\n        if (!response.ok) {\n          console.warn('🚫 [VoteDialog] 서버 인증 검증 실패');\n          setAuthVerified(false);\n          setVerificationError('인증 상태를 확인할 수 없습니다.');\n          onClose(); // 다이얼로그 자동 닫기\n          return false;\n        }\n\n        const data = await response.json();\n        if (!data.valid) {\n          console.warn('❌ [VoteDialog] 서버에서 인증 무효 응답');\n          setAuthVerified(false);\n          setVerificationError('인증이 유효하지 않습니다.');\n          onClose(); // 다이얼로그 자동 닫기\n          return false;\n        }\n      } catch (error) {\n        console.warn('⚠️ [VoteDialog] 서버 인증 검증 오류:', error);\n        // 네트워크 오류는 허용하되 경고 표시\n        setVerificationError('네트워크 오류가 발생했습니다. 투표에 문제가 있을 수 있습니다.');\n      }\n\n      console.log('✅ [VoteDialog] 인증 상태 검증 성공');\n      setAuthVerified(true);\n      setVerificationError(null);\n      return true;\n    } catch (error) {\n      console.error('💥 [VoteDialog] 인증 검증 중 오류:', error);\n      setAuthVerified(false);\n      setVerificationError('인증 확인 중 오류가 발생했습니다.');\n      onClose(); // 다이얼로그 자동 닫기\n      return false;\n    }\n  };\n\n  // 다이얼로그가 열릴 때마다 인증 상태 검증\n  useEffect(() => {\n    if (isOpen && !isLoading) {\n      verifyAuthentication();\n    }\n  }, [isOpen, isLoading, isAuthenticated, user, session]);\n\n  // 인증되지 않은 사용자는 다이얼로그를 표시하지 않음\n  if (!isOpen || isLoading || !isAuthenticated || !authVerified) {\n    return null;\n  }\n\n  // 강화된 투표 실행 함수\n  const handleVote = async () => {\n    await withAuth(async () => {\n      // 투표 실행 전 인증 상태 재검증\n      const isValid = await verifyAuthentication();\n      if (!isValid) {\n        console.warn('❌ [VoteDialog] 투표 실행 전 인증 검증 실패');\n        return;\n      }\n\n      // 실제 투표 실행\n      await onVote();\n    });\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md mx-4\">\n        {/* 헤더 */}\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"text-lg font-bold\">\n            {t('vote.dialog.title', { defaultValue: '투표하기' })}\n          </h3>\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700\"\n            aria-label=\"다이얼로그 닫기\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          </button>\n        </div>\n\n        {/* 인증 오류 표시 */}\n        {verificationError && (\n          <div className=\"mb-4 p-3 bg-yellow-100 border border-yellow-400 text-yellow-700 rounded\">\n            <p className=\"text-sm\">{verificationError}</p>\n          </div>\n        )}\n\n        {/* 선택된 아티스트 정보 */}\n        {selectedArtist && (\n          <div className=\"mb-6\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-16 h-16 rounded-full overflow-hidden border-2 border-white shadow-sm\">\n                {selectedArtist.artist?.image ? (\n                  <Image\n                    src={`${process.env.NEXT_PUBLIC_CDN_URL}/${selectedArtist.artist.image}`}\n                    alt={getLocalizedString(selectedArtist.artist.name)}\n                    width={64}\n                    height={64}\n                    className=\"w-full h-full object-cover\"\n                    unoptimized\n                  />\n                ) : (\n                  <div className=\"w-full h-full bg-gray-200 flex items-center justify-center\">\n                    <span className=\"text-gray-600 text-xs\">No Image</span>\n                  </div>\n                )}\n              </div>\n              <div>\n                <p className=\"font-bold text-lg\">\n                  {getLocalizedString(selectedArtist.artist?.name)}\n                </p>\n                <p className=\"text-sm text-gray-600\">\n                  {t('vote.dialog.artist_label', { defaultValue: '투표 대상' })}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* 투표 수 설정 */}\n        <div className=\"mb-6\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            {t('vote.dialog.vote_count_label', { defaultValue: '투표 수' })}\n          </label>\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={() => setVotes(Math.max(1, votes - 1))}\n              className=\"p-2 rounded-full bg-gray-100 hover:bg-gray-200 disabled:opacity-50\"\n              disabled={votes <= 1}\n              aria-label=\"투표 수 감소\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-5 w-5\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M20 12H4\"\n                />\n              </svg>\n            </button>\n            <input\n              type=\"number\"\n              min=\"1\"\n              value={votes}\n              onChange={(e) => setVotes(Math.max(1, parseInt(e.target.value) || 1))}\n              className=\"w-20 text-center border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              aria-label=\"투표 수 입력\"\n            />\n            <button\n              onClick={() => setVotes(votes + 1)}\n              className=\"p-2 rounded-full bg-gray-100 hover:bg-gray-200\"\n              aria-label=\"투표 수 증가\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-5 w-5\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 4v16m8-8H4\"\n                />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* 액션 버튼 */}\n        <div className=\"flex justify-end space-x-4\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-gray-600 hover:text-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-300 rounded\"\n          >\n            {t('vote.dialog.cancel_button', { defaultValue: '취소' })}\n          </button>\n          <button\n            onClick={handleVote}\n            disabled={!authVerified || !!verificationError}\n            className=\"px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-primary disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {t('vote.dialog.vote_button', { defaultValue: '투표하기' })}\n          </button>\n        </div>\n\n        {/* 인증 상태 표시 (개발 모드) */}\n        {process.env.NODE_ENV === 'development' && (\n          <div className=\"mt-4 p-2 bg-gray-100 rounded text-xs text-gray-600\">\n            <p>Auth Status: {isAuthenticated ? 'Authenticated' : 'Not Authenticated'}</p>\n            <p>User ID: {user?.id || 'None'}</p>\n            <p>Auth Verified: {authVerified ? 'Yes' : 'No'}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VoteDialog;\n"],"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","ignoreList":[]}