# Task ID: 14
# Title: 코드 커버리지 리포팅 설정
# Status: pending
# Dependencies: 9
# Priority: low
# Description: Set up code coverage reporting with Jest and configure minimum coverage thresholds.
# Details:
1. Configure Jest to collect coverage information
2. Set coverage thresholds (minimum 70% as per requirements)
3. Configure coverage report output formats
4. Add coverage reporting to npm scripts

Implementation steps:
1. Update Jest configuration:
```javascript
// jest.config.js
const customJestConfig = {
  // ... existing config
  collectCoverage: true,
  coverageDirectory: 'coverage',
  collectCoverageFrom: [
    'src/**/*.{js,jsx,ts,tsx}',
    '!src/**/*.d.ts',
    '!src/**/_*.{js,jsx,ts,tsx}',
    '!src/**/*.stories.{js,jsx,ts,tsx}',
    '!**/node_modules/**',
  ],
  coverageThreshold: {
    global: {
      branches: 70,
      functions: 70,
      lines: 70,
      statements: 70,
    },
  },
  coverageReporters: ['json', 'lcov', 'text', 'clover'],
}
```

2. Add npm scripts:
```json
// package.json
{
  "scripts": {
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage"
  }
}
```

# Test Strategy:
1. Run test coverage to verify configuration works
2. Check that coverage reports are generated in expected formats
3. Verify that coverage thresholds are enforced
4. Test that coverage reporting works in CI environment

# Subtasks:
## 1. Configure Jest for code coverage collection [pending]
### Dependencies: None
### Description: Set up Jest configuration to collect code coverage metrics during test runs
### Details:
Update Jest configuration to enable coverage collection by adding the appropriate flags in package.json or jest.config.js. Configure the coverage directory and ensure the correct file patterns are included/excluded from coverage analysis.

## 2. Establish code coverage thresholds [pending]
### Dependencies: 14.1
### Description: Define minimum acceptable code coverage thresholds for the project
### Details:
Set up coverage thresholds in the Jest configuration for statements, branches, functions, and lines. Determine appropriate threshold values based on project requirements. Configure Jest to fail tests if coverage falls below these thresholds.

## 3. Integrate code coverage reporting with CI pipeline [pending]
### Dependencies: 14.1, 14.2
### Description: Configure CI system to generate and display code coverage reports
### Details:
Update CI configuration to run tests with coverage enabled. Configure the CI pipeline to generate coverage reports in the appropriate format (HTML, lcov, etc.). Set up the CI to fail builds if coverage thresholds are not met. Consider adding coverage badges to the repository README.

